###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:26
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\network-creator\network-creator.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWD8F3.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\network-creator\network-creator.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"network-creator.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\network-creator\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\network-creator.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\network-creator.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\network-creator\network-creator.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief APIs and defines for the Network Creator plugin, which handles forming
      4           *        a network per the Zigbee Base Device Behavior specification.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include "app/framework/include/af.h"
     20          #include "app/framework/util/util.h"
     21          
     22          #include "network-creator.h"
     23          #include "network-creator-composite.h"
     24          
     25          #if defined(EMBER_AF_API_SCAN_DISPATCH)
     26            #include EMBER_AF_API_SCAN_DISPATCH
     27          #elif defined(EMBER_TEST)
     28            #include "../scan-dispatch/scan-dispatch.h"
     29          #endif
     30          
     31          #if defined(EMBER_AF_API_NETWORK_CREATOR_SECURITY)
     32            #include EMBER_AF_API_NETWORK_CREATOR_SECURITY
     33          #elif defined(EMBER_TEST)
     34            #include "../network-creator-security/network-creator-security.h"
     35          #endif
     36          
     37          #ifdef EMBER_TEST
     38            #ifndef EMBER_AF_PLUGIN_NETWORK_CREATOR_SCAN_DURATION
     39              #define EMBER_AF_PLUGIN_NETWORK_CREATOR_SCAN_DURATION 0x04
     40            #endif
     41            #ifndef EMBER_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_MASK
     42              #define EMBER_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_MASK 0x02108800
     43            #endif
     44            #ifndef EMBER_AF_PLUGIN_NETWORK_CREATOR_RADIO_POWER
     45              #define EMBER_AF_PLUGIN_NETWORK_CREATOR_RADIO_POWER 3
     46            #endif
     47            #define HIDDEN
     48          #else
     49            #define HIDDEN static
     50          #endif
     51          
     52          //#define EM_AF_PLUGIN_NETWORK_CREATOR_DEBUG
     53          #ifdef EM_AF_PLUGIN_NETWORK_CREATOR_DEBUG
     54            #define debugPrintln(...) emberAfCorePrintln(__VA_ARGS__)
     55          #else
     56            #define debugPrintln(...)
     57          #endif
     58          
     59          // -----------------------------------------------------------------------------
     60          // Globals
     61          

   \                                 In section .data, align 4
     62          uint32_t emAfPluginNetworkCreatorPrimaryChannelMask = EMBER_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_MASK;
   \                     emAfPluginNetworkCreatorPrimaryChannelMask:
   \        0x0   0x0210'8800        DC32 34637824
     63          
     64          // The Base Device spec (13-0402) says, by default, define the secondary
     65          // channel mask to be all channels XOR the primary mask. See 6.2, table 2.
     66          #define SECONDARY_CHANNEL_MASK \
     67            (EMBER_ALL_802_15_4_CHANNELS_MASK ^ EMBER_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_MASK)

   \                                 In section .data, align 4
     68          uint32_t emAfPluginNetworkCreatorSecondaryChannelMask = (uint32_t)SECONDARY_CHANNEL_MASK;
   \                     emAfPluginNetworkCreatorSecondaryChannelMask:
   \        0x0   0x05EF'7000        DC32 99577856
     69          

   \                                 In section .bss, align 4
     70          static uint32_t currentChannelMask;
   \                     currentChannelMask:
   \        0x0                      DS8 4
     71          

   \                                 In section .bss, align 4
     72          static EmAfPluginNetworkCreatorChannelComposite channelComposites[EMBER_NUM_802_15_4_CHANNELS];
   \                     channelComposites:
   \        0x0                      DS8 32
     73          

   \                                 In section .data, align 1
     74          static bool doFormCentralizedNetwork = true;
   \                     doFormCentralizedNetwork:
   \        0x0   0x01               DC8 1
     75          

   \                                 In section .bss, align 1
     76          static uint8_t stateFlags = 0;
   \                     stateFlags:
   \        0x0                      DS8 1
     77          #define clearStateFlags() (stateFlags = 0)
     78          
     79          #define STATE_FLAGS_WAITING_FOR_SCAN (0x01)
     80          #define waitingForScan() (stateFlags & STATE_FLAGS_WAITING_FOR_SCAN)
     81          
     82          #define STATE_FLAGS_MASK_IS_SECONDARY (0x02)
     83          #define maskIsSecondary() (stateFlags & STATE_FLAGS_MASK_IS_SECONDARY)
     84          
     85          // -----------------------------------------------------------------------------
     86          // Declarations
     87          
     88          // For the sake of the compiler in unit tests.
     89          void emberAfPluginNetworkCreatorCompleteCallback(const EmberNetworkParameters *network,
     90                                                           bool usedSecondaryChannels);
     91          EmberPanId emberAfPluginNetworkCreatorGetPanIdCallback(void);
     92          int8_t emberAfPluginNetworkCreatorGetRadioPowerCallback(void);
     93          
     94          #define MAX(a, b) ((a) > (b) ? (a) : (b))
     95          
     96          static EmberStatus scheduleScans(void);
     97          
     98          static void cleanChannelComposites(void);
     99          static void updateChannelComposites(int8_t rssi,
    100                                              EmAfPluginNetworkCreatorChannelCompositeMetric metric,
    101                                              uint8_t channel);
    102          static void maybeClearChannelBitOfMaxRssiReading(uint8_t channel);
    103          
    104          static void cleanupAndStop(EmberStatus status);
    105          static void fillExtendedPanId(uint8_t *extendedPanId);
    106          static uint32_t makeLeastWorstChannelMask(void);
    107          
    108          // -----------------------------------------------------------------------------
    109          // Public API Definitions
    110          

   \                                 In section .text, align 2, keep-with-next
    111          EmberStatus emberAfPluginNetworkCreatorStart(bool centralizedNetwork)
    112          {
   \                     emberAfPluginNetworkCreatorStart: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
    113            if (waitingForScan() || (emberAfNetworkState() != EMBER_NO_NETWORK)) {
   \        0x4   0x....'....        LDR.W    R4,??DataTable7
   \        0x8   0x7820             LDRB     R0,[R4, #+0]
   \        0xA   0x07C1             LSLS     R1,R0,#+31
   \        0xC   0xD402             BMI.N    ??emberAfPluginNetworkCreatorStart_0
   \        0xE   0x....'....        BL       emberAfNetworkState
   \       0x12   0xB148             CBZ.N    R0,??emberAfPluginNetworkCreatorStart_1
    114              emberAfCorePrintln("%p: %p: 0x%X",
    115                                 EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    116                                 "Cannot start. State",
    117                                 stateFlags);
   \                     ??emberAfPluginNetworkCreatorStart_0: (+1)
   \       0x14   0x7820             LDRB     R0,[R4, #+0]
   \       0x16   0x....             LDR.N    R3,??DataTable7_1
   \       0x18   0x....             LDR.N    R2,??DataTable7_2
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0x....             LDR.N    R1,??DataTable7_3
   \       0x1E   0x2001             MOVS     R0,#+1
   \       0x20   0x....'....        BL       emberAfPrintln
    118              return EMBER_INVALID_CALL;
   \       0x24   0x2070             MOVS     R0,#+112
   \       0x26   0xBD32             POP      {R1,R4,R5,PC}
    119            }
    120          
    121            doFormCentralizedNetwork = centralizedNetwork;
   \                     ??emberAfPluginNetworkCreatorStart_1: (+1)
   \       0x28   0x....             LDR.N    R0,??DataTable7_4
   \       0x2A   0x7005             STRB     R5,[R0, #+0]
    122          
    123            // Reset channel masks and composites and state.
    124            currentChannelMask = emAfPluginNetworkCreatorPrimaryChannelMask;
   \       0x2C   0x....             LDR.N    R1,??DataTable7_5
   \       0x2E   0x680A             LDR      R2,[R1, #+0]
   \       0x30   0x....             LDR.N    R3,??DataTable7_6
    125            cleanChannelComposites();
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x601A             STR      R2,[R3, #+0]
   \       0x36   0x....             LDR.N    R1,??DataTable7_7
   \       0x38   0x2200             MOVS     R2,#+0
   \       0x3A   0xF06F 0x037F      MVN      R3,#+127
   \                     ??emberAfPluginNetworkCreatorStart_2: (+1)
   \       0x3E   0xF801 0x2010      STRB     R2,[R1, R0, LSL #+1]
   \       0x42   0xEB01 0x0540      ADD      R5,R1,R0, LSL #+1
   \       0x46   0x1C40             ADDS     R0,R0,#+1
   \       0x48   0x706B             STRB     R3,[R5, #+1]
   \       0x4A   0x2810             CMP      R0,#+16
   \       0x4C   0xDBF7             BLT.N    ??emberAfPluginNetworkCreatorStart_2
    126            clearStateFlags();
   \       0x4E   0x7022             STRB     R2,[R4, #+0]
    127          
    128            return scheduleScans();
   \       0x50                      REQUIRE ?Subroutine0
   \       0x50                      ;; // Fall through to label ?Subroutine0
    129          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \        0x4   0x....             B.N      scheduleScans
    130          

   \                                 In section .text, align 2, keep-with-next
    131          void emberAfPluginNetworkCreatorStop(void)
    132          {
    133            cleanupAndStop(EMBER_ERR_FATAL);
   \                     emberAfPluginNetworkCreatorStop: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x....             B.N      cleanupAndStop
    134          }
    135          

   \                                 In section .text, align 2, keep-with-next
    136          EmberStatus emberAfPluginNetworkCreatorNetworkForm(bool centralizedNetwork,
    137                                                             EmberPanId panId,
    138                                                             int8_t radioTxPower,
    139                                                             uint8_t channel)
    140          {
   \                     emberAfPluginNetworkCreatorNetworkForm: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB087             SUB      SP,SP,#+28
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x461D             MOV      R5,R3
    141            EmberStatus status;
    142            EmberNetworkParameters networkParameters;
    143          
    144            networkParameters.panId = panId;
   \        0x8   0xF8AD 0x100C      STRH     R1,[SP, #+12]
    145            networkParameters.radioTxPower = radioTxPower;
   \        0xC   0xF88D 0x200E      STRB     R2,[SP, #+14]
    146            fillExtendedPanId(networkParameters.extendedPanId);
   \       0x10   0xA801             ADD      R0,SP,#+4
   \       0x12   0x....'....        BL       fillExtendedPanId
    147            networkParameters.radioChannel = channel;
   \       0x16   0xF88D 0x500F      STRB     R5,[SP, #+15]
    148          
    149            if ((channel > EMBER_MAX_802_15_4_CHANNEL_NUMBER)
    150                || (channel < EMBER_MIN_802_15_4_CHANNEL_NUMBER)) {
   \       0x1A   0x462E             MOV      R6,R5
   \       0x1C   0x3D0B             SUBS     R5,R5,#+11
   \       0x1E   0x....             LDR.N    R7,??DataTable7_2
   \       0x20   0x2D10             CMP      R5,#+16
   \       0x22   0xD307             BCC.N    ??emberAfPluginNetworkCreatorNetworkForm_0
    151              emberAfCorePrintln("%p: Error: Channel %d is out of range",
    152                                 EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    153                                 channel);
   \       0x24   0x4633             MOV      R3,R6
   \       0x26   0x463A             MOV      R2,R7
   \       0x28   0x....             LDR.N    R1,??DataTable7_8
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x....'....        BL       emberAfPrintln
    154              return EMBER_BAD_ARGUMENT;
   \       0x30   0x2002             MOVS     R0,#+2
   \       0x32   0xE012             B.N      ??emberAfPluginNetworkCreatorNetworkForm_1
    155            }
    156          
    157            doFormCentralizedNetwork = centralizedNetwork;
   \                     ??emberAfPluginNetworkCreatorNetworkForm_0: (+1)
   \       0x34   0x....             LDR.N    R0,??DataTable7_4
   \       0x36   0x7004             STRB     R4,[R0, #+0]
    158          
    159            status = emberAfPluginNetworkCreatorSecurityStart(centralizedNetwork);
   \       0x38   0x4620             MOV      R0,R4
   \       0x3A   0x....'....        BL       emberAfPluginNetworkCreatorSecurityStart
   \       0x3E   0x0004             MOVS     R4,R0
    160            if (status == EMBER_SUCCESS) {
   \       0x40   0xD10A             BNE.N    ??emberAfPluginNetworkCreatorNetworkForm_2
    161              status = emberFormNetwork(&networkParameters);
   \       0x42   0xA801             ADD      R0,SP,#+4
   \       0x44   0x....'....        BL       emberFormNetwork
   \       0x48   0x4604             MOV      R4,R0
    162              emberAfCorePrintln("%p: Form. Channel: %d. Status: 0x%X",
    163                                 EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    164                                 channel,
    165                                 status);
   \       0x4A   0x9000             STR      R0,[SP, #+0]
   \       0x4C   0x4633             MOV      R3,R6
   \       0x4E   0x463A             MOV      R2,R7
   \       0x50   0x....             LDR.N    R1,??DataTable7_9
   \       0x52   0x2001             MOVS     R0,#+1
   \       0x54   0x....'....        BL       emberAfPrintln
    166            }
    167          
    168            return status;
   \                     ??emberAfPluginNetworkCreatorNetworkForm_2: (+1)
   \       0x58   0x4620             MOV      R0,R4
   \                     ??emberAfPluginNetworkCreatorNetworkForm_1: (+1)
   \       0x5A   0xB007             ADD      SP,SP,#+28
   \       0x5C   0xBDF0             POP      {R4-R7,PC}       ;; return
    169          }
    170          
    171          // -----------------------------------------------------------------------------
    172          // Private API Definitions
    173          

   \                                 In section .text, align 2, keep-with-next
    174          static void fillExtendedPanId(uint8_t *extendedPanId)
    175          {
   \                     fillExtendedPanId: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
    176            uint8_t i;
    177            bool invalid = true;
    178          
    179            for (i = 0; i < EXTENDED_PAN_ID_SIZE && invalid; i++) {
   \        0x4   0x2200             MOVS     R2,#+0
   \        0x6   0x....             LDR.N    R1,??DataTable7_10
    180              invalid = (emAfExtendedPanId[i] == 0x00 || emAfExtendedPanId[i] == 0xFF);
   \                     ??fillExtendedPanId_0: (+1)
   \        0x8   0x5C88             LDRB     R0,[R1, R2]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xBF18             IT       NE 
   \        0xE   0x28FF             CMPNE    R0,#+255
   \       0x10   0xD10A             BNE.N    ??fillExtendedPanId_1
    181            }
   \       0x12   0x1C52             ADDS     R2,R2,#+1
   \       0x14   0x2A08             CMP      R2,#+8
   \       0x16   0xDBF7             BLT.N    ??fillExtendedPanId_0
    182          
    183            if (invalid) {
    184              for (i = 0; i < EXTENDED_PAN_ID_SIZE; i++) {
   \       0x18   0x2500             MOVS     R5,#+0
    185                extendedPanId[i] = emberGetPseudoRandomNumber();
   \                     ??fillExtendedPanId_2: (+1)
   \       0x1A   0x....'....        BL       halCommonGetRandom
   \       0x1E   0x5560             STRB     R0,[R4, R5]
    186              }
   \       0x20   0x1C6D             ADDS     R5,R5,#+1
   \       0x22   0x2D08             CMP      R5,#+8
   \       0x24   0xDBF9             BLT.N    ??fillExtendedPanId_2
    187            } else {
    188              MEMMOVE(extendedPanId, emAfExtendedPanId, EXTENDED_PAN_ID_SIZE);
    189            }
    190          }
   \       0x26   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \                     ??fillExtendedPanId_1: (+1)
   \       0x28   0x4620             MOV      R0,R4
   \       0x2A   0x2208             MOVS     R2,#+8
   \       0x2C   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x30   0x....'....        B.W      halCommonMemMove
    191          

   \                                 In section .text, align 2, keep-with-next
    192          static EmberStatus tryToFormNetwork(void)
    193          {
   \                     tryToFormNetwork: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB087             SUB      SP,SP,#+28
   \        0x6   0x....'....        LDR.W    R10,??DataTable7
    194            EmberNetworkParameters networkParameters;
    195            EmberStatus status;
    196            uint8_t channel = (emberGetPseudoRandomNumber() & 0x0F)
    197                              + EMBER_MIN_802_15_4_CHANNEL_NUMBER;
   \        0xA   0x....'....        BL       halCommonGetRandom
   \        0xE   0xF000 0x070F      AND      R7,R0,#0xF
    198            EmberPanId panId = emberAfPluginNetworkCreatorGetPanIdCallback();
    199          
    200            networkParameters.panId = panId;
   \       0x12   0x....'....        BL       emberAfPluginNetworkCreatorGetPanIdCallback
   \       0x16   0xF8AD 0x000C      STRH     R0,[SP, #+12]
    201            networkParameters.radioTxPower = emberAfPluginNetworkCreatorGetRadioPowerCallback();
   \       0x1A   0x....'....        BL       emberAfPluginNetworkCreatorGetRadioPowerCallback
   \       0x1E   0xF88D 0x000E      STRB     R0,[SP, #+14]
    202            fillExtendedPanId(networkParameters.extendedPanId);
   \       0x22   0xA801             ADD      R0,SP,#+4
   \       0x24   0x....'....        BL       fillExtendedPanId
    203          
    204            // If we are on our secondary channel mask and we didn't find any channels that
    205            // were below our channel composite thresholds, then we pick from the "least
    206            // worst channels" so that network formation is still possible.
    207            if (maskIsSecondary() && currentChannelMask == 0) {
   \       0x28   0xF89A 0x0000      LDRB     R0,[R10, #+0]
   \       0x2C   0x370B             ADDS     R7,R7,#+11
   \       0x2E   0x2501             MOVS     R5,#+1
   \       0x30   0xB2FF             UXTB     R7,R7
   \       0x32   0x....             LDR.N    R6,??DataTable7_6
   \       0x34   0x0781             LSLS     R1,R0,#+30
   \       0x36   0xD512             BPL.N    ??tryToFormNetwork_0
   \       0x38   0x6830             LDR      R0,[R6, #+0]
   \       0x3A   0xB980             CBNZ.N   R0,??tryToFormNetwork_0
    208              currentChannelMask = makeLeastWorstChannelMask();
   \       0x3C   0x2100             MOVS     R1,#+0
   \       0x3E   0x....             LDR.N    R2,??DataTable7_7
   \                     ??tryToFormNetwork_1: (+1)
   \       0x40   0xEB02 0x0341      ADD      R3,R2,R1, LSL #+1
   \       0x44   0x575C             LDRSB    R4,[R3, R5]
   \       0x46   0xF114 0x0F80      CMN      R4,#+128
   \       0x4A   0xD004             BEQ.N    ??tryToFormNetwork_2
   \       0x4C   0xF101 0x030B      ADD      R3,R1,#+11
   \       0x50   0xFA05 0xF303      LSL      R3,R5,R3
   \       0x54   0x4318             ORRS     R0,R3,R0
   \                     ??tryToFormNetwork_2: (+1)
   \       0x56   0x1C49             ADDS     R1,R1,#+1
   \       0x58   0x2910             CMP      R1,#+16
   \       0x5A   0xDBF1             BLT.N    ??tryToFormNetwork_1
    209            }
   \       0x5C   0x6030             STR      R0,[R6, #+0]
    210          
    211            status = emberAfPluginNetworkCreatorSecurityStart(doFormCentralizedNetwork);
   \                     ??tryToFormNetwork_0: (+1)
   \       0x5E   0x....             LDR.N    R0,??DataTable7_4
   \       0x60   0x7800             LDRB     R0,[R0, #+0]
   \       0x62   0x....'....        BL       emberAfPluginNetworkCreatorSecurityStart
   \       0x66   0x0004             MOVS     R4,R0
    212            if (status == EMBER_SUCCESS) {
   \       0x68   0xD12D             BNE.N    ??tryToFormNetwork_3
    213              status = EMBER_ERR_FATAL;
   \       0x6A   0x2401             MOVS     R4,#+1
   \       0x6C   0x....'....        LDR.W    R8,??DataTable7_9
   \       0x70   0x....'....        LDR.W    R9,??DataTable7_2
   \       0x74   0xE004             B.N      ??tryToFormNetwork_4
    214              while (currentChannelMask != 0 && status != EMBER_SUCCESS) {
    215                // Find the next channel on which to try forming a network.
    216                channel = (channel == EMBER_MAX_802_15_4_CHANNEL_NUMBER
    217                           ? EMBER_MIN_802_15_4_CHANNEL_NUMBER
    218                           : channel + 1);
    219                if (!READBIT(currentChannelMask, channel)) {
    220                  continue;
    221                }
    222          
    223                // Try to form the network.
    224                networkParameters.radioChannel = channel;
    225                status = emberFormNetwork(&networkParameters);
    226                emberAfCorePrintln("%p: Form. Channel: %d. Status: 0x%X",
    227                                   EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    228                                   channel,
    229                                   status);
    230          
    231                // If you pass, then tell the user.
    232                // Else, clear the channel bit that you just tried.
    233                if (status == EMBER_SUCCESS) {
    234                  emberAfPluginNetworkCreatorCompleteCallback(&networkParameters,
    235                                                              (maskIsSecondary()
    236                                                               ? true
    237                                                               : false));
    238                } else {
    239                  CLEARBIT(currentChannelMask, channel);
   \                     ??tryToFormNetwork_5: (+1)
   \       0x76   0x6831             LDR      R1,[R6, #+0]
   \       0x78   0xFA05 0xF007      LSL      R0,R5,R7
   \       0x7C   0x4381             BICS     R1,R1,R0
   \       0x7E   0x6031             STR      R1,[R6, #+0]
    240                }
   \                     ??tryToFormNetwork_4: (+1)
   \       0x80   0x6830             LDR      R0,[R6, #+0]
   \       0x82   0xB300             CBZ.N    R0,??tryToFormNetwork_3
   \       0x84   0xB1FC             CBZ.N    R4,??tryToFormNetwork_3
   \                     ??tryToFormNetwork_6: (+1)
   \       0x86   0x2F1A             CMP      R7,#+26
   \       0x88   0xBF0E             ITEE     EQ 
   \       0x8A   0x270B             MOVEQ    R7,#+11
   \       0x8C   0x1C7F             ADDNE    R7,R7,#+1
   \       0x8E   0xB2FF             UXTBNE   R7,R7
   \       0x90   0xFA20 0xF107      LSR      R1,R0,R7
   \       0x94   0x07C9             LSLS     R1,R1,#+31
   \       0x96   0xD5F6             BPL.N    ??tryToFormNetwork_6
   \       0x98   0xF88D 0x700F      STRB     R7,[SP, #+15]
   \       0x9C   0xA801             ADD      R0,SP,#+4
   \       0x9E   0x....'....        BL       emberFormNetwork
   \       0xA2   0x4604             MOV      R4,R0
   \       0xA4   0x9400             STR      R4,[SP, #+0]
   \       0xA6   0x463B             MOV      R3,R7
   \       0xA8   0x464A             MOV      R2,R9
   \       0xAA   0x4641             MOV      R1,R8
   \       0xAC   0x2001             MOVS     R0,#+1
   \       0xAE   0x....'....        BL       emberAfPrintln
   \       0xB2   0x2C00             CMP      R4,#+0
   \       0xB4   0xD1DF             BNE.N    ??tryToFormNetwork_5
   \       0xB6   0xF89A 0x1000      LDRB     R1,[R10, #+0]
   \       0xBA   0xA801             ADD      R0,SP,#+4
   \       0xBC   0x0849             LSRS     R1,R1,#+1
   \       0xBE   0xF001 0x0101      AND      R1,R1,#0x1
   \       0xC2   0x....'....        BL       emberAfPluginNetworkCreatorCompleteCallback
    241              }
    242            }
    243          
    244            return status;
   \                     ??tryToFormNetwork_3: (+1)
   \       0xC6   0x4620             MOV      R0,R4
   \       0xC8   0xB008             ADD      SP,SP,#+32
   \       0xCA   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    245          }
    246          
    247          static void handleScanComplete(EmberAfPluginScanDispatchScanResults *results)
    248          {
    249            EmberNetworkScanType scanType
    250              = emberAfPluginScanDispatchScanResultsGetScanType(results);
    251          
    252            // If then scan was unsuccessful...
    253            if (results->status != EMBER_SUCCESS) {
    254              // ...just turn off the channel on which the scan failed. The
    255              // network-creator will disregard this channel in the network
    256              // formation process.
    257              CLEARBIT(currentChannelMask, results->channel);
    258            } else {
    259              // If the scan was energy, then we have all of our scan data, so try
    260              // to form.
    261              if (scanType == EMBER_ENERGY_SCAN) {
    262                results->status = tryToFormNetwork();
    263                // If we were not successful...
    264                if (results->status != EMBER_SUCCESS) {
    265                  // ...then try the secondary mask if we were on the primary...
    266                  // ...else fail because we tried both masks.
    267                  if (!maskIsSecondary()) {
    268                    currentChannelMask = emAfPluginNetworkCreatorSecondaryChannelMask;
    269                    SETBITS(stateFlags, STATE_FLAGS_MASK_IS_SECONDARY);
    270                    scheduleScans();
    271                  } else {
    272                    cleanupAndStop(results->status);
    273                  }
    274                } else {
    275                  // If we were successful, then all done!
    276                  cleanupAndStop(results->status);
    277                }
    278              }
    279            }
    280          }
    281          

   \                                 In section .text, align 2, keep-with-next
    282          HIDDEN void scanHandler(EmberAfPluginScanDispatchScanResults *results)
    283          {
   \                     scanHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
    284            EmberNetworkScanType scanType
    285              = emberAfPluginScanDispatchScanResultsGetScanType(results);
   \        0x4   0x8921             LDRH     R1,[R4, #+8]
    286          
    287            if (emberAfPluginScanDispatchScanResultsAreFailure(results)) {
   \        0x6   0x0A0A             LSRS     R2,R1,#+8
   \        0x8   0x0793             LSLS     R3,R2,#+30
   \        0xA   0xB2C8             UXTB     R0,R1
   \        0xC   0xBF48             IT       MI 
   \        0xE   0x7820             LDRBMI   R0,[R4, #+0]
    288              // If we are here, that means the call to emberStartScan was a failure
    289              // in the scan-dispatch plugin (see scan-dispatch.h). So fail.
    290              cleanupAndStop(results->status);
   \       0x10   0xD41C             BMI.N    ??scanHandler_0
    291            } else { // success
    292              if (emberAfPluginScanDispatchScanResultsAreComplete(results)) {
   \       0x12   0x05CA             LSLS     R2,R1,#+23
   \       0x14   0xD51D             BPL.N    ??scanHandler_1
    293                debugPrintln("Scan complete. Channel: %d. Status: 0x%X",
    294                             results->channel,
    295                             results->status);
    296                handleScanComplete(results);
   \       0x16   0x7820             LDRB     R0,[R4, #+0]
   \       0x18   0x....             LDR.N    R5,??DataTable7_6
   \       0x1A   0xB130             CBZ.N    R0,??scanHandler_2
   \       0x1C   0x78A0             LDRB     R0,[R4, #+2]
   \       0x1E   0x6829             LDR      R1,[R5, #+0]
   \       0x20   0x2201             MOVS     R2,#+1
   \       0x22   0x4082             LSLS     R2,R2,R0
   \       0x24   0x4391             BICS     R1,R1,R2
   \       0x26   0x6029             STR      R1,[R5, #+0]
   \       0x28   0xBD31             POP      {R0,R4,R5,PC}
   \                     ??scanHandler_2: (+1)
   \       0x2A   0xB2C9             UXTB     R1,R1
   \       0x2C   0xBB01             CBNZ.N   R1,??scanHandler_3
   \       0x2E   0x....'....        BL       tryToFormNetwork
   \       0x32   0x7020             STRB     R0,[R4, #+0]
   \       0x34   0xB150             CBZ.N    R0,??scanHandler_0
   \       0x36   0x....             LDR.N    R1,??DataTable7
   \       0x38   0x780A             LDRB     R2,[R1, #+0]
   \       0x3A   0x0793             LSLS     R3,R2,#+30
   \       0x3C   0xD406             BMI.N    ??scanHandler_0
   \       0x3E   0x....             LDR.N    R0,??DataTable7_11
   \       0x40   0x6804             LDR      R4,[R0, #+0]
   \       0x42   0xF042 0x0202      ORR      R2,R2,#0x2
   \       0x46   0x602C             STR      R4,[R5, #+0]
   \       0x48   0x700A             STRB     R2,[R1, #+0]
   \       0x4A   0x....             B.N      ?Subroutine0
   \                     ??scanHandler_0: (+1)
   \       0x4C   0xE8BD 0x4032      POP      {R1,R4,R5,LR}
   \       0x50   0x....             B.N      cleanupAndStop
    297              } else { // results
    298                if (scanType == EMBER_ACTIVE_SCAN) {
   \                     ??scanHandler_1: (+1)
   \       0x52   0x2801             CMP      R0,#+1
   \       0x54   0xD105             BNE.N    ??scanHandler_4
    299                  debugPrintln("Found network!");
    300                  debugPrintln("  PanId: 0x%2X, Channel: %d, PJoin: %p",
    301                               results->network->panId,
    302                               results->network->channel,
    303                               (results->network->allowingJoin ? "YES" : "NO"));
    304                  debugPrintln("  lqi:  %d", results->lqi);
    305                  debugPrintln("  rssi: %d", results->rssi);
    306          
    307                  updateChannelComposites(results->rssi,
    308                                          EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_METRIC_BEACONS,
    309                                          results->network->channel);
   \       0x56   0x6860             LDR      R0,[R4, #+4]
   \       0x58   0x2100             MOVS     R1,#+0
   \       0x5A   0x7882             LDRB     R2,[R0, #+2]
   \       0x5C   0xF994 0x0001      LDRSB    R0,[R4, #+1]
   \       0x60   0xE003             B.N      ??scanHandler_5
    310                } else if (scanType == EMBER_ENERGY_SCAN) {
   \                     ??scanHandler_4: (+1)
   \       0x62   0xB928             CBNZ.N   R0,??scanHandler_3
    311                  debugPrintln("Energy scan results.");
    312                  debugPrintln("%p: Channel: %d. Rssi: %d",
    313                               EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    314                               results->channel,
    315                               results->rssi);
    316          
    317                  updateChannelComposites(results->rssi,
    318                                          EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_METRIC_RSSI,
    319                                          results->channel);
   \       0x64   0x2101             MOVS     R1,#+1
   \       0x66   0x78A2             LDRB     R2,[R4, #+2]
   \       0x68   0x5660             LDRSB    R0,[R4, R1]
   \                     ??scanHandler_5: (+1)
   \       0x6A   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x6E   0x....             B.N      updateChannelComposites
    320                }
    321              }
    322            }
    323          }
   \                     ??scanHandler_3: (+1)
   \       0x70   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    324          

   \                                 In section .text, align 2, keep-with-next
    325          static EmberStatus scheduleScans()
    326          {
   \                     scheduleScans: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
    327            EmberStatus status;
    328            EmberAfPluginScanDispatchScanData data = {
    329              .channelMask = currentChannelMask,
    330              .duration    = EMBER_AF_PLUGIN_NETWORK_CREATOR_SCAN_DURATION,
    331              .handler     = scanHandler,
    332            };
   \        0x4   0x4668             MOV      R0,SP
   \        0x6   0x....             LDR.N    R1,??DataTable7_12
   \        0x8   0x2210             MOVS     R2,#+16
   \        0xA   0x....'....        BL       __aeabi_memcpy4
   \        0xE   0x....             LDR.N    R4,??DataTable7_6
   \       0x10   0x6825             LDR      R5,[R4, #+0]
    333          
    334            // Active first.
    335            data.scanType = EMBER_ACTIVE_SCAN;
   \       0x12   0x2101             MOVS     R1,#+1
   \       0x14   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \       0x18   0x9501             STR      R5,[SP, #+4]
    336            status = emberAfPluginScanDispatchScheduleScan(&data);
   \       0x1A   0x4668             MOV      R0,SP
   \       0x1C   0x....'....        BL       emberAfPluginScanDispatchScheduleScan
    337          
    338            // Energy second.
    339            data.scanType = EMBER_ENERGY_SCAN;
   \       0x20   0x2100             MOVS     R1,#+0
   \       0x22   0xF88D 0x1000      STRB     R1,[SP, #+0]
    340            if (status == EMBER_SUCCESS) {
   \       0x26   0x0002             MOVS     R2,R0
   \       0x28   0xBF04             ITT      EQ 
    341              status = emberAfPluginScanDispatchScheduleScan(&data);
   \       0x2A   0x4668             MOVEQ    R0,SP
   \       0x2C   0x....'....        BLEQ     emberAfPluginScanDispatchScheduleScan
    342            }
    343          
    344            return status;
   \       0x30   0xB005             ADD      SP,SP,#+20
   \       0x32   0xBD30             POP      {R4,R5,PC}       ;; return
    345          }

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \        0x4   0x0000'0000        DC32 0
   \        0x8   0x04 0x00          DC8 4, 0, 0, 0
   \              0x00 0x00    
   \        0xC   0x....'....        DC32 scanHandler
    346          

   \                                 In section .text, align 2, keep-with-next
    347          static void updateChannelComposites(int8_t rssi,
    348                                              EmAfPluginNetworkCreatorChannelCompositeMetric metric,
    349                                              uint8_t channel)
    350          {
   \                     updateChannelComposites: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
    351            uint8_t channelIndex = channel - EMBER_MIN_802_15_4_CHANNEL_NUMBER;
   \        0x4   0xF1A2 0x030B      SUB      R3,R2,#+11
    352          
    353            // Even if the channel bit is off, we still update its channel composite. This
    354            // is so we can use the channel composites to find a "least worst channel" if
    355            // necessary.
    356          
    357            // Update the network composite value for this channel.
    358            switch (metric) {
   \        0x8   0x....             LDR.N    R4,??DataTable7_6
   \        0xA   0xB2DB             UXTB     R3,R3
   \        0xC   0x6825             LDR      R5,[R4, #+0]
   \        0xE   0xF04F 0x0801      MOV      R8,#+1
   \       0x12   0x....             LDR.N    R7,??DataTable7_7
   \       0x14   0xB111             CBZ.N    R1,??updateChannelComposites_0
   \       0x16   0x2901             CMP      R1,#+1
   \       0x18   0xD006             BEQ.N    ??updateChannelComposites_1
   \       0x1A   0xE043             B.N      ??updateChannelComposites_2
    359              case EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_METRIC_BEACONS:
    360                channelComposites[channelIndex].beaconsHeard++;
   \                     ??updateChannelComposites_0: (+1)
   \       0x1C   0xF817 0x0013      LDRB     R0,[R7, R3, LSL #+1]
   \       0x20   0x1C40             ADDS     R0,R0,#+1
   \       0x22   0xF807 0x0013      STRB     R0,[R7, R3, LSL #+1]
    361                break;
   \       0x26   0xE03D             B.N      ??updateChannelComposites_2
    362          
    363              case EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_METRIC_RSSI:
    364                if (rssi > channelComposites[channelIndex].maxRssiHeard) {
   \                     ??updateChannelComposites_1: (+1)
   \       0x28   0x1C79             ADDS     R1,R7,#+1
   \       0x2A   0xF911 0x6013      LDRSB    R6,[R1, R3, LSL #+1]
   \       0x2E   0x4286             CMP      R6,R0
   \       0x30   0xDA38             BGE.N    ??updateChannelComposites_2
    365                  channelComposites[channelIndex].maxRssiHeard = rssi;
   \       0x32   0xF801 0x0013      STRB     R0,[R1, R3, LSL #+1]
    366                  maybeClearChannelBitOfMaxRssiReading(channel);
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0x4686             MOV      LR,R0
   \       0x3A   0x4684             MOV      R12,R0
   \       0x3C   0xF06F 0x017F      MVN      R1,#+127
   \                     ??updateChannelComposites_3: (+1)
   \       0x40   0x1C7E             ADDS     R6,R7,#+1
   \       0x42   0xF916 0x6010      LDRSB    R6,[R6, R0, LSL #+1]
   \       0x46   0x428E             CMP      R6,R1
   \       0x48   0xD011             BEQ.N    ??updateChannelComposites_4
   \       0x4A   0xF100 0x060B      ADD      R6,R0,#+11
   \       0x4E   0xFA25 0xF606      LSR      R6,R5,R6
   \       0x52   0x07F6             LSLS     R6,R6,#+31
   \       0x54   0xD50B             BPL.N    ??updateChannelComposites_4
   \       0x56   0x1C7E             ADDS     R6,R7,#+1
   \       0x58   0xF916 0x901C      LDRSB    R9,[R6, R12, LSL #+1]
   \       0x5C   0xF107 0x0A01      ADD      R10,R7,#+1
   \       0x60   0xF91A 0x6010      LDRSB    R6,[R10, R0, LSL #+1]
   \       0x64   0xF10E 0x0E01      ADD      LR,LR,#+1
   \       0x68   0x45B1             CMP      R9,R6
   \       0x6A   0xBFB8             IT       LT 
   \       0x6C   0x4684             MOVLT    R12,R0
   \                     ??updateChannelComposites_4: (+1)
   \       0x6E   0x1C40             ADDS     R0,R0,#+1
   \       0x70   0x2810             CMP      R0,#+16
   \       0x72   0xDBE5             BLT.N    ??updateChannelComposites_3
   \       0x74   0xFA5F 0xF08E      UXTB     R0,LR
   \       0x78   0x2805             CMP      R0,#+5
   \       0x7A   0xDB13             BLT.N    ??updateChannelComposites_2
   \       0x7C   0x1C78             ADDS     R0,R7,#+1
   \       0x7E   0xF1A7 0x0E15      SUB      LR,R7,#+21
   \       0x82   0xF910 0x601C      LDRSB    R6,[R0, R12, LSL #+1]
   \       0x86   0x4691             MOV      R9,R2
   \       0x88   0xF91E 0x0019      LDRSB    R0,[LR, R9, LSL #+1]
   \       0x8C   0x4286             CMP      R6,R0
   \       0x8E   0xBFB4             ITE      LT 
   \       0x90   0x4694             MOVLT    R12,R2
   \       0x92   0xF10C 0x0C0B      ADDGE    R12,R12,#+11
   \       0x96   0xFA08 0xF00C      LSL      R0,R8,R12
   \       0x9A   0xFA5F 0xFC8C      UXTB     R12,R12
   \       0x9E   0x4385             BICS     R5,R5,R0
   \       0xA0   0xF80E 0x101C      STRB     R1,[LR, R12, LSL #+1]
    367                }
    368                break;
    369          
    370              default:
    371                debugPrintln("Unknown metric value: %d", metric);
    372            }
    373          
    374            // If the channel is over the composite threshold, disregard the channel.
    375            if (emAfPluginNetworkCreatorChannelCompositeIsAboveThreshold(channelComposites[channelIndex])) {
   \                     ??updateChannelComposites_2: (+1)
   \       0xA4   0xF817 0x0013      LDRB     R0,[R7, R3, LSL #+1]
   \       0xA8   0x2815             CMP      R0,#+21
   \       0xAA   0xBFA4             ITT      GE 
   \       0xAC   0xFA08 0xF202      LSLGE    R2,R8,R2
   \       0xB0   0x4395             BICGE    R5,R5,R2
    376              CLEARBIT(currentChannelMask, channel);
   \       0xB2   0x6025             STR      R5,[R4, #+0]
    377            }
    378          }
   \       0xB4   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    379          

   \                                 In section .text, align 2, keep-with-next
    380          static void cleanupAndStop(EmberStatus status)
    381          {
   \                     cleanupAndStop: (+1)
   \        0x0   0x4603             MOV      R3,R0
   \        0x2   0xB580             PUSH     {R7,LR}
    382            emberAfCorePrintln("%p: Stop. Status: 0x%X. State: 0x%X",
    383                               EMBER_AF_PLUGIN_NETWORK_CREATOR_PLUGIN_NAME,
    384                               status,
    385                               stateFlags);
   \        0x4   0x....             LDR.N    R0,??DataTable7
   \        0x6   0x7801             LDRB     R1,[R0, #+0]
   \        0x8   0x....             LDR.N    R2,??DataTable7_2
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x9100             STR      R1,[SP, #+0]
   \        0xE   0x....             LDR.N    R1,??DataTable7_13
   \       0x10   0x....'....        BL       emberAfPrintln
    386          }
   \       0x14   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0x....'....        DC32     stateFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x....'....        DC32     doFormCentralizedNetwork

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x....'....        DC32     emAfPluginNetworkCreatorPrimaryChannelMask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x....'....        DC32     currentChannelMask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x....'....        DC32     channelComposites

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \        0x0   0x....'....        DC32     emAfExtendedPanId

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \        0x0   0x....'....        DC32     emAfPluginNetworkCreatorSecondaryChannelMask

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x25 0x70          DC8 "%p: %p: 0x%X"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x4E 0x57          DC8 "NWK Creator"
   \              0x4B 0x20    
   \              0x43 0x72    
   \              0x65 0x61    
   \              0x74 0x6F    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x43 0x61          DC8 "Cannot start. State"
   \              0x6E 0x6E    
   \              0x6F 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x72 0x74    
   \              0x2E 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x25 0x70          DC8 "%p: Error: Channel %d is out of range"
   \              0x3A 0x20    
   \              0x45 0x72    
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x43    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x69 0x73    
   \              0x20 0x6F    
   \              0x75 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x72 0x61    
   \              0x6E 0x67    
   \              0x65 0x00    
   \       0x26   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x25 0x70          DC8 "%p: Form. Channel: %d. Status: 0x%X"
   \              0x3A 0x20    
   \              0x46 0x6F    
   \              0x72 0x6D    
   \              0x2E 0x20    
   \              0x43 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x64 0x2E    
   \              0x20 0x53    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x25 0x70          DC8 "%p: Stop. Status: 0x%X. State: 0x%X"
   \              0x3A 0x20    
   \              0x53 0x74    
   \              0x6F 0x70    
   \              0x2E 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x2E 0x20    
   \              0x53 0x74    
   \              0x61 0x74    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    
    387          
    388          static void cleanChannelComposites(void)
    389          {
    390            uint8_t i;
    391            for (i = 0; i < EMBER_NUM_802_15_4_CHANNELS; i++) {
    392              channelComposites[i].beaconsHeard
    393                = 0;
    394              channelComposites[i].maxRssiHeard
    395                = EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_INVALID_RSSI;
    396            }
    397          }
    398          
    399          static void maybeClearChannelBitOfMaxRssiReading(uint8_t channel)
    400          {
    401            uint8_t i, channelsConsideredSoFar, maxIndex;
    402          
    403            // Find max RSSI index and how many channels have been considered so far.
    404            for (i = 0, channelsConsideredSoFar = 0, maxIndex = 0;
    405                 i < EMBER_NUM_802_15_4_CHANNELS;
    406                 i++) {
    407              // If we have received an RSSI reading from this channel,
    408              // and we are still considering this channel...
    409              if ((channelComposites[i].maxRssiHeard
    410                   != EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_INVALID_RSSI)
    411                  && (READBIT(currentChannelMask,
    412                              i + EMBER_MIN_802_15_4_CHANNEL_NUMBER))) {
    413                // ...increment the channelsConsideredSoFar by 1 and see if this
    414                // channel has the maximum RSSI.
    415                channelsConsideredSoFar++;
    416                if (channelComposites[i].maxRssiHeard
    417                    > channelComposites[maxIndex].maxRssiHeard) {
    418                  maxIndex = i;
    419                }
    420              }
    421            }
    422          
    423            // If the number of channels considered so far is more than the number of
    424            // channels that you want to consider, then remove the channel with the
    425            // maximum RSSI. Also reset the analogous channel composite so that we remember
    426            // that we are throwing away this channel.
    427            if ((channelsConsideredSoFar
    428                 > EM_AF_PLUGIN_NETWORK_CREATOR_CHANNELS_TO_CONSIDER)) {
    429              uint8_t channelToThrowAway
    430                = ((channelComposites[channel - EMBER_MIN_802_15_4_CHANNEL_NUMBER].maxRssiHeard
    431                    > channelComposites[maxIndex].maxRssiHeard)
    432                   ? channel
    433                   : maxIndex + EMBER_MIN_802_15_4_CHANNEL_NUMBER);
    434              CLEARBIT(currentChannelMask, channelToThrowAway);
    435              channelComposites[channelToThrowAway - EMBER_MIN_802_15_4_CHANNEL_NUMBER].maxRssiHeard
    436                = EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_INVALID_RSSI;
    437            }
    438          }
    439          
    440          static uint32_t makeLeastWorstChannelMask(void)
    441          {
    442            uint32_t mask = 0;;
    443            for (uint8_t i = 0; i < EMBER_NUM_802_15_4_CHANNELS; i++) {
    444              if (channelComposites[i].maxRssiHeard
    445                  != EM_AF_PLUGIN_NETWORK_CREATOR_CHANNEL_COMPOSITE_INVALID_RSSI) {
    446                SETBIT(mask, i + EMBER_MIN_802_15_4_CHANNEL_NUMBER);
    447              }
    448            }
    449            return mask;
    450          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   cleanupAndStop
         8   -> emberAfPrintln
      48   emberAfPluginNetworkCreatorNetworkForm
        48   -> emberAfPluginNetworkCreatorSecurityStart
        48   -> emberAfPrintln
        48   -> emberFormNetwork
        48   -> fillExtendedPanId
      16   emberAfPluginNetworkCreatorStart
        16   -> emberAfNetworkState
        16   -> emberAfPrintln
         0   -> scheduleScans
       0   emberAfPluginNetworkCreatorStop
         0   -> cleanupAndStop
      16   fillExtendedPanId
        16   -> halCommonGetRandom
         0   -> halCommonMemMove
      16   scanHandler
         0   -> cleanupAndStop
         0   -> scheduleScans
        16   -> tryToFormNetwork
         0   -> updateChannelComposites
      32   scheduleScans
        32   -> __aeabi_memcpy4
        32   -> emberAfPluginScanDispatchScheduleScan
      64   tryToFormNetwork
        64   -> emberAfPluginNetworkCreatorCompleteCallback
        64   -> emberAfPluginNetworkCreatorGetPanIdCallback
        64   -> emberAfPluginNetworkCreatorGetRadioPowerCallback
        64   -> emberAfPluginNetworkCreatorSecurityStart
        64   -> emberAfPrintln
        64   -> emberFormNetwork
        64   -> fillExtendedPanId
        64   -> halCommonGetRandom
      32   updateChannelComposites


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
       6  ?Subroutine0
      16  ?_0
      12  ?_1
      20  ?_2
      40  ?_3
      36  ?_4
      36  ?_5
      16  ?_6
      32  channelComposites
      22  cleanupAndStop
       4  currentChannelMask
       1  doFormCentralizedNetwork
       4  emAfPluginNetworkCreatorPrimaryChannelMask
       4  emAfPluginNetworkCreatorSecondaryChannelMask
      94  emberAfPluginNetworkCreatorNetworkForm
      80  emberAfPluginNetworkCreatorStart
       4  emberAfPluginNetworkCreatorStop
      52  fillExtendedPanId
     114  scanHandler
      52  scheduleScans
       1  stateFlags
     206  tryToFormNetwork
     184  updateChannelComposites

 
  37 bytes in section .bss
   9 bytes in section .data
 176 bytes in section .rodata
 870 bytes in section .text
 
 870 bytes of CODE  memory
 176 bytes of CONST memory
  46 bytes of DATA  memory

Errors: none
Warnings: none
