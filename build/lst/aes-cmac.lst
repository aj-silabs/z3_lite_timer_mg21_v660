###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:00
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\aes-cmac\aes-cmac.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW8C7A.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\aes-cmac\aes-cmac.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"aes-cmac.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0
#        -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\aes-cmac\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\aes-cmac.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\aes-cmac.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\aes-cmac\aes-cmac.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Implementation of the Cipher-based Message Authentication Code (CMAC)
      4           * specified in the IETF memo "The AES-CMAC Algorithm".
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include PLATFORM_HEADER
     20          
     21          #include "aes-cmac.h"
     22          
     23          #if defined(EMBER_SCRIPTED_TEST)
     24          #define HIDDEN
     25          #else
     26          #define HIDDEN static
     27          #endif
     28          
     29          // Exclusive-Or operation. For two equal length strings, x and y, x XOR y is
     30          // their bit-wise exclusive-OR.

   \                                 In section .text, align 2, keep-with-next
     31          HIDDEN void xor128(const uint8_t *x, const uint8_t *y, uint8_t *out)
     32          {
   \                     xor128: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
     33            uint8_t i;
     34          
     35            for (i = 0; i < 16; i++) {
   \        0x2   0x2300             MOVS     R3,#+0
     36              out[i] = x[i] ^ y[i];
   \                     ??xor128_0: (+1)
   \        0x4   0x5CC4             LDRB     R4,[R0, R3]
   \        0x6   0x5CCD             LDRB     R5,[R1, R3]
   \        0x8   0x406C             EORS     R4,R5,R4
   \        0xA   0x54D4             STRB     R4,[R2, R3]
     37            }
   \        0xC   0x1C5B             ADDS     R3,R3,#+1
   \        0xE   0x2B10             CMP      R3,#+16
   \       0x10   0xDBF8             BLT.N    ??xor128_0
     38          }
   \       0x12   0xBD30             POP      {R4,R5,PC}       ;; return
     39          
     40          // Left-shift of the string x by 1 but. The most significant bit disappears, and
     41          // a zero comes into the least significant bit.

   \                                 In section .text, align 2, keep-with-next
     42          HIDDEN void oneBitLeftShift(const uint8_t *x, uint8_t *out)
     43          {
   \                     oneBitLeftShift: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     44            int8_t i;
     45            uint8_t overflow = 0x00;
   \        0x2   0x2200             MOVS     R2,#+0
     46          
     47            for (i = 15; i >= 0; i--) {
   \        0x4   0x230F             MOVS     R3,#+15
     48              out[i] = x[i] << 1;
     49              out[i] |= overflow;
   \                     ??oneBitLeftShift_0: (+1)
   \        0x6   0x5CC4             LDRB     R4,[R0, R3]
   \        0x8   0xEA42 0x0244      ORR      R2,R2,R4, LSL #+1
   \        0xC   0x54CA             STRB     R2,[R1, R3]
     50              overflow = (x[i] & 0x80) ? 0x01 : 0x00;
   \        0xE   0x5CC2             LDRB     R2,[R0, R3]
   \       0x10   0x09D2             LSRS     R2,R2,#+7
     51            }
   \       0x12   0x1E5B             SUBS     R3,R3,#+1
   \       0x14   0xD5F7             BPL.N    ??oneBitLeftShift_0
     52          }
   \       0x16   0xBD10             POP      {R4,PC}          ;; return
     53          
     54          // 10^i padded output of input x. Is the concatenation of x and a single '1'
     55          // followed by the minimum number of '0's, so that the total length is equal
     56          // to 128 bits.
     57          HIDDEN void padding(const uint8_t *x, uint8_t length, uint8_t *out)
     58          {
     59            uint8_t i;
     60          
     61            for (i = 0; i < 16; i++) {
     62              if (i < length) {
     63                out[i] = x[i];
     64              } else if (i == length) {
     65                out[i] = 0x80;
     66              } else {
     67                out[i] = 0x00;
     68              }
     69            }
     70          }
     71          
     72          extern void emGetKeyFromCore(uint8_t* key);
     73          extern void emLoadKeyIntoCore(const uint8_t* key);
     74          extern void emStandAloneEncryptBlock(uint8_t *block);
     75          

   \                                 In section .text, align 2, keep-with-next
     76          HIDDEN void aesEncrypt(uint8_t *block, const uint8_t *key)
     77          {
   \                     aesEncrypt: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
     78            uint8_t temp[16];
     79          
     80            ATOMIC(
     81              emGetKeyFromCore(temp);
     82              emLoadKeyIntoCore((uint8_t*)key);
     83              emStandAloneEncryptBlock(block);
     84              emLoadKeyIntoCore(temp);
     85              )
   \        0x6   0x....'....        BL       CORE_EnterAtomic
   \        0xA   0x4606             MOV      R6,R0
   \        0xC   0x4668             MOV      R0,SP
   \        0xE   0x....'....        BL       emGetKeyFromCore
   \       0x12   0x4628             MOV      R0,R5
   \       0x14   0x....'....        BL       emLoadKeyIntoCore
   \       0x18   0x4620             MOV      R0,R4
   \       0x1A   0x....'....        BL       emStandAloneEncryptBlock
   \       0x1E   0x4668             MOV      R0,SP
   \       0x20   0x....'....        BL       emLoadKeyIntoCore
   \       0x24   0x4630             MOV      R0,R6
   \       0x26   0x....'....        BL       CORE_ExitAtomic
     86          }
   \       0x2A   0xBD7F             POP      {R0-R6,PC}       ;; return
     87          
     88          HIDDEN void generateSubKey(const uint8_t *key, uint8_t *outKey1, uint8_t *outKey2)
     89          {
     90            uint8_t L[16];
     91            uint8_t constRb[16];
     92          
     93            initToConstRb(constRb);
     94          
     95            // Step 1
     96            initToConstZero(L);
     97            aesEncrypt(L, key);
     98          
     99            // Step 2
    100            oneBitLeftShift(L, outKey1); // // K1:= L << 1;
    101          
    102            if (MSB(L)) { // K1:= (L << 1) XOR const_Rb;
    103              xor128(outKey1, constRb, outKey1);
    104            }
    105            // Step 3
    106            oneBitLeftShift(outKey1, outKey2); // // K2 := K1 << 1;
    107          
    108            if (MSB(outKey1)) { // K2 := (K1 << 1) XOR const_Rb;
    109              xor128(outKey2, constRb, outKey2);
    110            }
    111          }
    112          

   \                                 In section .text, align 2, keep-with-next
    113          void emberAfPluginAesMacAuthenticate(const uint8_t *key,
    114                                               const uint8_t *message,
    115                                               uint8_t messageLength,
    116                                               uint8_t *out)
    117          {
   \                     emberAfPluginAesMacAuthenticate: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0xB094             SUB      SP,SP,#+80
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460E             MOV      R6,R1
   \        0xA   0x4617             MOV      R7,R2
   \        0xC   0x4698             MOV      R8,R3
    118            uint8_t key1[16];
    119            uint8_t key2[16];
    120            uint8_t lastBlock[16];
    121            uint8_t blockNum;
    122            bool isLastBlockComplete;
    123            uint8_t i;
    124          
    125            // Step 1
    126            generateSubKey(key, key1, key2);
   \        0xE   0x220F             MOVS     R2,#+15
   \       0x10   0x2100             MOVS     R1,#+0
   \       0x12   0xA80C             ADD      R0,SP,#+48
   \       0x14   0x....'....        BL       halCommonMemSet
   \       0x18   0x2187             MOVS     R1,#+135
   \       0x1A   0xF88D 0x103F      STRB     R1,[SP, #+63]
   \       0x1E   0x2210             MOVS     R2,#+16
   \       0x20   0x2100             MOVS     R1,#+0
   \       0x22   0xA810             ADD      R0,SP,#+64
   \       0x24   0x....'....        BL       halCommonMemSet
   \       0x28   0x4621             MOV      R1,R4
   \       0x2A   0xA810             ADD      R0,SP,#+64
   \       0x2C   0x....'....        BL       aesEncrypt
   \       0x30   0xA904             ADD      R1,SP,#+16
   \       0x32   0xA810             ADD      R0,SP,#+64
   \       0x34   0x....'....        BL       oneBitLeftShift
   \       0x38   0xF89D 0x0040      LDRB     R0,[SP, #+64]
   \       0x3C   0x09C0             LSRS     R0,R0,#+7
   \       0x3E   0xD004             BEQ.N    ??emberAfPluginAesMacAuthenticate_0
   \       0x40   0xAA04             ADD      R2,SP,#+16
   \       0x42   0xA90C             ADD      R1,SP,#+48
   \       0x44   0xA804             ADD      R0,SP,#+16
   \       0x46   0x....'....        BL       xor128
   \                     ??emberAfPluginAesMacAuthenticate_0: (+1)
   \       0x4A   0xA908             ADD      R1,SP,#+32
   \       0x4C   0xA804             ADD      R0,SP,#+16
   \       0x4E   0x....'....        BL       oneBitLeftShift
   \       0x52   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \       0x56   0x09C0             LSRS     R0,R0,#+7
   \       0x58   0xD004             BEQ.N    ??emberAfPluginAesMacAuthenticate_1
   \       0x5A   0xAA08             ADD      R2,SP,#+32
   \       0x5C   0xA90C             ADD      R1,SP,#+48
   \       0x5E   0xA808             ADD      R0,SP,#+32
   \       0x60   0x....'....        BL       xor128
    127          
    128            // Step 2 (we perform ceil(x/y) by doing: (x + y - 1) / y).
    129            blockNum = (messageLength + 15) / 16;
   \                     ??emberAfPluginAesMacAuthenticate_1: (+1)
   \       0x64   0xF107 0x000F      ADD      R0,R7,#+15
   \       0x68   0x10C1             ASRS     R1,R0,#+3
   \       0x6A   0xEB00 0x7011      ADD      R0,R0,R1, LSR #+28
    130          
    131            // Step 3
    132            if (blockNum == 0) {
   \       0x6E   0xF1A6 0x0310      SUB      R3,R6,#+16
   \       0x72   0x0500             LSLS     R0,R0,#+20
   \       0x74   0x0E00             LSRS     R0,R0,#+24
   \       0x76   0xBF08             IT       EQ 
   \       0x78   0x2501             MOVEQ    R5,#+1
    133              blockNum = 1;
    134              isLastBlockComplete = false;
   \       0x7A   0xD00C             BEQ.N    ??emberAfPluginAesMacAuthenticate_2
    135            } else {
    136              isLastBlockComplete = ((messageLength % 16) == 0);
   \       0x7C   0x08FA             LSRS     R2,R7,#+3
   \       0x7E   0xEB07 0x7512      ADD      R5,R7,R2, LSR #+28
   \       0x82   0x092D             LSRS     R5,R5,#+4
   \       0x84   0xEBB7 0x1105      SUBS     R1,R7,R5, LSL #+4
   \       0x88   0x4605             MOV      R5,R0
   \       0x8A   0xD104             BNE.N    ??emberAfPluginAesMacAuthenticate_2
    137            }
    138          
    139            // Step 4
    140            if (isLastBlockComplete) {
    141              xor128(message + (blockNum - 1) * 16, key1, lastBlock);
   \       0x8C   0x466A             MOV      R2,SP
   \       0x8E   0xA904             ADD      R1,SP,#+16
   \       0x90   0xEB03 0x1005      ADD      R0,R3,R5, LSL #+4
   \       0x94   0xE01B             B.N      ??emberAfPluginAesMacAuthenticate_3
    142            } else {
    143              padding(message + (blockNum - 1) * 16, messageLength % 16, lastBlock);
   \                     ??emberAfPluginAesMacAuthenticate_2: (+1)
   \       0x96   0x08F9             LSRS     R1,R7,#+3
   \       0x98   0xEB07 0x7011      ADD      R0,R7,R1, LSR #+28
   \       0x9C   0x2100             MOVS     R1,#+0
   \       0x9E   0x466A             MOV      R2,SP
   \       0xA0   0x0900             LSRS     R0,R0,#+4
   \       0xA2   0xEBA7 0x1700      SUB      R7,R7,R0, LSL #+4
   \       0xA6   0xEB03 0x1005      ADD      R0,R3,R5, LSL #+4
   \       0xAA   0xF04F 0x0C80      MOV      R12,#+128
   \                     ??emberAfPluginAesMacAuthenticate_4: (+1)
   \       0xAE   0xB2FB             UXTB     R3,R7
   \       0xB0   0x4299             CMP      R1,R3
   \       0xB2   0xBFB8             IT       LT 
   \       0xB4   0x5C43             LDRBLT   R3,[R0, R1]
   \       0xB6   0xDB04             BLT.N    ??emberAfPluginAesMacAuthenticate_5
   \       0xB8   0xBF08             IT       EQ 
   \       0xBA   0xF802 0xC001      STRBEQ   R12,[R2, R1]
   \       0xBE   0xD001             BEQ.N    ??emberAfPluginAesMacAuthenticate_6
   \       0xC0   0x2300             MOVS     R3,#+0
   \                     ??emberAfPluginAesMacAuthenticate_5: (+1)
   \       0xC2   0x5453             STRB     R3,[R2, R1]
   \                     ??emberAfPluginAesMacAuthenticate_6: (+1)
   \       0xC4   0x1C49             ADDS     R1,R1,#+1
   \       0xC6   0x290F             CMP      R1,#+15
   \       0xC8   0xDDF1             BLE.N    ??emberAfPluginAesMacAuthenticate_4
    144              xor128(lastBlock, key2, lastBlock);
   \       0xCA   0xA908             ADD      R1,SP,#+32
   \       0xCC   0x4668             MOV      R0,SP
   \                     ??emberAfPluginAesMacAuthenticate_3: (+1)
   \       0xCE   0x....'....        BL       xor128
    145            }
    146          
    147            // Step 5
    148            initToConstZero(out);
   \       0xD2   0x2210             MOVS     R2,#+16
   \       0xD4   0x2100             MOVS     R1,#+0
   \       0xD6   0x4640             MOV      R0,R8
   \       0xD8   0x....'....        BL       halCommonMemSet
    149          
    150            // Step 6
    151            for (i = 0; i < blockNum - 1; i++) {
   \       0xDC   0x2700             MOVS     R7,#+0
   \       0xDE   0xE009             B.N      ??emberAfPluginAesMacAuthenticate_7
    152              xor128(out, message + i * 16, out);
   \                     ??emberAfPluginAesMacAuthenticate_8: (+1)
   \       0xE0   0xEB06 0x1100      ADD      R1,R6,R0, LSL #+4
   \       0xE4   0x4640             MOV      R0,R8
   \       0xE6   0x1C7F             ADDS     R7,R7,#+1
   \       0xE8   0x....'....        BL       xor128
    153              aesEncrypt(out, key);
   \       0xEC   0x4621             MOV      R1,R4
   \       0xEE   0x4640             MOV      R0,R8
   \       0xF0   0x....'....        BL       aesEncrypt
    154            }
   \                     ??emberAfPluginAesMacAuthenticate_7: (+1)
   \       0xF4   0xB2F8             UXTB     R0,R7
   \       0xF6   0x1E69             SUBS     R1,R5,#+1
   \       0xF8   0x4288             CMP      R0,R1
   \       0xFA   0x4642             MOV      R2,R8
   \       0xFC   0xDBF0             BLT.N    ??emberAfPluginAesMacAuthenticate_8
    155          
    156            xor128(out, lastBlock, out);
   \       0xFE   0x4669             MOV      R1,SP
   \      0x100   0x4640             MOV      R0,R8
   \      0x102   0x....'....        BL       xor128
    157            aesEncrypt(out, key);
   \      0x106   0x4621             MOV      R1,R4
   \      0x108   0x4640             MOV      R0,R8
   \      0x10A   0x....'....        BL       aesEncrypt
    158          }
   \      0x10E   0xB014             ADD      SP,SP,#+80
   \      0x110   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   aesEncrypt
        32   -> CORE_EnterAtomic
        32   -> CORE_ExitAtomic
        32   -> emGetKeyFromCore
        32   -> emLoadKeyIntoCore
        32   -> emStandAloneEncryptBlock
     104   emberAfPluginAesMacAuthenticate
       104   -> aesEncrypt
       104   -> halCommonMemSet
       104   -> oneBitLeftShift
       104   -> xor128
       8   oneBitLeftShift
      12   xor128


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  aesEncrypt
     276  emberAfPluginAesMacAuthenticate
      24  oneBitLeftShift
      20  xor128

 
 364 bytes in section .text
 
 364 bytes of CODE memory

Errors: none
Warnings: none
