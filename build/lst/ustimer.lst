###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:55:39
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\emdrv\ustimer\src\ustimer.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW783.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\emdrv\ustimer\src\ustimer.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"ustimer.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0
#        -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\emdrv\ustimer\src\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\ustimer.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\ustimer.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\emdrv\ustimer\src\ustimer.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Microsecond delay functions.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc.  Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement.  This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          #include <stdbool.h>
     19          #include "em_device.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_ClearPendingIRQ(IRQn_Type)
   \                     __NVIC_ClearPendingIRQ: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0xD407             BMI.N    ??__NVIC_ClearPendingIRQ_0
   \        0x4   0x2201             MOVS     R2,#+1
   \        0x6   0xF000 0x011F      AND      R1,R0,#0x1F
   \        0xA   0x408A             LSLS     R2,R2,R1
   \        0xC   0x....             LDR.N    R3,??DataTable7  ;; 0xe000e280
   \        0xE   0x0940             LSRS     R0,R0,#+5
   \       0x10   0xF843 0x2020      STR      R2,[R3, R0, LSL #+2]
   \                     ??__NVIC_ClearPendingIRQ_0: (+1)
   \       0x14   0x4770             BX       LR               ;; return
     20          #include "em_common.h"
     21          #include "em_cmu.h"
     22          #include "em_emu.h"
     23          #include "em_core.h"
     24          #include "em_timer.h"
     25          
     26          #include "ustimer.h"
     27          
     28          /** @cond DO_NOT_INCLUDE_WITH_DOXYGEN */
     29          
     30          #define USTIMER_TIMER0 0
     31          #define USTIMER_TIMER1 1
     32          #define USTIMER_TIMER2 2
     33          #define USTIMER_TIMER3 3
     34          #define USTIMER_TIMER4 4
     35          #define USTIMER_TIMER5 5
     36          #define USTIMER_TIMER6 6
     37          
     38          #define USTIMER_WTIMER0 10
     39          #define USTIMER_WTIMER1 11
     40          #define USTIMER_WTIMER2 12
     41          #define USTIMER_WTIMER3 13
     42          
     43          #ifndef USTIMER_TIMER
     44          #define USTIMER_TIMER USTIMER_TIMER0
     45          #endif
     46          
     47          #if (USTIMER_TIMER == USTIMER_TIMER0) && (TIMER_COUNT >= 1)
     48            #define TIMER_DEV         TIMER0
     49            #define TIMER_CLK         cmuClock_TIMER0
     50            #define TIMER_IRQ         TIMER0_IRQn
     51            #define TIMER_IRQHandler  TIMER0_IRQHandler
     52          
     53          #elif (USTIMER_TIMER == USTIMER_TIMER1) && (TIMER_COUNT >= 2)
     54            #define TIMER_DEV         TIMER1
     55            #define TIMER_CLK         cmuClock_TIMER1
     56            #define TIMER_IRQ         TIMER1_IRQn
     57            #define TIMER_IRQHandler  TIMER1_IRQHandler
     58          
     59          #elif (USTIMER_TIMER == USTIMER_TIMER2) && (TIMER_COUNT >= 3)
     60            #define TIMER_DEV         TIMER2
     61            #define TIMER_CLK         cmuClock_TIMER2
     62            #define TIMER_IRQ         TIMER2_IRQn
     63            #define TIMER_IRQHandler  TIMER2_IRQHandler
     64          
     65          #elif (USTIMER_TIMER == USTIMER_TIMER3) && (TIMER_COUNT >= 4)
     66            #define TIMER_DEV         TIMER3
     67            #define TIMER_CLK         cmuClock_TIMER3
     68            #define TIMER_IRQ         TIMER3_IRQn
     69            #define TIMER_IRQHandler  TIMER3_IRQHandler
     70          
     71          #elif (USTIMER_TIMER == USTIMER_TIMER4) && (TIMER_COUNT >= 5)
     72            #define TIMER_DEV         TIMER4
     73            #define TIMER_CLK         cmuClock_TIMER4
     74            #define TIMER_IRQ         TIMER4_IRQn
     75            #define TIMER_IRQHandler  TIMER4_IRQHandler
     76          
     77          #elif (USTIMER_TIMER == USTIMER_TIMER5) && (TIMER_COUNT >= 6)
     78            #define TIMER_DEV         TIMER5
     79            #define TIMER_CLK         cmuClock_TIMER5
     80            #define TIMER_IRQ         TIMER5_IRQn
     81            #define TIMER_IRQHandler  TIMER5_IRQHandler
     82          
     83          #elif (USTIMER_TIMER == USTIMER_TIMER6) && (TIMER_COUNT >= 7)
     84            #define TIMER_DEV         TIMER6
     85            #define TIMER_CLK         cmuClock_TIMER6
     86            #define TIMER_IRQ         TIMER6_IRQn
     87            #define TIMER_IRQHandler  TIMER6_IRQHandler
     88          
     89          #elif (USTIMER_TIMER == USTIMER_WTIMER0) && (WTIMER_COUNT >= 1)
     90            #define TIMER_DEV         WTIMER0
     91            #define TIMER_CLK         cmuClock_WTIMER0
     92            #define TIMER_IRQ         WTIMER0_IRQn
     93            #define TIMER_IRQHandler  WTIMER0_IRQHandler
     94          
     95          #elif (USTIMER_TIMER == USTIMER_WTIMER1) && (WTIMER_COUNT >= 2)
     96            #define TIMER_DEV         WTIMER1
     97            #define TIMER_CLK         cmuClock_WTIMER1
     98            #define TIMER_IRQ         WTIMER1_IRQn
     99            #define TIMER_IRQHandler  WTIMER1_IRQHandler
    100          
    101          #elif (USTIMER_TIMER == USTIMER_WTIMER2) && (WTIMER_COUNT >= 3)
    102            #define TIMER_DEV         WTIMER2
    103            #define TIMER_CLK         cmuClock_WTIMER2
    104            #define TIMER_IRQ         WTIMER2_IRQn
    105            #define TIMER_IRQHandler  WTIMER2_IRQHandler
    106          
    107          #elif (USTIMER_TIMER == USTIMER_WTIMER3) && (WTIMER_COUNT >= 4)
    108            #define TIMER_DEV         WTIMER3
    109            #define TIMER_CLK         cmuClock_WTIMER3
    110            #define TIMER_IRQ         WTIMER3_IRQn
    111            #define TIMER_IRQHandler  WTIMER3_IRQHandler
    112          
    113          #else
    114          #error "Illegal USTIMER TIMER selection"
    115          #endif
    116          
    117          // Use 16-bit TOP value for timer, independent of the width of the timer
    118          #define TIMER_MAX   0xFFFF
    119          

   \                                 In section .bss, align 4
    120          static uint32_t freq;
   \                     freq:
   \        0x0                      DS8 4

   \                                 In section .bss, align 4
    121          static uint32_t minTicks;
   \                     minTicks:
   \        0x0                      DS8 4

   \                                 In section .bss, align 1
    122          bool timeElapsed = false;
   \                     timeElapsed:
   \        0x0                      DS8 1
    123          
    124          static void DelayTicksEM1(uint16_t ticks);
    125          static void DelayTicksPolled(uint16_t ticks);
    126          
    127          /** @endcond */
    128          
    129          /***************************************************************************//**
    130           * @brief
    131           *   Activate and initialize the hardware timer used to pace the 1 microsecond
    132           *   delay functions.
    133           *
    134           * @note
    135           *   Call this function whenever the HFPERCLK and/or HFCORECLK frequency is
    136           *   changed.
    137           *
    138           * @return
    139           *    @ref ECODE_EMDRV_USTIMER_OK.
    140           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    141          Ecode_t USTIMER_Init(void)
    142          {
   \                     USTIMER_Init: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB088             SUB      SP,SP,#+32
    143            TIMER_Init_TypeDef timerInit     = TIMER_INIT_DEFAULT;
   \        0x4   0x4668             MOV      R0,SP
   \        0x6   0x....             LDR.N    R1,??DataTable7_1
   \        0x8   0x2210             MOVS     R2,#+16
   \        0xA   0x....'....        BL       __aeabi_memcpy4
    144            TIMER_InitCC_TypeDef timerCCInit = TIMER_INITCC_DEFAULT;
   \        0xE   0xA804             ADD      R0,SP,#+16
   \       0x10   0x2110             MOVS     R1,#+16
   \       0x12   0x....'....        BL       __aeabi_memclr4
    145            uint32_t coreClockScale;
    146          
    147            timerCCInit.mode = timerCCModeCompare;
   \       0x16   0x2002             MOVS     R0,#+2
   \       0x18   0xF88D 0x0016      STRB     R0,[SP, #+22]
    148            CMU_ClockEnable(TIMER_CLK, true);
    149            TIMER_InitCC(TIMER_DEV, 0, &timerCCInit);
   \       0x1C   0x....             LDR.N    R4,??DataTable7_2  ;; 0x40048000
   \       0x1E   0xAA04             ADD      R2,SP,#+16
   \       0x20   0x2100             MOVS     R1,#+0
   \       0x22   0x4620             MOV      R0,R4
   \       0x24   0x....'....        BL       TIMER_InitCC
    150            TIMER_TopSet(TIMER_DEV, TIMER_MAX);
   \       0x28   0x6B20             LDR      R0,[R4, #+48]
   \       0x2A   0xF64F 0x71FF      MOVW     R1,#+65535
   \       0x2E   0x61E1             STR      R1,[R4, #+28]
    151          
    152            /* Run timer at slowest frequency that still gives less than 1 us per tick */
    153          #if defined (_TIMER_CTRL_PRESC_DIV1)
    154            timerInit.prescale = (TIMER_Prescale_TypeDef)_TIMER_CTRL_PRESC_DIV1;
    155          #endif
    156          
    157          #if defined (_TIMER_CFG_PRESC_DIV1)
    158            timerInit.prescale = (TIMER_Prescale_TypeDef)_TIMER_CFG_PRESC_DIV1;
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0xF8AD 0x2002      STRH     R2,[SP, #+2]
   \       0x36   0x....             LDR.N    R5,??DataTable7_3
    159          #endif
    160          
    161            do {
    162              TIMER_Init(TIMER_DEV, &timerInit);
   \                     ??USTIMER_Init_0: (+1)
   \       0x38   0x4669             MOV      R1,SP
   \       0x3A   0x4620             MOV      R0,R4
   \       0x3C   0x....'....        BL       TIMER_Init
    163          
    164          #if defined(_CMU_HFPERCLKEN0_MASK)
    165              freq = CMU_ClockFreqGet(cmuClock_HFPER);
    166          #else
    167              freq = CMU_ClockFreqGet(cmuClock_EM01GRPACLK);
   \       0x40   0x2006             MOVS     R0,#+6
   \       0x42   0x....'....        BL       CMU_ClockFreqGet
    168          #endif
    169          
    170          #if defined (_TIMER_CFG_PRESC_DIV1)
    171              freq /= (timerInit.prescale + 1);
   \       0x46   0xF9BD 0x1002      LDRSH    R1,[SP, #+2]
   \       0x4A   0x1C4A             ADDS     R2,R1,#+1
   \       0x4C   0xFBB0 0xF0F2      UDIV     R0,R0,R2
    172          #endif
    173          #if defined (_TIMER_CTRL_PRESC_DIV1)
    174              freq /= 1 << timerInit.prescale;
    175          #endif
    176              timerInit.prescale++;
   \       0x50   0x1C49             ADDS     R1,R1,#+1
   \       0x52   0xF8AD 0x1002      STRH     R1,[SP, #+2]
    177            } while ( (timerInit.prescale <= timerPrescale1024)
    178                      && (freq > 2000000) );
   \       0x56   0xB209             SXTH     R1,R1
   \       0x58   0x6028             STR      R0,[R5, #+0]
   \       0x5A   0xF5B1 0x6F80      CMP      R1,#+1024
   \       0x5E   0xDA02             BGE.N    ??USTIMER_Init_1
   \       0x60   0x....             LDR.N    R1,??DataTable7_4  ;; 0x1e8481
   \       0x62   0x4288             CMP      R0,R1
   \       0x64   0xD2E8             BCS.N    ??USTIMER_Init_0
    179          
    180            /* Figure out the minimum delay we can have when using timer interrupt
    181             * to avoid that actual delay become a full timer counter lap.
    182             * We are assuming that this number scales with mcu core clock.
    183             * The number is found by trial and err on a GG running at 14MHz.
    184             */
    185            coreClockScale = (4 * 48000000) / CMU_ClockFreqGet(cmuClock_CORE);
   \                     ??USTIMER_Init_1: (+1)
   \       0x66   0x200E             MOVS     R0,#+14
   \       0x68   0x....'....        BL       CMU_ClockFreqGet
    186            minTicks = ( ( (uint64_t)freq * coreClockScale) + 500000) / 1000000;
   \       0x6C   0x682A             LDR      R2,[R5, #+0]
   \       0x6E   0x....             LDR.N    R3,??DataTable7_5  ;; 0xb71b000
   \       0x70   0xFBB3 0xF3F0      UDIV     R3,R3,R0
   \       0x74   0x....             LDR.N    R0,??DataTable7_6  ;; 0x7a120
   \       0x76   0x2100             MOVS     R1,#+0
   \       0x78   0xFBE3 0x0102      UMLAL    R0,R1,R3,R2
   \       0x7C   0x....             LDR.N    R2,??DataTable7_7  ;; 0xf4240
   \       0x7E   0x2300             MOVS     R3,#+0
   \       0x80   0x....'....        BL       __aeabi_uldivmod
   \       0x84   0x....             LDR.N    R2,??DataTable7_8
   \       0x86   0x6010             STR      R0,[R2, #+0]
    187            timeElapsed = false;
   \       0x88   0x2300             MOVS     R3,#+0
   \       0x8A   0x....             LDR.N    R1,??DataTable7_9
   \       0x8C   0x700B             STRB     R3,[R1, #+0]
    188          
    189            TIMER_IntDisable(TIMER_DEV, TIMER_IEN_CC0);
   \       0x8E   0x69A0             LDR      R0,[R4, #+24]
   \       0x90   0xF020 0x0010      BIC      R0,R0,#0x10
   \       0x94   0x61A0             STR      R0,[R4, #+24]
    190            NVIC_ClearPendingIRQ(TIMER_IRQ);
   \       0x96   0x2006             MOVS     R0,#+6
   \       0x98   0x....'....        BL       __NVIC_ClearPendingIRQ
    191            NVIC_EnableIRQ(TIMER_IRQ);
   \       0x9C   0x2040             MOVS     R0,#+64
   \       0x9E   0x....             LDR.N    R1,??DataTable7_10  ;; 0xe000e100
   \       0xA0   0x6008             STR      R0,[R1, #+0]
    192          
    193            return ECODE_EMDRV_USTIMER_OK;
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0xB009             ADD      SP,SP,#+36
   \       0xA6   0xBD30             POP      {R4,R5,PC}       ;; return
    194          }
    195          
    196          /***************************************************************************//**
    197           * @brief
    198           *    Deinitialize USTIMER driver.
    199           *
    200           * @details
    201           *    Will disable interrupts and turn off the clock to the underlying hardware
    202           *    timer.
    203           *
    204           * @return
    205           *    @ref ECODE_EMDRV_USTIMER_OK.
    206           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    207          Ecode_t USTIMER_DeInit(void)
    208          {
   \                     USTIMER_DeInit: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    209            NVIC_DisableIRQ(TIMER_IRQ);
   \        0x2   0x2040             MOVS     R0,#+64
   \        0x4   0x....             LDR.N    R1,??DataTable7_11  ;; 0xe000e180
   \        0x6   0x6008             STR      R0,[R1, #+0]
   \        0x8   0xF3BF 0x8F4F      DSB      SY
   \        0xC   0xF3BF 0x8F6F      ISB      SY
    210            TIMER_IntDisable(TIMER_DEV, TIMER_IEN_CC0);
   \       0x10   0x....             LDR.N    R4,??DataTable7_12  ;; 0x4004800c
   \       0x12   0x68E0             LDR      R0,[R4, #+12]
    211          
    212            TIMER_IntClear(TIMER_DEV, TIMER_IF_CC0);
   \       0x14   0x2110             MOVS     R1,#+16
   \       0x16   0x....             LDR.N    R2,??DataTable7_13  ;; 0x4004a014
   \       0x18   0xF020 0x0010      BIC      R0,R0,#0x10
   \       0x1C   0x60E0             STR      R0,[R4, #+12]
   \       0x1E   0x6011             STR      R1,[R2, #+0]
    213            NVIC_ClearPendingIRQ(TIMER_IRQ);
   \       0x20   0x2006             MOVS     R0,#+6
   \       0x22   0x....'....        BL       __NVIC_ClearPendingIRQ
    214          
    215            TIMER_Enable(TIMER_DEV, false);
   \       0x26   0x2102             MOVS     R1,#+2
   \       0x28   0x6021             STR      R1,[R4, #+0]
    216          
    217            CMU_ClockEnable(TIMER_CLK, false);
    218          
    219            return ECODE_EMDRV_USTIMER_OK;
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0xBD10             POP      {R4,PC}          ;; return
    220          }
    221          
    222          /***************************************************************************//**
    223           * @brief
    224           *   Delay a given number of microseconds.
    225           *
    226           * @details
    227           *   The mcu is put in EM1 during the delay.
    228           *
    229           * @note
    230           *   This function assumes that the timer interrupt needed to wake the mcu
    231           *   up from EM1 is not blocked. This function is not thread safe.
    232           *   Due to the overhead of setting up and serving TIMER/WTIMER interrupts,
    233           *   timing will be inaccurate for delays shorter than 200us. If higher accuracy
    234           *   is needed for short delays, consider using USTIMER_DelayIntSafe() or
    235           *   UDELAY_Delay().
    236           *
    237           * @param[in] usec
    238           *   Number of microseconds to delay.
    239           *
    240           * @return
    241           *    @ref ECODE_EMDRV_USTIMER_OK.
    242           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    243          Ecode_t USTIMER_Delay(uint32_t usec)
    244          {
   \                     USTIMER_Delay: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    245            uint64_t totalTicks;
    246          
    247            totalTicks = ( ( (uint64_t)freq * usec) + 500000) / 1000000;
   \        0x2   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0xE005             B.N      ??CrossCallReturnLabel_2
    248          
    249            /* The timer counter is 16 bits wide, split the total wait up in chunks */
    250            /* of a little less than 2^16.                                          */
    251            while ( totalTicks > 65000 ) {
    252              DelayTicksEM1(65000);
   \                     ??USTIMER_Delay_0: (+1)
   \        0xC   0xF64F 0x50E8      MOVW     R0,#+65000
   \       0x10   0x....'....        BL       DelayTicksEM1
    253              totalTicks -= 65000;
   \       0x14   0x....'....        BL       ?Subroutine1
    254            }
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0xF64F 0x50E9      MOVW     R0,#+65001
   \       0x1E   0x428D             CMP      R5,R1
   \       0x20   0xD8F4             BHI.N    ??USTIMER_Delay_0
   \       0x22   0x4284             CMP      R4,R0
   \       0x24   0xD2F2             BCS.N    ??USTIMER_Delay_0
    255            DelayTicksEM1( (uint16_t)totalTicks);
   \       0x26   0xB2A0             UXTH     R0,R4
   \       0x28   0x....'....        BL       DelayTicksEM1
    256          
    257            return ECODE_EMDRV_USTIMER_OK;
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    258          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x....             LDR.N    R2,??DataTable7_14  ;; 0xffff0218
   \        0x2   0xF04F 0x33FF      MOV      R3,#-1
   \        0x6   0x18A4             ADDS     R4,R4,R2
   \        0x8   0x415D             ADCS     R5,R5,R3
   \        0xA   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x....             LDR.N    R3,??DataTable7_3
   \        0x2   0x681C             LDR      R4,[R3, #+0]
   \        0x4   0x4602             MOV      R2,R0
   \        0x6   0x....             LDR.N    R0,??DataTable7_6  ;; 0x7a120
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0xFBE2 0x0104      UMLAL    R0,R1,R2,R4
   \        0xE   0x....             LDR.N    R2,??DataTable7_7  ;; 0xf4240
   \       0x10   0x2300             MOVS     R3,#+0
   \       0x12   0x....'....        B.W      __aeabi_uldivmod
    259          
    260          /***************************************************************************//**
    261           * @brief
    262           *   Delay a given number of microseconds.
    263           *
    264           * @details
    265           *   This is a busy wait delay not using energy modes to conserve power.
    266           *
    267           * @note
    268           *   This function can be used in any context (interrupts can be disabled).
    269           *   This function is thread safe.
    270           *
    271           * @param[in] usec
    272           *   Number of microseconds to delay.
    273           *
    274           * @return
    275           *    @ref ECODE_EMDRV_USTIMER_OK.
    276           ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    277          Ecode_t USTIMER_DelayIntSafe(uint32_t usec)
    278          {
   \                     USTIMER_DelayIntSafe: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    279            uint64_t totalTicks;
    280          
    281            totalTicks = ( ( (uint64_t)freq * usec) + 500000) / 1000000;
   \        0x2   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x460D             MOV      R5,R1
   \        0xA   0xE005             B.N      ??CrossCallReturnLabel_3
    282          
    283            /* The timer counter is 16 bits wide, split the total wait up in chunks */
    284            /* of a little less than 2^16.                                          */
    285            while ( totalTicks > 65000 ) {
    286              DelayTicksPolled(65000);
   \                     ??USTIMER_DelayIntSafe_0: (+1)
   \        0xC   0xF64F 0x50E8      MOVW     R0,#+65000
   \       0x10   0x....'....        BL       DelayTicksPolled
    287              totalTicks -= 65000;
   \       0x14   0x....'....        BL       ?Subroutine1
    288            }
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x18   0x2100             MOVS     R1,#+0
   \       0x1A   0xF64F 0x50E9      MOVW     R0,#+65001
   \       0x1E   0x428D             CMP      R5,R1
   \       0x20   0xD8F4             BHI.N    ??USTIMER_DelayIntSafe_0
   \       0x22   0x4284             CMP      R4,R0
   \       0x24   0xD2F2             BCS.N    ??USTIMER_DelayIntSafe_0
    289            DelayTicksPolled( (uint16_t)totalTicks);
   \       0x26   0xB2A0             UXTH     R0,R4
   \       0x28   0x....'....        BL       DelayTicksPolled
    290          
    291            return ECODE_EMDRV_USTIMER_OK;
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    292          }
    293          
    294          /** @cond DO_NOT_INCLUDE_WITH_DOXYGEN */
    295          

   \                                 In section .text, align 2, keep-with-next
    296          void TIMER_IRQHandler(void)
    297          {
   \                     TIMER0_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    298            uint32_t flags;
    299          
    300            halToggleLed(0);
                   ^
Warning[Pe223]: function "halToggleLed" declared implicitly
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        BL       halToggleLed
    301            
    302            flags = TIMER_IntGet(TIMER_DEV);
   \        0x8   0x....             LDR.N    R1,??DataTable7_15  ;; 0x40048014
   \        0xA   0x6808             LDR      R0,[R1, #+0]
    303          
    304            if ( flags & TIMER_IF_CC0 ) {
   \        0xC   0x06C0             LSLS     R0,R0,#+27
   \        0xE   0xD505             BPL.N    ??TIMER0_IRQHandler_0
    305              TIMER_IntClear(TIMER_DEV, TIMER_IF_CC0);
   \       0x10   0x2110             MOVS     R1,#+16
   \       0x12   0x....             LDR.N    R2,??DataTable7_13  ;; 0x4004a014
   \       0x14   0x6011             STR      R1,[R2, #+0]
    306              timeElapsed = true;
   \       0x16   0x2001             MOVS     R0,#+1
   \       0x18   0x....             LDR.N    R3,??DataTable7_9
   \       0x1A   0x7018             STRB     R0,[R3, #+0]
    307            }
    308          }
   \                     ??TIMER0_IRQHandler_0: (+1)
   \       0x1C   0xBD01             POP      {R0,PC}          ;; return
    309          

   \                                 In section .text, align 2, keep-with-next
    310          static void DelayTicksPolled(uint16_t ticks)
    311          {
   \                     DelayTicksPolled: (+1)
   \        0x0   0xB081             SUB      SP,SP,#+4
    312            uint16_t startTime;
    313            volatile uint16_t now;
    314          
    315            if ( ticks ) {
   \        0x2   0x0001             MOVS     R1,R0
   \        0x4   0xD00B             BEQ.N    ??DelayTicksPolled_0
    316              startTime = TIMER_CounterGet(TIMER_DEV);
   \        0x6   0x....             LDR.N    R1,??DataTable7_16  ;; 0x40048024
   \        0x8   0x680A             LDR      R2,[R1, #+0]
   \        0xA   0xB292             UXTH     R2,R2
    317              do {
    318                now = TIMER_CounterGet(TIMER_DEV);
   \                     ??DelayTicksPolled_1: (+1)
   \        0xC   0x680B             LDR      R3,[R1, #+0]
    319              } while ( (uint16_t)(now - startTime) < ticks );
   \        0xE   0xF8AD 0x3000      STRH     R3,[SP, #+0]
   \       0x12   0xF8BD 0x3000      LDRH     R3,[SP, #+0]
   \       0x16   0x1A9B             SUBS     R3,R3,R2
   \       0x18   0xB29B             UXTH     R3,R3
   \       0x1A   0x4283             CMP      R3,R0
   \       0x1C   0xD3F6             BCC.N    ??DelayTicksPolled_1
    320            }
    321          }
   \                     ??DelayTicksPolled_0: (+1)
   \       0x1E   0xB001             ADD      SP,SP,#+4
   \       0x20   0x4770             BX       LR               ;; return
    322          

   \                                 In section .text, align 2, keep-with-next
    323          static void DelayTicksEM1(uint16_t ticks)
    324          {
   \                     DelayTicksEM1: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
    325            uint32_t cmp;
    326          
    327            if ( ticks ) {
   \        0x4   0xD026             BEQ.N    ??DelayTicksEM1_0
    328              /* Arm TIMER compare interrupt */
    329          
    330              CORE_ATOMIC_SECTION(
    331                /* The following lines costs 2.7us@48MHz and 7.5us@14MHz (measured with GG)*/
    332                cmp = (TIMER_CounterGet(TIMER_DEV) + SL_MAX(minTicks, ticks)) & TIMER_MAX;
    333                TIMER_CompareSet(TIMER_DEV, 0, cmp);
    334                TIMER_IntClear(TIMER_DEV, TIMER_IF_CC0);
    335                TIMER_IntEnable(TIMER_DEV, TIMER_IEN_CC0);
    336                )
   \        0x6   0x....'....        BL       CORE_EnterAtomic
   \        0xA   0x....             LDR.N    R4,??DataTable7_17  ;; 0x40048018
   \        0xC   0x68E1             LDR      R1,[R4, #+12]
   \        0xE   0x....             LDR.N    R2,??DataTable7_8
   \       0x10   0x6812             LDR      R2,[R2, #+0]
   \       0x12   0x4295             CMP      R5,R2
   \       0x14   0xBF38             IT       CC 
   \       0x16   0x4615             MOVCC    R5,R2
   \       0x18   0x186D             ADDS     R5,R5,R1
   \       0x1A   0x69A2             LDR      R2,[R4, #+24]
   \       0x1C   0xB2AD             UXTH     R5,R5
   \       0x1E   0x6525             STR      R5,[R4, #+80]
   \       0x20   0x2110             MOVS     R1,#+16
   \       0x22   0x....             LDR.N    R2,??DataTable7_13  ;; 0x4004a014
   \       0x24   0x6011             STR      R1,[R2, #+0]
   \       0x26   0x6823             LDR      R3,[R4, #+0]
   \       0x28   0xF043 0x0310      ORR      R3,R3,#0x10
   \       0x2C   0x6023             STR      R3,[R4, #+0]
   \       0x2E   0x....'....        BL       CORE_ExitAtomic
   \       0x32   0x....             LDR.N    R1,??DataTable7_18  ;; 0xe000ed10
   \       0x34   0x....             LDR.N    R2,??DataTable7_9
   \       0x36   0xE004             B.N      ??DelayTicksEM1_1
    337          
    338              while ( !timeElapsed ) {
    339                EMU_EnterEM1();
   \                     ??DelayTicksEM1_2: (+1)
   \       0x38   0x680B             LDR      R3,[R1, #+0]
   \       0x3A   0xF023 0x0304      BIC      R3,R3,#0x4
   \       0x3E   0x600B             STR      R3,[R1, #+0]
   \       0x40   0xBF30             WFI      
    340              }
   \                     ??DelayTicksEM1_1: (+1)
   \       0x42   0x7810             LDRB     R0,[R2, #+0]
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD0F7             BEQ.N    ??DelayTicksEM1_2
    341              timeElapsed = false;
   \       0x48   0x2100             MOVS     R1,#+0
   \       0x4A   0x7011             STRB     R1,[R2, #+0]
    342          
    343              TIMER_IntDisable(TIMER_DEV, TIMER_IEN_CC0);
   \       0x4C   0x6820             LDR      R0,[R4, #+0]
   \       0x4E   0xF020 0x0010      BIC      R0,R0,#0x10
   \       0x52   0x6020             STR      R0,[R4, #+0]
    344            }
    345          }
   \                     ??DelayTicksEM1_0: (+1)
   \       0x54   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \        0x0   0xE000'E280        DC32     0xe000e280

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \        0x0   0x4004'8000        DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \        0x0   0x....'....        DC32     freq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \        0x0   0x001E'8481        DC32     0x1e8481

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \        0x0   0x0B71'B000        DC32     0xb71b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \        0x0   0x0007'A120        DC32     0x7a120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \        0x0   0x000F'4240        DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \        0x0   0x....'....        DC32     minTicks

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \        0x0   0x....'....        DC32     timeElapsed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \        0x0   0xE000'E100        DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \        0x0   0xE000'E180        DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \        0x0   0x4004'800C        DC32     0x4004800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_13:
   \        0x0   0x4004'A014        DC32     0x4004a014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_14:
   \        0x0   0xFFFF'0218        DC32     0xffff0218

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_15:
   \        0x0   0x4004'8014        DC32     0x40048014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_16:
   \        0x0   0x4004'8024        DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_17:
   \        0x0   0x4004'8018        DC32     0x40048018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_18:
   \        0x0   0xE000'ED10        DC32     0xe000ed10

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x01 0x00          DC8 1, 0
   \        0x2   0x0000             DC16 0
   \        0x4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    346          
    347          /** @endcond */
    348          
    349          /* *INDENT-OFF* */
    350          /******** THE REST OF THE FILE IS DOCUMENTATION ONLY !**********************//**
    351           * @addtogroup emdrv
    352           * @{
    353           * @addtogroup USTIMER
    354           * @brief USTIMER Microsecond Delay Timer Driver
    355           * @{
    356          
    357          @details
    358            Implements microsecond delays.
    359          
    360            The delay is implemented using a hardware timer. @ref USTIMER_Init() must
    361            be called prior to using the delay functions. @ref USTIMER_Init() must
    362            also be called if HFCORECLK and/or HFPERCLK is changed.
    363          
    364            The source files for the USTIMER driver library resides in the
    365            emdrv/ustimer folder, and are named ustimer.c and ustimer.h.
    366          
    367            @li @ref ustimer_intro
    368            @li @ref ustimer_conf
    369            @li @ref ustimer_api
    370            @li @ref ustimer_example
    371          
    372          @n @section ustimer_intro Introduction
    373          
    374            The USTIMER driver implements microsecond delay functions. The delay is timed
    375            using a hardware TIMER or WTIMER resource. Two delay functions are available,
    376            one which uses energy mode EM1 to preserve energy while waiting, and one which
    377            performs busy wait.
    378          
    379            @note Due to the overhead of setting up and serving TIMER/WTIMER interrupts,
    380            the USTIMER_Delay() function will be inaccurate for delays shorter than 200us.
    381            If higher accuracy is needed for short delays, consider using
    382            USTIMER_DelayIntSafe() or UDELAY_Delay().
    383          
    384          @n @section ustimer_conf Configuration Options
    385          
    386            By default the module use TIMER0. Timer resource selection is stored in a
    387            file named @ref ustimer_config.h. A template for this file, containing default
    388            value, resides in the emdrv/config folder.
    389          
    390            To configure USTIMER, provide your own configuration file. Here is a
    391            sample @ref ustimer_config.h file:
    392            @verbatim
    393          #ifndef __SILICON_LABS_USTIMER_CONFIG_H__
    394          #define __SILICON_LABS_USTIMER_CONFIG_H__
    395          
    396          /// USTIMER configuration option. Use this define to select a TIMER resource.
    397          #define USTIMER_TIMER USTIMER_TIMER3
    398          
    399          #endif
    400            @endverbatim
    401          
    402          @n @section ustimer_api The API
    403          
    404            This section contain brief descriptions of the functions in the API. You will
    405            find detailed information on input and output parameters and return values by
    406            clicking on the hyperlinked function names. Most functions return an error
    407            code, @ref ECODE_EMDRV_USTIMER_OK is returned on success,
    408            see @ref ecode.h and @ref ustimer.h for other error codes.
    409          
    410            Your application code must include one header file: @em ustimer.h.
    411          
    412            @ref USTIMER_Init(), @ref USTIMER_DeInit() @n
    413              These functions initialize and deinitialize the USTIMER driver. Typically
    414              @htmlonly USTIMER_Init() @endhtmlonly is called once in your startup code.
    415          
    416            @ref USTIMER_Delay()
    417              Delay a given number of microseconds. The MCU enters EM1 during the delay.
    418          
    419            @ref USTIMER_DelayIntSafe()
    420              Delay a given number of microseconds. The MCU stays in EM0 during the delay.
    421              This function can be called in any context and is also thread safe.
    422          
    423          @n @section ustimer_example Example
    424            @verbatim
    425          #include "ustimer.h"
    426          
    427          int main( void )
    428          {
    429            // Initialization of USTIMER driver
    430            USTIMER_Init();
    431          
    432            // Wait for 250 microseconds
    433            USTIMER_Delay(250);
    434          }
    435            @endverbatim
    436          
    437           * @} end group USTIMER *******************************************************
    438           * @} end group emdrv ****************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DelayTicksEM1
        16   -> CORE_EnterAtomic
        16   -> CORE_ExitAtomic
       4   DelayTicksPolled
       8   TIMER0_IRQHandler
         8   -> halToggleLed
       8   USTIMER_DeInit
         8   -> __NVIC_ClearPendingIRQ
      16   USTIMER_Delay
        16   -> DelayTicksEM1
        16 __aeabi_uldivmod
      16   USTIMER_DelayIntSafe
        16   -> DelayTicksPolled
        16 __aeabi_uldivmod
      48   USTIMER_Init
        48   -> CMU_ClockFreqGet
        48   -> TIMER_Init
        48   -> TIMER_InitCC
        48   -> __NVIC_ClearPendingIRQ
        48   -> __aeabi_memclr4
        48   -> __aeabi_memcpy4
        48 __aeabi_uldivmod
       0   __NVIC_ClearPendingIRQ


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_10
       4  ??DataTable7_11
       4  ??DataTable7_12
       4  ??DataTable7_13
       4  ??DataTable7_14
       4  ??DataTable7_15
       4  ??DataTable7_16
       4  ??DataTable7_17
       4  ??DataTable7_18
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable7_8
       4  ??DataTable7_9
      22  ?Subroutine0
      12  ?Subroutine1
      16  ?_0
      16  ?_1
      86  DelayTicksEM1
      34  DelayTicksPolled
      30  TIMER0_IRQHandler
      46  USTIMER_DeInit
      48  USTIMER_Delay
      48  USTIMER_DelayIntSafe
     168  USTIMER_Init
      22  __NVIC_ClearPendingIRQ
       4  freq
       4  minTicks
       1  timeElapsed

 
   9 bytes in section .bss
  32 bytes in section .rodata
 592 bytes in section .text
 
 592 bytes of CODE  memory
  32 bytes of CONST memory
   9 bytes of DATA  memory

Errors: none
Warnings: 1
