###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:56
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\stack\config\ember-configuration.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW641E.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\stack\config\ember-configuration.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"ember-configuration.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\stack\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\ember-configuration.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\ember-configuration.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\stack\config\ember-configuration.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief User-configurable stack memory allocation and convenience stubs
      4           * for little-used callbacks.
      5           *
      6           *
      7           * \b Note: Application developers should \b not modify any portion
      8           * of this file. Doing so may lead to mysterious bugs. Allocations should be
      9           * adjusted only with macros in a custom CONFIGURATION_HEADER.
     10           *******************************************************************************
     11           * # License
     12           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
     13           *******************************************************************************
     14           *
     15           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     16           * software is governed by the terms of Silicon Labs Master Software License
     17           * Agreement (MSLA) available at
     18           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     19           * software is distributed to you in Source Code format and is governed by the
     20           * sections of the MSLA applicable to Source Code.
     21           *
     22           ******************************************************************************/
     23          
     24          #include PLATFORM_HEADER
     25          #include "stack/include/ember.h"
     26          #include "stack/include/error.h"
     27          #include "stack/include/ember-static-struct.h" // Required typedefs
     28          #include "hal/micro/micro.h"
     29          #include "stack/include/message.h" // Required for packetHandlers
     30          
     31          // *****************************************
     32          // Memory Allocations & declarations
     33          // *****************************************
     34          
     35          extern uint8_t emAvailableMemory[];
     36          #if defined(CORTEXM3)
     37            #define align(value) (((value) + 3) & ~0x03)
     38          #else
     39            #define align(value) (value)
     40          #endif
     41          
     42          //------------------------------------------------------------------------------
     43          // API Version
     44          

   \                                 In section .rodata, align 1
     45          const uint8_t emApiVersion
   \                     emApiVersion:
   \        0x0   0x20               DC8 32
     46            = (EMBER_API_MAJOR_VERSION << 4) + EMBER_API_MINOR_VERSION;
     47          
     48          //------------------------------------------------------------------------------
     49          // Packet Buffers
     50          

   \                                 In section .data, align 1
     51          uint8_t emPacketBufferCount = EMBER_PACKET_BUFFER_COUNT;
   \                     emPacketBufferCount:
   \        0x0   0x4B               DC8 75

   \                                 In section .data, align 1
     52          uint8_t emPacketBufferFreeCount = EMBER_PACKET_BUFFER_COUNT;
   \                     emPacketBufferFreeCount:
   \        0x0   0x4B               DC8 75
     53          
     54          // The actual memory for buffers.

   \                                 In section .data, align 4
     55          uint8_t *emPacketBufferData = &emAvailableMemory[0];
   \                     emPacketBufferData:
   \        0x0   0x....'....        DC32 emAvailableMemory
     56          #define END_emPacketBufferData \
     57            (align(EMBER_PACKET_BUFFER_COUNT * 32))
     58          

   \                                 In section .data, align 4
     59          uint8_t *emMessageBufferLengths = &emAvailableMemory[END_emPacketBufferData];
   \                     emMessageBufferLengths:
   \        0x0   0x....'....        DC32 emAvailableMemory + 960H
     60          #define END_emMessageBufferLengths \
     61            (END_emPacketBufferData + align(EMBER_PACKET_BUFFER_COUNT))
     62          

   \                                 In section .data, align 4
     63          uint8_t *emMessageBufferReferenceCounts = &emAvailableMemory[END_emMessageBufferLengths];
   \                     emMessageBufferReferenceCounts:
   \        0x0   0x....'....        DC32 emAvailableMemory + 9ACH
     64          #define END_emMessageBufferReferenceCounts \
     65            (END_emMessageBufferLengths + align(EMBER_PACKET_BUFFER_COUNT))
     66          

   \                                 In section .data, align 4
     67          uint8_t *emPacketBufferLinks = &emAvailableMemory[END_emMessageBufferReferenceCounts];
   \                     emPacketBufferLinks:
   \        0x0   0x....'....        DC32 emAvailableMemory + 9F8H
     68          #define END_emPacketBufferLinks \
     69            (END_emMessageBufferReferenceCounts + align(EMBER_PACKET_BUFFER_COUNT))
     70          

   \                                 In section .data, align 4
     71          uint8_t *emPacketBufferQueueLinks = &emAvailableMemory[END_emPacketBufferLinks];
   \                     emPacketBufferQueueLinks:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0A44H
     72          #define END_emPacketBufferQueueLinks \
     73            (END_emPacketBufferLinks + align(EMBER_PACKET_BUFFER_COUNT))
     74          
     75          //------------------------------------------------------------------------------
     76          // NWK Layer
     77          
     78          #ifdef EMBER_DISABLE_RELAY
     79          uint8_t emAllowRelay = false;
     80          #else

   \                                 In section .data, align 1
     81          uint8_t emAllowRelay = true;
   \                     emAllowRelay:
   \        0x0   0x01               DC8 1
     82          #endif
     83          
     84          // emChildIdTable must be sized one element larger than EMBER_CHILD_TABLE_SIZE
     85          // to allow emberChildIndex() to perform an optimized search when setting the
     86          // frame pending bit.  emberChildTableSize and EMBER_CHILD_TABLE_SIZE still
     87          // correspond to the number of children, not the number of child table elements.

   \                                 In section .data, align 4
     88          EmberNodeId *emChildIdTable = (EmberNodeId *) &emAvailableMemory[END_emPacketBufferQueueLinks];
   \                     emChildIdTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0A90H

   \                                 In section .data, align 1
     89          uint8_t emberChildTableSize = EMBER_CHILD_TABLE_SIZE;
   \                     emberChildTableSize:
   \        0x0   0x06               DC8 6
     90          #define END_emChildIdTable \
     91            (END_emPacketBufferQueueLinks + align((EMBER_CHILD_TABLE_SIZE + 1) * sizeof(EmberNodeId)))
     92          

   \                                 In section .data, align 4
     93          uint16_t *emChildStatus = (uint16_t *) &emAvailableMemory[END_emChildIdTable];
   \                     emChildStatus:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0AA0H
     94          #define END_emChildStatus \
     95            (END_emChildIdTable + align(EMBER_CHILD_TABLE_SIZE * sizeof(uint16_t)))
     96          

   \                                 In section .data, align 4
     97          uint32_t *emChildTimers = (uint32_t *) &emAvailableMemory[END_emChildStatus];
   \                     emChildTimers:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0AACH
     98          #define END_emChildTimers \
     99            (END_emChildStatus + align(EMBER_CHILD_TABLE_SIZE * sizeof(uint32_t)))
    100          

   \                                 In section .data, align 4
    101          int8_t *emChildPower = (int8_t *) &emAvailableMemory[END_emChildTimers];
   \                     emChildPower:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0AC4H
    102          #define END_emChildPower \
    103            (END_emChildTimers + align(EMBER_CHILD_TABLE_SIZE * sizeof(int8_t)))
    104          
    105          // emChildLqi >> 8 keeps the average Lqi values mapped from 0-255 to 1-255 after initialization

   \                                 In section .data, align 4
    106          uint16_t *emChildLqi = (uint16_t *) &emAvailableMemory[END_emChildPower];
   \                     emChildLqi:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0ACCH
    107          #define END_emChildLqi \
    108            (END_emChildPower + align(EMBER_CHILD_TABLE_SIZE * sizeof(uint16_t)))
    109          

   \                                 In section .data, align 4
    110          EmRouteTableEntry *emRouteData = (EmRouteTableEntry *) &emAvailableMemory[END_emChildLqi];
   \                     emRouteData:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0AD8H

   \                                 In section .data, align 1
    111          uint8_t emRouteTableSize = EMBER_ROUTE_TABLE_SIZE;
   \                     emRouteTableSize:
   \        0x0   0x0A               DC8 10
    112          #define END_emRouteData \
    113            (END_emChildLqi + align(EMBER_ROUTE_TABLE_SIZE * sizeof(EmRouteTableEntry)))
    114          

   \                                 In section .data, align 4
    115          uint8_t *emRouteRecordTable = (uint8_t *) &emAvailableMemory[END_emRouteData];
   \                     emRouteRecordTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0B14H
    116          #define END_emRouteRecordTable \
    117            (END_emRouteData + align(((EMBER_CHILD_TABLE_SIZE + 7) >> 3)) * EMBER_ROUTE_TABLE_SIZE)
    118          

   \                                 In section .data, align 4
    119          EmDiscoveryTableEntry *emDiscoveryTable = (EmDiscoveryTableEntry *) &emAvailableMemory[END_emRouteRecordTable];
   \                     emDiscoveryTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0B3CH

   \                                 In section .data, align 1
    120          uint8_t emDiscoveryTableSize = EMBER_DISCOVERY_TABLE_SIZE;
   \                     emDiscoveryTableSize:
   \        0x0   0x04               DC8 4
    121          #define END_emDiscoveryTable \
    122            (END_emRouteRecordTable + align(EMBER_DISCOVERY_TABLE_SIZE * sizeof(EmDiscoveryTableEntry)))
    123          

   \                                 In section .data, align 4
    124          EmberMulticastTableEntry *emberMulticastTable = (EmberMulticastTableEntry *) &emAvailableMemory[END_emDiscoveryTable];
   \                     emberMulticastTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0B5CH

   \                                 In section .data, align 1
    125          uint8_t emberMulticastTableSize = EMBER_MULTICAST_TABLE_SIZE;
   \                     emberMulticastTableSize:
   \        0x0   0x08               DC8 8
    126          #define END_emberMulticastTable \
    127            (END_emDiscoveryTable + align(EMBER_MULTICAST_TABLE_SIZE * sizeof(EmberMulticastTableEntry)))
    128          

   \                                 In section .data, align 4
    129          EmBroadcastTableEntry *emBroadcastTable = (EmBroadcastTableEntry *) &emAvailableMemory[END_emberMulticastTable];
   \                     emBroadcastTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0B7CH
    130          #define END_emberBroadcastTable \
    131            (END_emberMulticastTable + align(EMBER_BROADCAST_TABLE_SIZE * sizeof(EmBroadcastTableEntry)))

   \                                 In section .data, align 1
    132          uint8_t emBroadcastTableSize = EMBER_BROADCAST_TABLE_SIZE;
   \                     emBroadcastTableSize:
   \        0x0   0x0F               DC8 15
    133          
    134          //------------------------------------------------------------------------------
    135          // Network descriptor (multi-network support)
    136          
    137          #if !defined(EMBER_MULTI_NETWORK_STRIPPED)

   \                                 In section .data, align 4
    138          EmberNetworkInfo* emNetworkDescriptor = (EmberNetworkInfo *) &emAvailableMemory[END_emberBroadcastTable];
   \                     emNetworkDescriptor:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0C30H

   \                                 In section .data, align 1
    139          uint8_t emSupportedNetworks = EMBER_SUPPORTED_NETWORKS;
   \                     emSupportedNetworks:
   \        0x0   0x01               DC8 1
    140          #define END_emNetworkDescriptor \
    141            (END_emberBroadcastTable + align((EMBER_SUPPORTED_NETWORKS) *sizeof(EmberNetworkInfo)))
    142          #else
    143          uint8_t emSupportedNetworks = 1;
    144          #define END_emNetworkDescriptor END_emberBroadcastTable
    145          #endif // !defined(EMBER_MULTI_NETWORK_STRIPPED)
    146          
    147          //------------------------------------------------------------------------------
    148          // Neighbor Table
    149          

   \                                 In section .data, align 4
    150          EmNeighborTableEntry *emNeighborData = (EmNeighborTableEntry *) &emAvailableMemory[END_emNetworkDescriptor];
   \                     emNeighborData:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0C78H

   \                                 In section .data, align 1
    151          uint8_t emRouterNeighborTableSize = EMBER_NEIGHBOR_TABLE_SIZE;
   \                     emRouterNeighborTableSize:
   \        0x0   0x10               DC8 16
    152          #define END_emNeighborData \
    153            (END_emNetworkDescriptor + align((EMBER_NEIGHBOR_TABLE_SIZE + EMBER_SUPPORTED_NETWORKS) * sizeof(EmNeighborTableEntry)))
    154          

   \                                 In section .data, align 4
    155          uint32_t *emFrameCountersTable = (uint32_t *) &emAvailableMemory[END_emNeighborData];
   \                     emFrameCountersTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0D68H
    156          #define END_emFrameCountersTable \
    157            (END_emNeighborData + align((EMBER_NEIGHBOR_TABLE_SIZE + EMBER_CHILD_TABLE_SIZE + EMBER_SUPPORTED_NETWORKS) * sizeof(uint32_t)))
    158          
    159          //------------------------------------------------------------------------------
    160          // NWK Retry Queue
    161          

   \                                 In section .data, align 4
    162          EmRetryQueueEntry *emRetryQueue = (EmRetryQueueEntry *) &emAvailableMemory[END_emFrameCountersTable];
   \                     emRetryQueue:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0DC4H

   \                                 In section .data, align 1
    163          uint8_t emRetryQueueSize = EMBER_RETRY_QUEUE_SIZE;
   \                     emRetryQueueSize:
   \        0x0   0x10               DC8 16
    164          #define END_emRetryQueue \
    165            (END_emFrameCountersTable + align(EMBER_RETRY_QUEUE_SIZE * sizeof(EmRetryQueueEntry)))
    166          
    167          // NWK Store And Forward Queue
    168          

   \                                 In section .data, align 4
    169          EmStoreAndForwardQueueEntry *emStoreAndForwardQueue = (EmStoreAndForwardQueueEntry *) &emAvailableMemory[END_emRetryQueue];
   \                     emStoreAndForwardQueue:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0E24H

   \                                 In section .data, align 1
    170          uint8_t emStoreAndForwardQueueSize = EMBER_STORE_AND_FORWARD_QUEUE_SIZE;
   \                     emStoreAndForwardQueueSize:
   \        0x0   0x05               DC8 5
    171          #define END_emStoreAndForwardQueue \
    172            (END_emRetryQueue + align(EMBER_STORE_AND_FORWARD_QUEUE_SIZE * sizeof(EmStoreAndForwardQueueEntry)))
    173          
    174          //------------------------------------------------------------------------------
    175          // Green Power stack tables

   \                                 In section .bss, align 1
    176          uint8_t emGpIncomingFCTokenTableSize = EMBER_GP_INCOMING_FC_TOKEN_TABLE_SIZE;
   \                     emGpIncomingFCTokenTableSize:
   \        0x0                      DS8 1

   \                                 In section .data, align 1
    177          uint8_t emGpIncomingFCTokenTimeout = EMBER_GP_INCOMING_FC_TOKEN_TIMEOUT;
   \                     emGpIncomingFCTokenTimeout:
   \        0x0   0x07               DC8 7

   \                                 In section .data, align 4
    178          EmberGpProxyTableEntry *emGpProxyTable = (EmberGpProxyTableEntry *) &emAvailableMemory[END_emStoreAndForwardQueue];
   \                     emGpProxyTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0E44H

   \                                 In section .data, align 1
    179          uint8_t emGpProxyTableSize = EMBER_GP_PROXY_TABLE_SIZE;
   \                     emGpProxyTableSize:
   \        0x0   0x05               DC8 5
    180          #define END_emGpProxyTable \
    181            (END_emStoreAndForwardQueue + align(EMBER_GP_PROXY_TABLE_SIZE * sizeof(EmberGpProxyTableEntry)))
    182          

   \                                 In section .data, align 4
    183          EmberGpSinkTableEntry *emGpSinkTable = (EmberGpSinkTableEntry *) &emAvailableMemory[END_emGpProxyTable];
   \                     emGpSinkTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0FACH

   \                                 In section .bss, align 1
    184          uint8_t emGpSinkTableSize = EMBER_GP_SINK_TABLE_SIZE;
   \                     emGpSinkTableSize:
   \        0x0                      DS8 1
    185          #define END_emGpSinkTable \
    186            (END_emGpProxyTable + align(EMBER_GP_SINK_TABLE_SIZE * sizeof(EmberGpSinkTableEntry)))
    187          
    188          //------------------------------------------------------------------------------
    189          // Source routing

   \                                 In section .data, align 4
    190          SourceRouteTableEntry *sourceRouteTable = (SourceRouteTableEntry *) &emAvailableMemory[END_emGpSinkTable];
   \                     sourceRouteTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 0FACH

   \                                 In section .data, align 1
    191          uint8_t sourceRouteTableSize = EMBER_SOURCE_ROUTE_TABLE_SIZE;
   \                     sourceRouteTableSize:
   \        0x0   0x20               DC8 32
    192          #define END_emSourceRouteTable \
    193            (END_emGpSinkTable + align(EMBER_SOURCE_ROUTE_TABLE_SIZE * sizeof(SourceRouteTableEntry)))
    194          
    195          //------------------------------------------------------------------------------
    196          // Binding Table
    197          

   \                                 In section .data, align 4
    198          uint16_t *emBindingRemoteNode = (uint16_t *) &emAvailableMemory[END_emSourceRouteTable];
   \                     emBindingRemoteNode:
   \        0x0   0x....'....        DC32 emAvailableMemory + 102CH

   \                                 In section .data, align 1
    199          uint8_t emberBindingTableSize = EMBER_BINDING_TABLE_SIZE;
   \                     emberBindingTableSize:
   \        0x0   0x03               DC8 3
    200          #define END_emBindingRemoteNode \
    201            (END_emSourceRouteTable + align(EMBER_BINDING_TABLE_SIZE * sizeof(uint16_t)))
    202          

   \                                 In section .data, align 4
    203          uint8_t *emBindingFlags = &emAvailableMemory[END_emBindingRemoteNode];
   \                     emBindingFlags:
   \        0x0   0x....'....        DC32 emAvailableMemory + 1034H
    204          #define END_emBindingFlags \
    205            (END_emBindingRemoteNode + align(EMBER_BINDING_TABLE_SIZE))
    206          
    207          //------------------------------------------------------------------------------
    208          //End Device Timeouts
    209          

   \                                 In section .data, align 4
    210          uint8_t *emEndDeviceTimeout = &emAvailableMemory[END_emBindingFlags];
   \                     emEndDeviceTimeout:
   \        0x0   0x....'....        DC32 emAvailableMemory + 1038H
    211          #define END_emEndDeviceTimeout \
    212            (END_emBindingFlags + align(EMBER_CHILD_TABLE_SIZE * sizeof(uint8_t)))
    213          
    214          //------------------------------------------------------------------------------
    215          
    216          // APS Layer
    217          

   \                                 In section .data, align 1
    218          uint8_t emAddressTableSize = EMBER_ADDRESS_TABLE_SIZE;
   \                     emAddressTableSize:
   \        0x0   0x04               DC8 4

   \                                 In section .data, align 4
    219          EmAddressTableEntry *emAddressTable = (EmAddressTableEntry *) &emAvailableMemory[END_emEndDeviceTimeout];
   \                     emAddressTable:
   \        0x0   0x....'....        DC32 emAvailableMemory + 1040H
    220          #define END_emAddressTable \
    221            (END_emEndDeviceTimeout + align(EMBER_ADDRESS_TABLE_SIZE * sizeof(EmAddressTableEntry)))
    222          

   \                                 In section .data, align 1
    223          uint8_t emMaxApsUnicastMessages = EMBER_APS_UNICAST_MESSAGE_COUNT;
   \                     emMaxApsUnicastMessages:
   \        0x0   0x0A               DC8 10

   \                                 In section .data, align 4
    224          EmApsUnicastMessageData *emApsUnicastMessageData = (EmApsUnicastMessageData *) &emAvailableMemory[END_emAddressTable];
   \                     emApsUnicastMessageData:
   \        0x0   0x....'....        DC32 emAvailableMemory + 1070H
    225          #define END_emApsUnicastMessageData \
    226            (END_emAddressTable + align(EMBER_APS_UNICAST_MESSAGE_COUNT * sizeof(EmApsUnicastMessageData)))
    227          

   \                                 In section .data, align 2
    228          uint16_t emberApsAckTimeoutMs =
   \                     emberApsAckTimeoutMs:
   \        0x0   0x0640             DC16 1600
    229            ((EMBER_APSC_MAX_ACK_WAIT_HOPS_MULTIPLIER_MS
    230              * EMBER_MAX_HOPS)
    231             + EMBER_APSC_MAX_ACK_WAIT_TERMINAL_SECURITY_MS);
    232          

   \                                 In section .bss, align 1
    233          uint8_t emFragmentDelayMs = EMBER_FRAGMENT_DELAY_MS;
   \                     emFragmentDelayMs:
   \        0x0                      DS8 1

   \                                 In section .data, align 1
    234          uint8_t emberFragmentWindowSize = EMBER_FRAGMENT_WINDOW_SIZE;
   \                     emberFragmentWindowSize:
   \        0x0   0x01               DC8 1
    235          

   \                                 In section .bss, align 1
    236          uint8_t emberKeyTableSize = EMBER_KEY_TABLE_SIZE;
   \                     emberKeyTableSize:
   \        0x0                      DS8 1

   \                                 In section .data, align 4
    237          uint32_t* emIncomingApsFrameCounters = (uint32_t*)&emAvailableMemory[END_emApsUnicastMessageData];
   \                     emIncomingApsFrameCounters:
   \        0x0   0x....'....        DC32 emAvailableMemory + 10ACH
    238          #define END_emIncomingApsFrameCounters \
    239            (END_emApsUnicastMessageData + align(EMBER_KEY_TABLE_SIZE * sizeof(uint32_t)))
    240          

   \                                 In section .bss, align 1
    241          EmberTcLinkKeyRequestPolicy emberTrustCenterLinkKeyRequestPolicy =
   \                     emberTrustCenterLinkKeyRequestPolicy:
   \        0x0                      DS8 1
    242            EMBER_DENY_TC_LINK_KEY_REQUESTS;

   \                                 In section .data, align 1
    243          EmberAppLinkKeyRequestPolicy emberAppLinkKeyRequestPolicy =
   \                     emberAppLinkKeyRequestPolicy:
   \        0x0   0x01               DC8 1
    244            EMBER_ALLOW_APP_LINK_KEY_REQUEST;
    245          

   \                                 In section .bss, align 1
    246          uint8_t emCertificateTableSize = EMBER_CERTIFICATE_TABLE_SIZE;
   \                     emCertificateTableSize:
   \        0x0                      DS8 1
    247          

   \                                 In section .bss, align 1
    248          uint8_t emAppZdoConfigurationFlags =
   \                     emAppZdoConfigurationFlags:
   \        0x0                      DS8 1
    249            0
    250          
    251          // Define this in order to receive supported ZDO request messages via
    252          // the incomingMessageHandler callback.  A supported ZDO request is one that
    253          // is handled by the EmberZNet stack.  The stack will continue to handle the
    254          // request and send the appropriate ZDO response even if this configuration
    255          // option is enabled.
    256          #ifdef EMBER_APPLICATION_RECEIVES_SUPPORTED_ZDO_REQUESTS
    257            | EMBER_APP_RECEIVES_SUPPORTED_ZDO_REQUESTS
    258          #endif
    259          
    260          // Define this in order to receive unsupported ZDO request messages via
    261          // the incomingMessageHandler callback.  An unsupported ZDO request is one that
    262          // is not handled by the EmberZNet stack, other than to send a 'not supported'
    263          // ZDO response.  If this configuration option is enabled, the stack will no
    264          // longer send any ZDO response, and it is the application's responsibility
    265          // to do so.  To see if a response is required, the application must check
    266          // the APS options bitfield within the emberIncomingMessageHandler callback to see
    267          // if the EMBER_APS_OPTION_ZDO_RESPONSE_REQUIRED flag is set.
    268          #ifdef EMBER_APPLICATION_HANDLES_UNSUPPORTED_ZDO_REQUESTS
    269            | EMBER_APP_HANDLES_UNSUPPORTED_ZDO_REQUESTS
    270          #endif
    271          
    272          // Define this in order to receive the following ZDO request
    273          // messages via the emberIncomingMessageHandler callback: SIMPLE_DESCRIPTOR_REQUEST,
    274          // MATCH_DESCRIPTORS_REQUEST, and ACTIVE_ENDPOINTS_REQUEST.  If this
    275          // configuration option is enabled, the stack will no longer send any ZDO
    276          // response, and it is the application's responsibility to do so.
    277          // To see if a response is required, the application must check
    278          // the APS options bitfield within the emberIncomingMessageHandler callback to see
    279          // if the EMBER_APS_OPTION_ZDO_RESPONSE_REQUIRED flag is set.
    280          #ifdef EMBER_APPLICATION_HANDLES_ENDPOINT_ZDO_REQUESTS
    281            | EMBER_APP_HANDLES_ZDO_ENDPOINT_REQUESTS
    282          #endif
    283          
    284          // Define this in order to receive the following ZDO request
    285          // messages via the emberIncomingMessageHandler callback: BINDING_TABLE_REQUEST,
    286          // BIND_REQUEST, and UNBIND_REQUEST.  If this
    287          // configuration option is enabled, the stack will no longer send any ZDO
    288          // response, and it is the application's responsibility to do so.
    289          // To see if a response is required, the application must check
    290          // the APS options bitfield within the emberIncomingMessageHandler callback
    291          // to see if the EMBER_APS_OPTION_ZDO_RESPONSE_REQUIRED flag is set.
    292          #ifdef EMBER_APPLICATION_HANDLES_BINDING_ZDO_REQUESTS
    293            | EMBER_APP_HANDLES_ZDO_BINDING_REQUESTS
    294          #endif
    295          ;
    296          

   \                                 In section .data, align 2
    297          uint16_t emberTransientKeyTimeoutS = EMBER_TRANSIENT_KEY_TIMEOUT_S;
   \                     emberTransientKeyTimeoutS:
   \        0x0   0x012C             DC16 300
    298          
    299          //------------------------------------------------------------------------------
    300          // Memory Allocation
    301          #ifndef RESERVED_AVAILABLE_MEMORY
    302            #define RESERVED_AVAILABLE_MEMORY 0
    303          #endif
    304          #define END_stackMemory  END_emIncomingApsFrameCounters + RESERVED_AVAILABLE_MEMORY
    305          
    306          // On the XAP2B platform, emAvailableMemory is allocated automatically to fill
    307          // the available space. On other platforms, we must allocate it here.
    308          #if defined (CORTEXM3)

   \                                 In section EMHEAP, align 4
    309          VAR_AT_SEGMENT(uint8_t emAvailableMemory[END_stackMemory], __EMHEAP__);
   \                     emAvailableMemory:
   \        0x0                      DS8 4268
    310          #elif defined(EMBER_TEST)
    311          #ifndef SIMULATED_EXTRA_MEMORY
    312          #define SIMULATED_EXTRA_MEMORY 0
    313          #endif
    314          uint8_t emAvailableMemory[END_stackMemory + SIMULATED_EXTRA_MEMORY];
    315          const uint16_t emAvailableMemorySize = END_stackMemory + SIMULATED_EXTRA_MEMORY;
    316          #else
    317            #error "Unknown platform."
    318          #endif
    319          

   \                                 In section .text, align 2, keep-with-next
    320          void emCheckAvailableMemory(void)
    321          {
    322          }
   \                     emCheckAvailableMemory: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    323          
    324          // *****************************************
    325          // Non-dynamically configurable structures
    326          // *****************************************

   \                                 In section .rodata, align 1
    327          const uint8_t emTaskCount = EMBER_TASK_COUNT;
   \                     emTaskCount:
   \        0x0   0x04               DC8 4

   \                                 In section .bss, align 4
    328          EmberTaskControl emTasks[EMBER_TASK_COUNT];
   \                     emTasks:
   \        0x0                      DS8 48
    329          
    330          // *****************************************
    331          // Stack Profile Parameters
    332          // *****************************************
    333          

   \                                 In section .rodata, align 4
    334          const uint8_t emberStackProfileId[8] = { 0, };
   \                     emberStackProfileId:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    335          

   \                                 In section .data, align 1
    336          uint8_t emDefaultStackProfile = EMBER_STACK_PROFILE;
   \                     emDefaultStackProfile:
   \        0x0   0x02               DC8 2

   \                                 In section .data, align 1
    337          uint8_t emDefaultSecurityLevel = EMBER_SECURITY_LEVEL;
   \                     emDefaultSecurityLevel:
   \        0x0   0x05               DC8 5

   \                                 In section .data, align 1
    338          uint8_t emMaxEndDeviceChildren = EMBER_MAX_END_DEVICE_CHILDREN;
   \                     emMaxEndDeviceChildren:
   \        0x0   0x06               DC8 6

   \                                 In section .data, align 1
    339          uint8_t emMaxHops = EMBER_MAX_HOPS;
   \                     emMaxHops:
   \        0x0   0x1E               DC8 30

   \                                 In section .data, align 2
    340          uint16_t emberMacIndirectTimeout = EMBER_INDIRECT_TRANSMISSION_TIMEOUT;
   \                     emberMacIndirectTimeout:
   \        0x0   0x1E00             DC16 7680

   \                                 In section .data, align 1
    341          uint8_t emberEndDevicePollTimeout = EMBER_END_DEVICE_POLL_TIMEOUT;
   \                     emberEndDevicePollTimeout:
   \        0x0   0x08               DC8 8
    342          STATIC_ASSERT(EMBER_END_DEVICE_POLL_TIMEOUT <= MINUTES_16384, "End device timeout out of range");

   \                                 In section .data, align 2
    343          uint16_t emberLinkPowerDeltaInterval = EMBER_LINK_POWER_DELTA_INTERVAL;
   \                     emberLinkPowerDeltaInterval:
   \        0x0   0x012C             DC16 300

   \                                 In section .data, align 1
    344          uint8_t emEndDeviceBindTimeout = EMBER_END_DEVICE_BIND_TIMEOUT;
   \                     emEndDeviceBindTimeout:
   \        0x0   0x3C               DC8 60

   \                                 In section .bss, align 1
    345          uint8_t emRequestKeyTimeout = EMBER_REQUEST_KEY_TIMEOUT;
   \                     emRequestKeyTimeout:
   \        0x0                      DS8 1

   \                                 In section .data, align 1
    346          uint8_t emPanIdConflictReportThreshold = EMBER_PAN_ID_CONFLICT_REPORT_THRESHOLD;
   \                     emPanIdConflictReportThreshold:
   \        0x0   0x02               DC8 2
    347          
    348          #ifndef EMBER_NO_STACK

   \                                 In section .data, align 1
    349          uint8_t emEndDeviceConfiguration = EMBER_END_DEVICE_CONFIG_PERSIST_DATA_ON_PARENT;
   \                     emEndDeviceConfiguration:
   \        0x0   0x01               DC8 1
    350          #endif
    351          
    352          // Normally multicasts do NOT go to the sleepy address (0xFFFF), they go to
    353          // RxOnWhenIdle=true (0xFFFD).  This can be changed, but doing so is not
    354          // ZigBee Pro Compliant and is possibly NOT interoperable.

   \                                 In section .bss, align 1
    355          bool emSendMulticastsToSleepyAddress = EMBER_SEND_MULTICASTS_TO_SLEEPY_ADDRESS;
   \                     emSendMulticastsToSleepyAddress:
   \        0x0                      DS8 1
    356          
    357          // *****************************************
    358          // ZigBee Light Link
    359          // *****************************************
    360          

   \                                 In section .data, align 1
    361          EmberZllPolicy emZllPolicy = EMBER_ZLL_POLICY_DISABLED;
   \                     emZllPolicy:
   \        0x0   0x01               DC8 1
    362          
    363          // The number of groups required by the ZLL application.

   \                                 In section .bss, align 1
    364          uint8_t emZllGroupAddressesNeeded = EMBER_ZLL_GROUP_ADDRESSES;
   \                     emZllGroupAddressesNeeded:
   \        0x0                      DS8 1

   \                                 In section .data, align 1
    365          int8_t emZllRssiThreshold = EMBER_ZLL_RSSI_THRESHOLD;
   \                     emZllRssiThreshold:
   \        0x0   0xD8               DC8 -40
    366          #ifdef EMBER_ZLL_APPLY_THRESHOLD_TO_ALL_INTERPANS
    367          bool emZllApplyThresholdToAllInterpans = true;
    368          #else

   \                                 In section .bss, align 1
    369          bool emZllApplyThresholdToAllInterpans = false;
   \                     emZllApplyThresholdToAllInterpans:
   \        0x0                      DS8 1
    370          #endif
    371          
    372          // *****************************************
    373          // Convenience Stubs
    374          // *****************************************
    375          
    376          // This macro is #define'd at the top of NCP framework applications.
    377          // Since appbuilder generates stubs to callbacks, these convinience stubs
    378          // are not needed for framework apps.
    379          #ifndef __NCP_CONFIG__
    380          
    381          #ifndef EMBER_APPLICATION_HAS_TRUST_CENTER_JOIN_HANDLER
    382          EmberJoinDecision emberDefaultTrustCenterDecision = EMBER_USE_PRECONFIGURED_KEY;
    383          
    384          EmberJoinDecision emberTrustCenterJoinHandler(EmberNodeId newNodeId,
    385                                                        EmberEUI64 newNodeEui64,
    386                                                        EmberDeviceUpdate status,
    387                                                        EmberNodeId parentOfNewNode)
    388          {
    389            //emzigbee-241-4
    390          #if defined(EMBER_AF_PLUGIN_CONCENTRATOR)
    391            if (emberDefaultTrustCenterDecision != EMBER_DENY_JOIN
    392                && parentOfNewNode != emberGetNodeId()) {
    393              // stodo: not sure about the condition above,
    394              // because we should get here only if the new child is not our
    395              // direct child and it is multiple hops away?
    396              bool deviceLeft = (status == EMBER_DEVICE_LEFT);
    397              emberChangeSourceRouteHandler(newNodeId, parentOfNewNode, false, deviceLeft);
    398            }
    399          #endif
    400          
    401            if (status == EMBER_STANDARD_SECURITY_SECURED_REJOIN
    402                || status == EMBER_DEVICE_LEFT) {
    403              return EMBER_NO_ACTION;
    404            }
    405          
    406            return emberDefaultTrustCenterDecision;
    407          }
    408          #endif
    409          
    410          #ifndef EMBER_APPLICATION_HAS_SWITCH_KEY_HANDLER

   \                                 In section .text, align 2, keep-with-next
    411          void emberSwitchNetworkKeyHandler(uint8_t sequenceNumber)
    412          {
    413          }
   \                     emberSwitchNetworkKeyHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    414          #endif
    415          
    416          #ifndef EMBER_APPLICATION_HAS_ZIGBEE_KEY_ESTABLISHMENT_HANDLER
    417          void emberZigbeeKeyEstablishmentHandler(EmberEUI64 partner, EmberKeyStatus status)
    418          {
    419          }
    420          #endif
    421          
    422          #ifndef EMBER_APPLICATION_HAS_CHILD_JOIN_HANDLER

   \                                 In section .text, align 2, keep-with-next
    423          void emberChildJoinHandler(uint8_t index, bool joining)
    424          {
    425          }
   \                     emberChildJoinHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    426          #endif
    427          
    428          #ifndef EMBER_APPLICATION_HAS_POLL_COMPLETE_HANDLER

   \                                 In section .text, align 2, keep-with-next
    429          void emberPollCompleteHandler(EmberStatus status)
    430          {
    431          }
   \                     emberPollCompleteHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    432          #endif
    433          
    434          #ifndef EMBER_APPLICATION_HAS_BOOTLOAD_HANDLERS

   \                                 In section .text, align 2, keep-with-next
    435          void emberIncomingBootloadMessageHandler(EmberEUI64 longId,
    436                                                   EmberMessageBuffer message)
    437          {
    438          }
   \                     emberIncomingBootloadMessageHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    439          void emberBootloadTransmitCompleteHandler(EmberMessageBuffer message,
    440                                                    EmberStatus status)
    441          {
    442          }
   \                     emberBootloadTransmitCompleteHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    443          #endif
    444          
    445          #ifndef EMBER_APPLICATION_HAS_MAC_FILTER_MATCH_MESSAGE_HANDLER
    446          void emberMacFilterMatchMessageHandler(const EmberMacFilterMatchStruct* macFilterMatchStruct)
    447          {
    448            emberMacPassthroughMessageHandler(macFilterMatchStruct->legacyPassthroughType,
    449                                              macFilterMatchStruct->message);
    450          }
    451          #endif
    452          
    453          #ifndef EMBER_APPLICATION_HAS_MAC_PASSTHROUGH_HANDLER

   \                                 In section .text, align 2, keep-with-next
    454          void emberMacPassthroughMessageHandler(EmberMacPassthroughType messageType,
    455                                                 EmberMessageBuffer message)
    456          {
    457          }
   \                     emberMacPassthroughMessageHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    458          #endif
    459          #ifndef EMBER_APPLICATION_HAS_RAW_HANDLER

   \                                 In section .text, align 2, keep-with-next
    460          void emberRawTransmitCompleteHandler(EmberMessageBuffer message,
    461                                               EmberStatus status)
    462          {
    463          }
   \                     emberRawTransmitCompleteHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    464          #endif
    465          
    466          #ifndef EMBER_APPLICATION_HAS_INCOMING_MFG_TEST_MESSAGE_HANDLER

   \                                 In section .text, align 2, keep-with-next
    467          void emberIncomingMfgTestMessageHandler(uint8_t messageType,
    468                                                  uint8_t dataLength,
    469                                                  uint8_t *data)
    470          {
    471          }
   \                     emberIncomingMfgTestMessageHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    472          #endif
    473          
    474          #ifndef EMBER_APPLICATION_HAS_ENERGY_SCAN_RESULT_HANDLER
    475          void emberEnergyScanResultHandler(uint8_t channel, int8_t maxRssiValue)
    476          {
    477          }
    478          #endif
    479          
    480          #ifndef EMBER_APPLICATION_HAS_DEBUG_HANDLER

   \                                 In section .text, align 2, keep-with-next
    481          void emberDebugHandler(EmberMessageBuffer message)
    482          {
    483          }
   \                     emberDebugHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    484          #endif
    485          
    486          #ifndef EMBER_APPLICATION_HAS_POLL_HANDLER

   \                                 In section .text, align 2, keep-with-next
    487          void emberPollHandler(EmberNodeId childId, bool transmitExpected)
    488          {
    489          }
   \                     emberPollHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    490          #endif
    491          
    492          #ifndef EMBER_APPLICATION_HAS_REMOTE_BINDING_HANDLER
    493          EmberStatus emberRemoteSetBindingHandler(EmberBindingTableEntry *entry)
    494          {
    495            // Don't let anyone mess with our bindings.
    496            return EMBER_INVALID_BINDING_INDEX;
    497          }
    498          EmberStatus emberRemoteDeleteBindingHandler(uint8_t index)
    499          {
    500            // Don't let anyone mess with our bindings.
    501            return EMBER_INVALID_BINDING_INDEX;
    502          }
    503          #endif
    504          
    505          #ifndef EMBER_APPLICATION_HAS_SOURCE_ROUTING

   \                                 In section .text, align 2, keep-with-next
    506          void emberChangeSourceRouteHandler(EmberNodeId newChildId,
    507                                             EmberNodeId newParentId,
    508                                             bool ourChild,
    509                                             bool deviceLeft)
    510          {
    511          }
   \                     emberChangeSourceRouteHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    512          void emberIncomingRouteRecordHandler(EmberNodeId source,
    513                                               EmberEUI64 sourceEui,
    514                                               uint8_t relayCount,
    515                                               EmberMessageBuffer header,
    516                                               uint8_t relayListIndex)
    517          {
    518          }
   \                     emberIncomingRouteRecordHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    519          uint8_t emberAppendSourceRouteHandler(EmberNodeId destination,
    520                                                EmberMessageBuffer header)
    521          {
    522            return 0;
   \                     emberAppendSourceRouteHandler: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    523          }

   \                                 In section .text, align 2, keep-with-next
    524          EmberStatus emberGetSourceRouteTableEntry(uint8_t index,
    525          
    526                                                    EmberNodeId *destination,
    527          
    528                                                    uint8_t *closerIndex)
    529          
    530          {
    531            return EMBER_NOT_FOUND;
   \                     emberGetSourceRouteTableEntry: (+1)
   \        0x0   0x2003             MOVS     R0,#+3
   \        0x2   0x4770             BX       LR               ;; return
    532          }
    533          

   \                                 In section .text, align 2, keep-with-next
    534          uint8_t emberGetSourceRouteTableFilledSize(void)
    535          
    536          {
    537            return 0;
   \                     emberGetSourceRouteTableFilledSize: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    538          }
    539          

   \                                 In section .text, align 2, keep-with-next
    540          uint8_t emberGetSourceRouteTableTotalSize(void)
    541          
    542          {
    543            return 0;
   \                     emberGetSourceRouteTableTotalSize: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    544          }
    545          #endif
    546          
    547          #ifndef EMBER_APPLICATION_HAS_INCOMING_MANY_TO_ONE_ROUTE_REQUEST_HANDLER

   \                                 In section .text, align 2, keep-with-next
    548          void emberIncomingManyToOneRouteRequestHandler(EmberNodeId source,
    549                                                         EmberEUI64 longId,
    550                                                         uint8_t cost)
    551          {
    552          }
   \                     emberIncomingManyToOneRouteRequestHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    553          #endif
    554          
    555          #ifndef EMBER_APPLICATION_HAS_INCOMING_ROUTE_ERROR_HANDLER

   \                                 In section .text, align 2, keep-with-next
    556          void emberIncomingRouteErrorHandler(EmberStatus status,
    557                                              EmberNodeId target)
    558          {
    559          }
   \                     emberIncomingRouteErrorHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    560          #endif
    561          
    562          #ifndef EMBER_APPLICATION_HAS_GET_ENDPOINT
    563          uint8_t emberGetEndpoint(uint8_t index)
    564          {
    565            return emberEndpoints[index].endpoint;
    566          }
    567          
    568          bool emberGetEndpointDescription(uint8_t endpoint,
    569                                           EmberEndpointDescription *result)
    570          {
    571            uint8_t i;
    572            EmberEndpoint *endpoints = emberEndpoints;
    573            for (i = 0; i < emberEndpointCount; i++, endpoints++) {
    574              if (endpoints->endpoint == endpoint) {
    575                EmberEndpointDescription const * d = endpoints->description;
    576                result->profileId                   = d->profileId;
    577                result->deviceId                    = d->deviceId;
    578                result->deviceVersion               = d->deviceVersion;
    579                result->inputClusterCount           = d->inputClusterCount;
    580                result->outputClusterCount          = d->outputClusterCount;
    581                return true;
    582              }
    583            }
    584            return false;
    585          }
    586          
    587          uint16_t emberGetEndpointCluster(uint8_t endpoint,
    588                                           EmberClusterListId listId,
    589                                           uint8_t listIndex)
    590          {
    591            uint8_t i;
    592            EmberEndpoint *endpoints = emberEndpoints;
    593            for (i = 0; i < emberEndpointCount; i++, endpoints++) {
    594              if (endpoints->endpoint == endpoint) {
    595                switch (listId) {
    596                  case EMBER_INPUT_CLUSTER_LIST:
    597                    return endpoints->inputClusterList[listIndex];
    598                  case EMBER_OUTPUT_CLUSTER_LIST:
    599                    return endpoints->outputClusterList[listIndex];
    600                  default: {
    601                  }
    602                }
    603              }
    604            }
    605            return 0;
    606          }
    607          
    608          #endif // defined EMBER_APPLICATION_HAS_GET_ENDPOINT
    609          
    610          // Inform the application that an orphan notification has been received.
    611          // This is generally not useful for applications. It could be useful in
    612          // testing and is included for this purpose.
    613          #ifndef EMBER_APPLICATION_HAS_ORPHAN_NOTIFICATION_HANDLER

   \                                 In section .text, align 2, keep-with-next
    614          void emberOrphanNotificationHandler(EmberEUI64 longId)
    615          {
    616            return;
   \                     emberOrphanNotificationHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    617          }
    618          #endif
    619          
    620          #ifndef EMBER_APPLICATION_HAS_PAN_ID_CONFLICT_HANDLER
    621          // This handler is called by the
    622          //  stack to report the number of conflict reports exceeds
    623          //  EMBER_PAN_ID_CONFLICT_REPORT_THRESHOLD within a period of 1 minute )

   \                                 In section .text, align 2, keep-with-next
    624          EmberStatus emberPanIdConflictHandler(int8_t conflictCount)
    625          {
    626            return EMBER_SUCCESS;
   \                     emberPanIdConflictHandler: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    627          }
    628          #endif
    629          
    630          #ifndef EMBER_APPLICATION_HAS_COUNTER_HANDLER
    631          
    632          void emberCounterHandler(EmberCounterType type, EmberCounterInfo info)
    633          {
    634          }
    635          #endif
    636          
    637          #ifndef EMBER_APPLICATION_HAS_COUNTER_ROLLOVER_HANDLER

   \                                 In section .text, align 2, keep-with-next
    638          void emberCounterRolloverHandler(EmberCounterType type)
    639          {
    640          }
   \                     emberCounterRolloverHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    641          #endif
    642          
    643          #ifndef EMBER_APPLICATION_HAS_STACK_TOKEN_CHANGED_HANDLER

   \                                 In section .text, align 2, keep-with-next
    644          void emberStackTokenChangedHandler(uint16_t tokenAddress)
    645          {
    646          }
   \                     emberStackTokenChangedHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    647          #endif
    648          
    649          #ifndef EMBER_APPLICATION_HAS_ID_CONFLICT_HANDLER

   \                                 In section .text, align 2, keep-with-next
    650          void emberIdConflictHandler(EmberNodeId conflictingId)
    651          {
    652          }
   \                     emberIdConflictHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    653          #endif
    654          
    655          #ifndef EMBER_APPLICATION_HAS_MAC_PASSTHROUGH_FILTER_HANDLER

   \                                 In section .text, align 2, keep-with-next
    656          bool emberMacPassthroughFilterHandler(uint8_t *macHeader)
    657          {
    658            return false;
   \                     emberMacPassthroughFilterHandler: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    659          }
    660          #endif
    661          
    662          #ifndef EMBER_APPLICATION_HAS_ZLL_ADDRESS_ASSIGNMENT_HANDLER

   \                                 In section .text, align 2, keep-with-next
    663          void emberZllAddressAssignmentHandler(const EmberZllAddressAssignment* addressInfo)
    664          {
    665          }
   \                     emberZllAddressAssignmentHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    666          #endif
    667          
    668          #ifndef EMBER_APPLICATION_HAS_ZLL_NETWORK_FOUND_HANDLER

   \                                 In section .text, align 2, keep-with-next
    669          void emberZllNetworkFoundHandler(const EmberZllNetwork* networkInfo,
    670                                           const EmberZllDeviceInfoRecord* deviceInfo)
    671          {
    672          }
   \                     emberZllNetworkFoundHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    673          #endif
    674          
    675          #ifndef EMBER_APPLICATION_HAS_ZLL_SCAN_COMPLETE_HANDLER

   \                                 In section .text, align 2, keep-with-next
    676          void emberZllScanCompleteHandler(EmberStatus status)
    677          {
    678          }
   \                     emberZllScanCompleteHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    679          #endif
    680          
    681          #ifndef EMBER_APPLICATION_HAS_ZLL_TOUCH_LINK_TARGET_HANDLER
    682          void emberZllTouchLinkTargetHandler(const EmberZllNetwork* networkInfo)
    683          {
    684          }
    685          #endif
    686          
    687          #ifndef EMBER_APPLICATION_HAS_CALCULATE_SMACS_HANDLER

   \                                 In section .text, align 2, keep-with-next
    688          void emberCalculateSmacsHandler(EmberStatus status,
    689                                          EmberSmacData* initiatorSmac,
    690                                          EmberSmacData* responderSmac)
    691          {
    692          }
   \                     emberCalculateSmacsHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    693          #endif
    694          
    695          #ifndef EMBER_APPLICATION_HAS_GENERATE_CBKE_KEYS_HANDLER

   \                                 In section .text, align 2, keep-with-next
    696          void emberGenerateCbkeKeysHandler(EmberStatus status,
    697                                            EmberPublicKeyData *ephemeralPublicKey)
    698          {
    699          }
   \                     emberGenerateCbkeKeysHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    700          #endif
    701          
    702          #ifndef EMBER_APPLICATION_HAS_CALCULATE_SMACS_HANDLER_283K1

   \                                 In section .text, align 2, keep-with-next
    703          void emberCalculateSmacsHandler283k1(EmberStatus status,
    704                                               EmberSmacData *initiatorSmac,
    705                                               EmberSmacData *responderSmac)
    706          {
    707          }
   \                     emberCalculateSmacsHandler283k1: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    708          #endif
    709          
    710          #ifndef EMBER_APPLICATION_HAS_GENERATE_CBKE_KEYS_HANDLER_283K1

   \                                 In section .text, align 2, keep-with-next
    711          void emberGenerateCbkeKeysHandler283k1(EmberStatus status,
    712                                                 EmberPublicKey283k1Data *ephemeralPublicKey)
    713          {
    714          }
   \                     emberGenerateCbkeKeysHandler283k1: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    715          #endif
    716          
    717          #ifndef EMBER_APPLICATION_HAS_DSA_SIGN_HANDLER

   \                                 In section .text, align 2, keep-with-next
    718          void emberDsaSignHandler(EmberStatus status,
    719                                   EmberMessageBuffer signedMessage)
    720          {
    721          }
   \                     emberDsaSignHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    722          #endif
    723          
    724          #ifndef EMBER_APPLICATION_HAS_DSA_VERIFY_HANDLER

   \                                 In section .text, align 2, keep-with-next
    725          void emberDsaVerifyHandler(EmberStatus status)
    726          {
    727          }
   \                     emberDsaVerifyHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    728          #endif
    729          
    730          #ifndef EMBER_APPLICATION_HAS_RTOS_IDLE_HANDLER

   \                                 In section .text, align 2, keep-with-next
    731          bool emberRtosIdleHandler(uint32_t *idleTimeMs)
    732          {
    733            return false;
   \                     emberRtosIdleHandler: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    734          }
    735          #endif
    736          
    737          #ifndef EMBER_APPLICATION_HAS_RTOS_STACK_WAKEUP_ISR_HANDLER

   \                                 In section .text, align 2, keep-with-next
    738          void emberRtosStackWakeupIsrHandler(void)
    739          {
    740          }
   \                     emberRtosStackWakeupIsrHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    741          #endif
    742          
    743          #ifndef EMBER_APPLICATION_HAS_DUTY_CYCLE_HANDLER

   \                                 In section .text, align 2, keep-with-next
    744          void emberDutyCycleHandler(uint8_t channelPage,
    745                                     uint8_t channel,
    746                                     EmberDutyCycleState state)
    747          {
    748          }
   \                     emberDutyCycleHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    749          #endif
    750          #ifndef EMBER_APPLICATION_HAS_AF_COUNTER_HANDLER

   \                                 In section .text, align 2, keep-with-next
    751          void emberAfCounterHandler(EmberCounterType type, EmberCounterInfo info)
    752          {
    753          }
   \                     emberAfCounterHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    754          #endif
    755          
    756          #ifndef EMBER_AF_PLUGIN_PACKET_HANDOFF
    757            #if defined(EMBER_CALLBACK_INCOMING_PACKET_FILTER) \
    758            || defined(EMBER_CALLBACK_OUTGOING_PACKET_FILTER)
    759              #error "Use of the Packet Filter Callbacks requires the Packet Handoff Plugin"
    760            #endif

   \                                 In section .text, align 2, keep-with-next
    761          EmberPacketAction emberPacketHandoffIncoming(EmberZigbeePacketType packetType,
    762                                                       EmberMessageBuffer packetBuffer,
    763                                                       uint8_t index,
    764                                                       void *data)
    765          {
    766            return EMBER_ACCEPT_PACKET;
   \                     emberPacketHandoffIncoming: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x4770             BX       LR               ;; return
    767          }
    768          

   \                                 In section .text, align 2, keep-with-next
    769          EmberPacketAction emberPacketHandoffOutgoing(EmberZigbeePacketType packetType,
    770                                                       EmberMessageBuffer packetBuffer,
    771                                                       uint8_t index,
    772                                                       void *data)
    773          {
    774            return EMBER_ACCEPT_PACKET;
   \                     emberPacketHandoffOutgoing: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x4770             BX       LR               ;; return
    775          }
    776          #endif
    777          #endif /* __NCP_CONFIG__ */
    778          
    779          // Stubs that apply to both SoC and NCP
    780          
    781          #ifndef EMBER_REPORT_LQI_RSSI
    782          

   \                                 In section .text, align 2, keep-with-next
    783          EmberStatus emberGetNeighborLastLqiRssi(EmberNodeId nodeId, uint8_t *lqi, int8_t *rssi)
    784          {
    785            return EMBER_ERR_FATAL;
   \                     emberGetNeighborLastLqiRssi: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x4770             BX       LR               ;; return
    786          }
    787          #endif
    788          
    789          // Temporary change: add stubs to compile NCP images and other apps that don't
    790          // know about the Zigbee Event Logger plugin
    791          #ifndef EMBER_AF_PLUGIN_ZIGBEE_EVENT_LOGGER
    792           #include "app/framework/plugin/zigbee-event-logger-stub/zigbee-event-logger-stub-gen.c"

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddBootEvent(uint32_t, uint16_t)
   \                     emberAfPluginZigBeeEventLoggerAddBootEvent: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddJoinNetwork(uint16_t, uint8_t, uint8_t, uint8_t *)
   \                     emberAfPluginZigBeeEventLoggerAddJoinNetwork: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddTrustCenterRejoin(uint32_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddTrustCenterRejoin: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddSecureRejoin(uint32_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddSecureRejoin: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddLeaveWithoutRejoin(uint16_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddLeaveWithoutRejoin: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddLeaveWithRejoin(uint16_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddLeaveWithRejoin: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddTrustCenterLinkKeyChange(void)
   \                     emberAfPluginZigBeeEventLoggerAddTrustCenterLinkKeyChange: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddNetworkKeySequenceChange(uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddNetworkKeySequenceChange: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddReset(uint8_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddReset: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddChannelChange(uint8_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddChannelChange: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddParentChange(uint16_t, uint8_t *)
   \                     emberAfPluginZigBeeEventLoggerAddParentChange: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddDutyCycleChange(uint8_t, uint16_t, uint16_t, uint16_t)
   \                     emberAfPluginZigBeeEventLoggerAddDutyCycleChange: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddChildAdded(uint16_t, uint8_t *)
   \                     emberAfPluginZigBeeEventLoggerAddChildAdded: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddChildRemoved(uint16_t, uint8_t *)
   \                     emberAfPluginZigBeeEventLoggerAddChildRemoved: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddChildTimedOut(uint16_t, uint8_t *)
   \                     emberAfPluginZigBeeEventLoggerAddChildTimedOut: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddStackStatus(uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddStackStatus: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddTimeSync(uint32_t, uint32_t)
   \                     emberAfPluginZigBeeEventLoggerAddTimeSync: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberAfPluginZigBeeEventLoggerAddTrustCenterJoinDecision(uint16_t, uint8_t)
   \                     emberAfPluginZigBeeEventLoggerAddTrustCenterJoinDecision: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    793          #endif // !EMBER_AF_PLUGIN_ZIGBEE_EVENT_LOGGER

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emCheckAvailableMemory
       0   emberAfCounterHandler
       0   emberAfPluginZigBeeEventLoggerAddBootEvent
       0   emberAfPluginZigBeeEventLoggerAddChannelChange
       0   emberAfPluginZigBeeEventLoggerAddChildAdded
       0   emberAfPluginZigBeeEventLoggerAddChildRemoved
       0   emberAfPluginZigBeeEventLoggerAddChildTimedOut
       0   emberAfPluginZigBeeEventLoggerAddDutyCycleChange
       0   emberAfPluginZigBeeEventLoggerAddJoinNetwork
       0   emberAfPluginZigBeeEventLoggerAddLeaveWithRejoin
       0   emberAfPluginZigBeeEventLoggerAddLeaveWithoutRejoin
       0   emberAfPluginZigBeeEventLoggerAddNetworkKeySequenceChange
       0   emberAfPluginZigBeeEventLoggerAddParentChange
       0   emberAfPluginZigBeeEventLoggerAddReset
       0   emberAfPluginZigBeeEventLoggerAddSecureRejoin
       0   emberAfPluginZigBeeEventLoggerAddStackStatus
       0   emberAfPluginZigBeeEventLoggerAddTimeSync
       0   emberAfPluginZigBeeEventLoggerAddTrustCenterJoinDecision
       0   emberAfPluginZigBeeEventLoggerAddTrustCenterLinkKeyChange
       0   emberAfPluginZigBeeEventLoggerAddTrustCenterRejoin
       0   emberAppendSourceRouteHandler
       0   emberBootloadTransmitCompleteHandler
       0   emberCalculateSmacsHandler
       0   emberCalculateSmacsHandler283k1
       0   emberChangeSourceRouteHandler
       0   emberChildJoinHandler
       0   emberCounterRolloverHandler
       0   emberDebugHandler
       0   emberDsaSignHandler
       0   emberDsaVerifyHandler
       0   emberDutyCycleHandler
       0   emberGenerateCbkeKeysHandler
       0   emberGenerateCbkeKeysHandler283k1
       0   emberGetNeighborLastLqiRssi
       0   emberGetSourceRouteTableEntry
       0   emberGetSourceRouteTableFilledSize
       0   emberGetSourceRouteTableTotalSize
       0   emberIdConflictHandler
       0   emberIncomingBootloadMessageHandler
       0   emberIncomingManyToOneRouteRequestHandler
       0   emberIncomingMfgTestMessageHandler
       0   emberIncomingRouteErrorHandler
       0   emberIncomingRouteRecordHandler
       0   emberMacPassthroughFilterHandler
       0   emberMacPassthroughMessageHandler
       0   emberOrphanNotificationHandler
       0   emberPacketHandoffIncoming
       0   emberPacketHandoffOutgoing
       0   emberPanIdConflictHandler
       0   emberPollCompleteHandler
       0   emberPollHandler
       0   emberRawTransmitCompleteHandler
       0   emberRtosIdleHandler
       0   emberRtosStackWakeupIsrHandler
       0   emberStackTokenChangedHandler
       0   emberSwitchNetworkKeyHandler
       0   emberZllAddressAssignmentHandler
       0   emberZllNetworkFoundHandler
       0   emberZllScanCompleteHandler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  emAddressTable
       1  emAddressTableSize
       1  emAllowRelay
       1  emApiVersion
       1  emAppZdoConfigurationFlags
       4  emApsUnicastMessageData
    4268  emAvailableMemory
       4  emBindingFlags
       4  emBindingRemoteNode
       4  emBroadcastTable
       1  emBroadcastTableSize
       1  emCertificateTableSize
       2  emCheckAvailableMemory
       4  emChildIdTable
       4  emChildLqi
       4  emChildPower
       4  emChildStatus
       4  emChildTimers
       1  emDefaultSecurityLevel
       1  emDefaultStackProfile
       4  emDiscoveryTable
       1  emDiscoveryTableSize
       1  emEndDeviceBindTimeout
       1  emEndDeviceConfiguration
       4  emEndDeviceTimeout
       1  emFragmentDelayMs
       4  emFrameCountersTable
       1  emGpIncomingFCTokenTableSize
       1  emGpIncomingFCTokenTimeout
       4  emGpProxyTable
       1  emGpProxyTableSize
       4  emGpSinkTable
       1  emGpSinkTableSize
       4  emIncomingApsFrameCounters
       1  emMaxApsUnicastMessages
       1  emMaxEndDeviceChildren
       1  emMaxHops
       4  emMessageBufferLengths
       4  emMessageBufferReferenceCounts
       4  emNeighborData
       4  emNetworkDescriptor
       1  emPacketBufferCount
       4  emPacketBufferData
       1  emPacketBufferFreeCount
       4  emPacketBufferLinks
       4  emPacketBufferQueueLinks
       1  emPanIdConflictReportThreshold
       1  emRequestKeyTimeout
       4  emRetryQueue
       1  emRetryQueueSize
       4  emRouteData
       4  emRouteRecordTable
       1  emRouteTableSize
       1  emRouterNeighborTableSize
       1  emSendMulticastsToSleepyAddress
       4  emStoreAndForwardQueue
       1  emStoreAndForwardQueueSize
       1  emSupportedNetworks
       1  emTaskCount
      48  emTasks
       1  emZllApplyThresholdToAllInterpans
       1  emZllGroupAddressesNeeded
       1  emZllPolicy
       1  emZllRssiThreshold
       2  emberAfCounterHandler
       2  emberAfPluginZigBeeEventLoggerAddBootEvent
       2  emberAfPluginZigBeeEventLoggerAddChannelChange
       2  emberAfPluginZigBeeEventLoggerAddChildAdded
       2  emberAfPluginZigBeeEventLoggerAddChildRemoved
       2  emberAfPluginZigBeeEventLoggerAddChildTimedOut
       2  emberAfPluginZigBeeEventLoggerAddDutyCycleChange
       2  emberAfPluginZigBeeEventLoggerAddJoinNetwork
       2  emberAfPluginZigBeeEventLoggerAddLeaveWithRejoin
       2  emberAfPluginZigBeeEventLoggerAddLeaveWithoutRejoin
       2  emberAfPluginZigBeeEventLoggerAddNetworkKeySequenceChange
       2  emberAfPluginZigBeeEventLoggerAddParentChange
       2  emberAfPluginZigBeeEventLoggerAddReset
       2  emberAfPluginZigBeeEventLoggerAddSecureRejoin
       2  emberAfPluginZigBeeEventLoggerAddStackStatus
       2  emberAfPluginZigBeeEventLoggerAddTimeSync
       2  emberAfPluginZigBeeEventLoggerAddTrustCenterJoinDecision
       2  emberAfPluginZigBeeEventLoggerAddTrustCenterLinkKeyChange
       2  emberAfPluginZigBeeEventLoggerAddTrustCenterRejoin
       1  emberAppLinkKeyRequestPolicy
       4  emberAppendSourceRouteHandler
       2  emberApsAckTimeoutMs
       1  emberBindingTableSize
       2  emberBootloadTransmitCompleteHandler
       2  emberCalculateSmacsHandler
       2  emberCalculateSmacsHandler283k1
       2  emberChangeSourceRouteHandler
       2  emberChildJoinHandler
       1  emberChildTableSize
       2  emberCounterRolloverHandler
       2  emberDebugHandler
       2  emberDsaSignHandler
       2  emberDsaVerifyHandler
       2  emberDutyCycleHandler
       1  emberEndDevicePollTimeout
       1  emberFragmentWindowSize
       2  emberGenerateCbkeKeysHandler
       2  emberGenerateCbkeKeysHandler283k1
       4  emberGetNeighborLastLqiRssi
       4  emberGetSourceRouteTableEntry
       4  emberGetSourceRouteTableFilledSize
       4  emberGetSourceRouteTableTotalSize
       2  emberIdConflictHandler
       2  emberIncomingBootloadMessageHandler
       2  emberIncomingManyToOneRouteRequestHandler
       2  emberIncomingMfgTestMessageHandler
       2  emberIncomingRouteErrorHandler
       2  emberIncomingRouteRecordHandler
       1  emberKeyTableSize
       2  emberLinkPowerDeltaInterval
       2  emberMacIndirectTimeout
       4  emberMacPassthroughFilterHandler
       2  emberMacPassthroughMessageHandler
       4  emberMulticastTable
       1  emberMulticastTableSize
       2  emberOrphanNotificationHandler
       4  emberPacketHandoffIncoming
       4  emberPacketHandoffOutgoing
       4  emberPanIdConflictHandler
       2  emberPollCompleteHandler
       2  emberPollHandler
       2  emberRawTransmitCompleteHandler
       4  emberRtosIdleHandler
       2  emberRtosStackWakeupIsrHandler
       8  emberStackProfileId
       2  emberStackTokenChangedHandler
       2  emberSwitchNetworkKeyHandler
       2  emberTransientKeyTimeoutS
       1  emberTrustCenterLinkKeyRequestPolicy
       2  emberZllAddressAssignmentHandler
       2  emberZllNetworkFoundHandler
       2  emberZllScanCompleteHandler
       4  sourceRouteTable
       1  sourceRouteTableSize

 
    59 bytes in section .bss
   154 bytes in section .data
    10 bytes in section .rodata
   138 bytes in section .text
 4 268 bytes in section EMHEAP
 
   138 bytes of CODE  memory
    10 bytes of CONST memory
 4 481 bytes of DATA  memory

Errors: none
Warnings: none
