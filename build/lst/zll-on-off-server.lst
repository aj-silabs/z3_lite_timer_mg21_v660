###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:20:13
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-on-off-server\zll-on-off-server.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW91BC.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-on-off-server\zll-on-off-server.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"zll-on-off-server.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-on-off-server\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\zll-on-off-server.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\zll-on-off-server.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-on-off-server\zll-on-off-server.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Routines for the ZLL On Off Server plugin.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          #include "../../include/af.h"
     19          #include "zll-on-off-server.h"
     20          
     21          #define ZLL_ON_OFF_CLUSTER_ON_OFF_CONTROL_ACCEPT_ONLY_WHEN_ON_MASK BIT(0)
     22          
     23          #define  readOnOff(endpoint, onOff)  readBoolean((endpoint), ZCL_ON_OFF_ATTRIBUTE_ID, "on/off", (onOff))
     24          #define writeOnOff(endpoint, onOff) writeBoolean((endpoint), ZCL_ON_OFF_ATTRIBUTE_ID, "on/off", (onOff))
     25          #define  readGlobalSceneControl(endpoint, globalSceneControl)  readBoolean((endpoint), ZCL_GLOBAL_SCENE_CONTROL_ATTRIBUTE_ID, "global scene control", (globalSceneControl))
     26          #define writeGlobalSceneControl(endpoint, globalSceneControl) writeBoolean((endpoint), ZCL_GLOBAL_SCENE_CONTROL_ATTRIBUTE_ID, "global scene control", (globalSceneControl))
     27          #define  readOnTime(endpoint, onTime)  readInt16u((endpoint), ZCL_ON_TIME_ATTRIBUTE_ID, "on time", (onTime))
     28          #define writeOnTime(endpoint, onTime) writeInt16u((endpoint), ZCL_ON_TIME_ATTRIBUTE_ID, "on time", (onTime))
     29          #define  readOffWaitTime(endpoint, offWaitTime)  readInt16u((endpoint), ZCL_OFF_WAIT_TIME_ATTRIBUTE_ID, "off wait time", (offWaitTime))
     30          #define writeOffWaitTime(endpoint, offWaitTime) writeInt16u((endpoint), ZCL_OFF_WAIT_TIME_ATTRIBUTE_ID, "off wait time", (offWaitTime))
     31          

   \                                 In section .text, align 2, keep-with-next
     32          static EmberAfStatus readBoolean(uint8_t endpoint, EmberAfAttributeId attribute, const char * name, bool *value)
     33          {
   \                     readBoolean: (+1)
   \        0x0   0x460A             MOV      R2,R1
   \        0x2   0xB580             PUSH     {R7,LR}
     34            EmberAfStatus status = emberAfReadServerAttribute(endpoint,
     35                                                              ZCL_ON_OFF_CLUSTER_ID,
     36                                                              attribute,
     37                                                              (uint8_t *)value,
     38                                                              sizeof(bool));
     39            if (status != EMBER_ZCL_STATUS_SUCCESS) {
     40              emberAfOnOffClusterPrintln("ERR: %ping %p %x", "read", name, status);
     41            }
     42            return status;
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x....             B.N      ?Subroutine0
     43          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x9100             STR      R1,[SP, #+0]
   \        0x2   0x2106             MOVS     R1,#+6
   \        0x4   0x....'....        BL       emberAfReadServerAttribute
   \        0x8   0xBD02             POP      {R1,PC}          ;; return
     44          

   \                                 In section .text, align 2, keep-with-next
     45          static EmberAfStatus writeBoolean(uint8_t endpoint, EmberAfAttributeId attribute, const char * name, bool value)
     46          {
   \                     writeBoolean: (+1)
   \        0x0   0xB50E             PUSH     {R1-R3,LR}
   \        0x2   0x460A             MOV      R2,R1
     47            EmberAfStatus status = emberAfWriteServerAttribute(endpoint,
     48                                                               ZCL_ON_OFF_CLUSTER_ID,
     49                                                               attribute,
     50                                                               (uint8_t *)&value,
     51                                                               ZCL_BOOLEAN_ATTRIBUTE_TYPE);
     52            if (status != EMBER_ZCL_STATUS_SUCCESS) {
     53              emberAfOnOffClusterPrintln("ERR: %ping %p %x", "writ", name, status);
     54            }
     55            return status;
   \        0x4   0x2110             MOVS     R1,#+16
   \        0x6   0x....             B.N      ?Subroutine1
     56          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x9100             STR      R1,[SP, #+0]
   \        0x2   0xAB02             ADD      R3,SP,#+8
   \        0x4   0x2106             MOVS     R1,#+6
   \        0x6   0x....'....        BL       emberAfWriteServerAttribute
   \        0xA   0xBD0E             POP      {R1-R3,PC}       ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          static EmberAfStatus readInt16u(uint8_t endpoint, EmberAfAttributeId attribute, const char * name, uint16_t *value)
     59          {
   \                     readInt16u: (+1)
   \        0x0   0x460A             MOV      R2,R1
   \        0x2   0xB580             PUSH     {R7,LR}
     60            EmberAfStatus status = emberAfReadServerAttribute(endpoint,
     61                                                              ZCL_ON_OFF_CLUSTER_ID,
     62                                                              attribute,
     63                                                              (uint8_t *)value,
     64                                                              sizeof(uint16_t));
     65            if (status != EMBER_ZCL_STATUS_SUCCESS) {
     66              emberAfOnOffClusterPrintln("ERR: %ping %p %x", "read", name, status);
     67            }
     68            return status;
   \        0x4   0x2102             MOVS     R1,#+2
   \        0x6                      REQUIRE ?Subroutine0
   \        0x6                      ;; // Fall through to label ?Subroutine0
     69          }
     70          

   \                                 In section .text, align 2, keep-with-next
     71          static EmberAfStatus writeInt16u(uint8_t endpoint, EmberAfAttributeId attribute, const char * name, uint16_t value)
     72          {
   \                     writeInt16u: (+1)
   \        0x0   0xB50E             PUSH     {R1-R3,LR}
   \        0x2   0x460A             MOV      R2,R1
     73            EmberAfStatus status = emberAfWriteServerAttribute(endpoint,
     74                                                               ZCL_ON_OFF_CLUSTER_ID,
     75                                                               attribute,
     76                                                               (uint8_t *)&value,
     77                                                               ZCL_INT16U_ATTRIBUTE_TYPE);
     78            if (status != EMBER_ZCL_STATUS_SUCCESS) {
     79              emberAfOnOffClusterPrintln("ERR: %ping %p %x", "writ", name, status);
     80            }
     81            return status;
   \        0x4   0x2121             MOVS     R1,#+33
   \        0x6                      REQUIRE ?Subroutine1
   \        0x6                      ;; // Fall through to label ?Subroutine1
     82          }
     83          

   \                                 In section .text, align 2, keep-with-next
     84          void emberAfOnOffClusterServerTickCallback(uint8_t endpoint)
     85          {
   \                     emberAfOnOffClusterServerTickCallback: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
     86            uint16_t onTime, offWaitTime;
     87            bool onOff;
     88          
     89            if (readOnOff(endpoint, &onOff) != EMBER_ZCL_STATUS_SUCCESS
     90                || readOnTime(endpoint, &onTime) != EMBER_ZCL_STATUS_SUCCESS
     91                || readOffWaitTime(endpoint, &offWaitTime) != EMBER_ZCL_STATUS_SUCCESS) {
   \        0x4   0x....'....        LDR.W    R7,??DataTable11
   \        0x8   0x4604             MOV      R4,R0
   \        0xA   0x466B             MOV      R3,SP
   \        0xC   0x463A             MOV      R2,R7
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x....'....        BL       readBoolean
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD14A             BNE.N    ??emberAfOnOffClusterServerTickCallback_0
   \       0x18   0xF244 0x0801      MOVW     R8,#+16385
   \       0x1C   0x....'....        LDR.W    R9,??DataTable11_1
   \       0x20   0xAB01             ADD      R3,SP,#+4
   \       0x22   0x464A             MOV      R2,R9
   \       0x24   0x4641             MOV      R1,R8
   \       0x26   0x....'....        BL       ??Subroutine3_0
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD13F             BNE.N    ??emberAfOnOffClusterServerTickCallback_0
   \       0x2E   0xF244 0x0502      MOVW     R5,#+16386
   \       0x32   0x....'....        LDR.W    R6,??DataTable11_2
   \       0x36   0xF10D 0x0302      ADD      R3,SP,#+2
   \       0x3A   0x4632             MOV      R2,R6
   \       0x3C   0x4629             MOV      R1,R5
   \       0x3E   0x....'....        BL       ??Subroutine3_0
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD133             BNE.N    ??emberAfOnOffClusterServerTickCallback_0
     92              return;
     93            }
     94          
     95            // If the values of the OnTime and OffWaitTime attributes are both less than
     96            // 0xFFFF, the device shall then update the device every 1/10th second until
     97            // both the OnTime and OffWaitTime attributes are equal to 0x0000, as
     98            // follows:
     99            //
    100            //   If the value of the OnOff attribute is equal to 0x01 (on) and the value
    101            //   of the OnTime attribute is greater than zero, the device shall decrement
    102            //   the value of the OnTime attribute. If the value of the OnTime attribute
    103            //   reaches 0x0000, the device shall set the OffWaitTime and OnOff
    104            //   attributes to 0x0000 and 0x00, respectively.
    105            //
    106            //   If the value of the OnOff attribute is equal to 0x00 (off) and the value
    107            //   of the OffWaitTime attribute is greater than zero, the device shall
    108            //   decrement the value of the OffWaitTime attribute. If the value of the
    109            //   OffWaitTime attribute reaches 0x0000, the device shall terminate the
    110            //   update.
    111            if (onOff && 0x0000 < onTime) {
   \       0x46   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x4A   0xB1E0             CBZ.N    R0,??emberAfOnOffClusterServerTickCallback_1
   \       0x4C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \       0x50   0xB340             CBZ.N    R0,??emberAfOnOffClusterServerTickCallback_2
    112              onTime--;
   \       0x52   0x1E41             SUBS     R1,R0,#+1
   \       0x54   0xF8AD 0x1004      STRH     R1,[SP, #+4]
    113              writeOnTime(endpoint, onTime);
   \       0x58   0xF8BD 0x3004      LDRH     R3,[SP, #+4]
   \       0x5C   0x464A             MOV      R2,R9
   \       0x5E   0x4641             MOV      R1,R8
   \       0x60   0x....'....        BL       ??Subroutine9_0
    114              if (onTime == 0x0000) {
   \                     ??CrossCallReturnLabel_22: (+1)
   \       0x64   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \       0x68   0xB9E0             CBNZ.N   R0,??emberAfOnOffClusterServerTickCallback_2
    115                offWaitTime = 0x0000;
   \       0x6A   0x2100             MOVS     R1,#+0
   \       0x6C   0xF8AD 0x1002      STRH     R1,[SP, #+2]
    116                writeOffWaitTime(endpoint, offWaitTime);
   \       0x70   0x2300             MOVS     R3,#+0
   \       0x72   0x4632             MOV      R2,R6
   \       0x74   0x4629             MOV      R1,R5
   \       0x76   0x....'....        BL       ??Subroutine9_0
    117                onOff = false;
   \                     ??CrossCallReturnLabel_21: (+1)
   \       0x7A   0x....'....        BL       ?Subroutine6
    118                writeOnOff(endpoint, onOff);
   \                     ??CrossCallReturnLabel_8: (+1)
   \       0x7E   0x2100             MOVS     R1,#+0
   \       0x80   0x....'....        BL       ??Subroutine8_0
    119                return;
   \                     ??CrossCallReturnLabel_14: (+1)
   \       0x84   0xE013             B.N      ??emberAfOnOffClusterServerTickCallback_0
    120              }
    121            } else if (!onOff && 0x0000 < offWaitTime) {
   \                     ??emberAfOnOffClusterServerTickCallback_1: (+1)
   \       0x86   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \       0x8A   0xB158             CBZ.N    R0,??emberAfOnOffClusterServerTickCallback_2
    122              offWaitTime--;
   \       0x8C   0x1E41             SUBS     R1,R0,#+1
   \       0x8E   0xF8AD 0x1002      STRH     R1,[SP, #+2]
    123              writeOffWaitTime(endpoint, offWaitTime);
   \       0x92   0xF8BD 0x3002      LDRH     R3,[SP, #+2]
   \       0x96   0x4632             MOV      R2,R6
   \       0x98   0x4629             MOV      R1,R5
   \       0x9A   0x....'....        BL       ??Subroutine9_0
    124              if (offWaitTime == 0x0000) {
   \                     ??CrossCallReturnLabel_20: (+1)
   \       0x9E   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \       0xA2   0xB120             CBZ.N    R0,??emberAfOnOffClusterServerTickCallback_0
    125                return;
    126              }
    127            }
    128          
    129            emberAfScheduleServerTick(endpoint,
    130                                      ZCL_ON_OFF_CLUSTER_ID,
    131                                      MILLISECOND_TICKS_PER_SECOND / 10);
   \                     ??emberAfOnOffClusterServerTickCallback_2: (+1)
   \       0xA4   0x2264             MOVS     R2,#+100
   \       0xA6   0x2106             MOVS     R1,#+6
   \       0xA8   0x4620             MOV      R0,R4
   \       0xAA   0x....'....        BL       emberAfScheduleServerTick
    132          }
   \                     ??emberAfOnOffClusterServerTickCallback_0: (+1)
   \       0xAE   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \        0x6   0x2300             MOVS     R3,#+0
   \        0x8   0x463A             MOV      R2,R7
   \        0xA   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine8_0: (+1)
   \        0x0   0x4620             MOV      R0,R4
   \        0x2   0x....             B.N      writeBoolean

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0xF244 0x0101      MOVW     R1,#+16385
   \                     ??Subroutine3_0: (+1)
   \        0x4   0x4620             MOV      R0,R4
   \        0x6   0x....             B.N      readInt16u

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine9_0: (+1)
   \        0x0   0x4620             MOV      R0,R4
   \        0x2   0x....             B.N      writeInt16u
    133          

   \                                 In section .text, align 2, keep-with-next
    134          bool emberAfOnOffClusterOffWithEffectCallback(uint8_t effectId,
    135                                                        uint8_t effectVariant)
    136          {
   \                     emberAfOnOffClusterOffWithEffectCallback: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x460D             MOV      R5,R1
    137            EmberAfStatus status = EMBER_ZCL_STATUS_INVALID_VALUE;
    138            bool globalSceneControl;
    139            uint8_t endpoint = emberAfCurrentEndpoint();
   \        0x4   0x....             LDR.N    R1,??DataTable11_3
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x4604             MOV      R4,R0
   \        0xA   0x2087             MOVS     R0,#+135
   \        0xC   0x6813             LDR      R3,[R2, #+0]
    140          
    141            // Ensure parameters have values withing proper range.
    142            if (effectId > EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DYING_LIGHT
    143                || effectVariant > EMBER_ZCL_ON_OFF_DELAYED_ALL_OFF_EFFECT_VARIANT_50_PERCENT_DIM_DOWN_IN_0P8_SECONDS_THEN_FADE_TO_OFF_IN_12_SECONDS
    144                || (effectId == EMBER_ZCL_ON_OFF_EFFECT_IDENTIFIER_DYING_LIGHT
    145                    && effectVariant > EMBER_ZCL_ON_OFF_DYING_LIGHT_EFFECT_VARIANT_20_PERCENTER_DIM_UP_IN_0P5_SECONDS_THEN_FADE_TO_OFF_IN_1_SECOND)) {
   \        0xE   0x2C02             CMP      R4,#+2
   \       0x10   0x795E             LDRB     R6,[R3, #+5]
   \       0x12   0xDA36             BGE.N    ??CrossCallReturnLabel_13
   \       0x14   0x2D02             CMP      R5,#+2
   \       0x16   0xDC34             BGT.N    ??CrossCallReturnLabel_13
   \       0x18   0x2C01             CMP      R4,#+1
   \       0x1A   0xD101             BNE.N    ??emberAfOnOffClusterOffWithEffectCallback_0
   \       0x1C   0x0029             MOVS     R1,R5
   \       0x1E   0xD130             BNE.N    ??CrossCallReturnLabel_13
    146              goto kickout;
    147            }
    148          
    149            // If the GlobalSceneControl attribute is equal to true, the application on
    150            // the associated endpoint shall store its settings in its global scene then
    151            // set the GlobalSceneControl attribute to false.
    152            status = readGlobalSceneControl(endpoint, &globalSceneControl);
   \                     ??emberAfOnOffClusterOffWithEffectCallback_0: (+1)
   \       0x20   0x....             LDR.N    R7,??DataTable11_4
   \       0x22   0x466B             MOV      R3,SP
   \       0x24   0x463A             MOV      R2,R7
   \       0x26   0xF44F 0x4180      MOV      R1,#+16384
   \       0x2A   0x4630             MOV      R0,R6
   \       0x2C   0x....'....        BL       readBoolean
    153            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x30   0x0001             MOVS     R1,R0
   \       0x32   0xD126             BNE.N    ??CrossCallReturnLabel_13
    154              goto kickout;
    155            } else if (globalSceneControl) {
   \       0x34   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x38   0xB178             CBZ.N    R0,??emberAfOnOffClusterOffWithEffectCallback_1
    156              status = emberAfScenesClusterStoreCurrentSceneCallback(endpoint,
    157                                                                     ZCL_SCENES_GLOBAL_SCENE_GROUP_ID,
    158                                                                     ZCL_SCENES_GLOBAL_SCENE_SCENE_ID);
   \       0x3A   0x2200             MOVS     R2,#+0
   \       0x3C   0x2100             MOVS     R1,#+0
   \       0x3E   0x4630             MOV      R0,R6
   \       0x40   0x....'....        BL       emberAfScenesClusterStoreCurrentSceneCallback
    159              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x44   0x0001             MOVS     R1,R0
   \       0x46   0xD11C             BNE.N    ??CrossCallReturnLabel_13
    160                emberAfOnOffClusterPrintln("ERR: %ping %p %x", "stor", "global scene", status);
    161                goto kickout;
    162              }
    163              globalSceneControl = false;
   \       0x48   0x....'....        BL       ?Subroutine6
    164              status = writeGlobalSceneControl(endpoint, globalSceneControl);
   \                     ??CrossCallReturnLabel_9: (+1)
   \       0x4C   0xF44F 0x4180      MOV      R1,#+16384
   \       0x50   0x4630             MOV      R0,R6
   \       0x52   0x....'....        BL       writeBoolean
    165              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x56   0x0001             MOVS     R1,R0
   \       0x58   0xD113             BNE.N    ??CrossCallReturnLabel_13
    166                goto kickout;
    167              }
    168            }
    169          
    170            // The application will handle the actual effect and variant.
    171            status = emberAfPluginZllOnOffServerOffWithEffectCallback(endpoint,
    172                                                                      effectId,
    173                                                                      effectVariant);
   \                     ??emberAfOnOffClusterOffWithEffectCallback_1: (+1)
   \       0x5A   0x462A             MOV      R2,R5
   \       0x5C   0x4621             MOV      R1,R4
   \       0x5E   0x4630             MOV      R0,R6
   \       0x60   0x....'....        BL       emberAfPluginZllOnOffServerOffWithEffectCallback
    174            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x64   0x0001             MOVS     R1,R0
   \       0x66   0xD10C             BNE.N    ??CrossCallReturnLabel_13
    175              // If the application handled the effect, the endpoint shall enter its
    176              // "off" state, update the OnOff attribute accordingly, and set the OnTime
    177              // attribute to 0x0000.
    178              status = emberAfOnOffClusterSetValueCallback(endpoint, ZCL_OFF_COMMAND_ID, false);
   \       0x68   0x2200             MOVS     R2,#+0
   \       0x6A   0x2100             MOVS     R1,#+0
   \       0x6C   0x4630             MOV      R0,R6
   \       0x6E   0x....'....        BL       emberAfOnOffClusterSetValueCallback
    179              if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x72   0x0001             MOVS     R1,R0
   \       0x74   0xD105             BNE.N    ??CrossCallReturnLabel_13
    180                status = writeOnTime(endpoint, 0x0000);
   \       0x76   0x2300             MOVS     R3,#+0
   \       0x78   0x....             LDR.N    R2,??DataTable11_1
   \       0x7A   0xF244 0x0101      MOVW     R1,#+16385
   \       0x7E   0x....'....        BL       ?Subroutine7
    181              }
    182            }
    183          
    184            kickout:
    185            emberAfSendImmediateDefaultResponse(status);
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x82   0x....'....        BL       emberAfSendImmediateDefaultResponse
    186            return true;
   \       0x86   0x2001             MOVS     R0,#+1
   \       0x88   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    187          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x4630             MOV      R0,R6
   \        0x2   0x....             B.N      writeInt16u
    188          

   \                                 In section .text, align 2, keep-with-next
    189          bool emberAfOnOffClusterOnWithRecallGlobalSceneCallback(void)
    190          {
   \                     emberAfOnOffClusterOnWithRecallGlobalSceneCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    191            EmberAfStatus status;
    192            bool globalSceneControl;
    193            uint8_t endpoint = emberAfCurrentEndpoint();
   \        0x2   0x....             LDR.N    R0,??DataTable11_3
   \        0x4   0x6801             LDR      R1,[R0, #+0]
    194          
    195            status = readGlobalSceneControl(endpoint, &globalSceneControl);
   \        0x6   0x....             LDR.N    R5,??DataTable11_4
   \        0x8   0x466B             MOV      R3,SP
   \        0xA   0x680A             LDR      R2,[R1, #+0]
   \        0xC   0xF44F 0x4180      MOV      R1,#+16384
   \       0x10   0x7954             LDRB     R4,[R2, #+5]
   \       0x12   0x462A             MOV      R2,R5
   \       0x14   0x4620             MOV      R0,R4
   \       0x16   0x....'....        BL       readBoolean
    196            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x1A   0x0001             MOVS     R1,R0
   \       0x1C   0xBF04             ITT      EQ 
   \       0x1E   0xF89D 0x1000      LDRBEQ   R1,[SP, #+0]
   \       0x22   0x2900             CMPEQ    R1,#+0
    197              goto kickout;
    198            } else if (!globalSceneControl) {
   \       0x24   0xD11B             BNE.N    ??CrossCallReturnLabel_25
    199              uint16_t onTime;
    200              status = emberAfScenesClusterRecallSavedSceneCallback(endpoint,
    201                                                                    ZCL_SCENES_GLOBAL_SCENE_GROUP_ID,
    202                                                                    ZCL_SCENES_GLOBAL_SCENE_SCENE_ID);
   \       0x26   0x2200             MOVS     R2,#+0
   \       0x28   0x4620             MOV      R0,R4
   \       0x2A   0x....'....        BL       emberAfScenesClusterRecallSavedSceneCallback
    203              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x2E   0x0001             MOVS     R1,R0
   \       0x30   0xD115             BNE.N    ??CrossCallReturnLabel_25
    204                emberAfOnOffClusterPrintln("ERR: %ping %p %x", "recall", "global scene", status);
    205                goto kickout;
    206              }
    207              globalSceneControl = true;
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0xF88D 0x0000      STRB     R0,[SP, #+0]
    208              status = writeGlobalSceneControl(endpoint, globalSceneControl);
   \       0x38   0x2301             MOVS     R3,#+1
   \       0x3A   0x462A             MOV      R2,R5
   \       0x3C   0x....'....        BL       ??Subroutine4_0
    209              if (status  != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_15: (+1)
   \       0x40   0x0001             MOVS     R1,R0
   \       0x42   0xD10C             BNE.N    ??CrossCallReturnLabel_25
    210                goto kickout;
    211              }
    212              status = readOnTime(endpoint, &onTime);
   \       0x44   0xF10D 0x0302      ADD      R3,SP,#+2
   \       0x48   0x....             LDR.N    R2,??DataTable11_1
   \       0x4A   0x....'....        BL       ?Subroutine3
    213              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_5: (+1)
   \       0x4E   0x0001             MOVS     R1,R0
   \       0x50   0xBF04             ITT      EQ 
   \       0x52   0xF8BD 0x1002      LDRHEQ   R1,[SP, #+2]
   \       0x56   0x2900             CMPEQ    R1,#+0
    214                goto kickout;
    215              }
    216              if (onTime == 0x0000) {
   \       0x58   0xD101             BNE.N    ??CrossCallReturnLabel_25
    217                status = writeOffWaitTime(endpoint, 0x0000);
   \       0x5A   0x....'....        BL       ?Subroutine2
    218                if (status != EMBER_ZCL_STATUS_SUCCESS) {
    219                  goto kickout;
    220                }
    221              }
    222            } else {
    223              goto kickout;
    224            }
    225          
    226            kickout:
    227            emberAfSendImmediateDefaultResponse(status);
   \                     ??CrossCallReturnLabel_25: (+1)
   \       0x5E   0x....'....        BL       emberAfSendImmediateDefaultResponse
    228            return true;
   \       0x62   0x2001             MOVS     R0,#+1
   \       0x64   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    229          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0x2301             MOVS     R3,#+1
   \        0x2   0x....             LDR.N    R2,??DataTable11_4
   \                     ??Subroutine4_0: (+1)
   \        0x4   0xF44F 0x4180      MOV      R1,#+16384
   \        0x8                      REQUIRE ??Subroutine8_0
   \        0x8                      ;; // Fall through to label ??Subroutine8_0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x2300             MOVS     R3,#+0
   \        0x2   0x....             LDR.N    R2,??DataTable11_2
   \        0x4   0xF244 0x0102      MOVW     R1,#+16386
   \        0x8                      REQUIRE ??Subroutine9_0
   \        0x8                      ;; // Fall through to label ??Subroutine9_0
    230          

   \                                 In section .text, align 2, keep-with-next
    231          bool emberAfOnOffClusterOnWithTimedOffCallback(uint8_t onOffControl,
    232                                                         uint16_t onTime,
    233                                                         uint16_t offWaitTime)
    234          {
   \                     emberAfOnOffClusterOnWithTimedOffCallback: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x4688             MOV      R8,R1
    235            EmberAfStatus status;
    236            uint16_t onTimeAttribute, offWaitTimeAttribute;
    237            bool onOffAttribute;
    238            uint8_t endpoint = emberAfCurrentEndpoint();
   \        0x8   0x....             LDR.N    R0,??DataTable11_3
   \        0xA   0x6801             LDR      R1,[R0, #+0]
    239          
    240            // The valid range of the OnTime and OffWaitTime fields is 0x0000 to 0xFFFF.
    241            if (onTime == 0xFFFF || offWaitTime == 0xFFFF) {
   \        0xC   0xF64F 0x7BFF      MOVW     R11,#+65535
   \       0x10   0x45D8             CMP      R8,R11
   \       0x12   0x680B             LDR      R3,[R1, #+0]
   \       0x14   0x795E             LDRB     R6,[R3, #+5]
   \       0x16   0xBF1A             ITTE     NE 
   \       0x18   0x4614             MOVNE    R4,R2
   \       0x1A   0x455C             CMPNE    R4,R11
   \       0x1C   0x2785             MOVEQ    R7,#+133
    242              status = EMBER_ZCL_STATUS_INVALID_FIELD;
    243              goto kickout;
   \       0x1E   0xD074             BEQ.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
    244            }
    245          
    246            // On receipt of this command, if the accept only when on sub-field of the
    247            // on/off control field is set to 1 and the value of the OnOff attribute is
    248            // equal to 0x00 (off), the command shall be discarded.
    249            status = readOnOff(endpoint, &onOffAttribute);
   \       0x20   0x466B             MOV      R3,SP
   \       0x22   0x....             LDR.N    R2,??DataTable11
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x4630             MOV      R0,R6
   \       0x28   0x....'....        BL       readBoolean
   \       0x2C   0x4607             MOV      R7,R0
    250            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD16B             BNE.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
    251              goto kickout;
    252            } else if ((onOffControl & ZLL_ON_OFF_CLUSTER_ON_OFF_CONTROL_ACCEPT_ONLY_WHEN_ON_MASK)
    253                       && !onOffAttribute) {
   \       0x32   0x07E9             LSLS     R1,R5,#+31
   \       0x34   0xD503             BPL.N    ??emberAfOnOffClusterOnWithTimedOffCallback_1
   \       0x36   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD065             BEQ.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
    254              goto kickout;
    255            }
    256          
    257            status = readOnTime(endpoint, &onTimeAttribute);
   \                     ??emberAfOnOffClusterOnWithTimedOffCallback_1: (+1)
   \       0x3E   0x....             LDR.N    R5,??DataTable11_1
   \       0x40   0xAB01             ADD      R3,SP,#+4
   \       0x42   0x462A             MOV      R2,R5
   \       0x44   0xF244 0x0101      MOVW     R1,#+16385
   \       0x48   0x4630             MOV      R0,R6
   \       0x4A   0x....'....        BL       readInt16u
   \       0x4E   0x4607             MOV      R7,R0
    258            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x50   0x2800             CMP      R0,#+0
   \       0x52   0xD15A             BNE.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
    259              goto kickout;
    260            }
    261            status = readOffWaitTime(endpoint, &offWaitTimeAttribute);
   \       0x54   0xF244 0x0902      MOVW     R9,#+16386
   \       0x58   0x....'....        LDR.W    R10,??DataTable11_2
   \       0x5C   0xF10D 0x0302      ADD      R3,SP,#+2
   \       0x60   0x4652             MOV      R2,R10
   \       0x62   0x4649             MOV      R1,R9
   \       0x64   0x4630             MOV      R0,R6
   \       0x66   0x....'....        BL       readInt16u
   \       0x6A   0x4607             MOV      R7,R0
    262            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x6C   0x2800             CMP      R0,#+0
   \       0x6E   0xD14C             BNE.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
    263              goto kickout;
    264            }
    265          
    266            // If the value of the OffWaitTime attribute is greater than zero and the
    267            // value of the OnOff attribute is equal to 0x00, then the device shall set
    268            // the OffWaitTime attribute to the minimum of the OffWaitTime attribute and
    269            // the value specified in the off wait time field.  In all other cases, the
    270            // device shall set the OnTime attribute to the maximum of the OnTime
    271            // attribute and the value specified in the on time field, set the
    272            // OffWaitTime attribute to the value specified in the off wait time field
    273            // and set the OnOff attribute to 0x01 (on).
    274            if (0x0000 < offWaitTimeAttribute && !onOffAttribute) {
   \       0x70   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \       0x74   0xB198             CBZ.N    R0,??emberAfOnOffClusterOnWithTimedOffCallback_2
   \       0x76   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x7A   0xB980             CBNZ.N   R0,??emberAfOnOffClusterOnWithTimedOffCallback_2
    275              if (offWaitTime < offWaitTimeAttribute) {
   \       0x7C   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
    276                offWaitTimeAttribute = offWaitTime;
    277              }
    278              status = writeOffWaitTime(endpoint, offWaitTimeAttribute);
   \       0x80   0x4652             MOV      R2,R10
   \       0x82   0x4649             MOV      R1,R9
   \       0x84   0x4284             CMP      R4,R0
   \       0x86   0xBF88             IT       HI 
   \       0x88   0x4604             MOVHI    R4,R0
   \       0x8A   0xF8AD 0x4002      STRH     R4,[SP, #+2]
   \       0x8E   0xF8BD 0x3002      LDRH     R3,[SP, #+2]
   \       0x92   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_12: (+1)
   \       0x96   0x4607             MOV      R7,R0
    279              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD136             BNE.N    ??emberAfOnOffClusterOnWithTimedOffCallback_0
   \       0x9C   0xE023             B.N      ??emberAfOnOffClusterOnWithTimedOffCallback_3
    280                goto kickout;
    281              }
    282            } else {
    283              if (onTimeAttribute < onTime) {
   \                     ??emberAfOnOffClusterOnWithTimedOffCallback_2: (+1)
   \       0x9E   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
    284                onTimeAttribute = onTime;
    285              }
    286              status = writeOnTime(endpoint, onTimeAttribute);
   \       0xA2   0x462A             MOV      R2,R5
   \       0xA4   0xF244 0x0101      MOVW     R1,#+16385
   \       0xA8   0x4580             CMP      R8,R0
   \       0xAA   0xBF38             IT       CC 
   \       0xAC   0x4680             MOVCC    R8,R0
   \       0xAE   0xF8AD 0x8004      STRH     R8,[SP, #+4]
   \       0xB2   0xF8BD 0x3004      LDRH     R3,[SP, #+4]
   \       0xB6   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0xBA   0x4607             MOV      R7,R0
    287              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xBC   0xBB28             CBNZ.N   R0,??emberAfOnOffClusterOnWithTimedOffCallback_0
    288                goto kickout;
    289              }
    290              offWaitTimeAttribute = offWaitTime;
   \       0xBE   0xF8AD 0x4002      STRH     R4,[SP, #+2]
    291              status = writeOffWaitTime(endpoint, offWaitTimeAttribute);
   \       0xC2   0x4623             MOV      R3,R4
   \       0xC4   0x4652             MOV      R2,R10
   \       0xC6   0x4649             MOV      R1,R9
   \       0xC8   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_10: (+1)
   \       0xCC   0x4607             MOV      R7,R0
    292              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xCE   0xB9E0             CBNZ.N   R0,??emberAfOnOffClusterOnWithTimedOffCallback_0
    293                goto kickout;
    294              }
    295              onOffAttribute = true;
   \       0xD0   0x2001             MOVS     R0,#+1
   \       0xD2   0xF88D 0x0000      STRB     R0,[SP, #+0]
    296              status = writeOnOff(endpoint, onOffAttribute);
   \       0xD6   0x2301             MOVS     R3,#+1
   \       0xD8   0x....             LDR.N    R2,??DataTable11
   \       0xDA   0x2100             MOVS     R1,#+0
   \       0xDC   0x4630             MOV      R0,R6
   \       0xDE   0x....'....        BL       writeBoolean
   \       0xE2   0x4607             MOV      R7,R0
    297              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xE4   0xB988             CBNZ.N   R0,??emberAfOnOffClusterOnWithTimedOffCallback_0
    298                goto kickout;
    299              }
    300            }
    301          
    302            // If the values of the OnTime and OffWaitTime attributes are both less than
    303            // 0xFFFF, the device shall then update the device every 1/10th second until
    304            // both the OnTime and OffWaitTime attributes are equal to 0x0000.
    305            if (onTimeAttribute < 0xFFFF && offWaitTimeAttribute < 0xFFFF) {
   \                     ??emberAfOnOffClusterOnWithTimedOffCallback_3: (+1)
   \       0xE6   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \       0xEA   0x4558             CMP      R0,R11
   \       0xEC   0xBF1C             ITT      NE 
   \       0xEE   0xF8BD 0x1002      LDRHNE   R1,[SP, #+2]
   \       0xF2   0x4559             CMPNE    R1,R11
   \       0xF4   0xD005             BEQ.N    ??emberAfOnOffClusterOnWithTimedOffCallback_4
    306              emberAfScheduleServerTick(endpoint,
    307                                        ZCL_ON_OFF_CLUSTER_ID,
    308                                        MILLISECOND_TICKS_PER_SECOND / 10);
   \       0xF6   0x2264             MOVS     R2,#+100
   \       0xF8   0x2106             MOVS     R1,#+6
   \       0xFA   0x4630             MOV      R0,R6
   \       0xFC   0x....'....        BL       emberAfScheduleServerTick
   \      0x100   0xE003             B.N      ??emberAfOnOffClusterOnWithTimedOffCallback_0
    309            } else {
    310              emberAfDeactivateServerTick(endpoint, ZCL_ON_OFF_CLUSTER_ID);
   \                     ??emberAfOnOffClusterOnWithTimedOffCallback_4: (+1)
   \      0x102   0x2106             MOVS     R1,#+6
   \      0x104   0x4630             MOV      R0,R6
   \      0x106   0x....'....        BL       emberAfDeactivateServerTick
    311            }
    312          
    313            kickout:
    314            emberAfSendImmediateDefaultResponse(status);
   \                     ??emberAfOnOffClusterOnWithTimedOffCallback_0: (+1)
   \      0x10A   0x4638             MOV      R0,R7
   \      0x10C   0x....'....        BL       emberAfSendImmediateDefaultResponse
    315            return true;
   \      0x110   0x2001             MOVS     R0,#+1
   \      0x112   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    316          }
    317          

   \                                 In section .text, align 2, keep-with-next
    318          EmberAfStatus emberAfPluginZllOnOffServerOffZllExtensions(const EmberAfClusterCommand *cmd)
    319          {
    320            // On receipt of the off command, the OnTime attribute shall be set to
    321            // 0x0000.
    322            return writeOnTime(cmd->apsFrame->destinationEndpoint, 0x0000);
   \                     emberAfPluginZllOnOffServerOffZllExtensions: (+1)
   \        0x0   0x6800             LDR      R0,[R0, #+0]
   \        0x2   0x2300             MOVS     R3,#+0
   \        0x4   0x....             LDR.N    R2,??DataTable11_1
   \        0x6   0x7940             LDRB     R0,[R0, #+5]
   \        0x8   0xF244 0x0101      MOVW     R1,#+16385
   \        0xC   0x....             B.N      writeInt16u
    323          }
    324          

   \                                 In section .text, align 2, keep-with-next
    325          EmberAfStatus emberAfPluginZllOnOffServerOnZllExtensions(const EmberAfClusterCommand *cmd)
    326          {
   \                     emberAfPluginZllOnOffServerOnZllExtensions: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    327            // On receipt of the on command, if the value of the OnTime attribute is
    328            // equal to 0x0000, the device shall set the OffWaitTime attribute to 0x0000.
    329            uint16_t onTime;
    330            uint8_t endpoint = cmd->apsFrame->destinationEndpoint;
   \        0x2   0x6800             LDR      R0,[R0, #+0]
    331            EmberAfStatus status = readOnTime(endpoint, &onTime);
   \        0x4   0x466B             MOV      R3,SP
   \        0x6   0x....             LDR.N    R2,??DataTable11_1
   \        0x8   0x7944             LDRB     R4,[R0, #+5]
   \        0xA   0x....'....        BL       ?Subroutine3
    332            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_4: (+1)
   \        0xE   0x0001             MOVS     R1,R0
   \       0x10   0xD108             BNE.N    ??CrossCallReturnLabel_17
    333              return status;
    334            } else if (onTime == 0x0000) {
   \       0x12   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \       0x16   0xB918             CBNZ.N   R0,??emberAfPluginZllOnOffServerOnZllExtensions_0
    335              status = writeOffWaitTime(endpoint, 0x0000);
   \       0x18   0x....'....        BL       ?Subroutine2
    336              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_24: (+1)
   \       0x1C   0x0001             MOVS     R1,R0
   \       0x1E   0xD101             BNE.N    ??CrossCallReturnLabel_17
    337                return status;
    338              }
    339            }
    340          
    341            // The GlobalSceneControl attribute shall be set to true after the reception
    342            // of a standard ZCL on command.
    343            return writeGlobalSceneControl(endpoint, true);
   \                     ??emberAfPluginZllOnOffServerOnZllExtensions_0: (+1)
   \       0x20   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_17: (+1)
   \       0x24   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    344          }
    345          

   \                                 In section .text, align 2, keep-with-next
    346          EmberAfStatus emberAfPluginZllOnOffServerToggleZllExtensions(const EmberAfClusterCommand *cmd)
    347          {
   \                     emberAfPluginZllOnOffServerToggleZllExtensions: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    348            // On receipt of the toggle command, if the value of the OnOff attribute is
    349            // equal to 0x00 and if the value of the OnTime attribute is equal to 0x0000,
    350            // the device shall set the OffWaitTime attribute to 0x0000.  If the value of
    351            // the OnOff attribute is equal to 0x01, the OnTime attribute shall be set to
    352            // 0x0000.  When this function is called, the OnOff attribute has already
    353            // been toggled, so the logic is reversed.
    354            //
    355            // The GlobalSceneControl attribute shall be set to true after the
    356            // receiption of a command which causes the OnOff attribute to be set to
    357            // true, e.g. ZCL toggle command
    358            bool onOff;
    359            uint8_t endpoint = cmd->apsFrame->destinationEndpoint;
   \        0x2   0x6800             LDR      R0,[R0, #+0]
    360            EmberAfStatus status = readOnOff(endpoint, &onOff);
   \        0x4   0x466B             MOV      R3,SP
   \        0x6   0x....             LDR.N    R2,??DataTable11
   \        0x8   0x7944             LDRB     R4,[R0, #+5]
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0x4620             MOV      R0,R4
   \        0xE   0x....'....        BL       readBoolean
    361            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x12   0x0001             MOVS     R1,R0
   \       0x14   0xD115             BNE.N    ??CrossCallReturnLabel_19
    362              return status;
    363            } else if (onOff) {
   \       0x16   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0x1A   0xB178             CBZ.N    R0,??emberAfPluginZllOnOffServerToggleZllExtension_0
    364              uint16_t onTime;
    365              status = readOnTime(endpoint, &onTime);
   \       0x1C   0xF10D 0x0302      ADD      R3,SP,#+2
   \       0x20   0x....'....        BL       ??Subroutine3_0
    366              if (status == EMBER_ZCL_STATUS_SUCCESS && onTime == 0x0000) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0x24   0x0001             MOVS     R1,R0
   \       0x26   0xD104             BNE.N    ??CrossCallReturnLabel_23
   \       0x28   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \       0x2C   0xB918             CBNZ.N   R0,??emberAfPluginZllOnOffServerToggleZllExtension_1
    367                status = writeOffWaitTime(endpoint, 0x0000);
   \       0x2E   0x....'....        BL       ?Subroutine2
    368              }
    369          
    370              if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_23: (+1)
   \       0x32   0x0001             MOVS     R1,R0
   \       0x34   0xD105             BNE.N    ??CrossCallReturnLabel_19
    371                status = writeGlobalSceneControl(endpoint, true);
   \                     ??emberAfPluginZllOnOffServerToggleZllExtension_1: (+1)
   \       0x36   0x....'....        BL       ?Subroutine4
    372              }
    373          
    374              return status;
   \                     ??CrossCallReturnLabel_16: (+1)
   \       0x3A   0xBD16             POP      {R1,R2,R4,PC}
    375            } else {
    376              return writeOnTime(endpoint, 0x0000);
   \                     ??emberAfPluginZllOnOffServerToggleZllExtension_0: (+1)
   \       0x3C   0x2300             MOVS     R3,#+0
   \       0x3E   0x....'....        BL       ??Subroutine9_0
    377            }
   \                     ??CrossCallReturnLabel_19: (+1)
   \       0x42   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    378          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \        0x4   0xF244 0x0101      MOVW     R1,#+16385
   \        0x8   0x....             LDR.N    R2,??DataTable11_1
   \        0xA   0x4770             BX       LR
    379          

   \                                 In section .text, align 2, keep-with-next
    380          EmberAfStatus emberAfPluginZllOnOffServerLevelControlZllExtensions(uint8_t endpoint)
    381          {
   \                     emberAfPluginZllOnOffServerLevelControlZllExtensions: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    382            // On receipt of a level control cluster command that causes the OnOff
    383            // attribute to be set to 0x00, the OnTime attribute shall be set to 0x0000.
    384            // On receipt of a level control cluster command that causes the OnOff
    385            // attribute to be set to 0x01, if the value of the OnTime attribute is equal
    386            // to 0x0000, the device shall set the OffWaitTime attribute to 0x0000.
    387            bool onOff;
    388            EmberAfStatus status = readOnOff(endpoint, &onOff);
   \        0x4   0x466B             MOV      R3,SP
   \        0x6   0x....             LDR.N    R2,??DataTable11
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0x....'....        BL       readBoolean
    389            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \        0xE   0x0001             MOVS     R1,R0
   \       0x10   0xD114             BNE.N    ??CrossCallReturnLabel_18
    390              return status;
    391            } else if (!onOff) {
   \       0x12   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_7: (+1)
   \       0x16   0xB908             CBNZ.N   R0,??emberAfPluginZllOnOffServerLevelControlZllExt_0
    392              return writeOnTime(endpoint, 0x0000);
   \       0x18   0x2300             MOVS     R3,#+0
   \       0x1A   0xE00D             B.N      ??emberAfPluginZllOnOffServerLevelControlZllExt_1
    393            } else {
    394              uint16_t onTime;
    395              status = readOnTime(endpoint, &onTime);
   \                     ??emberAfPluginZllOnOffServerLevelControlZllExt_0: (+1)
   \       0x1C   0xF10D 0x0302      ADD      R3,SP,#+2
   \       0x20   0x....'....        BL       ??Subroutine3_0
    396              if (status == EMBER_ZCL_STATUS_SUCCESS && onTime == 0x0000) {
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x24   0x0001             MOVS     R1,R0
   \       0x26   0xBF04             ITT      EQ 
   \       0x28   0xF8BD 0x1002      LDRHEQ   R1,[SP, #+2]
   \       0x2C   0x2900             CMPEQ    R1,#+0
   \       0x2E   0xD105             BNE.N    ??CrossCallReturnLabel_18
    397                status = writeOffWaitTime(endpoint, 0x0000);
   \       0x30   0x2300             MOVS     R3,#+0
   \       0x32   0x....             LDR.N    R2,??DataTable11_2
   \       0x34   0xF244 0x0102      MOVW     R1,#+16386
    398              }
   \                     ??emberAfPluginZllOnOffServerLevelControlZllExt_1: (+1)
   \       0x38   0x....'....        BL       ??Subroutine9_0
    399              return status;
   \                     ??CrossCallReturnLabel_18: (+1)
   \       0x3C   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    400            }
    401          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \        0x0   0x....'....        DC32     emAfCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x6F 0x6E          DC8 "on/off"
   \              0x2F 0x6F    
   \              0x66 0x66    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x6F 0x6E          DC8 "on time"
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x6F 0x66          DC8 "off wait time"
   \              0x66 0x20    
   \              0x77 0x61    
   \              0x69 0x74    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x67 0x6C          DC8 "global scene control"
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x20 0x73    
   \              0x63 0x65    
   \              0x6E 0x65    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \              0x74 0x72    
   \              0x6F 0x6C    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   emberAfOnOffClusterOffWithEffectCallback
        24   -> emberAfOnOffClusterSetValueCallback
        24   -> emberAfPluginZllOnOffServerOffWithEffectCallback
        24   -> emberAfScenesClusterStoreCurrentSceneCallback
        24   -> emberAfSendImmediateDefaultResponse
        24   -> readBoolean
        24   -> writeBoolean
        24   -> writeInt16u
      16   emberAfOnOffClusterOnWithRecallGlobalSceneCallback
        16   -> emberAfScenesClusterRecallSavedSceneCallback
        16   -> emberAfSendImmediateDefaultResponse
        16   -> readBoolean
        16   -> readInt16u
        16   -> writeBoolean
        16   -> writeInt16u
      48   emberAfOnOffClusterOnWithTimedOffCallback
        48   -> emberAfDeactivateServerTick
        48   -> emberAfScheduleServerTick
        48   -> emberAfSendImmediateDefaultResponse
        48   -> readBoolean
        48   -> readInt16u
        48   -> writeBoolean
        48   -> writeInt16u
      40   emberAfOnOffClusterServerTickCallback
        40   -> emberAfScheduleServerTick
        40   -> readBoolean
        40   -> readInt16u
        40   -> writeBoolean
        40   -> writeInt16u
      16   emberAfPluginZllOnOffServerLevelControlZllExtensions
        16   -> readBoolean
        16   -> readInt16u
        16   -> writeInt16u
       0   emberAfPluginZllOnOffServerOffZllExtensions
         0   -> writeInt16u
      16   emberAfPluginZllOnOffServerOnZllExtensions
        16   -> readInt16u
        16   -> writeBoolean
        16   -> writeInt16u
      16   emberAfPluginZllOnOffServerToggleZllExtensions
        16   -> readBoolean
        16   -> readInt16u
        16   -> writeBoolean
        16   -> writeInt16u
       8   readBoolean
         8   -> emberAfReadServerAttribute
       8   readInt16u
         8   -> emberAfReadServerAttribute
      16   writeBoolean
        16   -> emberAfWriteServerAttribute
      16   writeInt16u
        16   -> emberAfWriteServerAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??Subroutine8_0
       4  ??Subroutine9_0
      10  ?Subroutine0
      12  ?Subroutine1
       8  ?Subroutine2
       8  ?Subroutine3
       8  ?Subroutine4
      12  ?Subroutine5
      12  ?Subroutine6
       4  ?Subroutine7
       8  ?_0
       8  ?_1
      16  ?_2
      24  ?_3
     138  emberAfOnOffClusterOffWithEffectCallback
     102  emberAfOnOffClusterOnWithRecallGlobalSceneCallback
     278  emberAfOnOffClusterOnWithTimedOffCallback
     178  emberAfOnOffClusterServerTickCallback
      62  emberAfPluginZllOnOffServerLevelControlZllExtensions
      14  emberAfPluginZllOnOffServerOffZllExtensions
      38  emberAfPluginZllOnOffServerOnZllExtensions
      68  emberAfPluginZllOnOffServerToggleZllExtensions
       8  readBoolean
       6  readInt16u
       8  writeBoolean
       6  writeInt16u

 
    56 bytes in section .rodata
 1 008 bytes in section .text
 
 1 008 bytes of CODE  memory
    56 bytes of CONST memory

Errors: none
Warnings: none
