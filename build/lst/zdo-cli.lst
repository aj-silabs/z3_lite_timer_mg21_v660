###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:20:08
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\cli\zdo-cli.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW7CE4.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\cli\zdo-cli.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"zdo-cli.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0
#        -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\cli\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\zdo-cli.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\zdo-cli.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\cli\zdo-cli.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief CLI commands for sending ZDO messages.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          // common include file
     19          #include "app/framework/util/common.h"
     20          #include "app/framework/util/af-main.h"
     21          
     22          #include "app/util/serial/command-interpreter2.h"
     23          
     24          #include "app/util/zigbee-framework/zigbee-device-common.h"
     25          
     26          #if defined(EZSP_HOST)
     27            #include "app/util/zigbee-framework/zigbee-device-host.h"
     28          #else // SOC
     29            #include "app/util/zigbee-framework/zigbee-device-library.h"
     30          #endif
     31          
     32          #include "app/framework/cli/option-cli.h"
     33          
     34          //------------------------------------------------------------------------------
     35          // Forward declarations
     36          
     37          void zdoNwkAddressRequestCommand(void);
     38          void zdoIeeeAddressRequestCommand(void);
     39          void zdoSimpleCommand(void);
     40          void zdoNodeCommand(void);
     41          void zdoMatchCommand(void);
     42          void zdoBindCommand(void);
     43          void zdoAddClusterCommand(void);
     44          void zdoClearClusterCommand(void);
     45          void zdoNetworkUpdateChannelCommand(void);
     46          void zdoNetworkUpdateScanCommand(void);
     47          void zdoNetworkUpdateSetCommand(void);
     48          void zdoActiveEpCommand(void);
     49          void zdoMgmtLqiCommand(void);
     50          void zdoMgmtBindCommand(void);
     51          
     52          EmberStatus matchDescriptorsRequest(EmberNodeId target,
     53                                              uint16_t profile,
     54                                              uint8_t inCount,
     55                                              uint8_t outCount,
     56                                              uint16_t *inClusters,
     57                                              uint16_t *outClusters,
     58                                              EmberApsOption options);
     59          
     60          //------------------------------------------------------------------------------
     61          // Globals
     62          
     63          #ifndef EMBER_AF_GENERATE_CLI
     64          
     65          static const char * addClusterArguments[] = {
     66            "ZCL Cluster to add.",
     67            NULL,
     68          };
     69          
     70          static EmberCommandEntry zdoClusterCommands[] = {
     71            emberCommandEntryActionWithDetails("add",
     72                                               zdoAddClusterCommand,
     73                                               "v",
     74                                               "Add a ZCL cluster to the CLI's list.",
     75                                               addClusterArguments),
     76            emberCommandEntryAction("clear",
     77                                    zdoClearClusterCommand,
     78                                    "",
     79                                    "Remove all ZCL clusters from the CLI's list"),
     80            emberCommandEntryTerminator(),
     81          };
     82          
     83          static const char * channelChangeArguments[] = {
     84            "Channel to change to.",
     85            NULL,
     86          };
     87          
     88          static const char * channelScanArguments[] = {
     89            "Target Node ID",
     90            "Scan Duration",  // see stack/include/zigbee-device-stack.h for enumeration
     91            "Scan count",
     92            NULL,
     93          };
     94          
     95          static const char * channelManagerArguments[] = {
     96            "NWK manager node ID",
     97            "Channel mask",
     98            NULL,
     99          };
    100          
    101          static EmberCommandEntry zdoNetworkUpdateCommands[] = {
    102            emberCommandEntryActionWithDetails("chan",
    103                                               zdoNetworkUpdateChannelCommand,
    104                                               "uu*",
    105                                               "Send a channel change command.",
    106                                               channelChangeArguments),
    107            emberCommandEntryActionWithDetails("scan",
    108                                               zdoNetworkUpdateScanCommand,
    109                                               "vuvw*",
    110                                               "Tell a remote node to perform a channel scan",
    111                                               channelScanArguments),
    112            emberCommandEntryActionWithDetails("set",
    113                                               zdoNetworkUpdateSetCommand,
    114                                               "vw",
    115                                               "Broadcast a new NWK manager Node ID and channel list.",
    116                                               channelManagerArguments),
    117            emberCommandEntryTerminator(),
    118          };
    119          
    120          static const char * simpleDescriptorArguments[] = {
    121            "The target node ID",
    122            "The target endpoint",
    123            NULL,
    124          };
    125          
    126          static const char * zdoMatchCommandArguments[] = {
    127            "Target node ID",
    128            "Profile ID",
    129            NULL,
    130          };
    131          
    132          static const char * zdoBindCommandArguments[] = {
    133            "Dest node ID",
    134            "local EP",
    135            "remote EP",
    136            "cluster ID",
    137            "THEIR EUI",
    138            "binding dest EUI",
    139            NULL,
    140          };
    141          
    142          static const char * zdoMgmtLqiCommandArguments[] = {
    143            "Dest node ID",
    144            "start index",
    145            NULL,
    146          };
    147          
    148          EmberCommandEntry zdoCommands[] = {
    149            emberCommandEntryAction("active",
    150                                    zdoActiveEpCommand,
    151                                    "v",
    152                                    "Send an Active EP request"),
    153            emberCommandEntryActionWithDetails("bind",
    154                                               zdoBindCommand,
    155                                               "vuuvbb",
    156                                               "Sends bind request",
    157                                               zdoBindCommandArguments),
    158            emberCommandEntryAction("ieee",
    159                                    zdoIeeeAddressRequestCommand,
    160                                    "v",
    161                                    "Unicast an IEEE address request to the specified node."),
    162            emberCommandEntrySubMenu("in-cl-list",
    163                                     zdoClusterCommands,
    164                                     "Modify input cluster list"),
    165            emberCommandEntryActionWithDetails("match",
    166                                               zdoMatchCommand,
    167                                               "vv",
    168                                               "Send a match descriptor request using CLI configured in/out clusters.",
    169                                               zdoMatchCommandArguments),
    170            emberCommandEntryActionWithDetails("mgmt-lqi",
    171                                               zdoMgmtLqiCommand,
    172                                               "vu",
    173                                               "Send a MGMT-LQI (LQI Table) request to target",
    174                                               zdoMgmtLqiCommandArguments),
    175            emberCommandEntryActionWithDetails("mgmt-bind",
    176                                               zdoMgmtBindCommand,
    177                                               "vu",
    178                                               "Send a MGMT-Bind (Binding Table) request to target",
    179                                               zdoMgmtLqiCommandArguments), // Binding Table Req uses same args as LQI Table Req
    180            emberCommandEntryAction("node",
    181                                    zdoNodeCommand,
    182                                    "v",
    183                                    "Send a node descriptor request to target"),
    184            emberCommandEntryAction("nwk",
    185                                    zdoNwkAddressRequestCommand,
    186                                    "b",
    187                                    "Broadcast a NWK address request for the specified IEEE."),
    188            emberCommandEntrySubMenu("nwk-upd",
    189                                     zdoNetworkUpdateCommands,
    190                                     "Frequency Agility Commands"),
    191            emberCommandEntrySubMenu("out-cl-list",
    192                                     zdoClusterCommands,
    193                                     "Modify output cluster list"),
    194            emberCommandEntryActionWithDetails("simple",
    195                                               zdoSimpleCommand,
    196                                               "vu",
    197                                               "Send a Simple Descriptor request to the target node and endpoint",
    198                                               simpleDescriptorArguments),
    199            emberCommandEntryTerminator(),
    200          };
    201          
    202          #endif // EMBER_AF_GENERATE_CLI
    203          
    204          #define MAX_CLUSTERS_CAN_MATCH 5

   \                                 In section .bss, align 4
    205          uint16_t emAfCliZdoInClusters[MAX_CLUSTERS_CAN_MATCH];
   \                     emAfCliZdoInClusters:
   \        0x0                      DS8 12

   \                                 In section .bss, align 4
    206          uint16_t emAfCliZdoOutClusters[MAX_CLUSTERS_CAN_MATCH];
   \                     emAfCliZdoOutClusters:
   \        0x0                      DS8 12

   \                                 In section .bss, align 1
    207          uint8_t emAfCliInClCount = 0;
   \                     emAfCliInClCount:
   \        0x0                      DS8 1

   \                                 In section .bss, align 1
    208          uint8_t emAfCliOutClCount = 0;
   \                     emAfCliOutClCount:
   \        0x0                      DS8 1
    209          
    210          //------------------------------------------------------------------------------
    211          
    212          // *****************************************
    213          // zdoCommand
    214          //
    215          // zdo nwk <eui64:big-endian>
    216          // zdo ieee <node-id>
    217          // zdo simple <dest> <target ep>
    218          // zdo node <dest>
    219          // zdo match  <dest> <profile>
    220          // zdo bind   <dest> <local ep> <remote ep> <cluster> <THEIR eui> <dest eui>
    221          // zdo in-cl-list add <cluster IDs>
    222          // zdo in-cl-list clear
    223          // zdo out-cl-list add <clusters IDs>
    224          // zdo out-cl-list clear
    225          // zdo nwk-upd chan  <channel>
    226          // zdo nwk-upd set   <nwk mgr id>  <chan mask>
    227          // zdo nwk-upd scan  <target> <duration> <count>
    228          // zdo active <target>
    229          // *****************************************
    230          

   \                                 In section .text, align 2, keep-with-next
    231          void zdoNwkAddressRequestCommand(void)
    232          {
   \                     zdoNwkAddressRequestCommand: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
    233            EmberEUI64 eui64;
    234            emberCopyBigEndianEui64Argument(0, eui64);
   \        0x2   0x4669             MOV      R1,SP
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x....'....        BL       emberCopyBigEndianEui64Argument
    235            emberAfFindNodeId(eui64,
    236                              emAfCliServiceDiscoveryCallback);
   \        0xA   0x....'....        LDR.W    R1,??DataTable21
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x....'....        BL       emberAfFindNodeId
    237          }
   \       0x14   0xBD07             POP      {R0-R2,PC}       ;; return
    238          

   \                                 In section .text, align 2, keep-with-next
    239          void zdoIeeeAddressRequestCommand(void)
    240          {
   \                     zdoIeeeAddressRequestCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    241            EmberNodeId id = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
    242            emberAfFindIeeeAddress(id,
    243                                   emAfCliServiceDiscoveryCallback);
   \                     ??CrossCallReturnLabel_16: (+1)
   \        0x6   0x....'....        LDR.W    R1,??DataTable21
   \        0xA   0xB280             UXTH     R0,R0
   \        0xC   0xE8BD 0x4004      POP      {R2,LR}
   \       0x10   0x....'....        B.W      emberAfFindIeeeAddress
    244          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....'....        B.W      emberUnsignedCommandArgument
    245          

   \                                 In section .text, align 2, keep-with-next
    246          void zdoSimpleCommand(void)
    247          {
   \                     zdoSimpleCommand: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    248            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_15: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    249            uint8_t targetEndpoint = (uint8_t)emberUnsignedCommandArgument(1);
    250            EmberStatus status = emberSimpleDescriptorRequest(target,
    251                                                              targetEndpoint,
    252                                                              EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??CrossCallReturnLabel_24: (+1)
   \        0xA   0xB2C1             UXTB     R1,R0
   \        0xC   0xF44F 0x528A      MOV      R2,#+4416
   \       0x10   0xB2A0             UXTH     R0,R4
   \       0x12   0x....'....        BL       emberSimpleDescriptorRequest
    253            emberAfAppPrintln("ZDO simple desc req %x", status);
   \       0x16   0x4602             MOV      R2,R0
   \       0x18   0x....'....        LDR.W    R1,??DataTable21_1
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0xE8BD 0x4010      POP      {R4,LR}
   \       0x22   0x....'....        B.W      emberAfPrintln
    254          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x4604             MOV      R4,R0
   \        0x2   0x2001             MOVS     R0,#+1
   \        0x4   0x....'....        B.W      emberUnsignedCommandArgument
    255          

   \                                 In section .text, align 2, keep-with-next
    256          void zdoNodeCommand(void)
    257          {
   \                     zdoNodeCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    258            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
    259            EmberStatus status = emberNodeDescriptorRequest(target,
    260                                                            EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??CrossCallReturnLabel_14: (+1)
   \        0x6   0xF44F 0x528A      MOV      R2,#+4416
   \        0xA   0x2102             MOVS     R1,#+2
   \        0xC   0xB280             UXTH     R0,R0
   \        0xE   0x....'....        BL       emberSendZigDevRequestTarget
    261            emberAfAppPrintln("ZDO node desc req %x", status);
   \       0x12   0x4602             MOV      R2,R0
   \       0x14   0x....'....        LDR.W    R1,??DataTable21_2
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0xE8BD 0x4008      POP      {R3,LR}
   \       0x1E   0x....'....        B.W      emberAfPrintln
    262          }
    263          

   \                                 In section .text, align 2, keep-with-next
    264          void zdoMatchCommand(void)
    265          {
   \                     zdoMatchCommand: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
    266            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_13: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    267            uint16_t profile = (uint16_t)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_23: (+1)
   \        0xA   0x4601             MOV      R1,R0
    268            EmberStatus status = matchDescriptorsRequest(target,
    269                                                         profile,
    270                                                         emAfCliInClCount,
    271                                                         emAfCliOutClCount,
    272                                                         emAfCliZdoInClusters,
    273                                                         emAfCliZdoOutClusters,
    274                                                         EMBER_AF_DEFAULT_APS_OPTIONS);
   \        0xC   0xF44F 0x508A      MOV      R0,#+4416
   \       0x10   0x....'....        LDR.W    R3,??DataTable21_3
   \       0x14   0x9002             STR      R0,[SP, #+8]
   \       0x16   0x....'....        LDR.W    R2,??DataTable21_4
   \       0x1A   0x9300             STR      R3,[SP, #+0]
   \       0x1C   0x....'....        LDR.W    R5,??DataTable21_5
   \       0x20   0x9201             STR      R2,[SP, #+4]
   \       0x22   0x782B             LDRB     R3,[R5, #+0]
   \       0x24   0x....'....        LDR.W    R0,??DataTable21_6
   \       0x28   0x7802             LDRB     R2,[R0, #+0]
   \       0x2A   0xB289             UXTH     R1,R1
   \       0x2C   0xB2A0             UXTH     R0,R4
   \       0x2E   0x....'....        BL       matchDescriptorsRequest
    275            emberAfAppPrintln("ZDO match desc req %x", status);
   \       0x32   0x4602             MOV      R2,R0
   \       0x34   0xB003             ADD      SP,SP,#+12
   \       0x36   0x....'....        LDR.W    R1,??DataTable21_7
   \       0x3A   0x2002             MOVS     R0,#+2
   \       0x3C   0xE8BD 0x4030      POP      {R4,R5,LR}
   \       0x40   0x....'....        B.W      emberAfPrintln
    276          }
    277          

   \                                 In section .text, align 2, keep-with-next
    278          static EmberStatus copyOrLookupEui64(uint8_t argumentNumber,
    279                                               EmberNodeId nodeId,
    280                                               EmberEUI64 returnEui64)
    281          {
   \                     copyOrLookupEui64: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x4615             MOV      R5,R2
    282            EmberStatus status = EMBER_SUCCESS;
    283            if (0 == emberCopyBigEndianEui64Argument(argumentNumber, returnEui64)) {
   \        0x6   0x4629             MOV      R1,R5
   \        0x8   0xB240             SXTB     R0,R0
   \        0xA   0x2600             MOVS     R6,#+0
   \        0xC   0x....'....        BL       emberCopyBigEndianEui64Argument
   \       0x10   0xB948             CBNZ.N   R0,??CrossCallReturnLabel_32
    284              status = emberLookupEui64ByNodeId(nodeId, returnEui64);
   \       0x12   0x4629             MOV      R1,R5
   \       0x14   0x4620             MOV      R0,R4
   \       0x16   0x....'....        BL       emberLookupEui64ByNodeId
   \       0x1A   0x0006             MOVS     R6,R0
    285              if (status != EMBER_SUCCESS) {
   \       0x1C   0xD003             BEQ.N    ??CrossCallReturnLabel_32
    286                emberAfAppPrintln("Error:  EUI64 argument is empty and lookup by node ID failed.");
   \       0x1E   0x....'....        LDR.W    R1,??DataTable21_8
   \       0x22   0x....'....        BL       ?Subroutine5
    287              }
    288            }
    289            return status;
   \                     ??CrossCallReturnLabel_32: (+1)
   \       0x26   0x4630             MOV      R0,R6
   \       0x28   0xBD70             POP      {R4-R6,PC}       ;; return
    290          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x2002             MOVS     R0,#+2
   \        0x2   0x....'....        B.W      emberAfPrintln
    291          
    292          // For simple bind requests, just put {} as the last argument
    293          //   zdo bind <dest> <local ep> <remote ep> <cluster> <THEIR EUI> {}
    294          //
    295          // More complex requests, you can actually specify the dest EUI64 of,
    296          // the binding, which is NOT the same as the EUI64 of the destination
    297          // of the device receiving the binding.  This allows for a user
    298          // to set multiple bindings on the destination for different devices.
    299          //   zdo bind <dest> <local ep> <remote ep> <cluster> <THEIR EUI> <dest EUI64>

   \                                 In section .text, align 2, keep-with-next
    300          void zdoBindCommand(void)
    301          {
   \                     zdoBindCommand: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB08A             SUB      SP,SP,#+40
    302            EmberStatus status;
    303            EmberEUI64 sourceEui, destEui;  // names relative to binding sent over-the-air
    304            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x4   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_12: (+1)
   \        0x8   0x....'....        BL       ?Subroutine3
    305            uint8_t sourceEndpoint = (uint8_t)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_22: (+1)
   \        0xC   0x....'....        BL       ?Subroutine4
    306            uint8_t destinationEndpoint = (uint8_t)emberUnsignedCommandArgument(2);
   \                     ??CrossCallReturnLabel_28: (+1)
   \       0x10   0x4606             MOV      R6,R0
    307            uint16_t clusterId = (uint16_t)emberUnsignedCommandArgument(3);
   \       0x12   0x2003             MOVS     R0,#+3
   \       0x14   0x....'....        BL       emberUnsignedCommandArgument
   \       0x18   0x4607             MOV      R7,R0
    308          
    309            // NOTE:  The source/dest EUI is relative to the context.
    310            // In the case of the syntax of the CLI, we take "THEIR EUI64" to mean
    311            // the recipient of the binding request message.  However, when sending
    312            // the bind request that EUI64 used by the ZDO command is
    313            // actually the source for the binding because we are telling the remote
    314            // device (the destination) to create a binding with a source of itself.
    315            // And the destination for that binding will be this local device.
    316            // This is also not to be confused with the (short) destination of the ZDO
    317            // request itself.
    318            if (EMBER_SUCCESS != copyOrLookupEui64(4, target, sourceEui)) {
   \       0x1A   0xAA08             ADD      R2,SP,#+32
   \       0x1C   0xB2A1             UXTH     R1,R4
   \       0x1E   0x2004             MOVS     R0,#+4
   \       0x20   0x....'....        BL       copyOrLookupEui64
   \       0x24   0xBB18             CBNZ.N   R0,??zdoBindCommand_0
    319              return;
    320            }
    321          
    322            // If the last argument is empty, assume an EUI64 of the local device.
    323            // This allows for the simple case.  If an EUI64 is specified, it will
    324            // be used instead of the local EUI.  This is used for setting
    325            // multiple bindings on the same remote device.
    326            if (0 == emberCopyBigEndianEui64Argument(5, destEui)) {
   \       0x26   0xA906             ADD      R1,SP,#+24
   \       0x28   0x2005             MOVS     R0,#+5
   \       0x2A   0x....'....        BL       emberCopyBigEndianEui64Argument
   \       0x2E   0xB930             CBNZ.N   R0,??zdoBindCommand_1
    327              emberAfAppPrintln("Using my local EUI64 for dest EUI64 in binding");
   \       0x30   0x....'....        LDR.W    R1,??DataTable21_9
   \       0x34   0x....'....        BL       ?Subroutine5
    328              emberAfGetEui64(destEui);
   \                     ??CrossCallReturnLabel_31: (+1)
   \       0x38   0xA806             ADD      R0,SP,#+24
   \       0x3A   0x....'....        BL       emberAfGetEui64
    329            }
    330          
    331            status = emberBindRequest(target,           // who gets the bind req
    332                                      sourceEui,       // source eui IN the binding
    333                                      sourceEndpoint,
    334                                      clusterId,
    335                                      UNICAST_BINDING, // binding type
    336                                      destEui,         // destination eui IN the binding
    337                                      0,               // groupId for new binding
    338                                      destinationEndpoint,
    339                                      EMBER_AF_DEFAULT_APS_OPTIONS);
   \                     ??zdoBindCommand_1: (+1)
   \       0x3E   0xF44F 0x508A      MOV      R0,#+4416
   \       0x42   0x2100             MOVS     R1,#+0
   \       0x44   0xAA06             ADD      R2,SP,#+24
   \       0x46   0x2303             MOVS     R3,#+3
   \       0x48   0x9005             STR      R0,[SP, #+20]
   \       0x4A   0xB2F6             UXTB     R6,R6
   \       0x4C   0x9103             STR      R1,[SP, #+12]
   \       0x4E   0x9202             STR      R2,[SP, #+8]
   \       0x50   0x9301             STR      R3,[SP, #+4]
   \       0x52   0xB2BF             UXTH     R7,R7
   \       0x54   0x9604             STR      R6,[SP, #+16]
   \       0x56   0x9700             STR      R7,[SP, #+0]
   \       0x58   0xB2EB             UXTB     R3,R5
   \       0x5A   0xAA08             ADD      R2,SP,#+32
   \       0x5C   0x2121             MOVS     R1,#+33
   \       0x5E   0xB2A0             UXTH     R0,R4
   \       0x60   0x....'....        BL       emberSendZigDevBindRequest
    340            UNUSED_VAR(status);
    341            emberAfAppPrintln("ZDO bind req %x", status);
   \       0x64   0x4602             MOV      R2,R0
   \       0x66   0x....             LDR.N    R1,??DataTable21_10
   \       0x68   0x2002             MOVS     R0,#+2
   \       0x6A   0x....'....        BL       emberAfPrintln
    342          }
   \                     ??zdoBindCommand_0: (+1)
   \       0x6E   0xB00B             ADD      SP,SP,#+44
   \       0x70   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0x4605             MOV      R5,R0
   \                     ??Subroutine4_0: (+1)
   \        0x2   0x2002             MOVS     R0,#+2
   \        0x4   0x....'....        B.W      emberUnsignedCommandArgument
    343          

   \                                 In section .text, align 2, keep-with-next
    344          void zdoAddClusterCommand(void)
    345          {
   \                     zdoAddClusterCommand: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    346            uint16_t *clusters;
    347            uint8_t *clCount;
    348            if (emberStringCommandArgument(-2, NULL)[0]  == 'i') {
   \        0x2   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_34: (+1)
   \        0x6   0x7801             LDRB     R1,[R0, #+0]
   \        0x8   0x2969             CMP      R1,#+105
   \        0xA   0xBF07             ITTEE    EQ 
   \        0xC   0x....             LDREQ.N  R4,??DataTable21_3
   \        0xE   0x....             LDREQ.N  R5,??DataTable21_6
   \       0x10   0x....             LDRNE.N  R4,??DataTable21_4
   \       0x12   0x....             LDRNE.N  R5,??DataTable21_5
    349              clusters = emAfCliZdoInClusters;
    350              clCount = &emAfCliInClCount;
    351            } else {
    352              clusters = emAfCliZdoOutClusters;
    353              clCount = &emAfCliOutClCount;
    354            }
    355          
    356            if (*clCount < MAX_CLUSTERS_CAN_MATCH) {
   \       0x14   0x7828             LDRB     R0,[R5, #+0]
   \       0x16   0x2805             CMP      R0,#+5
   \       0x18   0xDA08             BGE.N    ??zdoAddClusterCommand_0
    357              clusters[*clCount] = (uint16_t)emberUnsignedCommandArgument(0);
   \       0x1A   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0x1E   0x7829             LDRB     R1,[R5, #+0]
   \       0x20   0xF824 0x0011      STRH     R0,[R4, R1, LSL #+1]
    358              (*clCount)++;
   \       0x24   0x7828             LDRB     R0,[R5, #+0]
   \       0x26   0x1C40             ADDS     R0,R0,#+1
   \       0x28   0x7028             STRB     R0,[R5, #+0]
   \       0x2A   0xBD31             POP      {R0,R4,R5,PC}
    359            } else {
    360              emberAfAppPrintln("cluster limit reached");
   \                     ??zdoAddClusterCommand_0: (+1)
   \       0x2C   0x....             LDR.N    R1,??DataTable21_11
   \       0x2E   0x2002             MOVS     R0,#+2
   \       0x30   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x34   0x....'....        B.W      emberAfPrintln
    361            }
    362          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0xF06F 0x0001      MVN      R0,#+1
   \        0x6   0x....'....        B.W      emberStringCommandArgument
    363          

   \                                 In section .text, align 2, keep-with-next
    364          void zdoClearClusterCommand(void)
    365          {
   \                     zdoClearClusterCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    366            if (emberStringCommandArgument(-2, NULL)[0]  == 'i') {
   \        0x2   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_33: (+1)
   \        0x6   0x7801             LDRB     R1,[R0, #+0]
   \        0x8   0x2969             CMP      R1,#+105
   \        0xA   0xD103             BNE.N    ??zdoClearClusterCommand_0
    367              emAfCliInClCount = 0;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x....             LDR.N    R1,??DataTable21_6
   \       0x10   0x7008             STRB     R0,[R1, #+0]
   \       0x12   0xBD01             POP      {R0,PC}
    368            } else {
    369              emAfCliOutClCount = 0;
   \                     ??zdoClearClusterCommand_0: (+1)
   \       0x14   0x2200             MOVS     R2,#+0
   \       0x16   0x....             LDR.N    R0,??DataTable21_5
   \       0x18   0x7002             STRB     R2,[R0, #+0]
    370            }
    371          }
   \       0x1A   0xBD01             POP      {R0,PC}          ;; return
    372          

   \                                 In section .text, align 2, keep-with-next
    373          void zdoNetworkUpdateChannelCommand(void)
    374          {
   \                     zdoNetworkUpdateChannelCommand: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
    375            uint8_t channel = (uint8_t)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_10: (+1)
   \        0x6   0x4604             MOV      R4,R0
    376            uint8_t page = 0;
    377            EmberStatus status;
    378          
    379            if (emberCommandArgumentCount() > 1) {
   \        0x8   0x....'....        BL       emberCommandArgumentCount
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xDB04             BLT.N    ??zdoNetworkUpdateChannelCommand_0
    380              page = (uint8_t)emberUnsignedCommandArgument(1);
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0x....'....        BL       emberUnsignedCommandArgument
   \       0x16   0x4605             MOV      R5,R0
   \       0x18   0xE005             B.N      ??zdoNetworkUpdateChannelCommand_1
    381            } else {
    382              // page and channels are encoded in 8 bits as page 7..5 bits
    383              // channel 4...0 bits
    384              // 3rd and 4th bits are always 1's
    385              page = (uint8_t)(channel >> 5) | 0x18;
   \                     ??zdoNetworkUpdateChannelCommand_0: (+1)
   \       0x1A   0x0625             LSLS     R5,R4,#+24
   \       0x1C   0x0F6D             LSRS     R5,R5,#+29
   \       0x1E   0xF045 0x0518      ORR      R5,R5,#0x18
    386              channel = channel & 0x1F;
   \       0x22   0xF004 0x041F      AND      R4,R4,#0x1F
    387            }
    388          
    389            if (EMBER_SUCCESS != emAfValidateChannelPages(page, channel)) {
   \                     ??zdoNetworkUpdateChannelCommand_1: (+1)
   \       0x26   0xB2E1             UXTB     R1,R4
   \       0x28   0xB2E8             UXTB     R0,R5
   \       0x2A   0xB2EE             UXTB     R6,R5
   \       0x2C   0x....'....        BL       emAfValidateChannelPages
   \       0x30   0xB138             CBZ.N    R0,??zdoNetworkUpdateChannelCommand_2
    390              emberAfAppPrintln("invalid page: %d or channel: %d", page, channel);
   \       0x32   0xB2E3             UXTB     R3,R4
   \       0x34   0x4632             MOV      R2,R6
   \       0x36   0x....             LDR.N    R1,??DataTable21_12
   \       0x38   0x2002             MOVS     R0,#+2
   \       0x3A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \       0x3E   0x....'....        B.W      emberAfPrintln
    391            } else {
    392              if (page == EMBER_NO_CHANNEL_PAGE_IN_USE) {
   \                     ??zdoNetworkUpdateChannelCommand_2: (+1)
   \       0x42   0x2001             MOVS     R0,#+1
   \       0x44   0xFA00 0xF404      LSL      R4,R0,R4
   \       0x48   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x4C   0xB2ED             UXTB     R5,R5
   \       0x4E   0xB91D             CBNZ.N   R5,??zdoNetworkUpdateChannelCommand_3
    393                // Request for 2.4Ghz network if page is zero
    394                status = emberChannelChangeRequest(channel);
   \       0x50   0x2300             MOVS     R3,#+0
   \       0x52   0x22FE             MOVS     R2,#+254
   \       0x54   0x4621             MOV      R1,R4
   \       0x56   0xE003             B.N      ??zdoNetworkUpdateChannelCommand_4
    395              } else {
    396                // 31..27 bits for page and 26..0 for channels
    397                uint32_t pageChannelBitMask = (page << 27 | BIT32(channel));
    398                status = emberEnergyScanRequest(EMBER_SLEEPY_BROADCAST_ADDRESS,
    399                                                pageChannelBitMask,
    400                                                0xFE,
    401                                                0);
   \                     ??zdoNetworkUpdateChannelCommand_3: (+1)
   \       0x58   0x2300             MOVS     R3,#+0
   \       0x5A   0x22FE             MOVS     R2,#+254
   \       0x5C   0xEA44 0x61C6      ORR      R1,R4,R6, LSL #+27
   \                     ??zdoNetworkUpdateChannelCommand_4: (+1)
   \       0x60   0x....'....        BL       emberEnergyScanRequest
    402              }
    403              emberAfAppPrintln("Change channel status: 0x%x", status);
   \       0x64   0x4602             MOV      R2,R0
   \       0x66   0x....             LDR.N    R1,??DataTable21_13
   \       0x68   0x2002             MOVS     R0,#+2
   \       0x6A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \       0x6E   0x....'....        B.W      emberAfPrintln
    404            }
    405          }
    406          

   \                                 In section .text, align 2, keep-with-next
    407          void zdoNetworkUpdateScanCommand(void)
    408          {
   \                     zdoNetworkUpdateScanCommand: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    409            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_9: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    410            uint8_t scanDuration = (uint8_t)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_21: (+1)
   \        0xA   0x....'....        BL       ?Subroutine4
    411            uint16_t scanCount = (uint16_t)emberUnsignedCommandArgument(2);
   \                     ??CrossCallReturnLabel_27: (+1)
   \        0xE   0x4606             MOV      R6,R0
    412            uint32_t scanChannelsMask = EMBER_ALL_802_15_4_CHANNELS_MASK;
    413            if (scanDuration > 5 || scanCount == 0 || scanCount > 8) {
   \       0x10   0xB2E8             UXTB     R0,R5
   \       0x12   0x....             LDR.N    R7,??DataTable21_14  ;; 0x7fff800
   \       0x14   0x2806             CMP      R0,#+6
   \       0x16   0xDA03             BGE.N    ??zdoNetworkUpdateScanCommand_0
   \       0x18   0xB2B0             UXTH     R0,R6
   \       0x1A   0xB108             CBZ.N    R0,??zdoNetworkUpdateScanCommand_0
   \       0x1C   0x2809             CMP      R0,#+9
   \       0x1E   0xDB08             BLT.N    ??zdoNetworkUpdateScanCommand_1
    414              emberAfAppPrintln("duration must be in range 0 - 5");
   \                     ??zdoNetworkUpdateScanCommand_0: (+1)
   \       0x20   0x....             LDR.N    R1,??DataTable21_15
   \       0x22   0x....'....        BL       ?Subroutine5
    415              emberAfAppPrintln("count must be in range 1 - 8");
   \                     ??CrossCallReturnLabel_30: (+1)
   \       0x26   0x....             LDR.N    R1,??DataTable21_16
   \       0x28   0x2002             MOVS     R0,#+2
   \       0x2A   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \       0x2E   0x....'....        B.W      emberAfPrintln
    416            } else {
    417              if (emberCommandArgumentCount() > 3) {
   \                     ??zdoNetworkUpdateScanCommand_1: (+1)
   \       0x32   0x....'....        BL       emberCommandArgumentCount
   \       0x36   0x2804             CMP      R0,#+4
   \       0x38   0xDB03             BLT.N    ??zdoNetworkUpdateScanCommand_2
    418                scanChannelsMask = emberUnsignedCommandArgument(3);
   \       0x3A   0x2003             MOVS     R0,#+3
   \       0x3C   0x....'....        BL       emberUnsignedCommandArgument
   \       0x40   0x4607             MOV      R7,R0
    419              }
    420          
    421              EmberStatus status = emberEnergyScanRequest(target,
    422                                                          scanChannelsMask,
    423                                                          scanDuration,
    424                                                          scanCount);
   \                     ??zdoNetworkUpdateScanCommand_2: (+1)
   \       0x42   0xB2B3             UXTH     R3,R6
   \       0x44   0xB2EA             UXTB     R2,R5
   \       0x46   0x4639             MOV      R1,R7
   \       0x48   0xB2A0             UXTH     R0,R4
   \       0x4A   0x....'....        BL       emberEnergyScanRequest
    425              emberAfAppPrint("scan status 0x%x", status);
   \       0x4E   0x4602             MOV      R2,R0
   \       0x50   0x....             LDR.N    R1,??DataTable21_17
   \       0x52   0x2002             MOVS     R0,#+2
   \       0x54   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \       0x58   0x....'....        B.W      emberAfPrint
    426            }
    427          }
    428          

   \                                 In section .text, align 2, keep-with-next
    429          void zdoNetworkUpdateSetCommand(void)
    430          {
   \                     zdoNetworkUpdateSetCommand: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    431            EmberNodeId networkManager = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_8: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    432            uint32_t activeChannels = emberUnsignedCommandArgument(1);
    433            EmberStatus status = emberSetNetworkManagerRequest(networkManager,
    434                                                               activeChannels);
   \                     ??CrossCallReturnLabel_20: (+1)
   \        0xA   0x4601             MOV      R1,R0
   \        0xC   0xB2A3             UXTH     R3,R4
   \        0xE   0x22FF             MOVS     R2,#+255
   \       0x10   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x14   0x....'....        BL       emberEnergyScanRequest
    435            emberAfAppPrint("network update set status 0x%x", status);
   \       0x18   0x4602             MOV      R2,R0
   \       0x1A   0x....             LDR.N    R1,??DataTable21_18
   \       0x1C   0x....             B.N      ?Subroutine1
    436          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x2002             MOVS     R0,#+2
   \        0x2   0xE8BD 0x4010      POP      {R4,LR}
   \        0x6   0x....'....        B.W      emberAfPrint
    437          

   \                                 In section .text, align 2, keep-with-next
    438          void zdoActiveEpCommand(void)
    439          {
   \                     zdoActiveEpCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    440            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
    441            EmberStatus status = emberActiveEndpointsRequest(target,
    442                                                             EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_7: (+1)
   \        0x6   0x2240             MOVS     R2,#+64
   \        0x8   0x2105             MOVS     R1,#+5
   \        0xA   0xB280             UXTH     R0,R0
   \        0xC   0x....'....        BL       emberSendZigDevRequestTarget
    443            emberAfAppPrint("Active EP request status: 0x%X",
    444                            status);
   \       0x10   0x4602             MOV      R2,R0
   \       0x12   0x....             LDR.N    R1,??DataTable21_19
   \       0x14   0x2002             MOVS     R0,#+2
   \       0x16   0xE8BD 0x4008      POP      {R3,LR}
   \       0x1A   0x....'....        B.W      emberAfPrint
    445          }
    446          

   \                                 In section .text, align 2, keep-with-next
    447          void zdoMgmtLqiCommand(void)
    448          {
   \                     zdoMgmtLqiCommand: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    449            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_6: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    450            uint8_t index = emberUnsignedCommandArgument(1);
    451            EmberStatus status = emberLqiTableRequest(target,
    452                                                      index,
    453                                                      EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_19: (+1)
   \        0xA   0xB2C2             UXTB     R2,R0
   \        0xC   0x2340             MOVS     R3,#+64
   \        0xE   0xB2A1             UXTH     R1,R4
   \       0x10   0x2031             MOVS     R0,#+49
   \       0x12   0x....'....        BL       emberTableRequest
    454            emberAfAppPrint("LQI Table request: 0x%X", status);
   \       0x16   0x4602             MOV      R2,R0
   \       0x18   0x....             LDR.N    R1,??DataTable21_20
   \       0x1A                      REQUIRE ?Subroutine1
   \       0x1A                      ;; // Fall through to label ?Subroutine1
    455          }
    456          

   \                                 In section .text, align 2, keep-with-next
    457          void zdoMgmtBindCommand(void)
    458          {
   \                     zdoMgmtBindCommand: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    459            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_5: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    460            uint8_t index = emberUnsignedCommandArgument(1);
    461            EmberStatus status = emberBindingTableRequest(target,
    462                                                          index,
    463                                                          EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_18: (+1)
   \        0xA   0xB2C2             UXTB     R2,R0
   \        0xC   0x2340             MOVS     R3,#+64
   \        0xE   0xB2A1             UXTH     R1,R4
   \       0x10   0x2033             MOVS     R0,#+51
   \       0x12   0x....'....        BL       emberTableRequest
    464            emberAfAppPrint("Binding Table request: 0x%X", status);
   \       0x16   0x4602             MOV      R2,R0
   \       0x18   0x....             LDR.N    R1,??DataTable21_21
   \       0x1A   0x....             B.N      ?Subroutine1
    465          }
    466          

   \                                 In section .text, align 2, keep-with-next
    467          void zdoLeaveRequestCommand(void)
    468          {
   \                     zdoLeaveRequestCommand: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    469            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_4: (+1)
   \        0x6   0x4604             MOV      R4,R0
    470            // CCB 2047
    471            // - CCB makes the first step to depracate the 'leave and remove children' functionality.
    472            // - We were proactive here and deprecated it right away.
    473            // bool removeChildren = (bool)emberUnsignedCommandArgument(1);
    474            bool rejoin = (bool)emberUnsignedCommandArgument(2);
   \        0x8   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_26: (+1)
   \        0xC   0xB100             CBZ.N    R0,??zdoLeaveRequestCommand_0
   \        0xE   0x2001             MOVS     R0,#+1
    475            EmberEUI64 nullEui64 = { 0, 0, 0, 0, 0, 0, 0, 0 };
   \                     ??zdoLeaveRequestCommand_0: (+1)
   \       0x10   0x4669             MOV      R1,SP
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0xE9C1 0x2200      STRD     R2,R2,[R1, #+0]
    476            EmberStatus status;
    477          
    478            uint8_t options = 0;
    479            if (rejoin) {
   \       0x18   0xB100             CBZ.N    R0,??zdoLeaveRequestCommand_1
    480              options |= EMBER_ZIGBEE_LEAVE_AND_REJOIN;
   \       0x1A   0x2280             MOVS     R2,#+128
    481            }
    482          
    483            status = emberLeaveRequest(target,
    484                                       nullEui64,
    485                                       options,
    486                                       EMBER_APS_OPTION_RETRY);
   \                     ??zdoLeaveRequestCommand_1: (+1)
   \       0x1C   0x2340             MOVS     R3,#+64
   \       0x1E   0xB2A0             UXTH     R0,R4
   \       0x20   0x....'....        BL       emberLeaveRequest
    487          
    488            emberAfAppPrintln("Leave %p0x%X", "Request: ", status);
   \       0x24   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_35: (+1)
   \       0x28   0x....             LDR.N    R1,??DataTable21_22
   \       0x2A   0x2002             MOVS     R0,#+2
   \       0x2C   0x....'....        BL       emberAfPrintln
    489          }
   \       0x30   0xBD13             POP      {R0,R1,R4,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x4603             MOV      R3,R0
   \        0x2   0x....             LDR.N    R2,??DataTable21_25
   \        0x4   0x4770             BX       LR
    490          

   \                                 In section .text, align 2, keep-with-next
    491          void zdoPowerDescriptorRequestCommand(void)
    492          {
   \                     zdoPowerDescriptorRequestCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    493            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
    494            EmberStatus status = emberPowerDescriptorRequest(target,
    495                                                             EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_3: (+1)
   \        0x6   0x2240             MOVS     R2,#+64
   \        0x8   0x2103             MOVS     R1,#+3
   \        0xA   0xB280             UXTH     R0,R0
   \        0xC   0x....'....        BL       emberSendZigDevRequestTarget
    496            emberAfAppPrintln("Power Descriptor %p0x%X", "Request: ", status);
   \       0x10   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_36: (+1)
   \       0x14   0x....             LDR.N    R1,??DataTable21_23
   \       0x16   0x....             B.N      ?Subroutine0
    497          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x2002             MOVS     R0,#+2
   \        0x2   0xE8BD 0x5000      POP      {R12,LR}
   \        0x6   0x....'....        B.W      emberAfPrintln
    498          

   \                                 In section .text, align 2, keep-with-next
    499          void zdoEndDeviceBindRequestCommand(void)
    500          {
   \                     zdoEndDeviceBindRequestCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    501            uint8_t endpoint = (uint8_t)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
    502            EmberStatus status = emberAfSendEndDeviceBind(endpoint);
   \                     ??CrossCallReturnLabel_2: (+1)
   \        0x6   0xB2C0             UXTB     R0,R0
   \        0x8   0x....'....        BL       emberAfSendEndDeviceBind
    503            emberAfAppPrintln("End Device Bind %p0x%X", "Request: ", status);
   \        0xC   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_37: (+1)
   \       0x10   0x....             LDR.N    R1,??DataTable21_24
   \       0x12                      REQUIRE ?Subroutine0
   \       0x12                      ;; // Fall through to label ?Subroutine0
    504          }
    505          

   \                                 In section .text, align 2, keep-with-next
    506          static void unbindRequest(bool isGroupAddress,
    507                                    void* destination,
    508                                    uint8_t destinationEndpoint)
    509          {
   \                     unbindRequest: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0xB08A             SUB      SP,SP,#+40
   \        0x8   0x468A             MOV      R10,R1
   \        0xA   0x4690             MOV      R8,R2
    510            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0xC   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0x10   0x4606             MOV      R6,R0
    511            uint8_t sourceEndpoint = (uint8_t)emberUnsignedCommandArgument(2);
   \       0x12   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_25: (+1)
   \       0x16   0x4681             MOV      R9,R0
    512            EmberAfClusterId clusterId = (EmberAfClusterId)emberUnsignedCommandArgument(3);
   \       0x18   0x2003             MOVS     R0,#+3
   \       0x1A   0x....'....        BL       emberUnsignedCommandArgument
   \       0x1E   0x4605             MOV      R5,R0
    513            EmberEUI64 sourceEui64;
    514            EmberEUI64 destinationEui64;
    515            EmberStatus status;
    516            EmberNodeId groupAddress = EMBER_NULL_NODE_ID;
    517          
    518            if (EMBER_SUCCESS != copyOrLookupEui64(1, target, sourceEui64)) {
   \       0x20   0xAA08             ADD      R2,SP,#+32
   \       0x22   0xB2B1             UXTH     R1,R6
   \       0x24   0x2001             MOVS     R0,#+1
   \       0x26   0x....'....        BL       copyOrLookupEui64
   \       0x2A   0xBB38             CBNZ.N   R0,??unbindRequest_0
    519              return;
    520            }
    521          
    522            if (isGroupAddress) {
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0xD003             BEQ.N    ??unbindRequest_1
    523              groupAddress = *((EmberNodeId*)destination);
   \       0x30   0xF8BA 0x7000      LDRH     R7,[R10, #+0]
   \       0x34   0x2001             MOVS     R0,#+1
   \       0x36   0xE006             B.N      ??unbindRequest_2
    524            } else {
    525              groupAddress = 0;
    526              MEMMOVE(destinationEui64, destination, EUI64_SIZE);
   \                     ??unbindRequest_1: (+1)
   \       0x38   0x2208             MOVS     R2,#+8
   \       0x3A   0x4651             MOV      R1,R10
   \       0x3C   0xA806             ADD      R0,SP,#+24
   \       0x3E   0x....'....        BL       halCommonMemMove
   \       0x42   0x2700             MOVS     R7,#+0
   \       0x44   0x2003             MOVS     R0,#+3
   \                     ??unbindRequest_2: (+1)
   \       0x46   0x2140             MOVS     R1,#+64
   \       0x48   0x9105             STR      R1,[SP, #+20]
   \       0x4A   0xF8CD 0x8010      STR      R8,[SP, #+16]
   \       0x4E   0x9703             STR      R7,[SP, #+12]
   \       0x50   0xAA06             ADD      R2,SP,#+24
   \       0x52   0x9202             STR      R2,[SP, #+8]
   \       0x54   0x9001             STR      R0,[SP, #+4]
   \       0x56   0xB2AD             UXTH     R5,R5
   \       0x58   0x9500             STR      R5,[SP, #+0]
   \       0x5A   0xFA5F 0xF389      UXTB     R3,R9
   \       0x5E   0xAA08             ADD      R2,SP,#+32
   \       0x60   0x2122             MOVS     R1,#+34
   \       0x62   0xB2B0             UXTH     R0,R6
   \       0x64   0x....'....        BL       emberSendZigDevBindRequest
    527            }
    528          
    529            status = emberUnbindRequest(target,
    530                                        sourceEui64,
    531                                        sourceEndpoint,
    532                                        clusterId,
    533                                        (isGroupAddress
    534                                         ? MULTICAST_BINDING
    535                                         : UNICAST_BINDING),
    536                                        destinationEui64,
    537                                        groupAddress,
    538                                        destinationEndpoint,
    539                                        EMBER_APS_OPTION_RETRY);
    540            UNUSED_VAR(status);
    541            emberAfAppPrintln("Unbind %p %p0x%X",
    542                              (isGroupAddress
    543                               ? "Group"
    544                               : "Unicast"),
    545                              "Request: ",
    546                              status);
   \       0x68   0x2C00             CMP      R4,#+0
   \       0x6A   0x9000             STR      R0,[SP, #+0]
   \       0x6C   0x....             LDR.N    R3,??DataTable21_25
   \       0x6E   0xBF14             ITE      NE 
   \       0x70   0x....             LDRNE.N  R2,??DataTable21_26
   \       0x72   0x....             LDREQ.N  R2,??DataTable21_27
   \       0x74   0x....             LDR.N    R1,??DataTable21_28
   \       0x76   0x2002             MOVS     R0,#+2
   \       0x78   0x....'....        BL       emberAfPrintln
    547          }
   \                     ??unbindRequest_0: (+1)
   \       0x7C   0xB00A             ADD      SP,SP,#+40
   \       0x7E   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    548          

   \                                 In section .text, align 2, keep-with-next
    549          void zdoUnbindGroupCommand(void)
    550          {
   \                     zdoUnbindGroupCommand: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    551            EmberNodeId groupAddress = (EmberNodeId)emberUnsignedCommandArgument(4);
   \        0x2   0x2004             MOVS     R0,#+4
   \        0x4   0x....'....        BL       emberUnsignedCommandArgument
   \        0x8   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    552            unbindRequest(true,  // group addressed binding?
    553                          &groupAddress,
    554                          0);   // destination endpoint (unused)
   \        0xC   0x2200             MOVS     R2,#+0
   \        0xE   0x4669             MOV      R1,SP
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0x....'....        BL       unbindRequest
    555          }
   \       0x16   0xBD01             POP      {R0,PC}          ;; return
    556          

   \                                 In section .text, align 2, keep-with-next
    557          void zdoUnbindUnicastCommand(void)
    558          {
   \                     zdoUnbindUnicastCommand: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    559            EmberEUI64 destinationEui64;
    560            uint8_t destinationEndpoint = (uint8_t)emberUnsignedCommandArgument(5);
   \        0x2   0x2005             MOVS     R0,#+5
   \        0x4   0x....'....        BL       emberUnsignedCommandArgument
   \        0x8   0x4604             MOV      R4,R0
    561          
    562            // If the destination EUI64 of the binding (not the destination of the
    563            // actual message) is empty, use our local EUI64.
    564            if (0 == emberCopyBigEndianEui64Argument(4, destinationEui64)) {
   \        0xA   0x4669             MOV      R1,SP
   \        0xC   0x2004             MOVS     R0,#+4
   \        0xE   0x....'....        BL       emberCopyBigEndianEui64Argument
   \       0x12   0xB928             CBNZ.N   R0,??zdoUnbindUnicastCommand_0
    565              emberAfAppPrintln("Using my local EUI64 for dest EUI64 in unbinding");
   \       0x14   0x....             LDR.N    R1,??DataTable21_29
   \       0x16   0x....'....        BL       ?Subroutine5
    566              emberAfGetEui64(destinationEui64);
   \                     ??CrossCallReturnLabel_29: (+1)
   \       0x1A   0x4668             MOV      R0,SP
   \       0x1C   0x....'....        BL       emberAfGetEui64
    567            }
    568          
    569            unbindRequest(false,   // group addressed binding?
    570                          destinationEui64,
    571                          destinationEndpoint);
   \                     ??zdoUnbindUnicastCommand_0: (+1)
   \       0x20   0xB2E2             UXTB     R2,R4
   \       0x22   0x4669             MOV      R1,SP
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0x....'....        BL       unbindRequest
    572          }
   \       0x2A   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    573          

   \                                 In section .text, align 2, keep-with-next
    574          void zdoRouteRequestCommand(void)
    575          {
   \                     zdoRouteRequestCommand: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    576            EmberNodeId target = (EmberNodeId)emberUnsignedCommandArgument(0);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x6   0x....'....        BL       ?Subroutine3
    577            uint8_t index = (uint8_t)emberUnsignedCommandArgument(1);
    578            EmberStatus status = emberRoutingTableRequest(target,
    579                                                          index,
    580                                                          EMBER_APS_OPTION_RETRY);
   \                     ??CrossCallReturnLabel_17: (+1)
   \        0xA   0xB2C2             UXTB     R2,R0
   \        0xC   0x2340             MOVS     R3,#+64
   \        0xE   0xB2A1             UXTH     R1,R4
   \       0x10   0x2032             MOVS     R0,#+50
   \       0x12   0x....'....        BL       emberTableRequest
    581            emberAfAppPrintln("Route Table %p0x%X", "Request: ", status);
   \       0x16   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_38: (+1)
   \       0x1A   0x....             LDR.N    R1,??DataTable21_30
   \       0x1C   0x2002             MOVS     R0,#+2
   \       0x1E   0xE8BD 0x4010      POP      {R4,LR}
   \       0x22   0x....'....        B.W      emberAfPrintln
    582          }
    583          
    584          //------------------------------------------------------------------------------
    585          // Platform specific code
    586          
    587          #if defined(EZSP_HOST)
    588          EmberStatus matchDescriptorsRequest(EmberNodeId target,
    589                                              uint16_t profile,
    590                                              uint8_t inCount,
    591                                              uint8_t outCount,
    592                                              uint16_t *inClusters,
    593                                              uint16_t *outClusters,
    594                                              EmberApsOption options)
    595          {
    596            return ezspMatchDescriptorsRequest(target,
    597                                               profile,
    598                                               inCount,
    599                                               outCount,
    600                                               inClusters,
    601                                               outClusters,
    602                                               options);
    603          }
    604          
    605          #else
    606          
    607          // Copy the list of uint16_t input and output cluster lists into
    608          // message buffers.

   \                                 In section .text, align 2, keep-with-next
    609          EmberStatus matchDescriptorsRequest(EmberNodeId target,
    610                                              uint16_t profile,
    611                                              uint8_t inCount,
    612                                              uint8_t outCount,
    613                                              uint16_t *inClusters,
    614                                              uint16_t *outClusters,
    615                                              EmberApsOption options)
    616          {
   \                     matchDescriptorsRequest: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \        0x4   0x4688             MOV      R8,R1
   \        0x6   0xB082             SUB      SP,SP,#+8
    617            uint8_t i;
    618            uint8_t output;
    619            EmberMessageBuffer inClusterBuffer = EMBER_NULL_MESSAGE_BUFFER;
   \        0x8   0x21FF             MOVS     R1,#+255
   \        0xA   0x4683             MOV      R11,R0
   \        0xC   0xF8DD 0x903C      LDR      R9,[SP, #+60]
   \       0x10   0xF88D 0x1005      STRB     R1,[SP, #+5]
    620            EmberMessageBuffer outClusterBuffer = EMBER_NULL_MESSAGE_BUFFER;
   \       0x14   0xF88D 0x1004      STRB     R1,[SP, #+4]
    621            EmberStatus status = EMBER_NO_BUFFERS;
   \       0x18   0x2518             MOVS     R5,#+24
    622            for (output = 0; output < 2; output++) {
   \       0x1A   0x2600             MOVS     R6,#+0
    623              EmberMessageBuffer* bufferPtr;
    624              uint8_t count;
    625              uint16_t* list;
    626              if (output != 0U) {
    627                count = outCount;
    628                list = outClusters;
    629                bufferPtr = &outClusterBuffer;
    630              } else {  // input
    631                count = inCount;
   \                     ??matchDescriptorsRequest_0: (+1)
   \       0x1C   0xF89D 0xA00C      LDRB     R10,[SP, #+12]
    632                list = inClusters;
   \       0x20   0x9C0E             LDR      R4,[SP, #+56]
    633                bufferPtr = &inClusterBuffer;
   \       0x22   0xF10D 0x0705      ADD      R7,SP,#+5
   \       0x26   0xE005             B.N      ??matchDescriptorsRequest_1
    634              }
   \                     ??matchDescriptorsRequest_2: (+1)
   \       0x28   0x2800             CMP      R0,#+0
   \       0x2A   0xD0F7             BEQ.N    ??matchDescriptorsRequest_0
   \       0x2C   0xF89D 0xA010      LDRB     R10,[SP, #+16]
   \       0x30   0x464C             MOV      R4,R9
   \       0x32   0xAF01             ADD      R7,SP,#+4
    635              if (count == 0) {
   \                     ??matchDescriptorsRequest_1: (+1)
   \       0x34   0xF1BA 0x0F00      CMP      R10,#+0
   \       0x38   0xD01C             BEQ.N    ??matchDescriptorsRequest_3
    636                continue;
    637              }
    638          
    639              *bufferPtr = emberAllocateStackBuffer();
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0x....'....        BL       emberAllocateLinkedBuffers
   \       0x40   0x7038             STRB     R0,[R7, #+0]
    640              if (*bufferPtr == EMBER_NULL_MESSAGE_BUFFER) {
   \       0x42   0x28FF             CMP      R0,#+255
   \       0x44   0xD025             BEQ.N    ??matchDescriptorsRequest_4
    641                goto cleanup;
    642              }
    643          
    644              for (i = 0; i < count; i++) {
   \       0x46   0x4628             MOV      R0,R5
   \       0x48   0x2500             MOVS     R5,#+0
   \       0x4A   0xE010             B.N      ??matchDescriptorsRequest_5
    645                uint8_t cluster[2];
    646                cluster[0] = LOW_BYTE(list[i]);
   \                     ??matchDescriptorsRequest_6: (+1)
   \       0x4C   0xF834 0x0015      LDRH     R0,[R4, R5, LSL #+1]
    647                cluster[1] = HIGH_BYTE(list[i]);
    648                status = emberAppendToLinkedBuffers(*bufferPtr,
    649                                                    cluster,
    650                                                    2);
   \       0x50   0x2202             MOVS     R2,#+2
   \       0x52   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \       0x56   0xF834 0x1015      LDRH     R1,[R4, R5, LSL #+1]
   \       0x5A   0x0A09             LSRS     R1,R1,#+8
   \       0x5C   0xF88D 0x1001      STRB     R1,[SP, #+1]
   \       0x60   0x7838             LDRB     R0,[R7, #+0]
   \       0x62   0x4669             MOV      R1,SP
   \       0x64   0x....'....        BL       emberAppendToLinkedBuffers
    651                if (EMBER_SUCCESS != status) {
   \       0x68   0x0001             MOVS     R1,R0
   \       0x6A   0xD111             BNE.N    ??matchDescriptorsRequest_7
    652                  goto cleanup;
    653                }
    654              }
   \       0x6C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??matchDescriptorsRequest_5: (+1)
   \       0x6E   0x4555             CMP      R5,R10
   \       0x70   0xDBEC             BLT.N    ??matchDescriptorsRequest_6
   \       0x72   0x4605             MOV      R5,R0
    655            }
   \                     ??matchDescriptorsRequest_3: (+1)
   \       0x74   0x1C76             ADDS     R6,R6,#+1
   \       0x76   0xB2F0             UXTB     R0,R6
   \       0x78   0x2801             CMP      R0,#+1
   \       0x7A   0xDDD5             BLE.N    ??matchDescriptorsRequest_2
   \       0x7C   0x9A10             LDR      R2,[SP, #+64]
    656            status = emberMatchDescriptorsRequest(target,
    657                                                  profile,
    658                                                  inClusterBuffer,
    659                                                  outClusterBuffer,
    660                                                  options);
   \       0x7E   0xF89D 0x3004      LDRB     R3,[SP, #+4]
   \       0x82   0x4641             MOV      R1,R8
   \       0x84   0x9200             STR      R2,[SP, #+0]
   \       0x86   0xF89D 0x2005      LDRB     R2,[SP, #+5]
   \       0x8A   0x4658             MOV      R0,R11
   \       0x8C   0x....'....        BL       emberMatchDescriptorsRequest
   \                     ??matchDescriptorsRequest_7: (+1)
   \       0x90   0x4605             MOV      R5,R0
    661            cleanup:
    662            if (inClusterBuffer != EMBER_NULL_MESSAGE_BUFFER) {
   \                     ??matchDescriptorsRequest_4: (+1)
   \       0x92   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \       0x96   0x28FF             CMP      R0,#+255
   \       0x98   0xBF18             IT       NE 
    663              emberReleaseMessageBuffer(inClusterBuffer);
   \       0x9A   0x....'....        BLNE     emReleaseMessageBuffer
    664            }
    665            if (outClusterBuffer != EMBER_NULL_MESSAGE_BUFFER) {
   \       0x9E   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0xA2   0x28FF             CMP      R0,#+255
   \       0xA4   0xBF18             IT       NE 
    666              emberReleaseMessageBuffer(outClusterBuffer);
   \       0xA6   0x....'....        BLNE     emReleaseMessageBuffer
    667            }
    668            return status;
   \       0xAA   0xB2E8             UXTB     R0,R5
   \       0xAC   0xB005             ADD      SP,SP,#+20
   \       0xAE   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    669          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \        0x0   0x....'....        DC32     emAfCliServiceDiscoveryCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \        0x0   0x....'....        DC32     emAfCliZdoInClusters

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \        0x0   0x....'....        DC32     emAfCliZdoOutClusters

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \        0x0   0x....'....        DC32     emAfCliOutClCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \        0x0   0x....'....        DC32     emAfCliInClCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \        0x0   0x07FF'F800        DC32     0x7fff800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_17:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_18:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_19:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_20:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_21:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_22:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_23:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_24:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_25:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_26:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_27:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_28:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_29:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_30:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x5A 0x44          DC8 "ZDO simple desc req %x"
   \              0x4F 0x20    
   \              0x73 0x69    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x63 0x20    
   \              0x72 0x65    
   \              0x71 0x20    
   \              0x25 0x78    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x5A 0x44          DC8 "ZDO node desc req %x"
   \              0x4F 0x20    
   \              0x6E 0x6F    
   \              0x64 0x65    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x63 0x20    
   \              0x72 0x65    
   \              0x71 0x20    
   \              0x25 0x78    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x5A 0x44          DC8 "ZDO match desc req %x"
   \              0x4F 0x20    
   \              0x6D 0x61    
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x64 0x65    
   \              0x73 0x63    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x20 0x25    
   \              0x78 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x45 0x72          DC8 45H, 72H, 72H, 6FH, 72H, 3AH, 20H, 20H
   \              0x72 0x6F    
   \              0x72 0x3A    
   \              0x20 0x20    
   \        0x8   0x45 0x55          DC8 45H, 55H, 49H, 36H, 34H, 20H, 61H, 72H
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x61 0x72    
   \       0x10   0x67 0x75          DC8 67H, 75H, 6DH, 65H, 6EH, 74H, 20H, 69H
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x69    
   \       0x18   0x73 0x20          DC8 73H, 20H, 65H, 6DH, 70H, 74H, 79H, 20H
   \              0x65 0x6D    
   \              0x70 0x74    
   \              0x79 0x20    
   \       0x20   0x61 0x6E          DC8 61H, 6EH, 64H, 20H, 6CH, 6FH, 6FH, 6BH
   \              0x64 0x20    
   \              0x6C 0x6F    
   \              0x6F 0x6B    
   \       0x28   0x75 0x70          DC8 75H, 70H, 20H, 62H, 79H, 20H, 6EH, 6FH
   \              0x20 0x62    
   \              0x79 0x20    
   \              0x6E 0x6F    
   \       0x30   0x64 0x65          DC8 64H, 65H, 20H, 49H, 44H, 20H, 66H, 61H
   \              0x20 0x49    
   \              0x44 0x20    
   \              0x66 0x61    
   \       0x38   0x69 0x6C          DC8 69H, 6CH, 65H, 64H, 2EH, 0
   \              0x65 0x64    
   \              0x2E 0x00    
   \       0x3E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x55 0x73          DC8 "Using my local EUI64 for dest EUI64 in binding"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x79    
   \              0x20 0x6C    
   \              0x6F 0x63    
   \              0x61 0x6C    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x36 0x34    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x45 0x55    
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x69 0x6E    
   \              0x20 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x00         
   \       0x2F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x5A 0x44          DC8 "ZDO bind req %x"
   \              0x4F 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x72    
   \              0x65 0x71    
   \              0x20 0x25    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x63 0x6C          DC8 "cluster limit reached"
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6C 0x69    
   \              0x6D 0x69    
   \              0x74 0x20    
   \              0x72 0x65    
   \              0x61 0x63    
   \              0x68 0x65    
   \              0x64 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x69 0x6E          DC8 "invalid page: %d or channel: %d"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x70 0x61    
   \              0x67 0x65    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x20 0x6F    
   \              0x72 0x20    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x43 0x68          DC8 "Change channel status: 0x%x"
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x64 0x75          DC8 "duration must be in range 0 - 5"
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6D    
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x62 0x65    
   \              0x20 0x69    
   \              0x6E 0x20    
   \              0x72 0x61    
   \              0x6E 0x67    
   \              0x65 0x20    
   \              0x30 0x20    
   \              0x2D 0x20    
   \              0x35 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x63 0x6F          DC8 "count must be in range 1 - 8"
   \              0x75 0x6E    
   \              0x74 0x20    
   \              0x6D 0x75    
   \              0x73 0x74    
   \              0x20 0x62    
   \              0x65 0x20    
   \              0x69 0x6E    
   \              0x20 0x72    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x20 0x31    
   \              0x20 0x2D    
   \              0x20 0x38    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x73 0x63          DC8 "scan status 0x%x"
   \              0x61 0x6E    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x6E 0x65          DC8 "network update set status 0x%x"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x75 0x70    
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x41 0x63          DC8 "Active EP request status: 0x%X"
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x20 0x45    
   \              0x50 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \       0x1F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x4C 0x51          DC8 "LQI Table request: 0x%X"
   \              0x49 0x20    
   \              0x54 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x42 0x69          DC8 "Binding Table request: 0x%X"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x54 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x4C 0x65          DC8 "Leave %p0x%X"
   \              0x61 0x76    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x52 0x65          DC8 "Request: "
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x3A    
   \              0x20 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x50 0x6F          DC8 "Power Descriptor %p0x%X"
   \              0x77 0x65    
   \              0x72 0x20    
   \              0x44 0x65    
   \              0x73 0x63    
   \              0x72 0x69    
   \              0x70 0x74    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x70 0x30    
   \              0x78 0x25    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x45 0x6E          DC8 "End Device Bind %p0x%X"
   \              0x64 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x42    
   \              0x69 0x6E    
   \              0x64 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x55 0x6E          DC8 "Unbind %p %p0x%X"
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x47 0x72          DC8 "Group"
   \              0x6F 0x75    
   \              0x70 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x55 0x6E          DC8 "Unicast"
   \              0x69 0x63    
   \              0x61 0x73    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x55 0x73          DC8 "Using my local EUI64 for dest EUI64 in unbinding"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x79    
   \              0x20 0x6C    
   \              0x6F 0x63    
   \              0x61 0x6C    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x36 0x34    
   \              0x20 0x66    
   \              0x6F 0x72    
   \              0x20 0x64    
   \              0x65 0x73    
   \              0x74 0x20    
   \              0x45 0x55    
   \              0x49 0x36    
   \              0x34 0x20    
   \              0x69 0x6E    
   \              0x20 0x75    
   \              0x6E 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x00         
   \       0x31   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x52 0x6F          DC8 "Route Table %p0x%X"
   \              0x75 0x74    
   \              0x65 0x20    
   \              0x54 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \       0x13   0x00               DC8 0
    670          
    671          #endif // !defined(EZSP_HOST)

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   copyOrLookupEui64
        16   -> emberAfPrintln
        16   -> emberCopyBigEndianEui64Argument
        16   -> emberLookupEui64ByNodeId
      56   matchDescriptorsRequest
        56   -> emReleaseMessageBuffer
        56   -> emberAllocateLinkedBuffers
        56   -> emberAppendToLinkedBuffers
        56   -> emberMatchDescriptorsRequest
      72   unbindRequest
        72   -> copyOrLookupEui64
        72   -> emberAfPrintln
        72   -> emberSendZigDevBindRequest
        72   -> emberUnsignedCommandArgument
        72   -> halCommonMemMove
       8   zdoActiveEpCommand
         0   -> emberAfPrint
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
      16   zdoAddClusterCommand
         0   -> emberAfPrintln
        16   -> emberStringCommandArgument
        16   -> emberUnsignedCommandArgument
      64   zdoBindCommand
        64   -> copyOrLookupEui64
        64   -> emberAfGetEui64
        64   -> emberAfPrintln
        64   -> emberCopyBigEndianEui64Argument
        64   -> emberSendZigDevBindRequest
        64   -> emberUnsignedCommandArgument
       8   zdoClearClusterCommand
         8   -> emberStringCommandArgument
       8   zdoEndDeviceBindRequestCommand
         0   -> emberAfPrintln
         8   -> emberAfSendEndDeviceBind
         8   -> emberUnsignedCommandArgument
       8   zdoIeeeAddressRequestCommand
         0   -> emberAfFindIeeeAddress
         8   -> emberUnsignedCommandArgument
      16   zdoLeaveRequestCommand
        16   -> emberAfPrintln
        16   -> emberLeaveRequest
        16   -> emberUnsignedCommandArgument
      24   zdoMatchCommand
         0   -> emberAfPrintln
        24   -> emberUnsignedCommandArgument
        24   -> matchDescriptorsRequest
       8   zdoMgmtBindCommand
         0   -> emberAfPrint
         8   -> emberTableRequest
         8   -> emberUnsignedCommandArgument
       8   zdoMgmtLqiCommand
         0   -> emberAfPrint
         8   -> emberTableRequest
         8   -> emberUnsignedCommandArgument
      16   zdoNetworkUpdateChannelCommand
        16   -> emAfValidateChannelPages
         0   -> emberAfPrintln
        16   -> emberCommandArgumentCount
        16   -> emberEnergyScanRequest
        16   -> emberUnsignedCommandArgument
      24   zdoNetworkUpdateScanCommand
         0   -> emberAfPrint
         0   -> emberAfPrintln
        24   -> emberAfPrintln
        24   -> emberCommandArgumentCount
        24   -> emberEnergyScanRequest
        24   -> emberUnsignedCommandArgument
       8   zdoNetworkUpdateSetCommand
         0   -> emberAfPrint
         8   -> emberEnergyScanRequest
         8   -> emberUnsignedCommandArgument
       8   zdoNodeCommand
         0   -> emberAfPrintln
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
      16   zdoNwkAddressRequestCommand
        16   -> emberAfFindNodeId
        16   -> emberCopyBigEndianEui64Argument
       8   zdoPowerDescriptorRequestCommand
         0   -> emberAfPrintln
         8   -> emberSendZigDevRequestTarget
         8   -> emberUnsignedCommandArgument
       8   zdoRouteRequestCommand
         0   -> emberAfPrintln
         8   -> emberTableRequest
         8   -> emberUnsignedCommandArgument
       8   zdoSimpleCommand
         0   -> emberAfPrintln
         8   -> emberSimpleDescriptorRequest
         8   -> emberUnsignedCommandArgument
       8   zdoUnbindGroupCommand
         8   -> emberUnsignedCommandArgument
         8   -> unbindRequest
      16   zdoUnbindUnicastCommand
        16   -> emberAfGetEui64
        16   -> emberAfPrintln
        16   -> emberCopyBigEndianEui64Argument
        16   -> emberUnsignedCommandArgument
        16   -> unbindRequest


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_26
       4  ??DataTable21_27
       4  ??DataTable21_28
       4  ??DataTable21_29
       4  ??DataTable21_3
       4  ??DataTable21_30
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
      10  ?Subroutine0
      10  ?Subroutine1
       6  ?Subroutine2
       8  ?Subroutine3
       8  ?Subroutine4
       6  ?Subroutine5
      10  ?Subroutine6
       6  ?Subroutine7
      24  ?_0
      24  ?_1
      32  ?_10
      20  ?_11
      32  ?_12
      32  ?_13
      24  ?_14
      28  ?_15
       8  ?_16
      16  ?_17
      12  ?_18
      24  ?_19
      24  ?_2
      24  ?_20
      20  ?_21
       8  ?_22
       8  ?_23
      52  ?_24
      20  ?_25
      64  ?_3
      48  ?_4
      16  ?_5
      24  ?_6
      32  ?_7
      28  ?_8
      32  ?_9
      42  copyOrLookupEui64
       1  emAfCliInClCount
       1  emAfCliOutClCount
      12  emAfCliZdoInClusters
      12  emAfCliZdoOutClusters
     178  matchDescriptorsRequest
     130  unbindRequest
      30  zdoActiveEpCommand
      56  zdoAddClusterCommand
     114  zdoBindCommand
      28  zdoClearClusterCommand
      18  zdoEndDeviceBindRequestCommand
      20  zdoIeeeAddressRequestCommand
      50  zdoLeaveRequestCommand
      68  zdoMatchCommand
      28  zdoMgmtBindCommand
      26  zdoMgmtLqiCommand
     114  zdoNetworkUpdateChannelCommand
      92  zdoNetworkUpdateScanCommand
      30  zdoNetworkUpdateSetCommand
      34  zdoNodeCommand
      22  zdoNwkAddressRequestCommand
      24  zdoPowerDescriptorRequestCommand
      38  zdoRouteRequestCommand
      38  zdoSimpleCommand
      24  zdoUnbindGroupCommand
      44  zdoUnbindUnicastCommand

 
    26 bytes in section .bss
   676 bytes in section .rodata
 1 436 bytes in section .text
 
 1 436 bytes of CODE  memory
   676 bytes of CONST memory
    26 bytes of DATA  memory

Errors: none
Warnings: none
