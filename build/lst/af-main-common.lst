###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:05
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-common.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW978C.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-common.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"af-main-common.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\af-main-common.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\af-main-common.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-common.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Code common to both the Host and SOC (system on a chip) versions
      4           * of the Application Framework.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include PLATFORM_HEADER     // Micro and compiler specific typedefs and macros
     20          
     21          #if defined EZSP_HOST
     22            #include "stack/include/ember-types.h"
     23            #include "stack/include/error.h"
     24            #include "stack/include/library.h"
     25          #else
     26          // Ember stack and related utilities
     27            #include "stack/include/ember.h"         // Main stack definitions
     28            #include "stack/include/cbke-crypto-engine.h"
     29          #endif
     30          
     31          // HAL - hardware abstraction layer
     32          #include "hal/hal.h"
     33          #include "plugin/serial/serial.h"  // Serial utility APIs
     34          
     35          // CLI - command line interface
     36          #include "app/util/serial/command-interpreter2.h"
     37          
     38          #if defined EZSP_HOST
     39          // EZSP - ember serial host protocol
     40            #include "app/util/ezsp/ezsp-protocol.h"
     41            #include "app/util/ezsp/ezsp.h"
     42            #include "app/util/ezsp/serial-interface.h"
     43            #include "app/util/ezsp/ezsp-utils.h"
     44          #endif
     45          
     46          // Sub-GHz client, for a last-minute chance to block sending ZCL messgaes within the suspend period
     47          #ifdef EMBER_AF_PLUGIN_SUB_GHZ_CLIENT
     48            #include "app/framework/plugin/sub-ghz-client/sub-ghz-client.h"
     49          #endif
     50          
     51          // Sub-GHz server, for an automatic reply if a client attempt to communicate within the suspend period
     52          #ifdef EMBER_AF_PLUGIN_SUB_GHZ_SERVER
     53            #include "app/framework/plugin/sub-ghz-server/sub-ghz-server.h"
     54          #endif
     55          
     56          // Fragmentation.
     57          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
     58            #include "app/framework/plugin/fragmentation/fragmentation.h"
     59          #endif
     60          
     61          #ifdef EMBER_AF_PLUGIN_CRITICAL_MESSAGE_QUEUE
     62           #include "app/framework/plugin/critical-message-queue/critical-message-queue.h"
     63          #endif // EMBER_AF_PLUGIN_CRITICAL_MESSAGE_QUEUE
     64          
     65          // Service discovery library
     66          #include "service-discovery.h"
     67          
     68          // determines the number of in-clusters and out-clusters based on defines
     69          // in config.h
     70          #include "af-main.h"
     71          
     72          #include "attribute-storage.h"
     73          #include "attribute-table.h"
     74          #include "util.h"
     75          #include "callback.h"
     76          #include "print.h"
     77          #include "config.h"
     78          #include "app/framework/security/af-security.h"
     79          #include "app/framework/security/crypto-state.h"
     80          
     81          // Querying the Ember Stack for what libraries are present.
     82          #include "app/util/common/library.h"
     83          
     84          // ZDO - ZigBee Device Object
     85          #include "app/util/zigbee-framework/zigbee-device-common.h"
     86          
     87          #include "app/framework/plugin/partner-link-key-exchange/partner-link-key-exchange.h"
     88          #include "app/framework/plugin/ota-storage-common/ota-storage.h"
     89          
     90          // Bookkeeping header
     91          #include "znet-bookkeeping.h"
     92          
     93          //------------------------------------------------------------------------------
     94          
     95          #define INVALID_MESSAGE_TAG 0xFF
     96          
     97          #if defined(EMBER_AF_HAS_COORDINATOR_NETWORK)
     98            #if !defined(EMBER_AF_PLUGIN_CONCENTRATOR)
     99              #error "A Coordinator device (Trust Center) MUST enable the concentrator plugin to function correctly."
    100            #endif
    101          #endif
    102          
    103          #ifdef EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS
    104          EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS
    105          #endif
    106          
    107          #ifdef EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_DECLARATIONS
    108          EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_DECLARATIONS
    109          #endif
    110          
    111          #ifdef EMBER_AF_GENERATED_PLUGIN_ZDO_MESSAGE_RECEIVED_FUNCTION_DECLARATIONS
    112          EMBER_AF_GENERATED_PLUGIN_ZDO_MESSAGE_RECEIVED_FUNCTION_DECLARATIONS
    113          #endif
    114          
    115          // flags the user can turn on or off to make the printing behave differently

   \                                 In section .data, align 1
    116          bool emberAfPrintReceivedMessages = true;
   \                     emberAfPrintReceivedMessages:
   \        0x0   0x01               DC8 1
    117          

   \                                 In section .rodata, align 4
    118          const EmberAfOtaImageId emberAfInvalidImageId = INVALID_OTA_IMAGE_ID;
   \                     emberAfInvalidImageId:
   \        0x0   0xFFFF 0xFFFF      DC16 65535, 65535
   \        0x4   0xFFFF'FFFF        DC32 4294967295
   \        0x8   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    119          

   \                                 In section .bss, align 4
    120          static CallbackTableEntry messageSentCallbacks[EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE];
   \                     messageSentCallbacks:
   \        0x0                      DS8 80
    121          
    122          // We declare this variable 'const' but NOT const.  Those functions that we may use
    123          // this variable would also have to declare it const in order to function
    124          // correctly, which is not the case (e.g. emberFindKeyTableEntry()).

   \                                 In section .rodata, align 4
    125          const EmberEUI64 emberAfNullEui64 = { 0, 0, 0, 0, 0, 0, 0, 0 };
   \                     emberAfNullEui64:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    126          
    127          //------------------------------------------------------------------------------
    128          // Forward declarations
    129          static uint8_t getMessageSentCallbackIndex(void);
    130          static void invalidateMessageSentCallbackEntry(uint8_t messageTag);
    131          static EmberAfMessageSentFunction getMessageSentCallback(uint8_t tag);
    132          
    133          static uint8_t getMessageSentCallbackIndex(void)
    134          {
    135            uint8_t i;
    136            for (i = 0; i < EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE; i++) {
    137              if (messageSentCallbacks[i].tag == INVALID_MESSAGE_TAG) {
    138                return i;
    139              }
    140            }
    141          
    142            return INVALID_MESSAGE_TAG;
    143          }
    144          
    145          static void invalidateMessageSentCallbackEntry(uint8_t tag)
    146          {
    147            uint8_t i;
    148            for (i = 0; i < EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE; i++) {
    149              if (messageSentCallbacks[i].tag == tag) {
    150                messageSentCallbacks[i].tag = INVALID_MESSAGE_TAG;
    151                messageSentCallbacks[i].callback = NULL;
    152                return;
    153              }
    154            }
    155          }
    156          
    157          static EmberAfMessageSentFunction getMessageSentCallback(uint8_t tag)
    158          {
    159            uint8_t i;
    160            for (i = 0; i < EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE; i++) {
    161              if (messageSentCallbacks[i].tag == tag) {
    162                return messageSentCallbacks[i].callback;
    163              }
    164            }
    165          
    166            return NULL;
    167          }
    168          

   \                                 In section .text, align 2, keep-with-next
    169          void emAfInitializeMessageSentCallbackArray(void)
    170          {
   \                     emAfInitializeMessageSentCallbackArray: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    171            uint8_t i;
    172            for (i = 0; i < EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE; i++) {
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        LDR.W    R1,??DataTable10_1
   \        0x8   0x22FF             MOVS     R2,#+255
   \        0xA   0x2400             MOVS     R4,#+0
    173              messageSentCallbacks[i].tag = INVALID_MESSAGE_TAG;
    174              messageSentCallbacks[i].callback = NULL;
   \                     ??emAfInitializeMessageSentCallbackArray_0: (+1)
   \        0xC   0xF841 0x4030      STR      R4,[R1, R0, LSL #+3]
   \       0x10   0xEB01 0x03C0      ADD      R3,R1,R0, LSL #+3
    175            }
   \       0x14   0x1C40             ADDS     R0,R0,#+1
   \       0x16   0x711A             STRB     R2,[R3, #+4]
   \       0x18   0x280A             CMP      R0,#+10
   \       0x1A   0xDBF7             BLT.N    ??emAfInitializeMessageSentCallbackArray_0
    176          }
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
    177          

   \                                 In section .text, align 2, keep-with-next
    178          EmberAfCbkeKeyEstablishmentSuite emberAfIsFullSmartEnergySecurityPresent(void)
    179          {
    180            EmberAfCbkeKeyEstablishmentSuite cbkeKeyEstablishmentSuite = EMBER_AF_INVALID_KEY_ESTABLISHMENT_SUITE;
    181          
    182          #if defined EMBER_AF_HAS_SECURITY_PROFILE_SE
    183            EmberCertificateData cert;
    184            EmberCertificate283k1Data cert283k1;
    185          
    186            if ((emberGetLibraryStatus(EMBER_ECC_LIBRARY_ID)
    187                 & EMBER_LIBRARY_PRESENT_MASK)
    188                && (EMBER_SUCCESS == emberGetCertificate(&cert)) ) {
    189              cbkeKeyEstablishmentSuite |= EMBER_AF_CBKE_KEY_ESTABLISHMENT_SUITE_163K1;
    190            }
    191          
    192            if ((emberGetLibraryStatus(EMBER_ECC_LIBRARY_283K1_ID)
    193                 & EMBER_LIBRARY_PRESENT_MASK)
    194                &&  (EMBER_SUCCESS == emberGetCertificate283k1(&cert283k1))) {
    195              cbkeKeyEstablishmentSuite |= EMBER_AF_CBKE_KEY_ESTABLISHMENT_SUITE_283K1;
    196            }
    197          #endif
    198          
    199            return cbkeKeyEstablishmentSuite;
   \                     emberAfIsFullSmartEnergySecurityPresent: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    200          }
    201          

   \                                 In section .text, align 2, keep-with-next
    202          static EmberStatus send(EmberOutgoingMessageType type,
    203                                  uint16_t indexOrDestination,
    204                                  EmberApsFrame *apsFrame,
    205                                  uint16_t messageLength,
    206                                  uint8_t *message,
    207                                  bool broadcast,
    208                                  EmberNodeId alias,
    209                                  uint8_t sequence,
    210                                  EmberAfMessageSentFunction callback)
    211          {
   \                     send: (+1)
   \        0x0   0xE92D 0x4FFC      PUSH     {R2-R11,LR}
   \        0x4   0x4682             MOV      R10,R0
   \        0x6   0xB08F             SUB      SP,SP,#+60
    212            EmberStatus status;
    213            uint8_t commandId;
    214            uint8_t index;
    215            uint8_t messageSentIndex;
    216            uint8_t messageTag = INVALID_MESSAGE_TAG;
    217          
    218            // The send APIs only deal with ZCL messages, so they must at least contain
    219            // the ZCL header.
    220            if (messageLength < EMBER_AF_ZCL_OVERHEAD) {
   \        0x8   0xF8BD 0x0040      LDRH     R0,[SP, #+64]
   \        0xC   0x27FF             MOVS     R7,#+255
   \        0xE   0x468B             MOV      R11,R1
   \       0x10   0xF88D 0x7011      STRB     R7,[SP, #+17]
   \       0x14   0x2802             CMP      R0,#+2
   \       0x16   0xDD05             BLE.N    ??send_0
   \       0x18   0x9E1A             LDR      R6,[SP, #+104]
    221              return EMBER_ERR_FATAL;
    222            } else if ((message[0] & ZCL_MANUFACTURER_SPECIFIC_MASK) != 0U) {
   \       0x1A   0x7831             LDRB     R1,[R6, #+0]
   \       0x1C   0x074B             LSLS     R3,R1,#+29
   \       0x1E   0xD507             BPL.N    ??send_1
    223              if (messageLength < EMBER_AF_ZCL_MANUFACTURER_SPECIFIC_OVERHEAD) {
   \       0x20   0x2804             CMP      R0,#+4
   \       0x22   0xDC03             BGT.N    ??send_2
    224                return EMBER_ERR_FATAL;
   \                     ??send_0: (+1)
   \       0x24   0x2001             MOVS     R0,#+1
   \                     ??send_3: (+1)
   \       0x26   0xB011             ADD      SP,SP,#+68
   \       0x28   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    225              }
    226              commandId = message[4];
   \                     ??send_2: (+1)
   \       0x2C   0x7930             LDRB     R0,[R6, #+4]
   \       0x2E   0xE000             B.N      ??send_4
    227            } else {
    228              commandId = message[2];
   \                     ??send_1: (+1)
   \       0x30   0x78B0             LDRB     R0,[R6, #+2]
    229            }
    230          
    231            messageSentIndex = getMessageSentCallbackIndex();
   \                     ??send_4: (+1)
   \       0x32   0x....'....        LDR.W    R8,??DataTable10_1
   \       0x36   0xF88D 0x0008      STRB     R0,[SP, #+8]
   \       0x3A   0x2100             MOVS     R1,#+0
   \       0x3C   0xF108 0x0304      ADD      R3,R8,#+4
   \                     ??send_5: (+1)
   \       0x40   0xB2C8             UXTB     R0,R1
   \       0x42   0xF813 0x4030      LDRB     R4,[R3, R0, LSL #+3]
   \       0x46   0x2CFF             CMP      R4,#+255
   \       0x48   0xF000 0x80B2      BEQ.W    ??send_6
   \       0x4C   0x1C49             ADDS     R1,R1,#+1
   \       0x4E   0xB2C8             UXTB     R0,R1
   \       0x50   0x280A             CMP      R0,#+10
   \       0x52   0xDBF5             BLT.N    ??send_5
   \                     ??send_7: (+1)
   \       0x54   0xF8DD 0x9078      LDR      R9,[SP, #+120]
    232            if (callback != NULL && messageSentIndex == INVALID_MESSAGE_TAG) {
   \       0x58   0xEA5F 0x0009      MOVS     R0,R9
   \       0x5C   0xD003             BEQ.N    ??send_8
   \       0x5E   0x2FFF             CMP      R7,#+255
   \       0x60   0xBF08             IT       EQ 
   \       0x62   0x20B4             MOVEQ    R0,#+180
    233              return EMBER_TABLE_FULL;
   \       0x64   0xD0DF             BEQ.N    ??send_3
    234            }
    235          
    236            // The source endpoint in the APS frame MUST be valid at this point.  We use
    237            // it to set the appropriate outgoing network as well as the profile id in
    238            // the APS frame.
    239            EmberAfEndpointInfoStruct endpointInfo;
    240            uint8_t networkIndex = 0;
   \                     ??send_8: (+1)
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0xF88D 0x0012      STRB     R0,[SP, #+18]
   \       0x6C   0x4614             MOV      R4,R2
    241            if (emberAfGetEndpointInfoCallback(apsFrame->sourceEndpoint,
    242                                               &networkIndex,
    243                                               &endpointInfo)) {
   \       0x6E   0x7920             LDRB     R0,[R4, #+4]
   \       0x70   0xAA0A             ADD      R2,SP,#+40
   \       0x72   0xF10D 0x0112      ADD      R1,SP,#+18
   \       0x76   0x....'....        BL       emberAfGetEndpointInfoCallback
   \       0x7A   0xB158             CBZ.N    R0,??send_9
    244              apsFrame->profileId = endpointInfo.profileId;
   \       0x7C   0xF8BD 0x0034      LDRH     R0,[SP, #+52]
   \       0x80   0x8020             STRH     R0,[R4, #+0]
    245              status = emberAfPushNetworkIndex(networkIndex);
   \       0x82   0xF89D 0x0012      LDRB     R0,[SP, #+18]
   \       0x86   0x....'....        BL       emberAfPushNetworkIndex
   \       0x8A   0xF88D 0x0010      STRB     R0,[SP, #+16]
    246              if (status != EMBER_SUCCESS) {
   \       0x8E   0x2800             CMP      R0,#+0
   \       0x90   0xD13D             BNE.N    ??send_10
   \       0x92   0xE013             B.N      ??send_11
    247                return status;
    248              }
    249            } else {
    250              index = emberAfIndexFromEndpoint(apsFrame->sourceEndpoint);
   \                     ??send_9: (+1)
   \       0x94   0x7920             LDRB     R0,[R4, #+4]
   \       0x96   0x....'....        BL       emberAfIndexFromEndpoint
   \       0x9A   0x4605             MOV      R5,R0
    251              if (index == 0xFF) {
   \       0x9C   0x2DFF             CMP      R5,#+255
   \       0x9E   0xBF08             IT       EQ 
   \       0xA0   0x20A3             MOVEQ    R0,#+163
    252                return EMBER_INVALID_ENDPOINT;
   \       0xA2   0xD0C0             BEQ.N    ??send_3
    253              }
    254              status = emberAfPushEndpointNetworkIndex(apsFrame->sourceEndpoint);
   \       0xA4   0x7920             LDRB     R0,[R4, #+4]
   \       0xA6   0x....'....        BL       emberAfPushEndpointNetworkIndex
   \       0xAA   0xF88D 0x0010      STRB     R0,[SP, #+16]
    255              if (status != EMBER_SUCCESS) {
   \       0xAE   0xBB70             CBNZ.N   R0,??send_10
    256                return status;
    257              }
    258              apsFrame->profileId = emberAfProfileIdFromIndex(index);
   \       0xB0   0x....'....        LDR.W    R1,??DataTable10_2
   \       0xB4   0xEB01 0x1005      ADD      R0,R1,R5, LSL #+4
   \       0xB8   0x8842             LDRH     R2,[R0, #+2]
   \       0xBA   0x8022             STRH     R2,[R4, #+0]
    259            }
    260          
    261          #ifdef EMBER_AF_PLUGIN_SUB_GHZ_CLIENT
    262            // If the Sub-GHz client is present and currently in the "suspended" state,
    263            // block any outgoing message unless it comes from the Sub-GHz client itself.
    264            if (emberAfPluginSubGhzClientIsSendingZclMessagesSuspended()
    265                && apsFrame->clusterId != ZCL_SUB_GHZ_CLUSTER_ID) {
    266              return EMBER_TRANSMISSION_SUSPENDED;
    267            }
    268          #endif
    269          
    270            // Encryption is turned on if it is required, but not turned off if it isn't.
    271            // This allows the application to send encrypted messages in special cases
    272            // that aren't covered by the specs by manually setting the encryption bit
    273            // prior to calling the send APIs.
    274            if (emberAfDetermineIfLinkSecurityIsRequired(commandId,
    275                                                         false, // incoming?
    276                                                         broadcast,
    277                                                         apsFrame->profileId,
    278                                                         apsFrame->clusterId,
    279                                                         (type == EMBER_OUTGOING_DIRECT)
    280                                                         ? indexOrDestination
    281                                                         : EMBER_NULL_NODE_ID)) {
   \                     ??send_11: (+1)
   \       0xBC   0xF1BA 0x0F00      CMP      R10,#+0
   \       0xC0   0x9D1B             LDR      R5,[SP, #+108]
   \       0xC2   0xBF0C             ITE      EQ 
   \       0xC4   0x4658             MOVEQ    R0,R11
   \       0xC6   0xF64F 0x70FF      MOVWNE   R0,#+65535
   \       0xCA   0x9001             STR      R0,[SP, #+4]
   \       0xCC   0x8860             LDRH     R0,[R4, #+2]
   \       0xCE   0x462A             MOV      R2,R5
   \       0xD0   0x2100             MOVS     R1,#+0
   \       0xD2   0x9000             STR      R0,[SP, #+0]
   \       0xD4   0x8823             LDRH     R3,[R4, #+0]
   \       0xD6   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \       0xDA   0x....'....        BL       emberAfDetermineIfLinkSecurityIsRequired
   \       0xDE   0xB118             CBZ.N    R0,??send_12
    282              apsFrame->options |= EMBER_APS_OPTION_ENCRYPTION;
   \       0xE0   0x88E0             LDRH     R0,[R4, #+6]
   \       0xE2   0xF040 0x0020      ORR      R0,R0,#0x20
   \       0xE6   0x80E0             STRH     R0,[R4, #+6]
    283            }
    284          
    285            {
    286              EmberAfMessageStruct messageStruct = {
    287                callback,
    288                apsFrame,
    289                message,
    290                indexOrDestination,
    291                messageLength,
    292                type,
    293                broadcast,
    294              };
   \                     ??send_12: (+1)
   \       0xE8   0xF8BD 0x0040      LDRH     R0,[SP, #+64]
   \       0xEC   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \       0xF0   0x9406             STR      R4,[SP, #+24]
   \       0xF2   0xF8AD 0x0022      STRH     R0,[SP, #+34]
   \       0xF6   0x9607             STR      R6,[SP, #+28]
   \       0xF8   0xF8AD 0xB020      STRH     R11,[SP, #+32]
   \       0xFC   0xF88D 0xA024      STRB     R10,[SP, #+36]
   \      0x100   0xF88D 0x5025      STRB     R5,[SP, #+37]
    295              // Called prior to fragmentation in case the mesasge does not go out over the
    296              // Zigbee radio, and instead goes to some other transport that does not require
    297              // low level ZigBee fragmentation.
    298              if (emberAfPreMessageSendCallback(&messageStruct,
    299                                                &status)) {
   \      0x104   0xA904             ADD      R1,SP,#+16
   \      0x106   0xA805             ADD      R0,SP,#+20
   \      0x108   0x....'....        BL       emberAfPreMessageSendCallback
   \      0x10C   0xB110             CBZ.N    R0,??send_13
    300                return status;
   \                     ??send_10: (+1)
   \      0x10E   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \      0x112   0xE788             B.N      ??send_3
    301              }
    302            }
    303          
    304            // SE 1.4 requires an option to disable APS ACK and Default Response
    305            emAfApplyDisableDefaultResponse(&message[0]);
   \                     ??send_13: (+1)
   \      0x114   0x4630             MOV      R0,R6
   \      0x116   0x....'....        BL       emAfApplyDisableDefaultResponse
    306            emAfApplyRetryOverride(&apsFrame->options);
   \      0x11A   0x1DA0             ADDS     R0,R4,#+6
   \      0x11C   0x....'....        BL       emAfApplyRetryOverride
    307          
    308            if (messageLength
    309                <= emberAfMaximumApsPayloadLength(type, indexOrDestination, apsFrame)) {
   \      0x120   0x4622             MOV      R2,R4
   \      0x122   0x4659             MOV      R1,R11
   \      0x124   0x4650             MOV      R0,R10
   \      0x126   0x....'....        BL       emberAfMaximumApsPayloadLength
   \      0x12A   0xF8BD 0x1040      LDRH     R1,[SP, #+64]
   \      0x12E   0x4288             CMP      R0,R1
   \      0x130   0xD324             BCC.N    ??send_14
   \      0x132   0x981D             LDR      R0,[SP, #+116]
   \      0x134   0x991C             LDR      R1,[SP, #+112]
    310              status = emAfSend(type,
    311                                indexOrDestination,
    312                                apsFrame,
    313                                (uint8_t)messageLength,
    314                                message,
    315                                &messageTag,
    316                                alias,
    317                                sequence);
   \      0x136   0xF8BD 0x3040      LDRH     R3,[SP, #+64]
   \      0x13A   0x9003             STR      R0,[SP, #+12]
   \      0x13C   0xF10D 0x0011      ADD      R0,SP,#+17
   \      0x140   0x9102             STR      R1,[SP, #+8]
   \      0x142   0x9001             STR      R0,[SP, #+4]
   \      0x144   0x9600             STR      R6,[SP, #+0]
   \      0x146   0xB2DB             UXTB     R3,R3
   \      0x148   0x4622             MOV      R2,R4
   \      0x14A   0x4659             MOV      R1,R11
   \      0x14C   0x4650             MOV      R0,R10
   \      0x14E   0x....'....        BL       emAfSend
   \      0x152   0xF88D 0x0010      STRB     R0,[SP, #+16]
    318          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
    319            } else if (!broadcast) {
    320              status = emAfFragmentationSendUnicast(type,
    321                                                    indexOrDestination,
    322                                                    apsFrame,
    323                                                    message,
    324                                                    messageLength,
    325                                                    &messageTag);
    326              emberAfDebugPrintln("%pstart:len=%d.", "Fragmentation:", messageLength);
    327          #endif
    328            } else {
    329              status = EMBER_MESSAGE_TOO_LONG;
    330            }
    331          
    332          #ifdef EMBER_AF_PLUGIN_CRITICAL_MESSAGE_QUEUE
    333            // If this was a critical message queue entry, fire the callback
    334            if ((status != EMBER_SUCCESS)
    335                && (callback == emberAfPluginCriticalMessageQueueEnqueueCallback
    336                    || callback == emAfPluginCriticalMessageQueueRetryCallback)) {
    337              callback(type,
    338                       indexOrDestination,
    339                       apsFrame,
    340                       messageLength,
    341                       message,
    342                       status);
    343            }
    344          #endif // EMBER_AF_PLUGIN_CRITICAL_MESSAGE_QUEUE
    345          
    346            if (callback != NULL
    347                && status == EMBER_SUCCESS
    348                && messageTag != INVALID_MESSAGE_TAG
    349                && messageSentIndex < EMBER_AF_MESSAGE_SENT_CALLBACK_TABLE_SIZE) {
   \      0x156   0xEA5F 0x0009      MOVS     R0,R9
   \      0x15A   0xD013             BEQ.N    ??send_15
   \      0x15C   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \      0x160   0xB980             CBNZ.N   R0,??send_15
   \      0x162   0xF89D 0x0011      LDRB     R0,[SP, #+17]
   \      0x166   0x28FF             CMP      R0,#+255
   \      0x168   0xD01C             BEQ.N    ??send_16
   \      0x16A   0x2F0A             CMP      R7,#+10
   \      0x16C   0xDA1A             BGE.N    ??send_16
    350              messageSentCallbacks[messageSentIndex].tag = messageTag;
   \      0x16E   0xF108 0x0104      ADD      R1,R8,#+4
   \      0x172   0xF801 0x0037      STRB     R0,[R1, R7, LSL #+3]
    351              messageSentCallbacks[messageSentIndex].callback = callback;
   \      0x176   0xF848 0x9037      STR      R9,[R8, R7, LSL #+3]
   \      0x17A   0xE013             B.N      ??send_16
    352            }
   \                     ??send_14: (+1)
   \      0x17C   0x2074             MOVS     R0,#+116
   \      0x17E   0xF88D 0x0010      STRB     R0,[SP, #+16]
   \      0x182   0xE012             B.N      ??send_17
    353          
    354            if (status == EMBER_OPERATION_IN_PROGRESS
    355                && apsFrame->options & EMBER_APS_OPTION_DSA_SIGN) {
   \                     ??send_15: (+1)
   \      0x184   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \      0x188   0x28BA             CMP      R0,#+186
   \      0x18A   0xD108             BNE.N    ??send_18
   \      0x18C   0x79A0             LDRB     R0,[R4, #+6]
   \      0x18E   0x06C1             LSLS     R1,R0,#+27
   \      0x190   0xD50B             BPL.N    ??send_17
    356              // We consider "in progress" signed messages as being sent successfully.
    357              // The stack will send the message after signing.
    358              status = EMBER_SUCCESS;
   \      0x192   0x2000             MOVS     R0,#+0
   \      0x194   0xF88D 0x0010      STRB     R0,[SP, #+16]
    359              emAfSetCryptoOperationInProgress();
   \      0x198   0x2001             MOVS     R0,#+1
   \      0x19A   0x....'....        BL       emAfSetCryptoStatus
    360            }
    361          
    362            if (status == EMBER_SUCCESS) {
   \                     ??send_18: (+1)
   \      0x19E   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \      0x1A2   0xB910             CBNZ.N   R0,??send_17
    363              emberAfAddToCurrentAppTasks(EMBER_AF_WAITING_FOR_DATA_ACK
    364                                          | EMBER_AF_WAITING_FOR_ZCL_RESPONSE);
   \                     ??send_16: (+1)
   \      0x1A4   0x2011             MOVS     R0,#+17
   \      0x1A6   0x....'....        BL       emberAfAddToCurrentAppTasksCallback
    365            }
    366          
    367            emberAfPopNetworkIndex();
   \                     ??send_17: (+1)
   \      0x1AA   0x....'....        BL       emberAfPopNetworkIndex
   \      0x1AE   0xE7AE             B.N      ??send_10
   \                     ??send_6: (+1)
   \      0x1B0   0x4607             MOV      R7,R0
   \      0x1B2   0xE74F             B.N      ??send_7
    368            return status;
    369          }
    370          

   \                                 In section .text, align 2, keep-with-next
    371          EmberStatus emberAfSendMulticastWithAliasWithCallback(EmberMulticastId multicastId,
    372                                                                EmberApsFrame *apsFrame,
    373                                                                uint16_t messageLength,
    374                                                                uint8_t *message,
    375                                                                EmberNodeId alias,
    376                                                                uint8_t sequence,
    377                                                                EmberAfMessageSentFunction callback)
    378          {
   \                     emberAfSendMulticastWithAliasWithCallback: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x9D0A             LDR      R5,[SP, #+40]
   \        0x6   0x9C0B             LDR      R4,[SP, #+44]
   \        0x8   0x9E0C             LDR      R6,[SP, #+48]
    379            apsFrame->groupId = multicastId;
   \        0xA   0x8108             STRH     R0,[R1, #+8]
    380            return send(EMBER_OUTGOING_MULTICAST_WITH_ALIAS,
    381                        multicastId,
    382                        apsFrame,
    383                        messageLength,
    384                        message,
    385                        true, //broadcast
    386                        alias,
    387                        sequence,
    388                        callback);
   \        0xC   0x9300             STR      R3,[SP, #+0]
   \        0xE   0x....'....        BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x12   0x2004             MOVS     R0,#+4
   \       0x14   0x....             B.N      ?Subroutine0
    389          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x....'....        BL       send
   \        0x4   0xB006             ADD      SP,SP,#+24
   \        0x6   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x4613             MOV      R3,R2
   \        0x2   0x9403             STR      R4,[SP, #+12]
   \        0x4   0x460A             MOV      R2,R1
   \        0x6   0x2401             MOVS     R4,#+1
   \        0x8   0x4601             MOV      R1,R0
   \        0xA   0x9604             STR      R6,[SP, #+16]
   \        0xC   0x9502             STR      R5,[SP, #+8]
   \        0xE   0x9401             STR      R4,[SP, #+4]
   \       0x10   0x4770             BX       LR
    390          

   \                                 In section .text, align 2, keep-with-next
    391          EmberStatus emberAfSendMulticastWithCallback(EmberMulticastId multicastId,
    392                                                       EmberApsFrame *apsFrame,
    393                                                       uint16_t messageLength,
    394                                                       uint8_t *message,
    395                                                       EmberAfMessageSentFunction callback)
    396          {
   \                     emberAfSendMulticastWithCallback: (+1)
   \        0x0   0xB55C             PUSH     {R2-R4,R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x9C0A             LDR      R4,[SP, #+40]
    397            apsFrame->groupId = multicastId;
   \        0x6   0x8108             STRH     R0,[R1, #+8]
    398            return send(EMBER_OUTGOING_MULTICAST,
    399                        multicastId,
    400                        apsFrame,
    401                        messageLength,
    402                        message,
    403                        true, // broadcast?
    404                        0, //alias
    405                        0, //sequence
    406                        callback);
   \        0x8   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0xC   0x2003             MOVS     R0,#+3
   \        0xE   0x....             B.N      ?Subroutine1
    407          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x....'....        BL       send
   \        0x4   0xB007             ADD      SP,SP,#+28
   \        0x6   0xBD50             POP      {R4,R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x9300             STR      R3,[SP, #+0]
   \        0x2   0x4613             MOV      R3,R2
   \        0x4   0x9404             STR      R4,[SP, #+16]
   \        0x6   0x460A             MOV      R2,R1
   \        0x8   0x2400             MOVS     R4,#+0
   \        0xA   0x2601             MOVS     R6,#+1
   \        0xC   0x4601             MOV      R1,R0
   \        0xE   0x9403             STR      R4,[SP, #+12]
   \       0x10   0x9402             STR      R4,[SP, #+8]
   \       0x12   0x9601             STR      R6,[SP, #+4]
   \       0x14   0x4770             BX       LR
    408          

   \                                 In section .text, align 2, keep-with-next
    409          EmberStatus emberAfSendMulticast(EmberMulticastId multicastId,
    410                                           EmberApsFrame *apsFrame,
    411                                           uint16_t messageLength,
    412                                           uint8_t *message)
    413          {
   \                     emberAfSendMulticast: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    414            return emberAfSendMulticastWithCallback(multicastId,
    415                                                    apsFrame,
    416                                                    messageLength,
    417                                                    message,
    418                                                    NULL);
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x9400             STR      R4,[SP, #+0]
   \        0x6   0x....'....        BL       emberAfSendMulticastWithCallback
   \        0xA   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    419          }
    420          

   \                                 In section .text, align 2, keep-with-next
    421          EmberStatus emberAfSendMulticastToBindings(EmberApsFrame *apsFrame,
    422                                                     uint16_t messageLength,
    423                                                     uint8_t* message)
    424          {
   \                     emberAfSendMulticastToBindings: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4615             MOV      R5,R2
    425            EmberStatus status = EMBER_INVALID_BINDING_INDEX;
    426            uint8_t i;
    427            EmberBindingTableEntry binding;
    428            uint16_t groupDest;
    429          
    430            if ((NULL == apsFrame) || (0 == messageLength) || (NULL == message)) {
   \        0xA   0xD003             BEQ.N    ??emberAfSendMulticastToBindings_0
   \        0xC   0x0030             MOVS     R0,R6
   \        0xE   0xBF18             IT       NE 
   \       0x10   0x2D00             CMPNE    R5,#+0
   \       0x12   0xD101             BNE.N    ??emberAfSendMulticastToBindings_1
    431              return EMBER_BAD_ARGUMENT;
   \                     ??emberAfSendMulticastToBindings_0: (+1)
   \       0x14   0x2002             MOVS     R0,#+2
   \       0x16   0xE02A             B.N      ??emberAfSendMulticastToBindings_2
    432            }
    433          
    434            for (i = 0; i < EMBER_BINDING_TABLE_SIZE; i++) {
   \                     ??emberAfSendMulticastToBindings_1: (+1)
   \       0x18   0x2700             MOVS     R7,#+0
    435              status = emberGetBinding(i, &binding);
   \                     ??emberAfSendMulticastToBindings_3: (+1)
   \       0x1A   0x4669             MOV      R1,SP
   \       0x1C   0xB2F8             UXTB     R0,R7
   \       0x1E   0x....'....        BL       emberGetBinding
    436              if (status != EMBER_SUCCESS) {
   \       0x22   0x0001             MOVS     R1,R0
   \       0x24   0xD123             BNE.N    ??emberAfSendMulticastToBindings_2
    437                return status;
    438              }
    439          
    440              if (binding.type == EMBER_MULTICAST_BINDING
    441                  && binding.local == apsFrame->sourceEndpoint
    442                  && binding.clusterId == apsFrame->clusterId) {
   \       0x26   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \       0x2A   0x2903             CMP      R1,#+3
   \       0x2C   0xBF02             ITTT     EQ 
   \       0x2E   0xF89D 0x1001      LDRBEQ   R1,[SP, #+1]
   \       0x32   0x7922             LDRBEQ   R2,[R4, #+4]
   \       0x34   0x4291             CMPEQ    R1,R2
   \       0x36   0xBF02             ITTT     EQ 
   \       0x38   0xF8BD 0x1002      LDRHEQ   R1,[SP, #+2]
   \       0x3C   0x8862             LDRHEQ   R2,[R4, #+2]
   \       0x3E   0x4291             CMPEQ    R1,R2
   \       0x40   0xD111             BNE.N    ??emberAfSendMulticastToBindings_4
    443                groupDest = (binding.identifier[0]
    444                             + (((uint16_t)(binding.identifier[1])) << 8));
   \       0x42   0xF89D 0x0005      LDRB     R0,[SP, #+5]
   \       0x46   0xF89D 0x1006      LDRB     R1,[SP, #+6]
    445                apsFrame->groupId = groupDest;
    446                apsFrame->destinationEndpoint = binding.remote;
    447          
    448                status = emberAfSendMulticast(groupDest,        // multicast ID
    449                                              apsFrame,
    450                                              messageLength,
    451                                              message);
   \       0x4A   0x462B             MOV      R3,R5
   \       0x4C   0x4632             MOV      R2,R6
   \       0x4E   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \       0x52   0x8120             STRH     R0,[R4, #+8]
   \       0x54   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \       0x58   0xB280             UXTH     R0,R0
   \       0x5A   0x7161             STRB     R1,[R4, #+5]
   \       0x5C   0x4621             MOV      R1,R4
   \       0x5E   0x....'....        BL       emberAfSendMulticast
    452          
    453                if (status != EMBER_SUCCESS) {
   \       0x62   0x0001             MOVS     R1,R0
   \       0x64   0xD103             BNE.N    ??emberAfSendMulticastToBindings_2
    454                  return status;
    455                }
    456              }
    457            }
   \                     ??emberAfSendMulticastToBindings_4: (+1)
   \       0x66   0x1C7F             ADDS     R7,R7,#+1
   \       0x68   0xB2F9             UXTB     R1,R7
   \       0x6A   0x2902             CMP      R1,#+2
   \       0x6C   0xDDD5             BLE.N    ??emberAfSendMulticastToBindings_3
    458          
    459            return status;
   \                     ??emberAfSendMulticastToBindings_2: (+1)
   \       0x6E   0xB005             ADD      SP,SP,#+20
   \       0x70   0xBDF0             POP      {R4-R7,PC}       ;; return
    460          }
    461          

   \                                 In section .text, align 2, keep-with-next
    462          EmberStatus emberAfSendBroadcastWithCallback(EmberNodeId destination,
    463                                                       EmberApsFrame *apsFrame,
    464                                                       uint16_t messageLength,
    465                                                       uint8_t *message,
    466                                                       EmberAfMessageSentFunction callback)
    467          {
   \                     emberAfSendBroadcastWithCallback: (+1)
   \        0x0   0xB55C             PUSH     {R2-R4,R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x9C0A             LDR      R4,[SP, #+40]
    468            return send(EMBER_OUTGOING_BROADCAST,
    469                        destination,
    470                        apsFrame,
    471                        messageLength,
    472                        message,
    473                        true, // broadcast?
    474                        0, //alias
    475                        0, //sequence
    476                        callback);
   \        0x6   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0xA   0x2006             MOVS     R0,#+6
   \        0xC                      REQUIRE ?Subroutine1
   \        0xC                      ;; // Fall through to label ?Subroutine1
    477          }

   \                                 In section .text, align 2, keep-with-next
    478          EmberStatus emberAfSendBroadcastWithAliasWithCallback(EmberNodeId destination,
    479                                                                EmberApsFrame *apsFrame,
    480                                                                uint16_t messageLength,
    481                                                                uint8_t *message,
    482                                                                EmberNodeId alias,
    483                                                                uint8_t sequence,
    484                                                                EmberAfMessageSentFunction callback)
    485          {
   \                     emberAfSendBroadcastWithAliasWithCallback: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x9C0B             LDR      R4,[SP, #+44]
    486            return send(EMBER_OUTGOING_BROADCAST_WITH_ALIAS,
    487                        destination,
    488                        apsFrame,
    489                        messageLength,
    490                        message,
    491                        true, // broadcast?
    492                        alias, //alias
    493                        sequence, //sequence
    494                        callback);
   \        0x6   0x9300             STR      R3,[SP, #+0]
   \        0x8   0x9D0A             LDR      R5,[SP, #+40]
   \        0xA   0x9E0C             LDR      R6,[SP, #+48]
   \        0xC   0x....'....        BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x10   0x2005             MOVS     R0,#+5
   \       0x12                      REQUIRE ?Subroutine0
   \       0x12                      ;; // Fall through to label ?Subroutine0
    495          }
    496          

   \                                 In section .text, align 2, keep-with-next
    497          EmberStatus emberAfSendBroadcast(EmberNodeId destination,
    498                                           EmberApsFrame *apsFrame,
    499                                           uint16_t messageLength,
    500                                           uint8_t *message)
    501          {
   \                     emberAfSendBroadcast: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
    502            return emberAfSendBroadcastWithCallback(destination,
    503                                                    apsFrame,
    504                                                    messageLength,
    505                                                    message,
    506                                                    NULL);
   \        0x2   0x2400             MOVS     R4,#+0
   \        0x4   0x9400             STR      R4,[SP, #+0]
   \        0x6   0x....'....        BL       emberAfSendBroadcastWithCallback
   \        0xA   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    507          }
    508          

   \                                 In section .text, align 2, keep-with-next
    509          EmberStatus emberAfSendUnicastWithCallback(EmberOutgoingMessageType type,
    510                                                     uint16_t indexOrDestination,
    511                                                     EmberApsFrame *apsFrame,
    512                                                     uint16_t messageLength,
    513                                                     uint8_t *message,
    514                                                     EmberAfMessageSentFunction callback)
    515          {
   \                     emberAfSendUnicastWithCallback: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4616             MOV      R6,R2
   \        0xA   0x461F             MOV      R7,R3
    516            // The source endpoint in the APS frame MAY NOT be valid at this point if the
    517            // outgoing type is "via binding."
    518            if (type == EMBER_OUTGOING_VIA_BINDING) {
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xD10B             BNE.N    ??emberAfSendUnicastWithCallback_0
    519              // If using binding, set the endpoints based on those in the binding.  The
    520              // cluster in the binding is not used because bindings can be used to send
    521              // messages with any cluster id, not just the one set in the binding.
    522              EmberBindingTableEntry binding;
    523              EmberStatus status = emberGetBinding(indexOrDestination, &binding);
   \       0x10   0x4669             MOV      R1,SP
   \       0x12   0xB2E8             UXTB     R0,R5
   \       0x14   0x....'....        BL       emberGetBinding
    524              if (status != EMBER_SUCCESS) {
   \       0x18   0x0001             MOVS     R1,R0
   \       0x1A   0xD113             BNE.N    ??emberAfSendUnicastWithCallback_1
    525                return status;
    526              }
    527              apsFrame->sourceEndpoint = binding.local;
   \       0x1C   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \       0x20   0x7130             STRB     R0,[R6, #+4]
    528              apsFrame->destinationEndpoint = binding.remote;
   \       0x22   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x26   0x7170             STRB     R0,[R6, #+5]
   \                     ??emberAfSendUnicastWithCallback_0: (+1)
   \       0x28   0x990B             LDR      R1,[SP, #+44]
   \       0x2A   0x980A             LDR      R0,[SP, #+40]
    529            }
    530            return send(type,
    531                        indexOrDestination,
    532                        apsFrame,
    533                        messageLength,
    534                        message,
    535                        false, // broadcast?
    536                        0, //alias
    537                        0, //sequence
    538                        callback);
   \       0x2C   0x463B             MOV      R3,R7
   \       0x2E   0x9104             STR      R1,[SP, #+16]
   \       0x30   0x2100             MOVS     R1,#+0
   \       0x32   0x9103             STR      R1,[SP, #+12]
   \       0x34   0x9102             STR      R1,[SP, #+8]
   \       0x36   0x9101             STR      R1,[SP, #+4]
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x4632             MOV      R2,R6
   \       0x3C   0x4629             MOV      R1,R5
   \       0x3E   0x4620             MOV      R0,R4
   \       0x40   0x....'....        BL       send
   \                     ??emberAfSendUnicastWithCallback_1: (+1)
   \       0x44   0xB005             ADD      SP,SP,#+20
   \       0x46   0xBDF0             POP      {R4-R7,PC}       ;; return
    539          }
    540          

   \                                 In section .text, align 2, keep-with-next
    541          EmberStatus emberAfSendUnicast(EmberOutgoingMessageType type,
    542                                         uint16_t indexOrDestination,
    543                                         EmberApsFrame *apsFrame,
    544                                         uint16_t messageLength,
    545                                         uint8_t *message)
    546          {
   \                     emberAfSendUnicast: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x9C06             LDR      R4,[SP, #+24]
    547            return emberAfSendUnicastWithCallback(type,
    548                                                  indexOrDestination,
    549                                                  apsFrame,
    550                                                  messageLength,
    551                                                  message,
    552                                                  NULL);
   \        0x4   0x2500             MOVS     R5,#+0
   \        0x6   0x9501             STR      R5,[SP, #+4]
   \        0x8   0x9400             STR      R4,[SP, #+0]
   \        0xA   0x....'....        BL       emberAfSendUnicastWithCallback
   \        0xE   0xBD3E             POP      {R1-R5,PC}       ;; return
    553          }
    554          

   \                                 In section .text, align 2, keep-with-next
    555          EmberStatus emberAfSendUnicastToBindingsWithCallback(EmberApsFrame *apsFrame,
    556                                                               uint16_t messageLength,
    557                                                               uint8_t* message,
    558                                                               EmberAfMessageSentFunction callback)
    559          {
   \                     emberAfSendUnicastToBindingsWithCallback: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0xB089             SUB      SP,SP,#+36
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x4688             MOV      R8,R1
   \        0xA   0x4616             MOV      R6,R2
   \        0xC   0x461F             MOV      R7,R3
    560            EmberStatus status = EMBER_INVALID_BINDING_INDEX;
    561            uint8_t i;
    562          
    563            for (i = 0; i < EMBER_BINDING_TABLE_SIZE; i++) {
   \        0xE   0x2500             MOVS     R5,#+0
    564              EmberBindingTableEntry binding;
    565              status = emberGetBinding(i, &binding);
   \                     ??emberAfSendUnicastToBindingsWithCallback_0: (+1)
   \       0x10   0xA905             ADD      R1,SP,#+20
   \       0x12   0xB2E8             UXTB     R0,R5
   \       0x14   0x....'....        BL       emberGetBinding
    566              if (status != EMBER_SUCCESS) {
   \       0x18   0x0001             MOVS     R1,R0
   \       0x1A   0xD122             BNE.N    ??emberAfSendUnicastToBindingsWithCallback_1
    567                return status;
    568              }
    569              if (binding.type == EMBER_UNICAST_BINDING
    570                  && binding.local == apsFrame->sourceEndpoint
    571                  && binding.clusterId == apsFrame->clusterId) {
   \       0x1C   0xF89D 0x1014      LDRB     R1,[SP, #+20]
   \       0x20   0x2901             CMP      R1,#+1
   \       0x22   0xBF02             ITTT     EQ 
   \       0x24   0xF89D 0x1015      LDRBEQ   R1,[SP, #+21]
   \       0x28   0x7922             LDRBEQ   R2,[R4, #+4]
   \       0x2A   0x4291             CMPEQ    R1,R2
   \       0x2C   0xBF02             ITTT     EQ 
   \       0x2E   0xF8BD 0x1016      LDRHEQ   R1,[SP, #+22]
   \       0x32   0x8862             LDRHEQ   R2,[R4, #+2]
   \       0x34   0x4291             CMPEQ    R1,R2
   \       0x36   0xD110             BNE.N    ??emberAfSendUnicastToBindingsWithCallback_2
    572                apsFrame->destinationEndpoint = binding.remote;
   \       0x38   0xF89D 0x0018      LDRB     R0,[SP, #+24]
    573                status = send(EMBER_OUTGOING_VIA_BINDING,
    574                              i,
    575                              apsFrame,
    576                              messageLength,
    577                              message,
    578                              false, // broadcast?
    579                              0, //alias
    580                              0, //sequence
    581                              callback);
   \       0x3C   0x2100             MOVS     R1,#+0
   \       0x3E   0x4643             MOV      R3,R8
   \       0x40   0x7160             STRB     R0,[R4, #+5]
   \       0x42   0x9103             STR      R1,[SP, #+12]
   \       0x44   0x9102             STR      R1,[SP, #+8]
   \       0x46   0x9101             STR      R1,[SP, #+4]
   \       0x48   0x9704             STR      R7,[SP, #+16]
   \       0x4A   0x9600             STR      R6,[SP, #+0]
   \       0x4C   0x4622             MOV      R2,R4
   \       0x4E   0xB2E9             UXTB     R1,R5
   \       0x50   0x2002             MOVS     R0,#+2
   \       0x52   0x....'....        BL       send
    582                if (status != EMBER_SUCCESS) {
   \       0x56   0x0001             MOVS     R1,R0
   \       0x58   0xD103             BNE.N    ??emberAfSendUnicastToBindingsWithCallback_1
    583                  return status;
    584                }
    585              }
    586            }
   \                     ??emberAfSendUnicastToBindingsWithCallback_2: (+1)
   \       0x5A   0x1C6D             ADDS     R5,R5,#+1
   \       0x5C   0xB2E9             UXTB     R1,R5
   \       0x5E   0x2902             CMP      R1,#+2
   \       0x60   0xDDD6             BLE.N    ??emberAfSendUnicastToBindingsWithCallback_0
    587          
    588            return status;
   \                     ??emberAfSendUnicastToBindingsWithCallback_1: (+1)
   \       0x62   0xB00A             ADD      SP,SP,#+40
   \       0x64   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    589          }
    590          

   \                                 In section .text, align 2, keep-with-next
    591          EmberStatus emberAfSendUnicastToBindings(EmberApsFrame *apsFrame,
    592                                                   uint16_t messageLength,
    593                                                   uint8_t* message)
    594          {
    595            return emberAfSendUnicastToBindingsWithCallback(apsFrame,
    596                                                            messageLength,
    597                                                            message,
    598                                                            NULL);
   \                     emberAfSendUnicastToBindings: (+1)
   \        0x0   0x2300             MOVS     R3,#+0
   \        0x2   0x....             B.N      emberAfSendUnicastToBindingsWithCallback
    599          }
    600          

   \                                 In section .text, align 2, keep-with-next
    601          EmberStatus emberAfSendInterPan(EmberPanId panId,
    602                                          const EmberEUI64 destinationLongId,
    603                                          EmberNodeId destinationShortId,
    604                                          EmberMulticastId multicastId,
    605                                          EmberAfClusterId clusterId,
    606                                          EmberAfProfileId profileId,
    607                                          uint16_t messageLength,
    608                                          uint8_t* messageBytes)
    609          {
   \                     emberAfSendInterPan: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460C             MOV      R4,R1
   \        0x8   0x4616             MOV      R6,R2
   \        0xA   0x461F             MOV      R7,R3
    610            EmberAfInterpanHeader header;
    611            MEMSET(&header, 0, sizeof(EmberAfInterpanHeader));
   \        0xC   0x2216             MOVS     R2,#+22
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x....'....        BL       halCommonMemSet
    612            header.panId = panId;
   \       0x16   0xF8AD 0x500C      STRH     R5,[SP, #+12]
    613            header.shortAddress = destinationShortId;
   \       0x1A   0xF8AD 0x600A      STRH     R6,[SP, #+10]
    614            if (destinationLongId != NULL) {
   \       0x1E   0xB16C             CBZ.N    R4,??emberAfSendInterPan_0
    615              MEMMOVE(header.longAddress, destinationLongId, EUI64_SIZE);
   \       0x20   0x2208             MOVS     R2,#+8
   \       0x22   0x4621             MOV      R1,R4
   \       0x24   0xF10D 0x0001      ADD      R0,SP,#+1
   \       0x28   0x....'....        BL       halCommonMemMove
    616              header.options |= EMBER_AF_INTERPAN_OPTION_MAC_HAS_LONG_ADDRESS;
   \       0x2C   0xF8BD 0x1014      LDRH     R1,[SP, #+20]
   \       0x30   0xF041 0x0102      ORR      R1,R1,#0x2
   \       0x34   0xF8AD 0x1014      STRH     R1,[SP, #+20]
    617              header.messageType = EMBER_AF_INTER_PAN_UNICAST;
   \       0x38   0x2100             MOVS     R1,#+0
   \       0x3A   0xE004             B.N      ??emberAfSendInterPan_1
    618            } else if (multicastId != 0) {
   \                     ??emberAfSendInterPan_0: (+1)
   \       0x3C   0x0038             MOVS     R0,R7
   \       0x3E   0xD005             BEQ.N    ??emberAfSendInterPan_2
    619              header.groupId = multicastId;
   \       0x40   0xF8AD 0x7012      STRH     R7,[SP, #+18]
    620              header.messageType = EMBER_AF_INTER_PAN_MULTICAST;
   \       0x44   0x210C             MOVS     R1,#+12
   \                     ??emberAfSendInterPan_1: (+1)
   \       0x46   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \       0x4A   0xE007             B.N      ??emberAfSendInterPan_3
    621            } else {
    622              header.messageType = (destinationShortId < EMBER_BROADCAST_ADDRESS
    623                                    ? EMBER_AF_INTER_PAN_UNICAST
    624                                    : EMBER_AF_INTER_PAN_BROADCAST);
   \                     ??emberAfSendInterPan_2: (+1)
   \       0x4C   0xF64F 0x70FC      MOVW     R0,#+65532
   \       0x50   0x4286             CMP      R6,R0
   \       0x52   0xBFB4             ITE      LT 
   \       0x54   0x2000             MOVLT    R0,#+0
   \       0x56   0x2008             MOVGE    R0,#+8
   \       0x58   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??emberAfSendInterPan_3: (+1)
   \       0x5C   0x980D             LDR      R0,[SP, #+52]
   \       0x5E   0x9B0C             LDR      R3,[SP, #+48]
   \       0x60   0x9A0F             LDR      R2,[SP, #+60]
   \       0x62   0x990E             LDR      R1,[SP, #+56]
    625            }
    626            header.profileId = profileId;
   \       0x64   0xF8AD 0x000E      STRH     R0,[SP, #+14]
    627            header.clusterId = clusterId;
   \       0x68   0xF8AD 0x3010      STRH     R3,[SP, #+16]
    628            return emberAfInterpanSendMessageCallback(&header,
    629                                                      messageLength,
    630                                                      messageBytes);
   \       0x6C   0x4668             MOV      R0,SP
   \       0x6E   0x....'....        BL       emberAfInterpanSendMessageCallback
   \       0x72   0xB007             ADD      SP,SP,#+28
   \       0x74   0xBDF0             POP      {R4-R7,PC}       ;; return
    631          }
    632          

   \                                 In section .text, align 2, keep-with-next
    633          void emberAfPrintMessageData(uint8_t* data, uint16_t length)
    634          {
   \                     emberAfPrintMessageData: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    635          #if defined EMBER_AF_PRINT_APP
    636            emberAfAppPrint(" payload (len %2x) [", length);
   \        0x6   0x462A             MOV      R2,R5
   \        0x8   0x....'....        LDR.W    R1,??DataTable10_3
   \        0xC   0x2002             MOVS     R0,#+2
   \        0xE   0x....'....        BL       emberAfPrint
    637            emberAfAppPrintBuffer(data, length, true);
   \       0x12   0x2301             MOVS     R3,#+1
   \       0x14   0x462A             MOV      R2,R5
   \       0x16   0x4621             MOV      R1,R4
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0x....'....        BL       emberAfPrintBuffer
    638            emberAfAppPrintln("]");
   \       0x1E   0x....'....        LDR.W    R1,??DataTable10_4
   \       0x22   0x2002             MOVS     R0,#+2
   \       0x24   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x28   0x....'....        B.W      emberAfPrintln
    639          #endif
    640          }
    641          

   \                                 In section .text, align 2, keep-with-next
    642          void emAfPrintStatus(const char * task,
    643                               EmberStatus status)
    644          {
   \                     emAfPrintStatus: (+1)
   \        0x0   0x4603             MOV      R3,R0
   \        0x2   0xB580             PUSH     {R7,LR}
    645            if (status == EMBER_SUCCESS) {
   \        0x4   0x....'....        LDR.W    R0,??DataTable10_5
   \        0x8   0x8800             LDRH     R0,[R0, #+0]
   \        0xA   0x000A             MOVS     R2,R1
   \        0xC   0xD107             BNE.N    ??emAfPrintStatus_0
    646              emberAfPrint(emberAfPrintActiveArea,
    647                           "%p: %p",
    648                           "Success",
    649                           task);
   \        0xE   0x....'....        LDR.W    R2,??DataTable10_6
   \       0x12   0x....'....        LDR.W    R1,??DataTable10_7
   \       0x16   0xE8BD 0x5000      POP      {R12,LR}
   \       0x1A   0x....'....        B.W      emberAfPrint
    650            } else {
    651              emberAfPrint(emberAfPrintActiveArea,
    652                           "%p: %p: 0x%x",
    653                           "Error",
    654                           task,
    655                           status);
   \                     ??emAfPrintStatus_0: (+1)
   \       0x1E   0x9100             STR      R1,[SP, #+0]
   \       0x20   0x....'....        LDR.W    R2,??DataTable10_8
   \       0x24   0x....'....        LDR.W    R1,??DataTable10_9
   \       0x28   0x....'....        BL       emberAfPrint
    656            }
    657          }
   \       0x2C   0xBD01             POP      {R0,PC}          ;; return
    658          
    659          static EmberStatus broadcastPermitJoin(uint8_t duration)
    660          {
    661            EmberStatus status;
    662            uint8_t data[3] = { 0,   // sequence number (filled in later)
    663                                0,   // duration (filled in below)
    664                                1 }; // TC significance (always 1)
    665          
    666            data[1] = duration;
    667            status = emberSendZigDevRequest(EMBER_BROADCAST_ADDRESS,
    668                                            PERMIT_JOINING_REQUEST,
    669                                            0,   // APS options
    670                                            data,
    671                                            3);  // length
    672            return status;
    673          }
    674          
    675          // Public API

   \                                 In section .text, align 2, keep-with-next
    676          EmberStatus emberAfPermitJoin(uint8_t duration,
    677                                        bool broadcastMgmtPermitJoin)
    678          {
   \                     emberAfPermitJoin: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x460C             MOV      R4,R1
    679            // Permit joining forever is bad behavior, so we want to limit
    680            // this.  If 254 is not enough a re-broadcast should be done later.
    681            if (duration == EMBER_AF_PERMIT_JOIN_FOREVER) {
   \        0x4   0x28FF             CMP      R0,#+255
   \        0x6   0xD105             BNE.N    ??emberAfPermitJoin_0
    682              emberAfAppPrintln("Limiting duration of permit join from forever (255) to 254");
   \        0x8   0x....'....        LDR.W    R1,??DataTable10_10
   \        0xC   0x2002             MOVS     R0,#+2
   \        0xE   0x....'....        BL       emberAfPrintln
    683              duration = EMBER_AF_PERMIT_JOIN_MAX_TIMEOUT;
   \       0x12   0x20FE             MOVS     R0,#+254
    684            }
    685            return emAfPermitJoin(duration,
    686                                  broadcastMgmtPermitJoin);
   \                     ??emberAfPermitJoin_0: (+1)
   \       0x14   0x4621             MOV      R1,R4
   \       0x16   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1A                      REQUIRE emAfPermitJoin
   \       0x1A                      ;; // Fall through to label emAfPermitJoin
    687          }
    688          
    689          // Old API that doesn't restrict prevent permit joining forever (255)

   \                                 In section .text, align 2, keep-with-next
    690          EmberStatus emAfPermitJoin(uint8_t duration,
    691                                     bool broadcastMgmtPermitJoin)
    692          {
   \                     emAfPermitJoin: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    693            EmberStatus status = emberPermitJoining(duration);
   \        0x6   0x....'....        BL       emberPermitJoining
   \        0xA   0x4606             MOV      R6,R0
    694            emberAfAppPrintln("pJoin for %d sec: 0x%x", duration, status);
   \        0xC   0x4633             MOV      R3,R6
   \        0xE   0x4622             MOV      R2,R4
   \       0x10   0x....'....        LDR.W    R1,??DataTable10_11
   \       0x14   0x2002             MOVS     R0,#+2
   \       0x16   0x....'....        BL       emberAfPrintln
    695            if (status == EMBER_SUCCESS && broadcastMgmtPermitJoin) {
   \       0x1A   0x0030             MOVS     R0,R6
   \       0x1C   0xD111             BNE.N    ??emAfPermitJoin_0
   \       0x1E   0xB185             CBZ.N    R5,??emAfPermitJoin_0
    696              status = broadcastPermitJoin(duration);
   \       0x20   0x....'....        LDR.W    R1,??DataTable10_12
   \       0x24   0x680A             LDR      R2,[R1, #+0]
   \       0x26   0xA801             ADD      R0,SP,#+4
   \       0x28   0xAB01             ADD      R3,SP,#+4
   \       0x2A   0x6002             STR      R2,[R0, #+0]
   \       0x2C   0x2003             MOVS     R0,#+3
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   \       0x30   0xF88D 0x4005      STRB     R4,[SP, #+5]
   \       0x34   0x2200             MOVS     R2,#+0
   \       0x36   0x2136             MOVS     R1,#+54
   \       0x38   0xF64F 0x70FC      MOVW     R0,#+65532
   \       0x3C   0x....'....        BL       emberSendZigDevRequest
   \       0x40   0x4606             MOV      R6,R0
    697            }
    698            return status;
   \                     ??emAfPermitJoin_0: (+1)
   \       0x42   0x4630             MOV      R0,R6
   \       0x44   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    699          }
    700          
    701          // ******************************************************************
    702          // Functions called by the Serial Command Line Interface (CLI)
    703          // ******************************************************************
    704          

   \                                 In section .text, align 2, keep-with-next
    705          bool emAfProcessZdo(EmberNodeId sender,
    706                              EmberApsFrame* apsFrame,
    707                              uint8_t* message,
    708                              uint16_t length)
    709          {
   \                     emAfProcessZdo: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    710            if (apsFrame->profileId != EMBER_ZDO_PROFILE_ID) {
   \        0x6   0x8828             LDRH     R0,[R5, #+0]
   \        0x8   0x4617             MOV      R7,R2
   \        0xA   0x461E             MOV      R6,R3
   \        0xC   0xB108             CBZ.N    R0,??emAfProcessZdo_0
    711              return false;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0xBDF2             POP      {R1,R4-R7,PC}
    712            }
    713          
    714            // To make the printing simpler, we assume all 'request' messages
    715            // have a status of 0x00.  Request messages have no status value in them
    716            // but saying 'success' (0x00) seems appropriate.
    717            // Response messages will have their status value printed appropriately.
    718            emberAfZdoPrintln("RX: ZDO, command 0x%2x, status: 0x%X",
    719                              apsFrame->clusterId,
    720                              (apsFrame->clusterId >= CLUSTER_ID_RESPONSE_MINIMUM
    721                               ? message[1]
    722                               : 0));
   \                     ??emAfProcessZdo_0: (+1)
   \       0x12   0x886A             LDRH     R2,[R5, #+2]
   \       0x14   0x....'....        LDR.W    R1,??DataTable10_13
   \       0x18   0xF5B2 0x4F00      CMP      R2,#+32768
   \       0x1C   0xBFAC             ITE      GE 
   \       0x1E   0x787B             LDRBGE   R3,[R7, #+1]
   \       0x20   0x2300             MOVLT    R3,#+0
   \       0x22   0x2004             MOVS     R0,#+4
   \       0x24   0x....'....        BL       emberAfPrintln
    723          
    724            switch (apsFrame->clusterId) {
   \       0x28   0x8868             LDRH     R0,[R5, #+2]
   \       0x2A   0x....'....        LDR.W    R1,??DataTable10_14
   \       0x2E   0x3813             SUBS     R0,R0,#+19
   \       0x30   0xD01E             BEQ.N    ??emAfProcessZdo_1
   \       0x32   0xF647 0x72EE      MOVW     R2,#+32750
   \       0x36   0x1A80             SUBS     R0,R0,R2
   \       0x38   0xD01F             BEQ.N    ??emAfProcessZdo_2
   \       0x3A   0x1E40             SUBS     R0,R0,#+1
   \       0x3C   0xD027             BEQ.N    ??emAfProcessZdo_3
   \       0x3E   0x1E80             SUBS     R0,R0,#+2
   \       0x40   0xD006             BEQ.N    ??emAfProcessZdo_4
   \       0x42   0x1E40             SUBS     R0,R0,#+1
   \       0x44   0xD01F             BEQ.N    ??emAfProcessZdo_5
   \       0x46   0x1E40             SUBS     R0,R0,#+1
   \       0x48   0xD005             BEQ.N    ??emAfProcessZdo_6
   \       0x4A   0x381A             SUBS     R0,R0,#+26
   \       0x4C   0xD00C             BEQ.N    ??emAfProcessZdo_7
   \       0x4E   0xE02C             B.N      ??emAfProcessZdo_8
    725              case SIMPLE_DESCRIPTOR_RESPONSE:
    726                emberAfZdoPrintln("RX: %p Desc Resp", "Simple");
   \                     ??emAfProcessZdo_4: (+1)
   \       0x50   0x....'....        LDR.W    R2,??DataTable10_15
   \       0x54   0xE026             B.N      ??emAfProcessZdo_9
    727                break;
    728              case MATCH_DESCRIPTORS_RESPONSE:
    729                emberAfZdoPrint("RX: %p Desc Resp", "Match");
   \                     ??emAfProcessZdo_6: (+1)
   \       0x56   0x....'....        LDR.W    R2,??DataTable10_16
   \       0x5A   0x2004             MOVS     R0,#+4
   \       0x5C   0x....'....        BL       emberAfPrint
    730                emberAfZdoPrintln(", Matches: %d", message[4]);
   \       0x60   0x793A             LDRB     R2,[R7, #+4]
   \       0x62   0x....'....        LDR.W    R1,??DataTable10_17
   \       0x66   0xE01D             B.N      ??emAfProcessZdo_9
    731                break;
    732              case END_DEVICE_BIND_RESPONSE:
    733                emberAfZdoPrintln("RX: End dev bind response, status=%x", message[1]);
   \                     ??emAfProcessZdo_7: (+1)
   \       0x68   0x787A             LDRB     R2,[R7, #+1]
   \       0x6A   0x....'....        LDR.W    R1,??DataTable10_18
   \       0x6E   0xE019             B.N      ??emAfProcessZdo_9
    734                break;
    735              case END_DEVICE_ANNOUNCE:
    736                emberAfZdoPrintln("Device Announce: 0x%2x",
    737                                  (uint16_t)(message[1]) + (uint16_t)(message[2] << 8));
   \                     ??emAfProcessZdo_1: (+1)
   \       0x70   0x787A             LDRB     R2,[R7, #+1]
   \       0x72   0x78B8             LDRB     R0,[R7, #+2]
   \       0x74   0x....'....        LDR.W    R1,??DataTable10_19
   \       0x78   0xE012             B.N      ??emAfProcessZdo_10
    738                break;
    739              case IEEE_ADDRESS_RESPONSE:
    740                emberAfZdoPrintln("RX: IEEE Address Response");
   \                     ??emAfProcessZdo_2: (+1)
   \       0x7A   0x....'....        LDR.W    R1,??DataTable10_20
   \       0x7E   0x2004             MOVS     R0,#+4
   \       0x80   0x....'....        BL       emberAfPrintln
    741                break;
   \       0x84   0xE011             B.N      ??emAfProcessZdo_8
    742              case ACTIVE_ENDPOINTS_RESPONSE:
    743                emberAfZdoPrintln("RX: Active EP Response, Count: %d", message[4]);
   \                     ??emAfProcessZdo_5: (+1)
   \       0x86   0x793A             LDRB     R2,[R7, #+4]
   \       0x88   0x....'....        LDR.W    R1,??DataTable10_21
   \       0x8C   0xE00A             B.N      ??emAfProcessZdo_9
    744                break;
    745              case NODE_DESCRIPTOR_RESPONSE:
    746                emberAfZdoPrint("RX: %p Desc Resp", "Node");
   \                     ??emAfProcessZdo_3: (+1)
   \       0x8E   0x....'....        LDR.W    R2,??DataTable10_22
   \       0x92   0x2004             MOVS     R0,#+4
   \       0x94   0x....'....        BL       emberAfPrint
    747                emberAfZdoPrintln(", Matches: 0x%2x",
    748                                  (uint16_t)(message[1]) + (uint16_t)(message[2] << 8));
   \       0x98   0x787A             LDRB     R2,[R7, #+1]
   \       0x9A   0x78B8             LDRB     R0,[R7, #+2]
   \       0x9C   0x....'....        LDR.W    R1,??DataTable10_23
   \                     ??emAfProcessZdo_10: (+1)
   \       0xA0   0xEB02 0x2200      ADD      R2,R2,R0, LSL #+8
   \                     ??emAfProcessZdo_9: (+1)
   \       0xA4   0x2004             MOVS     R0,#+4
   \       0xA6   0x....'....        BL       emberAfPrintln
    749                break;
    750              default:
    751                break;
    752            }
    753          
    754            if (emAfPreZDOMessageReceived(sender, apsFrame, message, length)) {
   \                     ??emAfProcessZdo_8: (+1)
   \       0xAA   0x4633             MOV      R3,R6
   \       0xAC   0x463A             MOV      R2,R7
   \       0xAE   0x4629             MOV      R1,R5
   \       0xB0   0x4620             MOV      R0,R4
   \       0xB2   0x....'....        BL       emAfPreZDOMessageReceived
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xBF02             ITTT     EQ 
   \       0xBA   0x8868             LDRHEQ   R0,[R5, #+2]
   \       0xBC   0xF248 0x0121      MOVWEQ   R1,#+32801
   \       0xC0   0x4288             CMPEQ    R0,R1
    755              goto zdoProcessingDone;
    756            }
    757          
    758          #ifdef EMBER_AF_GENERATED_PLUGIN_ZDO_MESSAGE_RECEIVED_FUNCTION_CALLS
    759            EMBER_AF_GENERATED_PLUGIN_ZDO_MESSAGE_RECEIVED_FUNCTION_CALLS
    760          #endif
    761          
    762            switch (apsFrame->clusterId) {
   \       0xC2   0xD103             BNE.N    ??emAfProcessZdo_11
    763              case BIND_RESPONSE:
    764                emberAfPartnerLinkKeyExchangeResponseCallback(sender, message[1]);
   \       0xC4   0x7879             LDRB     R1,[R7, #+1]
   \       0xC6   0x4620             MOV      R0,R4
   \       0xC8   0x....'....        BL       emberAfPartnerLinkKeyExchangeResponseCallback
    765                break;
    766          #ifdef EMBER_AF_PLUGIN_SUB_GHZ_SERVER
    767              case NWK_UNSOLICITED_ENHANCED_UPDATE_NOTIFY:
    768                emAfSubGhzServerZDOMessageReceivedCallback(sender, message, length);
    769                break;
    770          #endif
    771              default:
    772                break;
    773            }
    774          
    775            zdoProcessingDone:
    776            // if it is a zdo response we can remove the zdo waiting task
    777            // and let a sleepy go back into hibernation
    778            if (apsFrame->clusterId > CLUSTER_ID_RESPONSE_MINIMUM) {
   \                     ??emAfProcessZdo_11: (+1)
   \       0xCC   0x8868             LDRH     R0,[R5, #+2]
   \       0xCE   0xF5B0 0x4F00      CMP      R0,#+32768
   \       0xD2   0xBFC4             ITT      GT 
    779              emberAfRemoveFromCurrentAppTasks(EMBER_AF_WAITING_FOR_ZDO_RESPONSE);
   \       0xD4   0x2008             MOVGT    R0,#+8
   \       0xD6   0x....'....        BLGT     emberAfRemoveFromCurrentAppTasksCallback
    780            }
    781          
    782            return true;
   \       0xDA   0x2001             MOVS     R0,#+1
   \       0xDC   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    783          }
    784          

   \                                 In section .text, align 2, keep-with-next
    785          void emAfIncomingMessageHandler(EmberIncomingMessageType type,
    786                                          EmberApsFrame *apsFrame,
    787                                          uint8_t lastHopLqi,
    788                                          int8_t lastHopRssi,
    789                                          uint16_t messageLength,
    790                                          uint8_t *messageContents)
    791          {
   \                     emAfIncomingMessageHandler: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
   \        0x6   0x4681             MOV      R9,R0
   \        0x8   0x460E             MOV      R6,R1
   \        0xA   0x4692             MOV      R10,R2
   \        0xC   0x4698             MOV      R8,R3
   \        0xE   0x9C10             LDR      R4,[SP, #+64]
   \       0x10   0x9D11             LDR      R5,[SP, #+68]
    792            EmberNodeId sender = emberGetSender();
   \       0x12   0x....'....        BL       emberGetSender
    793            EmberAfIncomingMessage im;
    794          
    795          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
    796            if (emAfFragmentationIncomingMessage(type,
    797                                                 apsFrame,
    798                                                 sender,
    799                                                 &messageContents,
    800                                                 &messageLength)) {
    801              emberAfDebugPrintln("%pfragment processed.", "Fragmentation:");
    802              return;
    803            }
    804          #endif //EMBER_AF_PLUGIN_FRAGMENTATION
    805          
    806          #ifdef EMBER_AF_PLUGIN_SUB_GHZ_SERVER
    807            if (emAfSubGhzServerIncomingMessage(type,
    808                                                apsFrame,
    809                                                sender,
    810                                                messageLength,
    811                                                messageContents)) {
    812              emberAfDebugPrintln("Sub-GHz: incoming message rejected.");
    813              return;
    814            }
    815          #endif // EMBER_AF_PLUGIN_SUB_GHZ_SERVER
    816          
    817            emberAfDebugPrintln("Processing message: len=%d profile=%2x cluster=%2x",
    818                                messageLength,
    819                                apsFrame->profileId,
    820                                apsFrame->clusterId);
    821            emberAfDebugFlush();
    822          
    823            // Populate the incoming message struct to pass to the incoming message
    824            // callback.
    825            im.type              = type;
   \       0x16   0xF88D 0x9008      STRB     R9,[SP, #+8]
    826            im.apsFrame          = apsFrame;
   \       0x1A   0x9603             STR      R6,[SP, #+12]
   \       0x1C   0x4607             MOV      R7,R0
    827            im.message           = messageContents;
   \       0x1E   0x9504             STR      R5,[SP, #+16]
    828            im.msgLen            = messageLength;
   \       0x20   0xF8AD 0x4014      STRH     R4,[SP, #+20]
    829            im.source            = sender;
   \       0x24   0xF8AD 0x7016      STRH     R7,[SP, #+22]
    830            im.lastHopLqi        = lastHopLqi;
   \       0x28   0xF88D 0xA018      STRB     R10,[SP, #+24]
    831            im.lastHopRssi       = lastHopRssi;
   \       0x2C   0xF88D 0x8019      STRB     R8,[SP, #+25]
    832            im.bindingTableIndex = emberAfGetBindingIndex();
   \       0x30   0x....'....        BL       emberAfGetBindingIndex
   \       0x34   0xF88D 0x001A      STRB     R0,[SP, #+26]
    833            im.addressTableIndex = emberAfGetAddressIndex();
   \       0x38   0x....'....        BL       emberAfGetAddressIndex
   \       0x3C   0xF88D 0x001B      STRB     R0,[SP, #+27]
    834            im.networkIndex      = emberGetCurrentNetwork();
   \       0x40   0x....'....        BL       emberGetCurrentNetwork
   \       0x44   0xF88D 0x001C      STRB     R0,[SP, #+28]
    835            if (emberAfPreMessageReceivedCallback(&im)) {
   \       0x48   0xA802             ADD      R0,SP,#+8
   \       0x4A   0x....'....        BL       emberAfPreMessageReceivedCallback
   \       0x4E   0xB9A8             CBNZ.N   R0,??emAfIncomingMessageHandler_0
    836              return;
    837            }
    838          
    839            // Handle service discovery responses.
    840            if (emAfServiceDiscoveryIncoming(sender,
    841                                             apsFrame,
    842                                             messageContents,
    843                                             messageLength)) {
   \       0x50   0x4623             MOV      R3,R4
   \       0x52   0x462A             MOV      R2,R5
   \       0x54   0x4631             MOV      R1,R6
   \       0x56   0x4638             MOV      R0,R7
   \       0x58   0x....'....        BL       emAfServiceDiscoveryIncoming
   \       0x5C   0xB970             CBNZ.N   R0,??emAfIncomingMessageHandler_0
    844              return;
    845            }
    846          
    847            // Handle ZDO messages.
    848            if (emAfProcessZdo(sender, apsFrame, messageContents, messageLength)) {
   \       0x5E   0x4623             MOV      R3,R4
   \       0x60   0x462A             MOV      R2,R5
   \       0x62   0x4631             MOV      R1,R6
   \       0x64   0x4638             MOV      R0,R7
   \       0x66   0x....'....        BL       emAfProcessZdo
   \       0x6A   0xB938             CBNZ.N   R0,??emAfIncomingMessageHandler_0
    849              return;
    850            }
    851          
    852            // Handle ZCL messages.
    853            if (emberAfProcessMessage(apsFrame,
    854                                      type,
    855                                      messageContents,
    856                                      messageLength,
    857                                      sender,
    858                                      NULL)) { // no inter-pan header
   \       0x6C   0x9001             STR      R0,[SP, #+4]
   \       0x6E   0x9700             STR      R7,[SP, #+0]
   \       0x70   0x4623             MOV      R3,R4
   \       0x72   0x462A             MOV      R2,R5
   \       0x74   0x4649             MOV      R1,R9
   \       0x76   0x4630             MOV      R0,R6
   \       0x78   0x....'....        BL       emberAfProcessMessage
    859              return;
   \                     ??emAfIncomingMessageHandler_0: (+1)
   \       0x7C   0xB008             ADD      SP,SP,#+32
   \       0x7E   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    860            }
    861          }
    862          
    863          static void printMessage(EmberIncomingMessageType type,
    864                                   EmberApsFrame* apsFrame,
    865                                   uint16_t messageLength,
    866                                   uint8_t* messageContents)
    867          {
    868            emberAfAppPrint("Profile: %p (0x%2X), Cluster: 0x%2X, %d bytes,",
    869                            (apsFrame->profileId == EMBER_ZDO_PROFILE_ID
    870                             ? "ZDO"
    871                             : (apsFrame->profileId == SE_PROFILE_ID
    872                                ? "SE"
    873                                : (apsFrame->profileId == 0x0104
    874                                   ? "HA"
    875                                   : "??"))),
    876                            apsFrame->profileId,
    877                            apsFrame->clusterId,
    878                            messageLength);
    879            if (apsFrame->profileId != EMBER_ZDO_PROFILE_ID
    880                && messageLength >= 3) {
    881              emberAfAppPrint(" ZCL %p Cmd ID: %d",
    882                              (messageContents[0] & ZCL_CLUSTER_SPECIFIC_COMMAND
    883                               ? "Cluster"
    884                               : "Global"),
    885                              messageContents[2]);
    886            }
    887            emberAfAppPrintln("");
    888          }
    889          

   \                                 In section .text, align 2, keep-with-next
    890          void emAfMessageSentHandler(EmberOutgoingMessageType type,
    891                                      uint16_t indexOrDestination,
    892                                      EmberApsFrame *apsFrame,
    893                                      EmberStatus status,
    894                                      uint16_t messageLength,
    895                                      uint8_t *messageContents,
    896                                      uint8_t messageTag)
    897          {
   \                     emAfMessageSentHandler: (+1)
   \        0x0   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \        0x4   0x4680             MOV      R8,R0
   \        0x6   0x4689             MOV      R9,R1
   \        0x8   0x4616             MOV      R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x9D0C             LDR      R5,[SP, #+48]
   \        0xE   0x9C0D             LDR      R4,[SP, #+52]
    898            EmberAfMessageSentFunction callback;
    899            if (status != EMBER_SUCCESS) {
   \       0x10   0xD02E             BEQ.N    ??emAfMessageSentHandler_0
    900              emberAfAppPrint("%ptx %x, ", "ERROR: ", status);
   \       0x12   0x....'....        LDR.W    R2,??DataTable10_24
   \       0x16   0x....'....        LDR.W    R1,??DataTable10_25
   \       0x1A   0x2002             MOVS     R0,#+2
   \       0x1C   0x....'....        BL       emberAfPrint
    901              printMessage(type, apsFrame, messageLength, messageContents);
   \       0x20   0x8833             LDRH     R3,[R6, #+0]
   \       0x22   0xB90B             CBNZ.N   R3,??emAfMessageSentHandler_1
   \       0x24   0x....             ADR.N    R2,??DataTable9  ;; "ZDO"
   \       0x26   0xE00A             B.N      ??emAfMessageSentHandler_2
   \                     ??emAfMessageSentHandler_1: (+1)
   \       0x28   0xF240 0x1009      MOVW     R0,#+265
   \       0x2C   0x4283             CMP      R3,R0
   \       0x2E   0xBF08             IT       EQ 
   \       0x30   0x....             ADREQ.N  R2,??DataTable9_1  ;; 0x53, 0x45, 0x00, 0x00
   \       0x32   0xD004             BEQ.N    ??emAfMessageSentHandler_2
   \       0x34   0xF5B3 0x7F82      CMP      R3,#+260
   \       0x38   0xBF0C             ITE      EQ 
   \       0x3A   0x....             ADREQ.N  R2,??DataTable9_2  ;; 0x48, 0x41, 0x00, 0x00
   \       0x3C   0x....             ADRNE.N  R2,??DataTable9_3  ;; 0x3F, 0x3F, 0x00, 0x00
   \                     ??emAfMessageSentHandler_2: (+1)
   \       0x3E   0x9501             STR      R5,[SP, #+4]
   \       0x40   0x8870             LDRH     R0,[R6, #+2]
   \       0x42   0x....             LDR.N    R1,??DataTable10_26
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0x2002             MOVS     R0,#+2
   \       0x48   0x....'....        BL       emberAfPrint
   \       0x4C   0x8830             LDRH     R0,[R6, #+0]
   \       0x4E   0xB158             CBZ.N    R0,??emAfMessageSentHandler_3
   \       0x50   0x2D02             CMP      R5,#+2
   \       0x52   0xDD09             BLE.N    ??emAfMessageSentHandler_3
   \       0x54   0x7820             LDRB     R0,[R4, #+0]
   \       0x56   0x78A3             LDRB     R3,[R4, #+2]
   \       0x58   0x07C1             LSLS     R1,R0,#+31
   \       0x5A   0x....             LDR.N    R1,??DataTable10_27
   \       0x5C   0xBF4C             ITE      MI 
   \       0x5E   0x....             LDRMI.N  R2,??DataTable10_28
   \       0x60   0x....             LDRPL.N  R2,??DataTable10_29
   \       0x62   0x2002             MOVS     R0,#+2
   \       0x64   0x....'....        BL       emberAfPrint
   \                     ??emAfMessageSentHandler_3: (+1)
   \       0x68   0x....             LDR.N    R1,??DataTable10_30
   \       0x6A   0x2002             MOVS     R0,#+2
   \       0x6C   0x....'....        BL       emberAfPrintln
    902            }
    903          
    904            callback = getMessageSentCallback(messageTag);
   \                     ??emAfMessageSentHandler_0: (+1)
   \       0x70   0x....             LDR.N    R1,??DataTable10_1
   \       0x72   0x2200             MOVS     R2,#+0
   \       0x74   0x980E             LDR      R0,[SP, #+56]
   \       0x76   0xF101 0x0C04      ADD      R12,R1,#+4
   \                     ??emAfMessageSentHandler_4: (+1)
   \       0x7A   0xB2D3             UXTB     R3,R2
   \       0x7C   0xF81C 0xE033      LDRB     LR,[R12, R3, LSL #+3]
   \       0x80   0x4586             CMP      LR,R0
   \       0x82   0xD021             BEQ.N    ??emAfMessageSentHandler_5
   \       0x84   0x1C52             ADDS     R2,R2,#+1
   \       0x86   0xB2D3             UXTB     R3,R2
   \       0x88   0x2B0A             CMP      R3,#+10
   \       0x8A   0xDBF6             BLT.N    ??emAfMessageSentHandler_4
   \       0x8C   0xF04F 0x0A00      MOV      R10,#+0
    905            invalidateMessageSentCallbackEntry(messageTag);
   \                     ??emAfMessageSentHandler_6: (+1)
   \       0x90   0x2200             MOVS     R2,#+0
   \       0x92   0x1D0B             ADDS     R3,R1,#+4
   \                     ??emAfMessageSentHandler_7: (+1)
   \       0x94   0xF813 0xC032      LDRB     R12,[R3, R2, LSL #+3]
   \       0x98   0x4584             CMP      R12,R0
   \       0x9A   0xD018             BEQ.N    ??emAfMessageSentHandler_8
   \       0x9C   0x1C52             ADDS     R2,R2,#+1
   \       0x9E   0x2A0A             CMP      R2,#+10
   \       0xA0   0xDBF8             BLT.N    ??emAfMessageSentHandler_7
   \       0xA2   0xE01A             B.N      ??emAfMessageSentHandler_9
    906          
    907            if (status == EMBER_SUCCESS
    908                && apsFrame->profileId == EMBER_ZDO_PROFILE_ID
    909                && apsFrame->clusterId < CLUSTER_ID_RESPONSE_MINIMUM) {
    910              emberAfAddToCurrentAppTasks(EMBER_AF_WAITING_FOR_ZDO_RESPONSE);
    911            }
    912          
    913            emberAfRemoveFromCurrentAppTasks(EMBER_AF_WAITING_FOR_DATA_ACK);
    914          
    915            if (messageContents != NULL && messageContents[0] & ZCL_CLUSTER_SPECIFIC_COMMAND) {
    916              emberAfClusterMessageSentWithMfgCodeCallback(type,
    917                                                           indexOrDestination,
    918                                                           apsFrame,
    919                                                           messageLength,
    920                                                           messageContents,
    921                                                           status,
    922                                                           // If the manufacturer specific flag is set
    923                                                           // get read it as next part of message
    924                                                           // else use null code.
    925                                                           (((messageContents[0]
    926                                                              & ZCL_MANUFACTURER_SPECIFIC_MASK)
    927                                                             == ZCL_MANUFACTURER_SPECIFIC_MASK)
    928                                                            ? emberAfGetInt16u(messageContents, 1, messageLength)
    929                                                            : EMBER_AF_NULL_MANUFACTURER_CODE));
   \                     ??emAfMessageSentHandler_10: (+1)
   \       0xA4   0x2000             MOVS     R0,#+0
   \                     ??emAfMessageSentHandler_11: (+1)
   \       0xA6   0x9002             STR      R0,[SP, #+8]
   \       0xA8   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0xAC   0x....'....        BL       emberAfClusterMessageSentWithMfgCodeCallback
    930            }
    931          
    932            if (callback != NULL) {
   \                     ??emAfMessageSentHandler_12: (+1)
   \       0xB0   0xF1BA 0x0F00      CMP      R10,#+0
   \       0xB4   0xD002             BEQ.N    ??emAfMessageSentHandler_13
    933              (*callback)(type, indexOrDestination, apsFrame, messageLength, messageContents, status);
   \       0xB6   0x....'....        BL       ?Subroutine4
    934            }
   \                     ??CrossCallReturnLabel_5: (+1)
   \       0xBA   0x47D0             BLX      R10
    935          
    936          #ifdef EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_CALLS
    937            EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_CALLS
    938          #endif
    939          
    940            emberAfMessageSentCallback(type,
    941                                       indexOrDestination,
    942                                       apsFrame,
    943                                       messageLength,
    944                                       messageContents,
    945                                       status);
   \                     ??emAfMessageSentHandler_13: (+1)
   \       0xBC   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0xC0   0x....'....        BL       emberAfMessageSentCallback
    946          }
   \       0xC4   0xE8BD 0x87FF      POP      {R0-R10,PC}      ;; return
   \                     ??emAfMessageSentHandler_5: (+1)
   \       0xC8   0xF851 0xA033      LDR      R10,[R1, R3, LSL #+3]
   \       0xCC   0xE7E0             B.N      ??emAfMessageSentHandler_6
   \                     ??emAfMessageSentHandler_8: (+1)
   \       0xCE   0x20FF             MOVS     R0,#+255
   \       0xD0   0xF803 0x0032      STRB     R0,[R3, R2, LSL #+3]
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xF841 0x0032      STR      R0,[R1, R2, LSL #+3]
   \                     ??emAfMessageSentHandler_9: (+1)
   \       0xDA   0x2F00             CMP      R7,#+0
   \       0xDC   0xBF04             ITT      EQ 
   \       0xDE   0x8830             LDRHEQ   R0,[R6, #+0]
   \       0xE0   0x2800             CMPEQ    R0,#+0
   \       0xE2   0xD106             BNE.N    ??emAfMessageSentHandler_14
   \       0xE4   0x8870             LDRH     R0,[R6, #+2]
   \       0xE6   0xF5B0 0x4F00      CMP      R0,#+32768
   \       0xEA   0xBFBC             ITT      LT 
   \       0xEC   0x2008             MOVLT    R0,#+8
   \       0xEE   0x....'....        BLLT     emberAfAddToCurrentAppTasksCallback
   \                     ??emAfMessageSentHandler_14: (+1)
   \       0xF2   0x2001             MOVS     R0,#+1
   \       0xF4   0x....'....        BL       emberAfRemoveFromCurrentAppTasksCallback
   \       0xF8   0x2C00             CMP      R4,#+0
   \       0xFA   0xD0D9             BEQ.N    ??emAfMessageSentHandler_12
   \       0xFC   0x7820             LDRB     R0,[R4, #+0]
   \       0xFE   0x07C1             LSLS     R1,R0,#+31
   \      0x100   0xD5D6             BPL.N    ??emAfMessageSentHandler_12
   \      0x102   0x0740             LSLS     R0,R0,#+29
   \      0x104   0xD5CE             BPL.N    ??emAfMessageSentHandler_10
   \      0x106   0x462A             MOV      R2,R5
   \      0x108   0x2101             MOVS     R1,#+1
   \      0x10A   0x4620             MOV      R0,R4
   \      0x10C   0x....'....        BL       emberAfGetInt16u
   \      0x110   0xE7C9             B.N      ??emAfMessageSentHandler_11

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0x9701             STR      R7,[SP, #+4]
   \        0x2   0x9400             STR      R4,[SP, #+0]
   \        0x4   0x462B             MOV      R3,R5
   \        0x6   0x4632             MOV      R2,R6
   \        0x8   0x4649             MOV      R1,R9
   \        0xA   0x4640             MOV      R0,R8
   \        0xC   0x4770             BX       LR
    947          
    948          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
    949          void emAfFragmentationMessageSentHandler(EmberOutgoingMessageType type,
    950                                                   uint16_t indexOrDestination,
    951                                                   EmberApsFrame *apsFrame,
    952                                                   uint8_t *buffer,
    953                                                   uint16_t bufLen,
    954                                                   EmberStatus status,
    955                                                   uint8_t messageTag)
    956          {
    957            // the fragmented message is no longer in process
    958            emberAfDebugPrintln("%pend.", "Fragmentation:");
    959            emAfMessageSentHandler(type,
    960                                   indexOrDestination,
    961                                   apsFrame,
    962                                   status,
    963                                   bufLen,
    964                                   buffer,
    965                                   messageTag);
    966          }
    967          #endif //EMBER_AF_PLUGIN_FRAGMENTATION
    968          

   \                                 In section .text, align 2, keep-with-next
    969          void emAfStackStatusHandler(EmberStatus status)
    970          {
   \                     emAfStackStatusHandler: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
    971            emberAfAppFlush();
    972          
    973            // To be extra careful, we clear the network cache whenever a new status is
    974            // received.
    975            emAfClearNetworkCache(emberGetCurrentNetwork());
    976          
    977            switch (status) {
   \        0x4   0x....             LDR.N    R5,??DataTable10_31
   \        0x6   0x....             LDR.N    R6,??DataTable10_32
   \        0x8   0x3890             SUBS     R0,R0,#+144
   \        0xA   0xD00C             BEQ.N    ??emAfStackStatusHandler_0
   \        0xC   0x1E40             SUBS     R0,R0,#+1
   \        0xE   0xD023             BEQ.N    ??emAfStackStatusHandler_1
   \       0x10   0x1EC0             SUBS     R0,R0,#+3
   \       0x12   0xD021             BEQ.N    ??emAfStackStatusHandler_1
   \       0x14   0x1E80             SUBS     R0,R0,#+2
   \       0x16   0xD01F             BEQ.N    ??emAfStackStatusHandler_1
   \       0x18   0x1E80             SUBS     R0,R0,#+2
   \       0x1A   0xD01D             BEQ.N    ??emAfStackStatusHandler_1
   \       0x1C   0x3813             SUBS     R0,R0,#+19
   \       0x1E   0x2804             CMP      R0,#+4
   \       0x20   0xD91A             BLS.N    ??emAfStackStatusHandler_1
   \       0x22   0x3811             SUBS     R0,R0,#+17
   \       0x24   0xD126             BNE.N    ??emAfStackStatusHandler_2
    978              case EMBER_NETWORK_UP:
    979              case EMBER_TRUST_CENTER_EUI_HAS_CHANGED:  // also means NETWORK_UP
    980              {
    981                // ZigBee 3.0 security configuration is handled in plugins.
    982          #ifndef EMBER_AF_HAS_SECURITY_PROFILE_Z3
    983                // Set the runtime security settings as soon as the stack goes up.
    984                EmberExtendedSecurityBitmask oldExtended;
    985                EmberExtendedSecurityBitmask newExtended = 0;
    986                const EmberAfSecurityProfileData *data = emAfGetCurrentSecurityProfileData();
    987                bool trustCenter = (emberAfGetNodeId() == EMBER_TRUST_CENTER_NODE_ID);
    988                if (data != NULL) {
    989                  newExtended = (trustCenter
    990                                 ? data->tcExtendedBitmask
    991                                 : data->nodeExtendedBitmask);
    992                }
    993          
    994                emberGetExtendedSecurityBitmask(&oldExtended);
    995                if ((oldExtended & EMBER_EXT_NO_FRAME_COUNTER_RESET) != 0U) {
    996                  newExtended |= EMBER_EXT_NO_FRAME_COUNTER_RESET;
    997                }
    998          
    999                emberAfSecurityInitCallback(NULL, &newExtended, trustCenter);
   1000                emberSetExtendedSecurityBitmask(newExtended);
   1001          #endif /* EMBER_AF_HAS_SECURITY_PROFILE_Z3 */
   1002          
   1003                emberAfAppPrintln("%p%pUP 0x%2X", "EMBER_", "NETWORK_", emberAfGetNodeId());
   \                     ??emAfStackStatusHandler_0: (+1)
   \       0x26   0x....'....        BL       emberAfGetNodeId
   \       0x2A   0x9000             STR      R0,[SP, #+0]
   \       0x2C   0x4633             MOV      R3,R6
   \       0x2E   0x462A             MOV      R2,R5
   \       0x30   0x....             LDR.N    R1,??DataTable10_33
   \       0x32   0x2002             MOVS     R0,#+2
   \       0x34   0x....'....        BL       emberAfPrintln
   1004                emberAfAppFlush();
   1005          #if defined(EMBER_TEST)
   1006                simulatedTimePasses();
   1007          #endif
   1008          
   1009                if (status == EMBER_TRUST_CENTER_EUI_HAS_CHANGED) {
   \       0x38   0x2CBC             CMP      R4,#+188
   \       0x3A   0xD108             BNE.N    ??emAfStackStatusHandler_3
   1010                  emberAfAppPrintln("Trust Center EUI has changed.");
   \       0x3C   0x....             LDR.N    R1,??DataTable10_34
   \       0x3E   0x2002             MOVS     R0,#+2
   \       0x40   0x....'....        BL       emberAfPrintln
   1011                  // We abort registration because we want to clear out any previous
   1012                  // state and force it to start anew.  One of two results will occur after
   1013                  // we restart registration later.
   1014                  // (1) It succeeds and we are on a new network with a new TC, in which
   1015                  //     case we need to kick off key establishment to re-authenticate it
   1016                  //     and also re-discover other ESIs.
   1017                  // (2) It will fail, in which case we have to reboot to forget the untrusted
   1018                  //     network and its settings.
   1019                  emberAfRegistrationAbortCallback();
   \       0x44   0x....'....        BL       emberAfRegistrationAbortCallback
   1020                  emberAfRegistrationStartCallback();
   \       0x48   0x....'....        BL       emberAfRegistrationStartCallback
   \       0x4C   0xE001             B.N      ??emAfStackStatusHandler_4
   1021                } else {
   1022                  emberStartWritingStackTokens();
   \                     ??emAfStackStatusHandler_3: (+1)
   \       0x4E   0x....'....        BL       emberStartWritingStackTokens
   1023                }
   1024          
   1025                // This kicks off registration for newly joined devices.  If registration
   1026                // already occurred, nothing will happen here.
   1027                emberAfRegistrationStartCallback();
   \                     ??emAfStackStatusHandler_4: (+1)
   \       0x52   0x....'....        BL       emberAfRegistrationStartCallback
   1028                break;
   \       0x56   0xE00D             B.N      ??emAfStackStatusHandler_2
   1029              }
   1030          
   1031              case EMBER_RECEIVED_KEY_IN_THE_CLEAR:
   1032              case EMBER_NO_NETWORK_KEY_RECEIVED:
   1033              case EMBER_NO_LINK_KEY_RECEIVED:
   1034              case EMBER_PRECONFIGURED_KEY_REQUIRED:
   1035              case EMBER_MOVE_FAILED:
   1036              case EMBER_JOIN_FAILED:
   1037              case EMBER_NO_BEACONS:
   1038              case EMBER_CANNOT_JOIN_AS_ROUTER:
   1039              case EMBER_NETWORK_DOWN:
   1040                if (status == EMBER_NETWORK_DOWN) {
   \                     ??emAfStackStatusHandler_1: (+1)
   \       0x58   0x2C91             CMP      R4,#+145
   \       0x5A   0xD103             BNE.N    ??emAfStackStatusHandler_5
   1041                  emberAfAppPrintln("%p%pDOWN", "EMBER_", "NETWORK_");
   \       0x5C   0x4633             MOV      R3,R6
   \       0x5E   0x462A             MOV      R2,R5
   \       0x60   0x....             LDR.N    R1,??DataTable10_35
   \       0x62   0xE002             B.N      ??emAfStackStatusHandler_6
   1042                } else {
   1043                  emberAfAppPrintln("%pJOIN%p", "EMBER_", "_FAILED");
   \                     ??emAfStackStatusHandler_5: (+1)
   \       0x64   0x....             LDR.N    R3,??DataTable10_36
   \       0x66   0x462A             MOV      R2,R5
   \       0x68   0x....             LDR.N    R1,??DataTable10_37
   \                     ??emAfStackStatusHandler_6: (+1)
   \       0x6A   0x2002             MOVS     R0,#+2
   \       0x6C   0x....'....        BL       emberAfPrintln
   1044                }
   1045                emberAfAppFlush();
   1046                emberAfStackDown();
   \       0x70   0x....'....        BL       emberAfStackDown
   1047                break;
   1048          
   1049              default:
   1050                emberAfDebugPrintln("EVENT: stackStatus 0x%x", status);
   1051            }
   1052          
   1053            emberAfAppFlush();
   1054          
   1055          #ifdef EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS
   1056            EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS
   \                     ??emAfStackStatusHandler_2: (+1)
   \       0x74   0x4620             MOV      R0,R4
   \       0x76   0x....'....        BL       emberAfPluginZllCommissioningCommonStackStatusCallback
   \       0x7A   0x4620             MOV      R0,R4
   \       0x7C   0x....'....        BL       emberAfPluginGreenPowerClientStackStatusCallback
   \       0x80   0x4620             MOV      R0,R4
   \       0x82   0x....'....        BL       emberAfPluginReportingStackStatusCallback
   \       0x86   0x4620             MOV      R0,R4
   \       0x88   0x....'....        BL       emberAfPluginNetworkCreatorSecurityStackStatusCallback
   \       0x8C   0x4620             MOV      R0,R4
   \       0x8E   0x....'....        BL       emberAfPluginNetworkSteeringStackStatusCallback
   1057          #endif
   1058          
   1059            if (emberAfStackStatusCallback(status)) {
   \       0x92   0x4620             MOV      R0,R4
   \       0x94   0x....'....        BL       emberAfStackStatusCallback
   \       0x98   0xB128             CBZ.N    R0,??emAfStackStatusHandler_7
   1060              // Bug 13690: Even if the callback handled the status, we still want to do
   1061              // our things regarding the stack status. Therefore we no longer return
   1062              // here. For now we just print a warning message to inform the customer that
   1063              // a true value returned by emberAfStackStatusCallback() no longer avoid
   1064              // the Stack Status to be handled by our code.
   1065              emberAfAppPrintln("The app framework is handling the stack status.");
   \       0x9A   0x....             LDR.N    R1,??DataTable10_38
   \       0x9C   0x2002             MOVS     R0,#+2
   \       0x9E   0xE8BD 0x407C      POP      {R2-R6,LR}
   \       0xA2   0x....'....        B.W      emberAfPrintln
   1066            }
   1067          }
   \                     ??emAfStackStatusHandler_7: (+1)
   \       0xA6   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
   1068          
   1069          // If possible, initialize each network.  For ZigBee PRO networks, the node
   1070          // type of the device must match the one used previously, but note that
   1071          // coordinator-capable devices are allowed to initialize as routers.

   \                                 In section .text, align 2, keep-with-next
   1072          void emAfNetworkInit(void)
   1073          {
   \                     emAfNetworkInit: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   1074            uint8_t i;
   1075            for (i = 0; i < EMBER_SUPPORTED_NETWORKS; i++) {
   1076              bool initialize = true;
   1077              emberAfPushNetworkIndex(i);
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        BL       emberAfPushNetworkIndex
   1078              emAfClearNetworkCache(i);
   1079              if (emAfProIsCurrentNetwork()) {
   \        0x8   0x....             LDR.N    R4,??DataTable10_39
   \        0xA   0x6820             LDR      R0,[R4, #+0]
   \        0xC   0xB168             CBZ.N    R0,??emAfNetworkInit_0
   1080                EmberNodeType nodeType;
   1081                if (emAfCurrentZigbeeProNetwork->nodeType == EMBER_COORDINATOR) {
   1082                  zaTrustCenterSecurityPolicyInit();
   1083                }
   1084                if (emberAfGetNodeType(&nodeType) == EMBER_SUCCESS
   1085                    && (nodeType != emAfCurrentZigbeeProNetwork->nodeType
   1086                        && (emAfCurrentZigbeeProNetwork->nodeType != EMBER_COORDINATOR
   1087                            || nodeType != EMBER_ROUTER))) {
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x....'....        BL       emberAfGetNodeType
   \       0x14   0xB948             CBNZ.N   R0,??emAfNetworkInit_0
   \       0x16   0x6820             LDR      R0,[R4, #+0]
   \       0x18   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \       0x1C   0x7800             LDRB     R0,[R0, #+0]
   \       0x1E   0x4281             CMP      R1,R0
   \       0x20   0xD003             BEQ.N    ??emAfNetworkInit_0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xBF08             IT       EQ 
   \       0x26   0x2902             CMPEQ    R1,#+2
   \       0x28   0xD106             BNE.N    ??emAfNetworkInit_1
   1088                  initialize = false;
   1089                }
   1090              }
   1091              if (initialize) {
   1092                EmberNetworkInitStruct networkInitStruct = { EMBER_AF_CUSTOM_NETWORK_INIT_OPTIONS };
   \                     ??emAfNetworkInit_0: (+1)
   \       0x2A   0x....             LDR.N    R1,??DataTable10_40
   \       0x2C   0x8808             LDRH     R0,[R1, #+0]
   \       0x2E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1093                emberNetworkInit(&networkInitStruct);
   \       0x32   0x4668             MOV      R0,SP
   \       0x34   0x....'....        BL       emberNetworkInit
   1094              }
   1095              emberAfPopNetworkIndex();
   \                     ??emAfNetworkInit_1: (+1)
   \       0x38   0x....'....        BL       emberAfPopNetworkIndex
   1096            }
   1097          }
   \       0x3C   0xBD13             POP      {R0,R1,R4,PC}    ;; return
   1098          

   \                                 In section .text, align 2, keep-with-next
   1099          void emberScanErrorHandler(EmberStatus status)
   1100          {
   \                     emberScanErrorHandler: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1101            emberAfPushCallbackNetworkIndex();
   \        0x4   0x....'....        BL       emberAfPushCallbackNetworkIndex
   1102            emberAfScanErrorCallback(status);
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emberAfScanErrorCallback
   1103            emberAfPopNetworkIndex();
   \        0xE   0xE8BD 0x4010      POP      {R4,LR}
   \       0x12   0x....'....        B.W      emberAfPopNetworkIndex
   1104          }
   1105          

   \                                 In section .text, align 2, keep-with-next
   1106          EmberStatus emberAfFormNetwork(EmberNetworkParameters *parameters)
   1107          {
   1108            EmberStatus status = EMBER_INVALID_CALL;
   1109          #ifdef EMBER_AF_HAS_COORDINATOR_NETWORK
   1110            if (emAfProIsCurrentNetwork()
   1111                && emAfCurrentZigbeeProNetwork->nodeType == EMBER_COORDINATOR) {
   1112              zaTrustCenterSecurityInit(true); // centralized network
   1113              emberAfCorePrintln("%ping on ch %d, panId 0x%2X",
   1114                                 "Form",
   1115                                 parameters->radioChannel,
   1116                                 parameters->panId);
   1117              emberAfCoreFlush();
   1118              status = emberFormNetwork(parameters);
   1119            }
   1120          #endif
   1121            return status;
   \                     emberAfFormNetwork: (+1)
   \        0x0   0x2070             MOVS     R0,#+112
   \        0x2   0x4770             BX       LR               ;; return
   1122          }
   1123          

   \                                 In section .text, align 2, keep-with-next
   1124          EmberStatus emberAfJoinNetwork(EmberNetworkParameters *parameters)
   1125          {
   1126            EmberStatus status = EMBER_INVALID_CALL;
   1127            if (emAfProIsCurrentNetwork()) {
   \                     emberAfJoinNetwork: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable10_39
   \        0x2   0xB538             PUSH     {R3-R5,LR}
   \        0x4   0x6809             LDR      R1,[R1, #+0]
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x2070             MOVS     R0,#+112
   \        0xA   0xB189             CBZ.N    R1,??emberAfJoinNetwork_0
   1128              EmberNodeType nodeType = emAfCurrentZigbeeProNetwork->nodeType;
   \        0xC   0x780D             LDRB     R5,[R1, #+0]
   1129              if (nodeType == EMBER_COORDINATOR) {
   1130                nodeType = EMBER_ROUTER;
   1131              }
   1132              zaNodeSecurityInit(true); // centralized network
   1133              emberAfCorePrintln("%ping on ch %d, panId 0x%2X",
   1134                                 "Join",
   1135                                 parameters->radioChannel,
   1136                                 parameters->panId);
   \        0xE   0x8920             LDRH     R0,[R4, #+8]
   \       0x10   0x....             LDR.N    R2,??DataTable10_41
   \       0x12   0x2D01             CMP      R5,#+1
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x7AE3             LDRB     R3,[R4, #+11]
   \       0x18   0xBF08             IT       EQ 
   \       0x1A   0x2502             MOVEQ    R5,#+2
   \       0x1C   0x....             LDR.N    R1,??DataTable10_42
   \       0x1E   0x2001             MOVS     R0,#+1
   \       0x20   0x....'....        BL       emberAfPrintln
   1137              status = emberJoinNetwork(nodeType, parameters);
   \       0x24   0x4621             MOV      R1,R4
   \       0x26   0x4628             MOV      R0,R5
   \       0x28   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x2C   0x....'....        B.W      emberJoinNetwork
   1138            }
   1139            return status;
   \                     ??emberAfJoinNetwork_0: (+1)
   \       0x30   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1140          }
   1141          
   1142          // mfgString is expected to be +1 of MFG_STRING_MAX_LENGTH

   \                                 In section .text, align 2, keep-with-next
   1143          void emberAfFormatMfgString(uint8_t* mfgString)
   1144          {
   \                     emberAfFormatMfgString: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   1145            uint8_t i;
   1146            emberAfGetMfgString(mfgString);
   \        0x4   0x....'....        BL       emberAfGetMfgString
   1147          
   1148            for (i = 0; i < MFG_STRING_MAX_LENGTH; i++) {
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x2200             MOVS     R2,#+0
   1149              // The MFG string is not necessarily NULL terminated.
   1150              // Uninitialized bytes are left at 0xFF so we make sure
   1151              // it is NULL terminated.
   1152              if (mfgString[i] == 0xFF) {
   \                     ??emberAfFormatMfgString_0: (+1)
   \        0xC   0x5C21             LDRB     R1,[R4, R0]
   \        0xE   0x29FF             CMP      R1,#+255
   \       0x10   0xBF08             IT       EQ 
   \       0x12   0x5422             STRBEQ   R2,[R4, R0]
   1153                mfgString[i] = '\0';
   1154              }
   1155            }
   \       0x14   0x1C40             ADDS     R0,R0,#+1
   \       0x16   0x2810             CMP      R0,#+16
   \       0x18   0xDBF8             BLT.N    ??emberAfFormatMfgString_0
   1156            mfgString[MFG_STRING_MAX_LENGTH] = '\0';
   \       0x1A   0x7422             STRB     R2,[R4, #+16]
   1157          }
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
   1158          

   \                                 In section .rodata, align 4
   1159          static const EmberReleaseTypeStruct releaseTypes[] = {
   \                     releaseTypes:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
   \        0x4   0x....'....        DC32 ?_0
   \        0x8   0x11 0x00          DC8 17, 0, 0, 0
   \              0x00 0x00    
   \        0xC   0x....'....        DC32 ?_1
   \       0x10   0x12 0x00          DC8 18, 0, 0, 0
   \              0x00 0x00    
   \       0x14   0x....'....        DC32 ?_2
   \       0x18   0x13 0x00          DC8 19, 0, 0, 0
   \              0x00 0x00    
   \       0x1C   0x....'....        DC32 ?_3
   \       0x20   0x21 0x00          DC8 33, 0, 0, 0
   \              0x00 0x00    
   \       0x24   0x....'....        DC32 ?_4
   \       0x28   0x22 0x00          DC8 34, 0, 0, 0
   \              0x00 0x00    
   \       0x2C   0x....'....        DC32 ?_5
   \       0x30   0x23 0x00          DC8 35, 0, 0, 0
   \              0x00 0x00    
   \       0x34   0x....'....        DC32 ?_6
   \       0x38   0xAA 0x00          DC8 170, 0, 0, 0
   \              0x00 0x00    
   \       0x3C   0x....'....        DC32 ?_7
   \       0x40   0xFF 0x00          DC8 255, 0, 0, 0
   \              0x00 0x00    
   \       0x44   0x0000'0000        DC32 0H
   1160            EMBER_RELEASE_TYPE_TO_STRING_STRUCT_DATA
   1161          };
   1162          

   \                                 In section .text, align 2, keep-with-next
   1163          void emAfParseAndPrintVersion(EmberVersion versionStruct)
   1164          {
   \                     emAfParseAndPrintVersion: (+1)
   \        0x0   0xB51F             PUSH     {R0-R4,LR}
   1165            uint8_t i = 0;
   \        0x2   0x2200             MOVS     R2,#+0
   1166            const char * typeText = NULL;
   \        0x4   0x2400             MOVS     R4,#+0
   \        0x6   0x....             LDR.N    R3,??DataTable10_43
   \        0x8   0xE9CD 0x0101      STRD     R0,R1,[SP, #+4]
   \        0xC   0xE00A             B.N      ??emAfParseAndPrintVersion_0
   1167            while (releaseTypes[i].typeString != NULL) {
   1168              if (releaseTypes[i].typeNum == versionStruct.type) {
   \                     ??emAfParseAndPrintVersion_1: (+1)
   \        0xE   0xF813 0x0032      LDRB     R0,[R3, R2, LSL #+3]
   \       0x12   0xF89D 0x100A      LDRB     R1,[SP, #+10]
   \       0x16   0x4288             CMP      R0,R1
   \       0x18   0xBF04             ITT      EQ 
   \       0x1A   0x1D18             ADDEQ    R0,R3,#+4
   \       0x1C   0xF850 0x4032      LDREQ    R4,[R0, R2, LSL #+3]
   1169                typeText = releaseTypes[i].typeString;
   1170              }
   1171              i++;
   \       0x20   0x1C52             ADDS     R2,R2,#+1
   \       0x22   0xB2D2             UXTB     R2,R2
   1172            }
   \                     ??emAfParseAndPrintVersion_0: (+1)
   \       0x24   0x1D19             ADDS     R1,R3,#+4
   \       0x26   0xF851 0x0032      LDR      R0,[R1, R2, LSL #+3]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD1EF             BNE.N    ??emAfParseAndPrintVersion_1
   1173            emberAfAppPrint("stack ver. [%d.%d.%d",
   1174                            versionStruct.major,
   1175                            versionStruct.minor,
   1176                            versionStruct.patch);
   \       0x2E   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \       0x32   0xF89D 0x3007      LDRB     R3,[SP, #+7]
   \       0x36   0xF89D 0x2006      LDRB     R2,[SP, #+6]
   \       0x3A   0x9000             STR      R0,[SP, #+0]
   \       0x3C   0x....             LDR.N    R1,??DataTable10_44
   \       0x3E   0x2002             MOVS     R0,#+2
   \       0x40   0x....'....        BL       emberAfPrint
   1177            if (versionStruct.special != 0) {
   \       0x44   0xF89D 0x2009      LDRB     R2,[SP, #+9]
   \       0x48   0xB11A             CBZ.N    R2,??emAfParseAndPrintVersion_2
   1178              emberAfAppPrint(".%d",
   1179                              versionStruct.special);
   \       0x4A   0x....             LDR.N    R1,??DataTable10_45
   \       0x4C   0x2002             MOVS     R0,#+2
   \       0x4E   0x....'....        BL       emberAfPrint
   1180            }
   1181            UNUSED_VAR(typeText);
   1182            emberAfAppPrintln(" %p build %d]",
   1183                              (typeText == NULL
   1184                               ? "???"
   1185                               : typeText),
   1186                              versionStruct.build);
   \                     ??emAfParseAndPrintVersion_2: (+1)
   \       0x52   0xB904             CBNZ.N   R4,??emAfParseAndPrintVersion_3
   \       0x54   0x....             ADR.N    R4,??DataTable10  ;; "???"
   \                     ??emAfParseAndPrintVersion_3: (+1)
   \       0x56   0xF8BD 0x3004      LDRH     R3,[SP, #+4]
   \       0x5A   0x4622             MOV      R2,R4
   \       0x5C   0xB004             ADD      SP,SP,#+16
   \       0x5E   0x....             LDR.N    R1,??DataTable10_46
   \       0x60   0x2002             MOVS     R0,#+2
   \       0x62   0xE8BD 0x4010      POP      {R4,LR}
   \       0x66   0x....'....        B.W      emberAfPrintln
   1187            emberAfAppFlush();
   1188          }
   1189          
   1190          //hal button isr

   \                                 In section .text, align 2, keep-with-next
   1191          void halButtonIsr(uint8_t button, uint8_t state)
   1192          {
   1193            emberAfHalButtonIsrCallback(button, state);
   \                     halButtonIsr: (+1)
   \        0x0   0x....'....        B.W      emberAfHalButtonIsrCallback
   1194          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \        0x0   0x5A 0x44          DC8      "ZDO"
   \              0x4F 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \        0x0   0x53 0x45          DC8      0x53, 0x45, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \        0x0   0x48 0x41          DC8      0x48, 0x41, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \        0x0   0x3F 0x3F          DC8      0x3F, 0x3F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \        0x0   0x3F 0x3F          DC8      "???"
   \              0x3F 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \        0x0   0x....'....        DC32     messageSentCallbacks

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \        0x0   0x....'....        DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \        0x0   0x....'....        DC32     emberAfPrintActiveArea

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \        0x0   0x....'....        DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \        0x0   0x....'....        DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \        0x0   0x....'....        DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_25:
   \        0x0   0x....'....        DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_26:
   \        0x0   0x....'....        DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_27:
   \        0x0   0x....'....        DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_28:
   \        0x0   0x....'....        DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_29:
   \        0x0   0x....'....        DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_30:
   \        0x0   0x....'....        DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_31:
   \        0x0   0x....'....        DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_32:
   \        0x0   0x....'....        DC32     ?_41

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_33:
   \        0x0   0x....'....        DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_34:
   \        0x0   0x....'....        DC32     ?_42

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_35:
   \        0x0   0x....'....        DC32     ?_43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_36:
   \        0x0   0x....'....        DC32     ?_45

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_37:
   \        0x0   0x....'....        DC32     ?_44

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_38:
   \        0x0   0x....'....        DC32     ?_46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_39:
   \        0x0   0x....'....        DC32     emAfCurrentZigbeeProNetwork

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_40:
   \        0x0   0x....'....        DC32     ?_47

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_41:
   \        0x0   0x....'....        DC32     ?_49

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_42:
   \        0x0   0x....'....        DC32     ?_48

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_43:
   \        0x0   0x....'....        DC32     releaseTypes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_44:
   \        0x0   0x....'....        DC32     ?_50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_45:
   \        0x0   0x....'....        DC32     ?_51

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_46:
   \        0x0   0x....'....        DC32     ?_52

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x50 0x72          DC8 "Pre-Release"
   \              0x65 0x2D    
   \              0x52 0x65    
   \              0x6C 0x65    
   \              0x61 0x73    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x41 0x6C          DC8 "Alpha 1"
   \              0x70 0x68    
   \              0x61 0x20    
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x41 0x6C          DC8 "Alpha 2"
   \              0x70 0x68    
   \              0x61 0x20    
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x41 0x6C          DC8 "Alpha 3"
   \              0x70 0x68    
   \              0x61 0x20    
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x42 0x65          DC8 "Beta 1"
   \              0x74 0x61    
   \              0x20 0x31    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x42 0x65          DC8 "Beta 2"
   \              0x74 0x61    
   \              0x20 0x32    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x42 0x65          DC8 "Beta 3"
   \              0x74 0x61    
   \              0x20 0x33    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x47 0x41          DC8 "GA"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x20 0x70          DC8 " payload (len %2x) ["
   \              0x61 0x79    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \              0x20 0x28    
   \              0x6C 0x65    
   \              0x6E 0x20    
   \              0x25 0x32    
   \              0x78 0x29    
   \              0x20 0x5B    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \                     ?_9:
   \        0x0   0x5D 0x00          DC8 "]"

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x70          DC8 "%p: %p"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x53 0x75          DC8 "Success"
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x25 0x70          DC8 "%p: %p: 0x%x"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x45 0x72          DC8 "Error"
   \              0x72 0x6F    
   \              0x72 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x00 0x00          DC8 0, 0, 1, 0
   \              0x01 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x4C 0x69          DC8 4CH, 69H, 6DH, 69H, 74H, 69H, 6EH, 67H
   \              0x6D 0x69    
   \              0x74 0x69    
   \              0x6E 0x67    
   \        0x8   0x20 0x64          DC8 20H, 64H, 75H, 72H, 61H, 74H, 69H, 6FH
   \              0x75 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \       0x10   0x6E 0x20          DC8 6EH, 20H, 6FH, 66H, 20H, 70H, 65H, 72H
   \              0x6F 0x66    
   \              0x20 0x70    
   \              0x65 0x72    
   \       0x18   0x6D 0x69          DC8 6DH, 69H, 74H, 20H, 6AH, 6FH, 69H, 6EH
   \              0x74 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \       0x20   0x20 0x66          DC8 20H, 66H, 72H, 6FH, 6DH, 20H, 66H, 6FH
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x66 0x6F    
   \       0x28   0x72 0x65          DC8 72H, 65H, 76H, 65H, 72H, 20H, 28H, 32H
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x28 0x32    
   \       0x30   0x35 0x35          DC8 35H, 35H, 29H, 20H, 74H, 6FH, 20H, 32H
   \              0x29 0x20    
   \              0x74 0x6F    
   \              0x20 0x32    
   \       0x38   0x35 0x34          DC8 35H, 34H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x70 0x4A          DC8 "pJoin for %d sec: 0x%x"
   \              0x6F 0x69    
   \              0x6E 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x25 0x64    
   \              0x20 0x73    
   \              0x65 0x63    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x52 0x58          DC8 "RX: ZDO, command 0x%2x, status: 0x%X"
   \              0x3A 0x20    
   \              0x5A 0x44    
   \              0x4F 0x2C    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x61    
   \              0x6E 0x64    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x2C 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x58    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x52 0x58          DC8 "RX: %p Desc Resp"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x20 0x44    
   \              0x65 0x73    
   \              0x63 0x20    
   \              0x52 0x65    
   \              0x73 0x70    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x53 0x69          DC8 "Simple"
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x4D 0x61          DC8 "Match"
   \              0x74 0x63    
   \              0x68 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x2C 0x20          DC8 ", Matches: %d"
   \              0x4D 0x61    
   \              0x74 0x63    
   \              0x68 0x65    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x52 0x58          DC8 "RX: End dev bind response, status=%x"
   \              0x3A 0x20    
   \              0x45 0x6E    
   \              0x64 0x20    
   \              0x64 0x65    
   \              0x76 0x20    
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x20 0x72    
   \              0x65 0x73    
   \              0x70 0x6F    
   \              0x6E 0x73    
   \              0x65 0x2C    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x74 0x75    
   \              0x73 0x3D    
   \              0x25 0x78    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x44 0x65          DC8 "Device Announce: 0x%2x"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x41    
   \              0x6E 0x6E    
   \              0x6F 0x75    
   \              0x6E 0x63    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x52 0x58          DC8 "RX: IEEE Address Response"
   \              0x3A 0x20    
   \              0x49 0x45    
   \              0x45 0x45    
   \              0x20 0x41    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x70 0x6F    
   \              0x6E 0x73    
   \              0x65 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x52 0x58          DC8 "RX: Active EP Response, Count: %d"
   \              0x3A 0x20    
   \              0x41 0x63    
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x20 0x45    
   \              0x50 0x20    
   \              0x52 0x65    
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x2C 0x20    
   \              0x43 0x6F    
   \              0x75 0x6E    
   \              0x74 0x3A    
   \              0x20 0x25    
   \              0x64 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x4E 0x6F          DC8 "Node"
   \              0x64 0x65    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x2C 0x20          DC8 ", Matches: 0x%2x"
   \              0x4D 0x61    
   \              0x74 0x63    
   \              0x68 0x65    
   \              0x73 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x78    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x50 0x72          DC8 "Profile: %p (0x%2X), Cluster: 0x%2X, %d bytes,"
   \              0x6F 0x66    
   \              0x69 0x6C    
   \              0x65 0x3A    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x28 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x29 0x2C    
   \              0x20 0x43    
   \              0x6C 0x75    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x2C    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x62 0x79    
   \              0x74 0x65    
   \              0x73 0x2C    
   \              0x00         
   \       0x2F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x5A 0x44          DC8 "ZDO"
   \              0x4F 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x53 0x45          DC8 "SE"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x48 0x41          DC8 "HA"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x3F 0x3F          DC8 "??"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x20 0x5A          DC8 " ZCL %p Cmd ID: %d"
   \              0x43 0x4C    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x43 0x6D    
   \              0x64 0x20    
   \              0x49 0x44    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x43 0x6C          DC8 "Cluster"
   \              0x75 0x73    
   \              0x74 0x65    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x47 0x6C          DC8 "Global"
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 1
   \                     ?_36:
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x25 0x70          DC8 "%ptx %x, "
   \              0x74 0x78    
   \              0x20 0x25    
   \              0x78 0x2C    
   \              0x20 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x45 0x52          DC8 "ERROR: "
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x25 0x70          DC8 "%p%pUP 0x%2X"
   \              0x25 0x70    
   \              0x55 0x50    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x45 0x4D          DC8 "EMBER_"
   \              0x42 0x45    
   \              0x52 0x5F    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x4E 0x45          DC8 "NETWORK_"
   \              0x54 0x57    
   \              0x4F 0x52    
   \              0x4B 0x5F    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x54 0x72          DC8 "Trust Center EUI has changed."
   \              0x75 0x73    
   \              0x74 0x20    
   \              0x43 0x65    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x20 0x45    
   \              0x55 0x49    
   \              0x20 0x68    
   \              0x61 0x73    
   \              0x20 0x63    
   \              0x68 0x61    
   \              0x6E 0x67    
   \              0x65 0x64    
   \              0x2E 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x25 0x70          DC8 "%p%pDOWN"
   \              0x25 0x70    
   \              0x44 0x4F    
   \              0x57 0x4E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x25 0x70          DC8 "%pJOIN%p"
   \              0x4A 0x4F    
   \              0x49 0x4E    
   \              0x25 0x70    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x5F 0x46          DC8 "_FAILED"
   \              0x41 0x49    
   \              0x4C 0x45    
   \              0x44 0x00    

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x54 0x68          DC8 "The app framework is handling the stack status."
   \              0x65 0x20    
   \              0x61 0x70    
   \              0x70 0x20    
   \              0x66 0x72    
   \              0x61 0x6D    
   \              0x65 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x69 0x73    
   \              0x20 0x68    
   \              0x61 0x6E    
   \              0x64 0x6C    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x68    
   \              0x65 0x20    
   \              0x73 0x74    
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x2E 0x00    

   \                                 In section .rodata, align 2
   \                     ?_47:
   \        0x0   0x0003             DC16 3

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x25 0x70          DC8 "%ping on ch %d, panId 0x%2X"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6F 0x6E    
   \              0x20 0x63    
   \              0x68 0x20    
   \              0x25 0x64    
   \              0x2C 0x20    
   \              0x70 0x61    
   \              0x6E 0x49    
   \              0x64 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x58 0x00    

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x4A 0x6F          DC8 "Join"
   \              0x69 0x6E    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x73 0x74          DC8 "stack ver. [%d.%d.%d"
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x76 0x65    
   \              0x72 0x2E    
   \              0x20 0x5B    
   \              0x25 0x64    
   \              0x2E 0x25    
   \              0x64 0x2E    
   \              0x25 0x64    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x2E 0x25          DC8 ".%d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x20 0x25          DC8 " %p build %d]"
   \              0x70 0x20    
   \              0x62 0x75    
   \              0x69 0x6C    
   \              0x64 0x20    
   \              0x25 0x64    
   \              0x5D 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \        0x0   0x3F 0x3F          DC8 "???"
   \              0x3F 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   emAfIncomingMessageHandler
        64   -> emAfProcessZdo
        64   -> emAfServiceDiscoveryIncoming
        64   -> emberAfGetAddressIndex
        64   -> emberAfGetBindingIndex
        64   -> emberAfPreMessageReceivedCallback
        64   -> emberAfProcessMessage
        64   -> emberGetCurrentNetwork
        64   -> emberGetSender
       8   emAfInitializeMessageSentCallbackArray
      48   emAfMessageSentHandler
        48   -- Indirect call
        48   -> emberAfAddToCurrentAppTasksCallback
        48   -> emberAfClusterMessageSentWithMfgCodeCallback
        48   -> emberAfGetInt16u
        48   -> emberAfMessageSentCallback
        48   -> emberAfPrint
        48   -> emberAfPrintln
        48   -> emberAfRemoveFromCurrentAppTasksCallback
      16   emAfNetworkInit
        16   -> emberAfGetNodeType
        16   -> emberAfPopNetworkIndex
        16   -> emberAfPushNetworkIndex
        16   -> emberNetworkInit
      24   emAfParseAndPrintVersion
        24   -> emberAfPrint
         0   -> emberAfPrintln
      24   emAfPermitJoin
        24   -> emberAfPrintln
        24   -> emberPermitJoining
        24   -> emberSendZigDevRequest
       8   emAfPrintStatus
         0   -> emberAfPrint
         8   -> emberAfPrint
      24   emAfProcessZdo
        24   -> emAfPreZDOMessageReceived
        24   -> emberAfPartnerLinkKeyExchangeResponseCallback
        24   -> emberAfPrint
        24   -> emberAfPrintln
        24   -> emberAfRemoveFromCurrentAppTasksCallback
      24   emAfStackStatusHandler
        24   -> emberAfGetNodeId
        24   -> emberAfPluginGreenPowerClientStackStatusCallback
        24   -> emberAfPluginNetworkCreatorSecurityStackStatusCallback
        24   -> emberAfPluginNetworkSteeringStackStatusCallback
        24   -> emberAfPluginReportingStackStatusCallback
        24   -> emberAfPluginZllCommissioningCommonStackStatusCallback
         0   -> emberAfPrintln
        24   -> emberAfPrintln
        24   -> emberAfRegistrationAbortCallback
        24   -> emberAfRegistrationStartCallback
        24   -> emberAfStackDown
        24   -> emberAfStackStatusCallback
        24   -> emberStartWritingStackTokens
       0   emberAfFormNetwork
       8   emberAfFormatMfgString
         8   -> emberAfGetMfgString
       0   emberAfIsFullSmartEnergySecurityPresent
      16   emberAfJoinNetwork
        16   -> emberAfPrintln
         0   -> emberJoinNetwork
       8   emberAfPermitJoin
         0   -> emAfPermitJoin
         8   -> emberAfPrintln
      16   emberAfPrintMessageData
        16   -> emberAfPrint
        16   -> emberAfPrintBuffer
         0   -> emberAfPrintln
      16   emberAfSendBroadcast
        16   -> emberAfSendBroadcastWithCallback
      40   emberAfSendBroadcastWithAliasWithCallback
        40   -> send
      40   emberAfSendBroadcastWithCallback
        40   -> send
      48   emberAfSendInterPan
        48   -> emberAfInterpanSendMessageCallback
        48   -> halCommonMemMove
        48   -> halCommonMemSet
      16   emberAfSendMulticast
        16   -> emberAfSendMulticastWithCallback
      40   emberAfSendMulticastToBindings
        40   -> emberAfSendMulticast
        40   -> emberGetBinding
      40   emberAfSendMulticastWithAliasWithCallback
        40   -> send
      40   emberAfSendMulticastWithCallback
        40   -> send
      24   emberAfSendUnicast
        24   -> emberAfSendUnicastWithCallback
       0   emberAfSendUnicastToBindings
         0   -> emberAfSendUnicastToBindingsWithCallback
      64   emberAfSendUnicastToBindingsWithCallback
        64   -> emberGetBinding
        64   -> send
      40   emberAfSendUnicastWithCallback
        40   -> emberGetBinding
        40   -> send
       8   emberScanErrorHandler
         0   -> emberAfPopNetworkIndex
         8   -> emberAfPushCallbackNetworkIndex
         8   -> emberAfScanErrorCallback
       0   halButtonIsr
         0   -> emberAfHalButtonIsrCallback
     104   send
       104   -> emAfApplyDisableDefaultResponse
       104   -> emAfApplyRetryOverride
       104   -> emAfSend
       104   -> emAfSetCryptoStatus
       104   -> emberAfAddToCurrentAppTasksCallback
       104   -> emberAfDetermineIfLinkSecurityIsRequired
       104   -> emberAfGetEndpointInfoCallback
       104   -> emberAfIndexFromEndpoint
       104   -> emberAfMaximumApsPayloadLength
       104   -> emberAfPopNetworkIndex
       104   -> emberAfPreMessageSendCallback
       104   -> emberAfPushEndpointNetworkIndex
       104   -> emberAfPushNetworkIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_25
       4  ??DataTable10_26
       4  ??DataTable10_27
       4  ??DataTable10_28
       4  ??DataTable10_29
       4  ??DataTable10_3
       4  ??DataTable10_30
       4  ??DataTable10_31
       4  ??DataTable10_32
       4  ??DataTable10_33
       4  ??DataTable10_34
       4  ??DataTable10_35
       4  ??DataTable10_36
       4  ??DataTable10_37
       4  ??DataTable10_38
       4  ??DataTable10_39
       4  ??DataTable10_4
       4  ??DataTable10_40
       4  ??DataTable10_41
       4  ??DataTable10_42
       4  ??DataTable10_43
       4  ??DataTable10_44
       4  ??DataTable10_45
       4  ??DataTable10_46
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       8  ?Subroutine0
       8  ?Subroutine1
      22  ?Subroutine2
      18  ?Subroutine3
      14  ?Subroutine4
      12  ?_0
       8  ?_1
       8  ?_10
       8  ?_11
      16  ?_12
       8  ?_13
       4  ?_14
      60  ?_15
      24  ?_16
      40  ?_17
      20  ?_18
       8  ?_19
       8  ?_2
       8  ?_20
      16  ?_21
      40  ?_22
      24  ?_23
      28  ?_24
      36  ?_25
       8  ?_26
      20  ?_27
      48  ?_28
       4  ?_29
       8  ?_3
       4  ?_30
       4  ?_31
       4  ?_32
      20  ?_33
       8  ?_34
       8  ?_35
       1  ?_36
      12  ?_37
       8  ?_38
      16  ?_39
       8  ?_4
       8  ?_40
      12  ?_41
      32  ?_42
      12  ?_43
      12  ?_44
       8  ?_45
      48  ?_46
       2  ?_47
      28  ?_48
       8  ?_49
       8  ?_5
      24  ?_50
       4  ?_51
      16  ?_52
       4  ?_53
       8  ?_6
       4  ?_7
      24  ?_8
       2  ?_9
     130  emAfIncomingMessageHandler
      30  emAfInitializeMessageSentCallbackArray
     274  emAfMessageSentHandler
      62  emAfNetworkInit
     106  emAfParseAndPrintVersion
      70  emAfPermitJoin
      46  emAfPrintStatus
     222  emAfProcessZdo
     168  emAfStackStatusHandler
       4  emberAfFormNetwork
      30  emberAfFormatMfgString
      16  emberAfInvalidImageId
       4  emberAfIsFullSmartEnergySecurityPresent
      50  emberAfJoinNetwork
       8  emberAfNullEui64
      26  emberAfPermitJoin
      44  emberAfPrintMessageData
       1  emberAfPrintReceivedMessages
      12  emberAfSendBroadcast
      18  emberAfSendBroadcastWithAliasWithCallback
      12  emberAfSendBroadcastWithCallback
     118  emberAfSendInterPan
      12  emberAfSendMulticast
     114  emberAfSendMulticastToBindings
      22  emberAfSendMulticastWithAliasWithCallback
      16  emberAfSendMulticastWithCallback
      16  emberAfSendUnicast
       4  emberAfSendUnicastToBindings
     104  emberAfSendUnicastToBindingsWithCallback
      72  emberAfSendUnicastWithCallback
      22  emberScanErrorHandler
       4  halButtonIsr
      80  messageSentCallbacks
      72  releaseTypes
     436  send

 
    80 bytes in section .bss
     1 byte  in section .data
   917 bytes in section .rodata
 2 522 bytes in section .text
 
 2 522 bytes of CODE  memory
   917 bytes of CONST memory
    81 bytes of DATA  memory

Errors: none
Warnings: none
