###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:20:16
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\znet-cli.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW9CBC.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\znet-cli.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"znet-cli.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0
#        -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\znet-cli.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\znet-cli.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\znet-cli.c
      1          // This file is generated by Simplicity Studio.  Please do not edit manually.
      2          //
      3          //
      4          
      5          // This file contains the mapping for the command line configuration
      6          
      7          #include "app/framework/include/af.h"
      8          #include "app/framework/cli/custom-cli.h"
      9          #include EMBER_AF_API_COMMAND_INTERPRETER2
     10          
     11          void emAfCliBsendCommand(void);
     12          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     13          static const char * const bsendCommandArguments[] = {
     14            "Source endpoint to send a binding based message from",
     15            NULL
     16          };
     17          #endif
     18          
     19          
     20          void changeKeyCommand(void);
     21          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     22          static const char * const changekeyLinkCommandArguments[] = {
     23            "The link key provided as a 16 byte array",
     24            NULL
     25          };
     26          #endif
     27          
     28          
     29          void changeKeyCommand(void);
     30          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     31          static const char * const changekeyNetworkCommandArguments[] = {
     32            "The network key provided as a 16 byte array",
     33            NULL
     34          };
     35          #endif
     36          
     37          

   \                                 In section .rodata, align 4
     38          static EmberCommandEntry emberCommandChangekeyTable[] = {
   \                     emberCommandChangekeyTable:
   \        0x0   0x....'....        DC32 ?_0, changeKeyCommand, ?_1, ?_2, changeKeyCommand, ?_1, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
     39            emberCommandEntryActionWithDetails("link", changeKeyCommand, "b", "Change the link key to the one provided in the 16 byte array argument  ...", changekeyLinkCommandArguments),
     40            emberCommandEntryActionWithDetails("network", changeKeyCommand, "b", "Change the network key to the 16 byte array provided as an argument to ...", changekeyNetworkCommandArguments),
     41            emberCommandEntryTerminator(),
     42          };
     43          void emberAfPrintAllOff(void);
     44          void emberAfPrintAllOn(void);
     45          void printOffCommand(void);
     46          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     47          static const char * const debugprintOffCommandArguments[] = {
     48            "The debug area mask listed in the <application>.h file",
     49            NULL
     50          };
     51          #endif
     52          
     53          
     54          void printOnCommand(void);
     55          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     56          static const char * const debugprintOnCommandArguments[] = {
     57            "The debug area mask listed in the <application>.h file",
     58            NULL
     59          };
     60          #endif
     61          
     62          
     63          void emberAfPrintStatus(void);

   \                                 In section .rodata, align 4
     64          static EmberCommandEntry emberCommandDebugprintTable[] = {
   \                     emberCommandDebugprintTable:
   \        0x0   0x....'....        DC32 ?_3, emberAfPrintAllOff, ?_4, ?_5, emberAfPrintAllOn, ?_4, ?_6
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 printOffCommand, ?_7, ?_8, printOnCommand, ?_7, ?_9
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emberAfPrintStatus, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
     65            emberCommandEntryActionWithDetails("all_off", emberAfPrintAllOff, "", "Turns off all debug printing", NULL),
     66            emberCommandEntryActionWithDetails("all_on", emberAfPrintAllOn, "", "Turns on all compiled in debug printing", NULL),
     67            emberCommandEntryActionWithDetails("off", printOffCommand, "u", "Turns off compiled in debug printing for a specific debug printing are ...", debugprintOffCommandArguments),
     68            emberCommandEntryActionWithDetails("on", printOnCommand, "u", "Turns on compiled in debug printing for a specific debug printing area ...", debugprintOnCommandArguments),
     69            emberCommandEntryActionWithDetails("status", emberAfPrintStatus, "", "Prints out the current settings for debug printing on the device", NULL),
     70            emberCommandEntryTerminator(),
     71          };
     72          void echoCommand(void);
     73          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     74          static const char * const echoCommandArguments[] = {
     75            "bool indicating whether to turn echo on (1) or off (0)",
     76            NULL
     77          };
     78          #endif
     79          
     80          
     81          void enableDisableEndpoint(void);
     82          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     83          static const char * const endpointDisableCommandArguments[] = {
     84            "Endpoint in question.",
     85            NULL
     86          };
     87          #endif
     88          
     89          
     90          void enableDisableEndpoint(void);
     91          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
     92          static const char * const endpointEnableCommandArguments[] = {
     93            "Endpoint in question.",
     94            NULL
     95          };
     96          #endif
     97          
     98          
     99          void endpointPrint(void);

   \                                 In section .rodata, align 4
    100          static EmberCommandEntry emberCommandEndpointTable[] = {
   \                     emberCommandEndpointTable:
   \        0x0   0x....'....        DC32 ?_10, enableDisableEndpoint, ?_7, ?_11, enableDisableEndpoint, ?_7
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x18   0x....'....        DC32 ?_12, endpointPrint, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    101            emberCommandEntryActionWithDetails("disable", enableDisableEndpoint, "u", "Disable the endpoint for processing ZCL messages.", endpointDisableCommandArguments),
    102            emberCommandEntryActionWithDetails("enable", enableDisableEndpoint, "u", "Enable the endpoint for processing ZCL messages.", endpointEnableCommandArguments),
    103            emberCommandEntryActionWithDetails("print", endpointPrint, "", "Print the status of all the endpoints.", NULL),
    104            emberCommandEntryTerminator(),
    105          };
    106          void printEvents(void);
    107          void helpCommand(void);
    108          void emAfCliInfoCommand(void);
    109          void interpanCommand(void);
    110          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    111          static const char * const interpanGroupCommandArguments[] = {
    112            "group id to send to",
    113            "destination pan id",
    114            "destination profile ID",
    115            NULL
    116          };
    117          #endif
    118          
    119          
    120          void interpanLongCommand(void);
    121          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    122          static const char * const interpanLongCommandArguments[] = {
    123            "long ieee address to send the interpan message to",
    124            "two byte destination PA ID",
    125            "two byte destination profile ID",
    126            "two byte options",
    127            NULL
    128          };
    129          #endif
    130          
    131          
    132          void interpanCommand(void);
    133          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    134          static const char * const interpanShortCommandArguments[] = {
    135            "group id to send to",
    136            "destination pan id",
    137            "destination profile ID",
    138            NULL
    139          };
    140          #endif
    141          
    142          

   \                                 In section .rodata, align 4
    143          static EmberCommandEntry emberCommandInterpanTable[] = {
   \                     emberCommandInterpanTable:
   \        0x0   0x....'....        DC32 ?_13, interpanCommand, ?_14, ?_15, interpanLongCommand, ?_16, ?_17
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 interpanCommand, ?_14, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    144            emberCommandEntryActionWithDetails("group", interpanCommand, "vvv", "send an interpan message to a group id.", interpanGroupCommandArguments),
    145            emberCommandEntryActionWithDetails("long", interpanLongCommand, "bvvv", "Send an interpan message to a long address (8 byte eui64)", interpanLongCommandArguments),
    146            emberCommandEntryActionWithDetails("short", interpanCommand, "vvv", "Send an interpan message to a short id.", interpanShortCommandArguments),
    147            emberCommandEntryTerminator(),
    148          };
    149          void keysClearCommand(void);
    150          void keysDeleteCommand(void);
    151          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    152          static const char * const keysDeleteCommandArguments[] = {
    153            "index into the security key table",
    154            NULL
    155          };
    156          #endif
    157          
    158          
    159          void keysPrintCommand(void);

   \                                 In section .rodata, align 4
    160          static EmberCommandEntry emberCommandKeysTable[] = {
   \                     emberCommandKeysTable:
   \        0x0   0x....'....        DC32 ?_18, keysClearCommand, ?_4, ?_19, keysDeleteCommand, ?_7, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 keysPrintCommand, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    161            emberCommandEntryActionWithDetails("clear", keysClearCommand, "", "Clear all security keys", NULL),
    162            emberCommandEntryActionWithDetails("delete", keysDeleteCommand, "u", "Delete a security key from a given index", keysDeleteCommandArguments),
    163            emberCommandEntryActionWithDetails("print", keysPrintCommand, "", "Print all security keys out to the command line.", NULL),
    164            emberCommandEntryTerminator(),
    165          };
    166          void printAllLibraryStatus(void);
    167          void networkPermitJoinCommand(void);
    168          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    169          static const char * const networkBroadPjoinCommandArguments[] = {
    170            "Number of seconds during which devices will be allowed to join the net ...",
    171            NULL
    172          };
    173          #endif
    174          
    175          
    176          void networkChangeChannelCommand(void);
    177          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    178          static const char * const networkChangeChannelCommandArguments[] = {
    179            "The channel to change to.",
    180            NULL
    181          };
    182          #endif
    183          
    184          
    185          void networkExtendedPanIdCommand(void);
    186          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    187          static const char * const networkExtpanidCommandArguments[] = {
    188            "The bytes for the extended pan id",
    189            NULL
    190          };
    191          #endif
    192          
    193          
    194          void findJoinableNetworkCommand(void);
    195          void findUnusedPanIdCommand(void);

   \                                 In section .rodata, align 4
    196          static EmberCommandEntry emberCommandNetworkFindTable[] = {
   \                     emberCommandNetworkFindTable:
   \        0x0   0x....'....        DC32 ?_20, findJoinableNetworkCommand, ?_4, ?_21
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 findUnusedPanIdCommand, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    197            emberCommandEntryActionWithDetails("joinable", findJoinableNetworkCommand, "", "Begin a search for a joinable networ ...", NULL),
    198            emberCommandEntryActionWithDetails("unused", findUnusedPanIdCommand, "", "Begin a search for an unused Channel and Pan I ...", NULL),
    199            emberCommandEntryTerminator(),
    200          };
    201          void networkFormCommand(void);
    202          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    203          static const char * const networkFormCommandArguments[] = {
    204            "The channel on which to form the network",
    205            "One byte signed value indicating the TX power that the radio should be ...",
    206            "Two byte pan id for the network",
    207            NULL
    208          };
    209          #endif
    210          
    211          
    212          void networkIdCommand(void);
    213          void networkInitCommand(void);
    214          void networkJoinCommand(void);
    215          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    216          static const char * const networkJoinCommandArguments[] = {
    217            "The channel on which to form the network",
    218            "One byte signed value indicating the TX power that the radio should be ...",
    219            "Two byte pan id for the network",
    220            NULL
    221          };
    222          #endif
    223          
    224          
    225          void networkLeaveCommand(void);
    226          void networkMultiPhyStartCommand(void);
    227          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    228          static const char * const networkMultiPhyStartCommandArguments[] = {
    229            "The page on which to form the network.",
    230            "The channel on which to form the network.",
    231            "One byte signed value indicating the TX power that the radio should be ...",
    232            "",
    233            NULL
    234          };
    235          #endif
    236          
    237          
    238          void networkMultiPhyStopCommand(void);
    239          void networkPermitJoinCommand(void);
    240          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    241          static const char * const networkPjoinCommandArguments[] = {
    242            "Number of seconds during which devices will be allowed to join the net ...",
    243            NULL
    244          };
    245          #endif
    246          
    247          
    248          void networkRejoinCommand(void);
    249          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    250          static const char * const networkRejoinCommandArguments[] = {
    251            "Boolean indicating whether the device can rejoin secure or no ...",
    252            "4 byte channel mask which should be used to search for the network to  ...",
    253            NULL
    254          };
    255          #endif
    256          
    257          
    258          void networkRejoinDiffDeviceTypeCommand(void);
    259          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    260          static const char * const networkRejoinDiffDeviceTypeCommandArguments[] = {
    261            "Boolean indicating whether the device can rejoin secure or no ...",
    262            "4 byte channel mask which should be used to search for the network to  ...",
    263            "An enumeration indicating the device type to rejoin a ...",
    264            NULL
    265          };
    266          #endif
    267          
    268          
    269          void networkSetCommand(void);
    270          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    271          static const char * const networkSetCommandArguments[] = {
    272            "The network index to use for CLI commands",
    273            NULL
    274          };
    275          #endif
    276          
    277          

   \                                 In section .rodata, align 4
    278          static EmberCommandEntry emberCommandNetworkTable[] = {
   \                     emberCommandNetworkTable:
   \        0x0   0x....'....        DC32 ?_22, networkPermitJoinCommand, ?_7, ?_23
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 networkChangeChannelCommand, ?_7, ?_24
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 networkExtendedPanIdCommand, ?_1, ?_25, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x2C   0x....'....        DC32 emberCommandNetworkFindTable, ?_26, networkFormCommand, ?_27, ?_28
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x40   0x....'....        DC32 networkIdCommand, ?_4, ?_29, networkInitCommand, ?_4, ?_30
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 networkJoinCommand, ?_27, ?_31, networkLeaveCommand, ?_4, ?_32
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x70   0x....'....        DC32 networkMultiPhyStartCommand, ?_33, ?_34
   \              0x....'....  
   \              0x....'....  
   \       0x7C   0x....'....        DC32 networkMultiPhyStopCommand, ?_4, ?_35, networkPermitJoinCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x8C   0x....'....        DC32 ?_7, ?_36, networkRejoinCommand, ?_37, ?_38
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xA0   0x....'....        DC32 networkRejoinDiffDeviceTypeCommand, ?_39, ?_40, networkSetCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xB0   0x....'....        DC32 ?_7, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    279            emberCommandEntryActionWithDetails("broad-pjoin", networkPermitJoinCommand, "u", "Permit joining on the network for a given number of seconds AND broadc ...", networkBroadPjoinCommandArguments),
    280            emberCommandEntryActionWithDetails("change-channel", networkChangeChannelCommand, "u", "Attempts to change device over to a different channel given in the cha ...", networkChangeChannelCommandArguments),
    281            emberCommandEntryActionWithDetails("extpanid", networkExtendedPanIdCommand, "b", "Write the extended pan id for the device.", networkExtpanidCommandArguments),
    282            emberCommandEntrySubMenu("find", emberCommandNetworkFindTable, ""),
    283            emberCommandEntryActionWithDetails("form", networkFormCommand, "usv", "Create a network on the given channel, power and panId.", networkFormCommandArguments),
    284            emberCommandEntryActionWithDetails("id", networkIdCommand, "", "Prints the current Node ID, EUI64, and Pan ID.", NULL),
    285            emberCommandEntryActionWithDetails("init", networkInitCommand, "", "Initialize a network; this is a test command used for tc-swap-out test ...", NULL),
    286            emberCommandEntryActionWithDetails("join", networkJoinCommand, "usv", "Join an existing network on the given channel, power and panId.", networkJoinCommandArguments),
    287            emberCommandEntryActionWithDetails("leave", networkLeaveCommand, "", "Leave the current network.", NULL),
    288            emberCommandEntryActionWithDetails("multi-phy-start", networkMultiPhyStartCommand, "uus*", "To start multi phy interface other than native and form the networ ...", networkMultiPhyStartCommandArguments),
    289            emberCommandEntryActionWithDetails("multi-phy-stop", networkMultiPhyStopCommand, "", "Terminates the multi phy interface", NULL),
    290            emberCommandEntryActionWithDetails("pjoin", networkPermitJoinCommand, "u", "Permit joining on the network for a given number of seconds", networkPjoinCommandArguments),
    291            emberCommandEntryActionWithDetails("rejoin", networkRejoinCommand, "uw", "Rejoin an existing network in a secure or insecure manner.", networkRejoinCommandArguments),
    292            emberCommandEntryActionWithDetails("rejoin-diff-device-type", networkRejoinDiffDeviceTypeCommand, "uwu", "Rejoin an existing network in a secure or insecure manner with a diffe ...", networkRejoinDiffDeviceTypeCommandArguments),
    293            emberCommandEntryActionWithDetails("set", networkSetCommand, "u", "Set the network index used by all future CLI command ...", networkSetCommandArguments),
    294            emberCommandEntryTerminator(),
    295          };
    296          void optionApsRetryCommand(void);
    297          void optionApsRetryCommand(void);
    298          void optionApsRetryCommand(void);

   \                                 In section .rodata, align 4
    299          static EmberCommandEntry emberCommandOptionApsretryTable[] = {
   \                     emberCommandOptionApsretryTable:
   \        0x0   0x....'....        DC32 ?_41, optionApsRetryCommand, ?_4, ?_6, optionApsRetryCommand, ?_4
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x18   0x....'....        DC32 ?_8, optionApsRetryCommand, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    300            emberCommandEntryActionWithDetails("default", optionApsRetryCommand, "", "Forces the AppFramework to set/clear the APS Retry option (in APS Fram ...", NULL),
    301            emberCommandEntryActionWithDetails("off", optionApsRetryCommand, "", "Forces the AppFramework to set/clear the APS Retry option (in APS Fram ...", NULL),
    302            emberCommandEntryActionWithDetails("on", optionApsRetryCommand, "", "Forces the AppFramework to set/clear the APS Retry option (in APS Fram ...", NULL),
    303            emberCommandEntryTerminator(),
    304          };
    305          void optionBindingTableClearCommand(void);
    306          void optionBindingTablePrintCommand(void);
    307          void optionBindingTableSetCommand(void);
    308          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    309          static const char * const optionBindingTableSetCommandArguments[] = {
    310            "one byte index into the binding table",
    311            "cluster id to send with the discovery message",
    312            "local endpoint to bind",
    313            "remote endpoint to bind",
    314            "8 byte IEEE address provided big endian",
    315            NULL
    316          };
    317          #endif
    318          
    319          

   \                                 In section .rodata, align 4
    320          static EmberCommandEntry emberCommandOptionBindingTableTable[] = {
   \                     emberCommandOptionBindingTableTable:
   \        0x0   0x....'....        DC32 ?_18, optionBindingTableClearCommand, ?_4, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 optionBindingTablePrintCommand, ?_4, ?_40
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 optionBindingTableSetCommand, ?_42, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    321            emberCommandEntryActionWithDetails("clear", optionBindingTableClearCommand, "", "Clear the binding table", NULL),
    322            emberCommandEntryActionWithDetails("print", optionBindingTablePrintCommand, "", "Prints out the binding table to the command line.", NULL),
    323            emberCommandEntryActionWithDetails("set", optionBindingTableSetCommand, "uvuub", "Set a binding table entry for the arguments specified.", optionBindingTableSetCommandArguments),
    324            emberCommandEntryTerminator(),
    325          };
    326          void optionDiscoverCommand(void);
    327          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    328          static const char * const optionDiscCommandArguments[] = {
    329            "the profile id to send with the discovery message",
    330            "cluster id to send with the discovery message",
    331            NULL
    332          };
    333          #endif
    334          
    335          
    336          void optionEndDeviceBindCommand(void);
    337          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    338          static const char * const optionEdbCommandArguments[] = {
    339            "The local endpoint whose simple descriptor will be used to create the  ...",
    340            NULL
    341          };
    342          #endif
    343          
    344          
    345          void optionInstallCodeCommand(void);
    346          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD) && !defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
    347          static const char * const optionInstallCodeCommandArguments[] = {
    348            "index into the link key table",
    349            "IEEE address to enter into the link key table",
    350            "install code including two-byte, little-endian CRC",
    351            NULL
    352          };
    353          #endif
    354          
    355          
    356          void optionLinkCommand(void);
    357          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    358          static const char * const optionLinkCommandArguments[] = {
    359            "index into the link key table",
    360            "IEEE address to enter into the link key table",
    361            "link key to enter into the table",
    362            NULL
    363          };
    364          #endif
    365          
    366          
    367          void optionPrintRxCommand(void);
    368          void optionPrintRxCommand(void);

   \                                 In section .rodata, align 4
    369          static EmberCommandEntry emberCommandOptionPrintRxMsgsTable[] = {
   \                     emberCommandOptionPrintRxMsgsTable:
   \        0x0   0x....'....        DC32 ?_10, optionPrintRxCommand, ?_4, ?_11, optionPrintRxCommand, ?_4
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x18   0x0000'0000        DC32 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
    370            emberCommandEntryActionWithDetails("disable", optionPrintRxCommand, "", "Disable the printing of received messages.", NULL),
    371            emberCommandEntryActionWithDetails("enable", optionPrintRxCommand, "", "Enable the printing of received messages.", NULL),
    372            emberCommandEntryTerminator(),
    373          };
    374          void optionRegisterCommand(void);
    375          void optionApsSecurityCommand(void);
    376          void optionApsSecurityCommand(void);

   \                                 In section .rodata, align 4
    377          static EmberCommandEntry emberCommandOptionSecurityApsTable[] = {
   \                     emberCommandOptionSecurityApsTable:
   \        0x0   0x....'....        DC32 ?_6, optionApsSecurityCommand, ?_4, ?_8, optionApsSecurityCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_4, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    378            emberCommandEntryActionWithDetails("off", optionApsSecurityCommand, "", "Turns aps security off", NULL),
    379            emberCommandEntryActionWithDetails("on", optionApsSecurityCommand, "", "Turns aps security on", NULL),
    380            emberCommandEntryTerminator(),
    381          };
    382          void optionSecurityAllowTrustCenterRejoinUsingWellKnownKey(void);
    383          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    384          static const char * const optionSecuritySetAllowTrustCenterRejoinUsingWellKnownKeyCommandArguments[] = {
    385            "Whether or not the Trust Center should allow trust center rejoins for  ...",
    386            NULL
    387          };
    388          #endif
    389          
    390          
    391          void optionSecurityAllowTrustCenterRejoinUsingWellKnownKeyTimeout(void);
    392          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    393          static const char * const optionSecuritySetAllowTrustCenterRejoinUsingWellKnownKeyTimeoutCommandArguments[] = {
    394            "The number of seconds that trust center rejoins will be responded to u ...",
    395            NULL
    396          };
    397          #endif
    398          
    399          
    400          void optionSecuritySetKeyRequestPolicy(void);
    401          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    402          static const char * const optionSecuritySetKeyRequestPolicyCommandArguments[] = {
    403            "The value to assign to emberTrustCenterLinkKeyRequestPolicy",
    404            "The value to assign to emberAppLinkKeyRequestPolicy",
    405            NULL
    406          };
    407          #endif
    408          
    409          

   \                                 In section .rodata, align 4
    410          static EmberCommandEntry emberCommandOptionSecurityTable[] = {
   \                     emberCommandOptionSecurityTable:
   \        0x0   0x....'....        DC32 ?_43, 0H, emberCommandOptionSecurityApsTable, ?_44
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 optionSecurityAllowTrustCenterRejoinUsingWellKnownKey, ?_7, ?_45
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 optionSecurityAllowTrustCenterRejoinUsingWellKnownKeyTimeout, ?_46
   \              0x....'....  
   \       0x24   0x....'....        DC32 ?_47, optionSecuritySetKeyRequestPolicy, ?_48, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    411            emberCommandEntrySubMenu("aps", emberCommandOptionSecurityApsTable, ""),
    412            emberCommandEntryActionWithDetails("set-allow-trust-center-rejoin-using-well-known-key", optionSecurityAllowTrustCenterRejoinUsingWellKnownKey, "u", "Set whether or not a Trust Center application will allow trust center  ...", optionSecuritySetAllowTrustCenterRejoinUsingWellKnownKeyCommandArguments),
    413            emberCommandEntryActionWithDetails("set-allow-trust-center-rejoin-using-well-known-key-timeout", optionSecurityAllowTrustCenterRejoinUsingWellKnownKeyTimeout, "v", "Sets the number of seconds to allow trust center rejoins for devices u ...", optionSecuritySetAllowTrustCenterRejoinUsingWellKnownKeyTimeoutCommandArguments),
    414            emberCommandEntryActionWithDetails("set-key-request-policy", optionSecuritySetKeyRequestPolicy, "uu", "Sets the local policy for handling TC link key requests and applicatio ...", optionSecuritySetKeyRequestPolicyCommandArguments),
    415            emberCommandEntryTerminator(),
    416          };

   \                                 In section .rodata, align 4
    417          static EmberCommandEntry emberCommandOptionTable[] = {
   \                     emberCommandOptionTable:
   \        0x0   0x....'....        DC32 ?_49, 0H, emberCommandOptionApsretryTable, ?_50, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandOptionBindingTableTable, ?_51, optionDiscoverCommand
   \              0x....'....  
   \              0x....'....  
   \       0x20   0x....'....        DC32 ?_52, ?_53, optionEndDeviceBindCommand, ?_7, ?_54
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 optionInstallCodeCommand, ?_55, ?_0, optionLinkCommand, ?_55, ?_56
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x4C   0x0000'0000        DC32 0H, emberCommandOptionPrintRxMsgsTable, ?_57
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 optionRegisterCommand, ?_4, ?_58, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x68   0x....'....        DC32 emberCommandOptionSecurityTable, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    418            emberCommandEntrySubMenu("apsretry", emberCommandOptionApsretryTable, ""),
    419            emberCommandEntrySubMenu("binding-table", emberCommandOptionBindingTableTable, ""),
    420            emberCommandEntryActionWithDetails("disc", optionDiscoverCommand, "vv", "Sends a ZDO Match Descriptor Request for the server side of the specif ...", optionDiscCommandArguments),
    421            emberCommandEntryActionWithDetails("edb", optionEndDeviceBindCommand, "u", "Sends a ZDO End Device Bind Request using the given local endpoint.", optionEdbCommandArguments),
    422          #if !defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
    423            emberCommandEntryActionWithDetails("install-code", optionInstallCodeCommand, "ubb", "Derives a link key from an install code and sets it in the link key ta ...", optionInstallCodeCommandArguments),
    424          #endif //!defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
    425            emberCommandEntryActionWithDetails("link", optionLinkCommand, "ubb", "Sets a link key in the link key tabl ...", optionLinkCommandArguments),
    426            emberCommandEntrySubMenu("print-rx-msgs", emberCommandOptionPrintRxMsgsTable, ""),
    427            emberCommandEntryActionWithDetails("register", optionRegisterCommand, "", "Initiates Smart Energy Registration including Key Establishmen ...", NULL),
    428            emberCommandEntrySubMenu("security", emberCommandOptionSecurityTable, ""),
    429            emberCommandEntryTerminator(),
    430          };
    431          void emberAfPluginCounterPrintCounterTypeCommand(void);
    432          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    433          static const char * const pluginCounterPrintCounterTypeCommandArguments[] = {
    434            "The counter type       to print.",
    435            NULL
    436          };
    437          #endif
    438          
    439          

   \                                 In section .rodata, align 4
    440          static EmberCommandEntry emberCommandPluginCounterTable[] = {
   \                     emberCommandPluginCounterTable:
   \        0x0   0x....'....        DC32 ?_59, emberAfPluginCounterPrintCounterTypeCommand, ?_7, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    441            emberCommandEntryActionWithDetails("print-counter-type", emberAfPluginCounterPrintCounterTypeCommand, "u", "Print value of this particular counter.", pluginCounterPrintCounterTypeCommandArguments),
    442            emberCommandEntryTerminator(),
    443          };
    444          void emberAfPluginCountersClear(void);
    445          void emberAfPluginCountersPrintCommand(void);
    446          void emberAfPluginCountersPrintThresholdsCommand(void);
    447          void emberAfPluginCountersResetThresholds(void);
    448          void emberAfPluginCountersSendRequestCommand(void);
    449          void emberAfPluginCountersSetThresholdCommand(void);
    450          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    451          static const char * const pluginCountersSetThresholdCommandArguments[] = {
    452            "type of counter",
    453            "Threshold Value",
    454            NULL
    455          };
    456          #endif
    457          
    458          
    459          void emberAfPluginCountersSimplePrintCommand(void);

   \                                 In section .rodata, align 4
    460          static EmberCommandEntry emberCommandPluginCountersTable[] = {
   \                     emberCommandPluginCountersTable:
   \        0x0   0x....'....        DC32 ?_18, emberAfPluginCountersClear, ?_4, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emberAfPluginCountersPrintCommand, ?_4, ?_60
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emberAfPluginCountersPrintThresholdsCommand, ?_4, ?_61
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emberAfPluginCountersResetThresholds, ?_4, ?_62
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emberAfPluginCountersSendRequestCommand, ?_4, ?_63
   \              0x....'....  
   \              0x....'....  
   \       0x40   0x....'....        DC32 emberAfPluginCountersSetThresholdCommand, ?_64, ?_65
   \              0x....'....  
   \              0x....'....  
   \       0x4C   0x....'....        DC32 emberAfPluginCountersSimplePrintCommand, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    461            emberCommandEntryActionWithDetails("clear", emberAfPluginCountersClear, "", "Clear all counter values.", NULL),
    462            emberCommandEntryActionWithDetails("print", emberAfPluginCountersPrintCommand, "", "Print all counter values and clear them.", NULL),
    463            emberCommandEntryActionWithDetails("print-thresholds", emberAfPluginCountersPrintThresholdsCommand, "", "Prints the thresholds of all the counters.", NULL),
    464            emberCommandEntryActionWithDetails("reset-threshold", emberAfPluginCountersResetThresholds, "", "Resets all thresholds values to 0xFFFF.", NULL),
    465            emberCommandEntryActionWithDetails("send-request", emberAfPluginCountersSendRequestCommand, "", "Sends a request for ota counters", NULL),
    466            emberCommandEntryActionWithDetails("set-threshold", emberAfPluginCountersSetThresholdCommand, "uv", "Set a threshold value for a particular type of counter.", pluginCountersSetThresholdCommandArguments),
    467            emberCommandEntryActionWithDetails("simple-print", emberAfPluginCountersSimplePrintCommand, "", "Print all counter values.", NULL),
    468            emberCommandEntryTerminator(),
    469          };
    470          void emberAfPluginFindAndBindTargetStartCommand(void);
    471          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    472          static const char * const pluginFindAndBindTargetCommandArguments[] = {
    473            "The endpoint on which to begin the Finding and Binding target process.",
    474            NULL
    475          };
    476          #endif
    477          
    478          

   \                                 In section .rodata, align 4
    479          static EmberCommandEntry emberCommandPluginFindAndBindTable[] = {
   \                     emberCommandPluginFindAndBindTable:
   \        0x0   0x....'....        DC32 ?_66, emberAfPluginFindAndBindTargetStartCommand, ?_7, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    480            emberCommandEntryActionWithDetails("target", emberAfPluginFindAndBindTargetStartCommand, "u", "Makes this node start identifying as a target for binding with an init ...", pluginFindAndBindTargetCommandArguments),
    481            emberCommandEntryTerminator(),
    482          };
    483          void emberAfPluginGreenPowerClientAddGroupcastSink(void);
    484          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    485          static const char * const pluginGreenPowerClientAddGroupSinkCommandArguments[] = {
    486            "GPD Source ID",
    487            "Sink group",
    488            NULL
    489          };
    490          #endif
    491          
    492          
    493          void emberAfPluginGreenPowerClientAddSink(void);
    494          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    495          static const char * const pluginGreenPowerClientAddSinkCommandArguments[] = {
    496            "GPD Source ID",
    497            "Sink's IEEE address",
    498            NULL
    499          };
    500          #endif
    501          
    502          
    503          void emberAfPluginGreenPowerClientClearProxyTable(void);
    504          void emberAfPluginGreenPowerClientDuplicateFilteringTest(void);
    505          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    506          static const char * const pluginGreenPowerClientDuplicateFilterTestCommandArguments[] = {
    507            "endpoint",
    508            "source Id of the fake incoming message",
    509            "sequence number",
    510            NULL
    511          };
    512          #endif
    513          
    514          
    515          void emberAfPluginGreenPowerClientPrintProxyTable(void);
    516          void emberAfPluginGreenPowerClientRemoveProxyTableEntry(void);
    517          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    518          static const char * const pluginGreenPowerClientRmGpdCommandArguments[] = {
    519            "GPD Source ID",
    520            NULL
    521          };
    522          #endif
    523          
    524          
    525          void emberAfPluginGreenPowerClientAddSink(void);
    526          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    527          static const char * const pluginGreenPowerClientRmSinkCommandArguments[] = {
    528            "GPD Source ID",
    529            "Sink's IEEE address",
    530            NULL
    531          };
    532          #endif
    533          
    534          
    535          void emberAfPluginGreenPowerClientSetKey(void);
    536          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    537          static const char * const pluginGreenPowerClientSetKeyCommandArguments[] = {
    538            "index",
    539            "source Id of the fake incoming message",
    540            NULL
    541          };
    542          #endif
    543          
    544          
    545          void emberAfPluginGreenPowerClientSetProxyEntry(void);
    546          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    547          static const char * const pluginGreenPowerClientSetProxyEntryCommandArguments[] = {
    548            "index to proxy table",
    549            "GPD Source ID",
    550            "Sink's node address",
    551            "options",
    552            NULL
    553          };
    554          #endif
    555          
    556          

   \                                 In section .rodata, align 4
    557          static EmberCommandEntry emberCommandPluginGreenPowerClientTable[] = {
   \                     emberCommandPluginGreenPowerClientTable:
   \        0x0   0x....'....        DC32 ?_67, emberAfPluginGreenPowerClientAddGroupcastSink, ?_68, ?_69
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emberAfPluginGreenPowerClientAddSink, ?_70, ?_71
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emberAfPluginGreenPowerClientClearProxyTable, ?_4, ?_72
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emberAfPluginGreenPowerClientDuplicateFilteringTest, ?_39, ?_73
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emberAfPluginGreenPowerClientPrintProxyTable, ?_4, ?_74
   \              0x....'....  
   \              0x....'....  
   \       0x40   0x....'....        DC32 emberAfPluginGreenPowerClientRemoveProxyTableEntry, ?_75, ?_76
   \              0x....'....  
   \              0x....'....  
   \       0x4C   0x....'....        DC32 emberAfPluginGreenPowerClientAddSink, ?_70, ?_77
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 emberAfPluginGreenPowerClientSetKey, ?_78, ?_79
   \              0x....'....  
   \              0x....'....  
   \       0x64   0x....'....        DC32 emberAfPluginGreenPowerClientSetProxyEntry, ?_80, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    558            emberCommandEntryActionWithDetails("add-group-sink", emberAfPluginGreenPowerClientAddGroupcastSink, "wv", "Add a groupcast sink for a given GPD", pluginGreenPowerClientAddGroupSinkCommandArguments),
    559            emberCommandEntryActionWithDetails("add-sink", emberAfPluginGreenPowerClientAddSink, "wb", "Add a sink for a given GPD", pluginGreenPowerClientAddSinkCommandArguments),
    560            emberCommandEntryActionWithDetails("clear-proxy-table", emberAfPluginGreenPowerClientClearProxyTable, "", "clear the proxy table", NULL),
    561            emberCommandEntryActionWithDetails("duplicate-filter-test", emberAfPluginGreenPowerClientDuplicateFilteringTest, "uwu", "This is used to instrument the current device receiving a message in o ...", pluginGreenPowerClientDuplicateFilterTestCommandArguments),
    562            emberCommandEntryActionWithDetails("print-proxy-table", emberAfPluginGreenPowerClientPrintProxyTable, "", "Print the proxy table", NULL),
    563            emberCommandEntryActionWithDetails("rm-gpd", emberAfPluginGreenPowerClientRemoveProxyTableEntry, "w", "Remove a given GPD from the proxy table", pluginGreenPowerClientRmGpdCommandArguments),
    564            emberCommandEntryActionWithDetails("rm-sink", emberAfPluginGreenPowerClientAddSink, "wb", "remove a sink for a given GP ...", pluginGreenPowerClientRmSinkCommandArguments),
    565            emberCommandEntryActionWithDetails("set-key", emberAfPluginGreenPowerClientSetKey, "ub", "This is used to set the key for a proxy table entry", pluginGreenPowerClientSetKeyCommandArguments),
    566            emberCommandEntryActionWithDetails("set-proxy-entry", emberAfPluginGreenPowerClientSetProxyEntry, "uwvw", "Set a proxy table entry", pluginGreenPowerClientSetProxyEntryCommandArguments),
    567            emberCommandEntryTerminator(),
    568          };
    569          void emAfGroupsServerCliClear(void);
    570          void emAfGroupsServerCliPrint(void);

   \                                 In section .rodata, align 4
    571          static EmberCommandEntry emberCommandPluginGroupsServerTable[] = {
   \                     emberCommandPluginGroupsServerTable:
   \        0x0   0x....'....        DC32 ?_18, emAfGroupsServerCliClear, ?_4, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emAfGroupsServerCliPrint, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    572            emberCommandEntryActionWithDetails("clear", emAfGroupsServerCliClear, "", "Clear the groups table on every endpoint.", NULL),
    573            emberCommandEntryActionWithDetails("print", emAfGroupsServerCliPrint, "", "Print information about the contents of the groups table.", NULL),
    574            emberCommandEntryTerminator(),
    575          };
    576          void emAfPluginIdentifyCliPrint(void);

   \                                 In section .rodata, align 4
    577          static EmberCommandEntry emberCommandPluginIdentifyTable[] = {
   \                     emberCommandPluginIdentifyTable:
   \        0x0   0x....'....        DC32 ?_12, emAfPluginIdentifyCliPrint, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    578            emberCommandEntryActionWithDetails("print", emAfPluginIdentifyCliPrint, "", "Print which endpoints are reporting.", NULL),
    579            emberCommandEntryTerminator(),
    580          };
    581          void emAfInterpanDisableCommand(void);
    582          void emAfInterpanEnableCommand(void);
    583          void emAfInterpanFragmentTestCommand(void);
    584          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    585          static const char * const pluginInterpanFragmentTestCommandArguments[] = {
    586            "The PAN ID that the target is located on",
    587            "The target's EUI64 (big endian)",
    588            "The cluster ID that the sample message should contain",
    589            "The length of the randomly-filled message to be sent across inter-PAN",
    590            NULL
    591          };
    592          #endif
    593          
    594          
    595          void emAfInterpanSetMessageTimeoutCommand(void);
    596          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    597          static const char * const pluginInterpanSetMsgTimeoutCommandArguments[] = {
    598            "Message timeout in seconds.",
    599            NULL
    600          };
    601          #endif
    602          
    603          

   \                                 In section .rodata, align 4
    604          static EmberCommandEntry emberCommandPluginInterpanTable[] = {
   \                     emberCommandPluginInterpanTable:
   \        0x0   0x....'....        DC32 ?_10, emAfInterpanDisableCommand, ?_4, ?_11
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emAfInterpanEnableCommand, ?_4, ?_81
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emAfInterpanFragmentTestCommand, ?_82, ?_83
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emAfInterpanSetMessageTimeoutCommand, ?_7, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    605            emberCommandEntryActionWithDetails("disable", emAfInterpanDisableCommand, "", "Disables inter-PAN globally.", NULL),
    606            emberCommandEntryActionWithDetails("enable", emAfInterpanEnableCommand, "", "Enables inter-PAN globally.", NULL),
    607            emberCommandEntryActionWithDetails("fragment-test", emAfInterpanFragmentTestCommand, "vbvv", "Sends a message of specified length of random values to target device  ...", pluginInterpanFragmentTestCommandArguments),
    608            emberCommandEntryActionWithDetails("set-msg-timeout", emAfInterpanSetMessageTimeoutCommand, "u", "Sets the timeout for inter-PAN messages sent and received.", pluginInterpanSetMsgTimeoutCommandArguments),
    609            emberCommandEntryTerminator(),
    610          };
    611          void emberAfPluginNetworkCreatorFormCommand(void);
    612          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    613          static const char * const pluginNetworkCreatorFormCommandArguments[] = {
    614            "Whether or not to form a centralized networ ...",
    615            "PanID of the network to be formed",
    616            "Tx power of the network to be formed",
    617            "channel of the network to be formed",
    618            NULL
    619          };
    620          #endif
    621          
    622          
    623          void emberAfPluginNetworkCreatorChannelMaskCommand(void);
    624          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    625          static const char * const pluginNetworkCreatorMaskAddCommandArguments[] = {
    626            "The mask of choice to which to add the channe ...",
    627            "The channel to add to the channel mask.",
    628            NULL
    629          };
    630          #endif
    631          
    632          
    633          void emberAfPluginNetworkCreatorChannelMaskCommand(void);
    634          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    635          static const char * const pluginNetworkCreatorMaskSetCommandArguments[] = {
    636            "The mask of choice to se ...",
    637            "The bit mask to which to set the chosen channel mask.",
    638            NULL
    639          };
    640          #endif
    641          
    642          
    643          void emberAfPluginNetworkCreatorChannelMaskCommand(void);
    644          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    645          static const char * const pluginNetworkCreatorMaskSubtractCommandArguments[] = {
    646            "The mask of choice from which to subtract the channe ...",
    647            "The channel to subtract from the channel mask.",
    648            NULL
    649          };
    650          #endif
    651          
    652          

   \                                 In section .rodata, align 4
    653          static EmberCommandEntry emberCommandPluginNetworkCreatorMaskTable[] = {
   \                     emberCommandPluginNetworkCreatorMaskTable:
   \        0x0   0x....'....        DC32 ?_84, emberAfPluginNetworkCreatorChannelMaskCommand, ?_37, ?_40
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emberAfPluginNetworkCreatorChannelMaskCommand, ?_37, ?_85
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emberAfPluginNetworkCreatorChannelMaskCommand, ?_37, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    654            emberCommandEntryActionWithDetails("add", emberAfPluginNetworkCreatorChannelMaskCommand, "uw", "Add a channel to the channel mask of choice.", pluginNetworkCreatorMaskAddCommandArguments),
    655            emberCommandEntryActionWithDetails("set", emberAfPluginNetworkCreatorChannelMaskCommand, "uw", "Set a channel mask.", pluginNetworkCreatorMaskSetCommandArguments),
    656            emberCommandEntryActionWithDetails("subtract", emberAfPluginNetworkCreatorChannelMaskCommand, "uw", "Subtract a channel from the channel mask of choice.", pluginNetworkCreatorMaskSubtractCommandArguments),
    657            emberCommandEntryTerminator(),
    658          };
    659          void emberAfPluginNetworkCreatorStartCommand(void);
    660          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    661          static const char * const pluginNetworkCreatorStartCommandArguments[] = {
    662            "Whether or not to form a centralized networ ...",
    663            NULL
    664          };
    665          #endif
    666          
    667          
    668          void emberAfPluginNetworkCreatorStatusCommand(void);
    669          void emberAfPluginNetworkCreatorStop(void);

   \                                 In section .rodata, align 4
    670          static EmberCommandEntry emberCommandPluginNetworkCreatorTable[] = {
   \                     emberCommandPluginNetworkCreatorTable:
   \        0x0   0x....'....        DC32 ?_26, emberAfPluginNetworkCreatorFormCommand, ?_86, ?_87, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandPluginNetworkCreatorMaskTable, ?_88
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emberAfPluginNetworkCreatorStartCommand, ?_7, ?_9
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emberAfPluginNetworkCreatorStatusCommand, ?_4, ?_89
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emberAfPluginNetworkCreatorStop, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    671            emberCommandEntryActionWithDetails("form", emberAfPluginNetworkCreatorFormCommand, "uvsu", "Form a network with specified parameters.", pluginNetworkCreatorFormCommandArguments),
    672            emberCommandEntrySubMenu("mask", emberCommandPluginNetworkCreatorMaskTable, ""),
    673            emberCommandEntryActionWithDetails("start", emberAfPluginNetworkCreatorStartCommand, "u", "Starts the network formation process.", pluginNetworkCreatorStartCommandArguments),
    674            emberCommandEntryActionWithDetails("status", emberAfPluginNetworkCreatorStatusCommand, "", "Print the status of the network-creator plugin.", NULL),
    675            emberCommandEntryActionWithDetails("stop", emberAfPluginNetworkCreatorStop, "", "Stops the network formation process.", NULL),
    676            emberCommandEntryTerminator(),
    677          };
    678          void emAfPluginNetworkCreatorSecurityClearJoiningLinkKeyCommand(void);
    679          void emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand(void);
    680          void emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand(void);
    681          void emAfPluginNetworkCreatorSecurityOpenNetworkWithKeyCommand(void);
    682          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    683          static const char * const pluginNetworkCreatorSecurityOpenWithKeyCommandArguments[] = {
    684            "The EUI64 of the joining device.",
    685            "The link key that the joining device will use to enter the network.",
    686            NULL
    687          };
    688          #endif
    689          
    690          
    691          void emAfPluginNetworkCreatorSecurityConfigureDistributedKey(void);
    692          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    693          static const char * const pluginNetworkCreatorSecuritySetDistributedKeyCommandArguments[] = {
    694            "The preconfigured distributed key that the joining device will use to  ...",
    695            NULL
    696          };
    697          #endif
    698          
    699          
    700          void emAfPluginNetworkCreatorSecuritySetJoiningLinkKeyCommand(void);
    701          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    702          static const char * const pluginNetworkCreatorSecuritySetJoiningLinkKeyCommandArguments[] = {
    703            "The EUI64 of the joining device.",
    704            "The link key that the joining device will use to enter the network.",
    705            NULL
    706          };
    707          #endif
    708          
    709          

   \                                 In section .rodata, align 4
    710          static EmberCommandEntry emberCommandPluginNetworkCreatorSecurityTable[] = {
   \                     emberCommandPluginNetworkCreatorSecurityTable:
   \        0x0   0x....'....        DC32 ?_90, emAfPluginNetworkCreatorSecurityClearJoiningLinkKeyCommand
   \              0x....'....  
   \        0x8   0x....'....        DC32 ?_4, ?_91
   \              0x....'....  
   \       0x10   0x....'....        DC32 emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand, ?_4
   \              0x....'....  
   \       0x18   0x....'....        DC32 ?_92, emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand
   \              0x....'....  
   \       0x20   0x....'....        DC32 ?_4, ?_93
   \              0x....'....  
   \       0x28   0x....'....        DC32 emAfPluginNetworkCreatorSecurityOpenNetworkWithKeyCommand, ?_94
   \              0x....'....  
   \       0x30   0x....'....        DC32 ?_95, emAfPluginNetworkCreatorSecurityConfigureDistributedKey, ?_1
   \              0x....'....  
   \              0x....'....  
   \       0x3C   0x....'....        DC32 ?_96, emAfPluginNetworkCreatorSecuritySetJoiningLinkKeyCommand
   \              0x....'....  
   \       0x44   0x....'....        DC32 ?_94, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    711            emberCommandEntryActionWithDetails("clear-joining-link-keys", emAfPluginNetworkCreatorSecurityClearJoiningLinkKeyCommand, "", "Clear all of the joining link keys stored in the stack.", NULL),
    712            emberCommandEntryActionWithDetails("close-network", emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand, "", "Close the network for joining.", NULL),
    713            emberCommandEntryActionWithDetails("open-network", emAfPluginNetworkCreatorSecurityOpenOrCloseNetworkCommand, "", "Open the network for joining.", NULL),
    714            emberCommandEntryActionWithDetails("open-with-key", emAfPluginNetworkCreatorSecurityOpenNetworkWithKeyCommand, "bb", "Open the network that would only allow the node with specified EUI and ...", pluginNetworkCreatorSecurityOpenWithKeyCommandArguments),
    715            emberCommandEntryActionWithDetails("set-distributed-key", emAfPluginNetworkCreatorSecurityConfigureDistributedKey, "b", "Set the TC Link key for a distributed network", pluginNetworkCreatorSecuritySetDistributedKeyCommandArguments),
    716            emberCommandEntryActionWithDetails("set-joining-link-key", emAfPluginNetworkCreatorSecuritySetJoiningLinkKeyCommand, "bb", "Set the link key that a specific joining device will use when joining  ...", pluginNetworkCreatorSecuritySetJoiningLinkKeyCommandArguments),
    717            emberCommandEntryTerminator(),
    718          };
    719          void emberAfPluginNetworkSteeringChannelAddOrSubtractCommand(void);
    720          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    721          static const char * const pluginNetworkSteeringMaskAddCommandArguments[] = {
    722            "The channel mask to add a channel to.",
    723            "The channel to add to the mask.",
    724            NULL
    725          };
    726          #endif
    727          
    728          
    729          void emberAfPluginNetworkSteeringChannelSetCommand(void);
    730          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    731          static const char * const pluginNetworkSteeringMaskSetCommandArguments[] = {
    732            "The channel mask to subtract the channel from.",
    733            "The value to set the channel mask to.",
    734            NULL
    735          };
    736          #endif
    737          
    738          
    739          void emberAfPluginNetworkSteeringChannelAddOrSubtractCommand(void);
    740          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    741          static const char * const pluginNetworkSteeringMaskSubtractCommandArguments[] = {
    742            "The channel mask to subtract the channel from.",
    743            "The channel to subtract the mask from.",
    744            NULL
    745          };
    746          #endif
    747          
    748          

   \                                 In section .rodata, align 4
    749          static EmberCommandEntry emberCommandPluginNetworkSteeringMaskTable[] = {
   \                     emberCommandPluginNetworkSteeringMaskTable:
   \        0x0   0x....'....        DC32 ?_84, emberAfPluginNetworkSteeringChannelAddOrSubtractCommand
   \              0x....'....  
   \        0x8   0x....'....        DC32 ?_48, ?_40, emberAfPluginNetworkSteeringChannelSetCommand, ?_37
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x18   0x....'....        DC32 ?_85, emberAfPluginNetworkSteeringChannelAddOrSubtractCommand
   \              0x....'....  
   \       0x20   0x....'....        DC32 ?_48, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    750            emberCommandEntryActionWithDetails("add", emberAfPluginNetworkSteeringChannelAddOrSubtractCommand, "uu", "Adds a channel to either the primary or secondary channel mask of the  ...", pluginNetworkSteeringMaskAddCommandArguments),
    751            emberCommandEntryActionWithDetails("set", emberAfPluginNetworkSteeringChannelSetCommand, "uw", "Set either the primary or secondary channel mask.", pluginNetworkSteeringMaskSetCommandArguments),
    752            emberCommandEntryActionWithDetails("subtract", emberAfPluginNetworkSteeringChannelAddOrSubtractCommand, "uu", "Subtracts a channel from either the primary or secondary channel mask  ...", pluginNetworkSteeringMaskSubtractCommandArguments),
    753            emberCommandEntryTerminator(),
    754          };
    755          void emberAfPluginNetworkSteeringSetPreconfiguredKeyCommand(void);
    756          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    757          static const char * const pluginNetworkSteeringPreConfiguredKeySetCommandArguments[] = {
    758            "Set the preconfigured key so that the joining device can enter the net ...",
    759            NULL
    760          };
    761          #endif
    762          
    763          
    764          void emberAfPluginNetworkSteeringStartCommand(void);
    765          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    766          static const char * const pluginNetworkSteeringStartCommandArguments[] = {
    767            "A mask of options for indicating specific behavior within the network- ...",
    768            NULL
    769          };
    770          #endif
    771          
    772          
    773          void emberAfPluginNetworkSteeringStatusCommand(void);
    774          void emberAfPluginNetworkSteeringStopCommand(void);

   \                                 In section .rodata, align 4
    775          static EmberCommandEntry emberCommandPluginNetworkSteeringTable[] = {
   \                     emberCommandPluginNetworkSteeringTable:
   \        0x0   0x....'....        DC32 ?_87, 0H, emberCommandPluginNetworkSteeringMaskTable, ?_97
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emberAfPluginNetworkSteeringSetPreconfiguredKeyCommand, ?_1, ?_88
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emberAfPluginNetworkSteeringStartCommand, ?_7, ?_9
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emberAfPluginNetworkSteeringStatusCommand, ?_4, ?_89
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emberAfPluginNetworkSteeringStopCommand, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    776            emberCommandEntrySubMenu("mask", emberCommandPluginNetworkSteeringMaskTable, ""),
    777            emberCommandEntryActionWithDetails("pre-configured-key-set", emberAfPluginNetworkSteeringSetPreconfiguredKeyCommand, "b", "Set the pre-configured key", pluginNetworkSteeringPreConfiguredKeySetCommandArguments),
    778            emberCommandEntryActionWithDetails("start", emberAfPluginNetworkSteeringStartCommand, "u", "Starts the network steering process.", pluginNetworkSteeringStartCommandArguments),
    779            emberCommandEntryActionWithDetails("status", emberAfPluginNetworkSteeringStatusCommand, "", "Displays the current status of the network steering process.", NULL),
    780            emberCommandEntryActionWithDetails("stop", emberAfPluginNetworkSteeringStopCommand, "", "Stops the network steering process.", NULL),
    781            emberCommandEntryTerminator(),
    782          };
    783          void emAfPluginReportingCliAdd(void);
    784          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    785          static const char * const pluginReportingAddCommandArguments[] = {
    786            "The local endpoint from which the attribute is reported.",
    787            "The cluster where the attribute is located.",
    788            "The id of the attribute being reported.",
    789            "0 for client-side attributes or 1 for server-side attributes.",
    790            "The minimum reporting interval, measured in seconds.",
    791            "The maximum reporting interval, measured in seconds.",
    792            "The minimum change to the attribute that will result in a report being ...",
    793            NULL
    794          };
    795          #endif
    796          
    797          
    798          void emAfPluginReportingCliClear(void);
    799          void emAfPluginReportingCliClearLastReportTime(void);
    800          void emAfPluginReportingCliPrint(void);
    801          void emAfPluginReportingCliRemove(void);
    802          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    803          static const char * const pluginReportingRemoveCommandArguments[] = {
    804            "The index of the report to be removed.",
    805            NULL
    806          };
    807          #endif
    808          
    809          

   \                                 In section .rodata, align 4
    810          static EmberCommandEntry emberCommandPluginReportingTable[] = {
   \                     emberCommandPluginReportingTable:
   \        0x0   0x....'....        DC32 ?_84, emAfPluginReportingCliAdd, ?_98, ?_18
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emAfPluginReportingCliClear, ?_4, ?_99
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 emAfPluginReportingCliClearLastReportTime, ?_4, ?_12
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 emAfPluginReportingCliPrint, ?_4, ?_100
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 emAfPluginReportingCliRemove, ?_7, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    811            emberCommandEntryActionWithDetails("add", emAfPluginReportingCliAdd, "uvvuvvw", "Add a new entry to the report table.", pluginReportingAddCommandArguments),
    812            emberCommandEntryActionWithDetails("clear", emAfPluginReportingCliClear, "", "Clear all entries from the report table.", NULL),
    813            emberCommandEntryActionWithDetails("clear-last-report-time", emAfPluginReportingCliClearLastReportTime, "", "Clear last report time of attributes.", NULL),
    814            emberCommandEntryActionWithDetails("print", emAfPluginReportingCliPrint, "", "Print the report table.", NULL),
    815            emberCommandEntryActionWithDetails("remove", emAfPluginReportingCliRemove, "u", "Remove an entry from the report table.", pluginReportingRemoveCommandArguments),
    816            emberCommandEntryTerminator(),
    817          };
    818          void emAfPluginScenesServerClear(void);
    819          void emAfPluginScenesServerPrintInfo(void);

   \                                 In section .rodata, align 4
    820          static EmberCommandEntry emberCommandPluginScenesTable[] = {
   \                     emberCommandPluginScenesTable:
   \        0x0   0x....'....        DC32 ?_18, emAfPluginScenesServerClear, ?_4, ?_12
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 emAfPluginScenesServerPrintInfo, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    821            emberCommandEntryActionWithDetails("clear", emAfPluginScenesServerClear, "", "Clear the scenes table on every endpoint.", NULL),
    822            emberCommandEntryActionWithDetails("print", emAfPluginScenesServerPrintInfo, "", "Print information about the contents of the scenes table.", NULL),
    823            emberCommandEntryTerminator(),
    824          };
    825          void emberAfPluginSetTCLinkKeyUpdateTimerCommand(void);
    826          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    827          static const char * const pluginUpdateTcLinkKeyTimerCommandArguments[] = {
    828            "The amount of time between subsequent trust center link key updates in ...",
    829            NULL
    830          };
    831          #endif
    832          
    833          

   \                                 In section .rodata, align 4
    834          static EmberCommandEntry emberCommandPluginUpdateTcLinkKeyTable[] = {
   \                     emberCommandPluginUpdateTcLinkKeyTable:
   \        0x0   0x....'....        DC32 ?_101, emberAfPluginSetTCLinkKeyUpdateTimerCommand, ?_75, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \       0x14   0x0000'0000        DC32 0H
    835            emberCommandEntryActionWithDetails("timer", emberAfPluginSetTCLinkKeyUpdateTimerCommand, "w", "This sets the the amount of time between subsequent trust center link  ...", pluginUpdateTcLinkKeyTimerCommandArguments),
    836            emberCommandEntryTerminator(),
    837          };
    838          void abortTouchLink(void);
    839          void cancelRxOn(void);
    840          void setScanChannel(void);
    841          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    842          static const char * const pluginZllCommissioningChannelCommandArguments[] = {
    843            "The primary channel to be used.",
    844            NULL
    845          };
    846          #endif
    847          
    848          
    849          void disable(void);
    850          void enable(void);
    851          void getEndpointListRequest(void);
    852          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    853          static const char * const pluginZllCommissioningEndpointsCommandArguments[] = {
    854            "The network address of the device to which the request will be sent.",
    855            "The source endpoint from which the request will be sent.",
    856            "The destination endpoint to which the request will be sent.",
    857            "The endpoint index at which to start retreiving data.",
    858            NULL
    859          };
    860          #endif
    861          
    862          
    863          void formNetwork(void);
    864          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    865          static const char * const pluginZllCommissioningFormCommandArguments[] = {
    866            "The channel on which to form the network.",
    867            "The power setting for network transmissions.",
    868            "The PAN identifier for the network.",
    869            NULL
    870          };
    871          #endif
    872          
    873          
    874          void getGroupIdentifiersRequest(void);
    875          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    876          static const char * const pluginZllCommissioningGroupsCommandArguments[] = {
    877            "The network address of the device to which the request will be sent.",
    878            "The source endpoint from which the request will be sent.",
    879            "The destination endpoint to which the request will be sent.",
    880            "The group table index at which to start retreiving data.",
    881            NULL
    882          };
    883          #endif
    884          
    885          
    886          void setIdentifyDuration(void);
    887          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    888          static const char * const pluginZllCommissioningIdentifyCommandArguments[] = {
    889            "The duration (in tenths of a second) of identify mode or 0xFFFF to ind ...",
    890            NULL
    891          };
    892          #endif
    893          
    894          
    895          void endpointInformation(void);
    896          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    897          static const char * const pluginZllCommissioningInfoCommandArguments[] = {
    898            "The network address of the device to which the request will be sent.",
    899            "The source endpoint from which the request will be sent.",
    900            "The destination endpoint to which the request will be sent.",
    901            NULL
    902          };
    903          #endif
    904          
    905          
    906          void joinable(void);
    907          void initiateTouchLink(void);
    908          void setScanMask(void);
    909          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    910          static const char * const pluginZllCommissioningMaskCommandArguments[] = {
    911            "The index of the channel mask to be used.",
    912            NULL
    913          };
    914          #endif
    915          
    916          
    917          void noTouchlinkForNFN(void);
    918          void emberAfZllResetToFactoryNew(void);
    919          void rxOnStatus(void);
    920          void scanTouchLink(void);
    921          void scanTouchLink(void);
    922          void scanTouchLink(void);

   \                                 In section .rodata, align 4
    923          static EmberCommandEntry emberCommandPluginZllCommissioningScanTable[] = {
   \                     emberCommandPluginZllCommissioningScanTable:
   \        0x0   0x....'....        DC32 ?_102, scanTouchLink, ?_4, ?_103, scanTouchLink, ?_4, ?_104
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 scanTouchLink, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    924            emberCommandEntryActionWithDetails("device", scanTouchLink, "", "Initiate a touch link for the purpose of retrieving information about  ...", NULL),
    925            emberCommandEntryActionWithDetails("identify", scanTouchLink, "", "Initiate a touch link for the purpose of causing a target device to id ...", NULL),
    926            emberCommandEntryActionWithDetails("reset", scanTouchLink, "", "Initiate a touch link for the purpose of resetting a target device.", NULL),
    927            emberCommandEntryTerminator(),
    928          };
    929          void setSecondaryScanChannel(void);
    930          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    931          static const char * const pluginZllCommissioningSecondaryChannelCommandArguments[] = {
    932            "The secondary channel to be used.",
    933            NULL
    934          };
    935          #endif
    936          
    937          
    938          void setRxOn(void);
    939          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
    940          static const char * const pluginZllCommissioningSetRxOnCommandArguments[] = {
    941            "The duration for the Rx On period.",
    942            NULL
    943          };
    944          #endif
    945          
    946          
    947          void statusCommand(void);
    948          void printZllTokens(void);
    949          void unused(void);

   \                                 In section .rodata, align 4
    950          static EmberCommandEntry emberCommandPluginZllCommissioningTable[] = {
   \                     emberCommandPluginZllCommissioningTable:
   \        0x0   0x....'....        DC32 ?_105, abortTouchLink, ?_4, ?_106, cancelRxOn, ?_4, ?_107
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 setScanChannel, ?_7, ?_10, disable, ?_4, ?_11, enable, ?_4, ?_108
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x40   0x....'....        DC32 getEndpointListRequest, ?_109, ?_26, formNetwork, ?_27, ?_110
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 getGroupIdentifiersRequest, ?_109, ?_103, setIdentifyDuration
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x68   0x....'....        DC32 ?_46, ?_111, endpointInformation, ?_112, ?_20, joinable, ?_4, ?_0
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x88   0x....'....        DC32 initiateTouchLink, ?_4, ?_87, setScanMask, ?_7, ?_113
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xA0   0x....'....        DC32 noTouchlinkForNFN, ?_4, ?_104, emberAfZllResetToFactoryNew, ?_4
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xB4   0x....'....        DC32 ?_114, rxOnStatus, ?_4, ?_115, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0xC8   0x....'....        DC32 emberCommandPluginZllCommissioningScanTable, ?_116
   \              0x....'....  
   \       0xD0   0x....'....        DC32 setSecondaryScanChannel, ?_7, ?_117, setRxOn, ?_75, ?_9
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xE8   0x....'....        DC32 statusCommand, ?_4, ?_118, printZllTokens, ?_4, ?_21, unused, ?_4
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \      0x108   0x0000'0000        DC32 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
    951            emberCommandEntryActionWithDetails("abort", abortTouchLink, "", "Abort the touch link procedure.", NULL),
    952            emberCommandEntryActionWithDetails("cancel-rx-on", cancelRxOn, "", "Cancel Rx On When Idle.", NULL),
    953            emberCommandEntryActionWithDetails("channel", setScanChannel, "u", "Set the scan channel used by the ZLL Commissioning plugin.", pluginZllCommissioningChannelCommandArguments),
    954            emberCommandEntryActionWithDetails("disable", disable, "", "Disable touchlinking. This will override the notouchlink-nfn command.", NULL),
    955            emberCommandEntryActionWithDetails("enable", enable, "", "Enable touchlinking. This will override the notouchlink-nfn command.", NULL),
    956            emberCommandEntryActionWithDetails("endpoints", getEndpointListRequest, "vuuu", "Send a GetEndpointListRequest to a server.", pluginZllCommissioningEndpointsCommandArguments),
    957            emberCommandEntryActionWithDetails("form", formNetwork, "usv", "Form a ZLL network.", pluginZllCommissioningFormCommandArguments),
    958            emberCommandEntryActionWithDetails("groups", getGroupIdentifiersRequest, "vuuu", "Send a GroupIdentifiersRequest to a server.", pluginZllCommissioningGroupsCommandArguments),
    959            emberCommandEntryActionWithDetails("identify", setIdentifyDuration, "v", "Set the duration that a target device should remain in identify mode d ...", pluginZllCommissioningIdentifyCommandArguments),
    960            emberCommandEntryActionWithDetails("info", endpointInformation, "vuu", "Send an EndpointInformationRequest to a client.", pluginZllCommissioningInfoCommandArguments),
    961            emberCommandEntryActionWithDetails("joinable", joinable, "", "Scan for joinable networks and attempt to join if a network is found.", NULL),
    962            emberCommandEntryActionWithDetails("link", initiateTouchLink, "", "Initiate the touch link procedure.", NULL),
    963            emberCommandEntryActionWithDetails("mask", setScanMask, "u", "Set the scan channel set used by the ZLL Commissioning plugi ...", pluginZllCommissioningMaskCommandArguments),
    964            emberCommandEntryActionWithDetails("notouchlink-nfn", noTouchlinkForNFN, "", "Disable touchlinking for NFN.", NULL),
    965            emberCommandEntryActionWithDetails("reset", emberAfZllResetToFactoryNew, "", "Reset the local device to factory new.", NULL),
    966            emberCommandEntryActionWithDetails("rx-on-active", rxOnStatus, "", "Get Rx On When Idle status.", NULL),
    967            emberCommandEntrySubMenu("scan", emberCommandPluginZllCommissioningScanTable, ""),
    968            emberCommandEntryActionWithDetails("secondary-channel", setSecondaryScanChannel, "u", "Set the scan channel used by the ZLL Commissioning plugin.", pluginZllCommissioningSecondaryChannelCommandArguments),
    969            emberCommandEntryActionWithDetails("set-rx-on", setRxOn, "w", "Set Rx On When Idle duration.", pluginZllCommissioningSetRxOnCommandArguments),
    970            emberCommandEntryActionWithDetails("status", statusCommand, "", "Print the ZLL channel set and tokens.", NULL),
    971            emberCommandEntryActionWithDetails("tokens", printZllTokens, "", "Print the ZLL tokens.", NULL),
    972            emberCommandEntryActionWithDetails("unused", unused, "", "Scan for an unused PAN identifier and form a new ZLL network.", NULL),
    973            emberCommandEntryTerminator(),
    974          };

   \                                 In section .rodata, align 4
    975          static EmberCommandEntry emberCommandPluginTable[] = {
   \                     emberCommandPluginTable:
   \        0x0   0x....'....        DC32 ?_119, 0H, emberCommandPluginCounterTable, ?_120, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandPluginCountersTable, ?_121, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x20   0x....'....        DC32 emberCommandPluginFindAndBindTable, ?_122, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x2C   0x....'....        DC32 emberCommandPluginGreenPowerClientTable, ?_123, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x38   0x....'....        DC32 emberCommandPluginGroupsServerTable, ?_103, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x44   0x....'....        DC32 emberCommandPluginIdentifyTable, ?_124, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x50   0x....'....        DC32 emberCommandPluginInterpanTable, ?_125, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x5C   0x....'....        DC32 emberCommandPluginNetworkCreatorTable, ?_126, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x68   0x....'....        DC32 emberCommandPluginNetworkCreatorSecurityTable, ?_127, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x74   0x....'....        DC32 emberCommandPluginNetworkSteeringTable, ?_128, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x80   0x....'....        DC32 emberCommandPluginReportingTable, ?_129, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x8C   0x....'....        DC32 emberCommandPluginScenesTable, ?_130, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x98   0x....'....        DC32 emberCommandPluginUpdateTcLinkKeyTable, ?_131, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0xA4   0x....'....        DC32 emberCommandPluginZllCommissioningTable, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    976            emberCommandEntrySubMenu("counter", emberCommandPluginCounterTable, ""),
    977            emberCommandEntrySubMenu("counters", emberCommandPluginCountersTable, ""),
    978            emberCommandEntrySubMenu("find-and-bind", emberCommandPluginFindAndBindTable, ""),
    979            emberCommandEntrySubMenu("green-power-client", emberCommandPluginGreenPowerClientTable, ""),
    980            emberCommandEntrySubMenu("groups-server", emberCommandPluginGroupsServerTable, ""),
    981            emberCommandEntrySubMenu("identify", emberCommandPluginIdentifyTable, ""),
    982            emberCommandEntrySubMenu("interpan", emberCommandPluginInterpanTable, ""),
    983            emberCommandEntrySubMenu("network-creator", emberCommandPluginNetworkCreatorTable, ""),
    984            emberCommandEntrySubMenu("network-creator-security", emberCommandPluginNetworkCreatorSecurityTable, ""),
    985            emberCommandEntrySubMenu("network-steering", emberCommandPluginNetworkSteeringTable, ""),
    986            emberCommandEntrySubMenu("reporting", emberCommandPluginReportingTable, ""),
    987            emberCommandEntrySubMenu("scenes", emberCommandPluginScenesTable, ""),
    988            emberCommandEntrySubMenu("update-tc-link-key", emberCommandPluginUpdateTcLinkKeyTable, ""),
    989            emberCommandEntrySubMenu("zll-commissioning", emberCommandPluginZllCommissioningTable, ""),
    990            emberCommandEntryTerminator(),
    991          };
    992          void emberAfPrintAttributeTable(void);
    993          void emberAfPrintEntropySource(void);

   \                                 In section .rodata, align 4
    994          static EmberCommandEntry emberCommandPrintEntropyTable[] = {
   \                     emberCommandPrintEntropyTable:
   \        0x0   0x....'....        DC32 ?_132, emberAfPrintEntropySource, ?_4, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
    995            emberCommandEntryActionWithDetails("source", emberAfPrintEntropySource, "", "Print the the entropy source that is used for true random number gener ...", NULL),
    996            emberCommandEntryTerminator(),
    997          };
    998          void printTimeCommand(void);

   \                                 In section .rodata, align 4
    999          static EmberCommandEntry emberCommandPrintTable[] = {
   \                     emberCommandPrintTable:
   \        0x0   0x....'....        DC32 ?_133, emberAfPrintAttributeTable, ?_4, ?_134, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandPrintEntropyTable, ?_135, printTimeCommand, ?_4, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x28   0x0000'0000        DC32 0H, 0H
   \              0x0000'0000  
   1000            emberCommandEntryActionWithDetails("attr", emberAfPrintAttributeTable, "", "Print the attribute table.", NULL),
   1001            emberCommandEntrySubMenu("entropy", emberCommandPrintEntropyTable, ""),
   1002            emberCommandEntryActionWithDetails("time", printTimeCommand, "", "Print out the time information", NULL),
   1003            emberCommandEntryTerminator(),
   1004          };
   1005          void emAfCliRawCommand(void);
   1006          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1007          static const char * const rawCommandArguments[] = {
   1008            "two byte cluster id",
   1009            "ZCL message, including ZCL header and payload",
   1010            NULL
   1011          };
   1012          #endif
   1013          
   1014          
   1015          void emAfCliReadCommand(void);
   1016          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1017          static const char * const readCommandArguments[] = {
   1018            "endpoint of the attribute to read",
   1019            "cluster id of the attribute to read",
   1020            "attribute id of the attribute to read",
   1021            "direction mask of the attribute to read (client=0 or server=1)",
   1022            NULL
   1023          };
   1024          #endif
   1025          
   1026          
   1027          void resetCommand(void);
   1028          void getSetMfgToken(void);
   1029          void getSetMfgToken(void);
   1030          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD) && !defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
   1031          static const char * const securityMfgTokenSetCommandArguments[] = {
   1032            "magic number",
   1033            "value",
   1034            NULL
   1035          };
   1036          #endif
   1037          
   1038          

   \                                 In section .rodata, align 4
   1039          static EmberCommandEntry emberCommandSecurityMfgTokenTable[] = {
   \                     emberCommandSecurityMfgTokenTable:
   \        0x0   0x....'....        DC32 ?_136, getSetMfgToken, ?_4, ?_40, getSetMfgToken, ?_68, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1040          #if !defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
   1041            emberCommandEntryActionWithDetails("get", getSetMfgToken, "", "", NULL),
   1042          #endif //!defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
   1043          #if !defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
   1044            emberCommandEntryActionWithDetails("set", getSetMfgToken, "wv", "", securityMfgTokenSetCommandArguments),
   1045          #endif //!defined(EMBER_AF_HAS_SECURITY_PROFILE_NONE)
   1046            emberCommandEntryTerminator(),
   1047          };

   \                                 In section .rodata, align 4
   1048          static EmberCommandEntry emberCommandSecurityTable[] = {
   \                     emberCommandSecurityTable:
   \        0x0   0x....'....        DC32 ?_137, 0H, emberCommandSecurityMfgTokenTable, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1049            emberCommandEntrySubMenu("mfg-token", emberCommandSecurityMfgTokenTable, ""),
   1050            emberCommandEntryTerminator(),
   1051          };
   1052          void emAfCliSendCommand(void);
   1053          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1054          static const char * const sendCommandArguments[] = {
   1055            "short id of the device to send the message to",
   1056            "The endpoint to send the message from",
   1057            "The endpoint to send the message to",
   1058            NULL
   1059          };
   1060          #endif
   1061          
   1062          
   1063          void emAfCliSendUsingMulticastBindingCommand(void);
   1064          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1065          static const char * const sendUsingMulticastBindingCommandArguments[] = {
   1066            "Whether to send via a multicast binding",
   1067            NULL
   1068          };
   1069          #endif
   1070          
   1071          
   1072          void emAfCliSendCommand(void);
   1073          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1074          static const char * const sendMulticastCommandArguments[] = {
   1075            "group id of the multicast group to send the message to",
   1076            "The endpoint to send the message from",
   1077            NULL
   1078          };
   1079          #endif
   1080          
   1081          
   1082          void emAfCliTimesyncCommand(void);
   1083          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1084          static const char * const timesyncCommandArguments[] = {
   1085            "two byte short id of the time server",
   1086            "source endpoint to send time sync from",
   1087            "destination endpoint to expect response on",
   1088            NULL
   1089          };
   1090          #endif
   1091          
   1092          
   1093          void emAfCliVersionCommand(void);
   1094          void emAfCliWriteCommand(void);
   1095          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1096          static const char * const writeCommandArguments[] = {
   1097            "endpoint of the attribute to write",
   1098            "cluster id of the attribute to write",
   1099            "attribute id of the attribute to write",
   1100            "direction mask of the attribute to write (client=0 or server=1)",
   1101            "the attribute type as listed in the generated file attribute-type.h",
   1102            "string of bytes you wish to write into the attribute table.",
   1103            NULL
   1104          };
   1105          #endif
   1106          
   1107          

   \                                 In section .text, align 2, keep-with-next
   1108          static void zclBasicGlsrCommand(void) {
   1109            zclSimpleServerCommand( ZCL_BASIC_CLUSTER_ID,
   1110                                    ZCL_GET_LOCALES_SUPPORTED_RESPONSE_COMMAND_ID);
   \                     zclBasicGlsrCommand: (+1)
   \        0x0   0x2201             MOVS     R2,#+1
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x2009             MOVS     R0,#+9
   \        0x6   0x....'....        B.W      zclSimpleCommand
   1111          }
   1112          
   1113          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1114          static const char * const zclBasicGlsrCommandArguments[] = {
   1115            "discovery complete",
   1116            "locale supported",
   1117            "",
   1118            NULL
   1119          };
   1120          #endif
   1121          
   1122          

   \                                 In section .rodata, align 4
   1123          static EmberCommandEntry emberCommandZclBasicTable[] = {
   \                     emberCommandZclBasicTable:
   \        0x0   0x....'....        DC32 ?_138, zclBasicGlsrCommand, ?_139, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1124            emberCommandEntryActionWithDetails("glsr", zclBasicGlsrCommand, "ub*", "The locales supported response command is sent in response to a get lo ...", zclBasicGlsrCommandArguments),
   1125            emberCommandEntryTerminator(),
   1126          };
   1127          void zclGlobalDirectionCommand(void);
   1128          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1129          static const char * const zclGlobalDirectionCommandArguments[] = {
   1130            "The direction for global commands, 0 = client to server, 1 = server to ...",
   1131            NULL
   1132          };
   1133          #endif
   1134          
   1135          
   1136          void zclGlobalCommandDiscoveryCommand(void);
   1137          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1138          static const char * const zclGlobalDiscComGenCommandArguments[] = {
   1139            "The cluster to find commands on.",
   1140            "The command id to start the command search on.",
   1141            "Max command ids to search for.",
   1142            NULL
   1143          };
   1144          #endif
   1145          
   1146          
   1147          void zclGlobalCommandDiscoveryCommand(void);
   1148          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1149          static const char * const zclGlobalDiscComRecCommandArguments[] = {
   1150            "The cluster to find commands on.",
   1151            "The command id to start the command search on.",
   1152            "Max command ids to search for.",
   1153            NULL
   1154          };
   1155          #endif
   1156          
   1157          
   1158          void zclGlobalDiscoverCommand(void);
   1159          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1160          static const char * const zclGlobalDiscoverCommandArguments[] = {
   1161            "The cluster id of the cluster to discover.",
   1162            "The attribute id of the attribute to read during discovery.",
   1163            "Max number of discovery responses.",
   1164            NULL
   1165          };
   1166          #endif
   1167          
   1168          
   1169          void zclGlobalExpectReportFromMeCommand(void);
   1170          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1171          static const char * const zclGlobalExpectReportFromMeCommandArguments[] = {
   1172            "The cluster id for the requested report.",
   1173            "The attribute id for the requested report.",
   1174            "Maximum amount of time between reports.",
   1175            NULL
   1176          };
   1177          #endif
   1178          
   1179          
   1180          void zclGlobalWriteCommand(void);
   1181          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1182          static const char * const zclGlobalNwriteCommandArguments[] = {
   1183            "The cluster id of the cluster to read from.",
   1184            "The attribute id of the attribute to read.",
   1185            "The type of the attribute to write.",
   1186            "The data to be written.",
   1187            NULL
   1188          };
   1189          #endif
   1190          
   1191          
   1192          void zclGlobalReadCommand(void);
   1193          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1194          static const char * const zclGlobalReadCommandArguments[] = {
   1195            "The cluster id of the cluster to read from.",
   1196            "The attribute id of the attribute to read.",
   1197            NULL
   1198          };
   1199          #endif
   1200          
   1201          
   1202          void zclGlobalReportCommand(void);
   1203          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1204          static const char * const zclGlobalReportCommandArguments[] = {
   1205            "The desired endpoint.",
   1206            "The cluster id.",
   1207            "The attribute id.",
   1208            "The mask.",
   1209            NULL
   1210          };
   1211          #endif
   1212          
   1213          
   1214          void zclGlobalReportReadCommand(void);
   1215          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1216          static const char * const zclGlobalReportReadCommandArguments[] = {
   1217            "The cluster id to read from.",
   1218            "The attribute id to read from.",
   1219            "0 for client-to-server, 1 for server-to-client.",
   1220            NULL
   1221          };
   1222          #endif
   1223          
   1224          
   1225          void zclGlobalSendMeAReportCommand(void);
   1226          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1227          static const char * const zclGlobalSendMeAReportCommandArguments[] = {
   1228            "The cluster id of the requested report.",
   1229            "The attribute id for requested report.",
   1230            "The two byte ZigBee type value for the requested report.",
   1231            "Minimum number of seconds between reports.",
   1232            "Maximum number of seconds between reports.",
   1233            "Amount of change to trigger a report.",
   1234            NULL
   1235          };
   1236          #endif
   1237          
   1238          
   1239          void zclGlobalWriteCommand(void);
   1240          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1241          static const char * const zclGlobalUwriteCommandArguments[] = {
   1242            "The cluster id of the cluster to write to.",
   1243            "The attribute id of the attribute to write.",
   1244            "The type of the attribute to write.",
   1245            "The data to be written.",
   1246            NULL
   1247          };
   1248          #endif
   1249          
   1250          
   1251          void zclGlobalWriteCommand(void);
   1252          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1253          static const char * const zclGlobalWriteCommandArguments[] = {
   1254            "The cluster id of the cluster to write to.",
   1255            "The attribute id of the attribute to write.",
   1256            "The type of the attribute to write.",
   1257            "The data to be written.",
   1258            NULL
   1259          };
   1260          #endif
   1261          
   1262          

   \                                 In section .rodata, align 4
   1263          static EmberCommandEntry emberCommandZclGlobalTable[] = {
   \                     emberCommandZclGlobalTable:
   \        0x0   0x....'....        DC32 ?_140, zclGlobalDirectionCommand, ?_7, ?_141
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 zclGlobalCommandDiscoveryCommand, ?_112, ?_142
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 zclGlobalCommandDiscoveryCommand, ?_112, ?_143
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 zclGlobalDiscoverCommand, ?_144, ?_145
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 zclGlobalExpectReportFromMeCommand, ?_14, ?_146
   \              0x....'....  
   \              0x....'....  
   \       0x40   0x....'....        DC32 zclGlobalWriteCommand, ?_147, ?_148, zclGlobalReadCommand, ?_52
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x54   0x....'....        DC32 ?_149, zclGlobalReportCommand, ?_150, ?_151
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x64   0x....'....        DC32 zclGlobalReportReadCommand, ?_144, ?_152
   \              0x....'....  
   \              0x....'....  
   \       0x70   0x....'....        DC32 zclGlobalSendMeAReportCommand, ?_153, ?_154, zclGlobalWriteCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x80   0x....'....        DC32 ?_147, ?_155, zclGlobalWriteCommand, ?_156, 0H, 0H, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1264            emberCommandEntryActionWithDetails("direction", zclGlobalDirectionCommand, "u", "Sets the direction for global commands, either client to server or ser ...", zclGlobalDirectionCommandArguments),
   1265            emberCommandEntryActionWithDetails("disc-com-gen", zclGlobalCommandDiscoveryCommand, "vuu", "Create a Discover Commands Generated command with associated values.", zclGlobalDiscComGenCommandArguments),
   1266            emberCommandEntryActionWithDetails("disc-com-rec", zclGlobalCommandDiscoveryCommand, "vuu", "Create a Discover Commands Received command with associated values.", zclGlobalDiscComRecCommandArguments),
   1267            emberCommandEntryActionWithDetails("discover", zclGlobalDiscoverCommand, "vvu", "Creates discovery message for devices with the associated cluster and  ...", zclGlobalDiscoverCommandArguments),
   1268            emberCommandEntryActionWithDetails("expect-report-from-me", zclGlobalExpectReportFromMeCommand, "vvv", "Create a expect-report-from-me message with associated values.", zclGlobalExpectReportFromMeCommandArguments),
   1269            emberCommandEntryActionWithDetails("nwrite", zclGlobalWriteCommand, "vvub", "Creates a global write command message to write to the cluster and att ...", zclGlobalNwriteCommandArguments),
   1270            emberCommandEntryActionWithDetails("read", zclGlobalReadCommand, "vv", "Creates a global read command message to read from the cluster and att ...", zclGlobalReadCommandArguments),
   1271            emberCommandEntryActionWithDetails("report", zclGlobalReportCommand, "uvvu", "", zclGlobalReportCommandArguments),
   1272            emberCommandEntryActionWithDetails("report-read", zclGlobalReportReadCommand, "vvu", "Creates a global read reporting command for the associated cluster, at ...", zclGlobalReportReadCommandArguments),
   1273            emberCommandEntryActionWithDetails("send-me-a-report", zclGlobalSendMeAReportCommand, "vvuvvb", "Creates a global send me a report command for the associated values.", zclGlobalSendMeAReportCommandArguments),
   1274            emberCommandEntryActionWithDetails("uwrite", zclGlobalWriteCommand, "vvub", "Creates a global write undivided command message to write to the clust ...", zclGlobalUwriteCommandArguments),
   1275            emberCommandEntryActionWithDetails("write", zclGlobalWriteCommand, "vvwb", "Creates a global write command message to write to the cluster and att ...", zclGlobalWriteCommandArguments),
   1276            emberCommandEntryTerminator(),
   1277          };
   1278          void zclIdentifyOnOffCommand(void);
   1279          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1280          static const char * const zclIdentifyOffCommandArguments[] = {
   1281            "The endpoint on which to stop identifying",
   1282            NULL
   1283          };
   1284          #endif
   1285          
   1286          
   1287          void zclIdentifyOnOffCommand(void);
   1288          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1289          static const char * const zclIdentifyOnCommandArguments[] = {
   1290            "The endpoint on the device which should begin identifying",
   1291            "The number of seconds to spend identifying",
   1292            NULL
   1293          };
   1294          #endif
   1295          
   1296          

   \                                 In section .rodata, align 4
   1297          static EmberCommandEntry emberCommandZclIdentifyTable[] = {
   \                     emberCommandZclIdentifyTable:
   \        0x0   0x....'....        DC32 ?_6, zclIdentifyOnOffCommand, ?_7, ?_8, zclIdentifyOnOffCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_64, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1298            emberCommandEntryActionWithDetails("off", zclIdentifyOnOffCommand, "u", "Writes the IdentifyTime attribute", zclIdentifyOffCommandArguments),
   1299            emberCommandEntryActionWithDetails("on", zclIdentifyOnOffCommand, "uv", "Writes the IdentifyTime attribute", zclIdentifyOnCommandArguments),
   1300            emberCommandEntryTerminator(),
   1301          };
   1302          void zclMfgCodeCommand(void);
   1303          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1304          static const char * const zclMfgCodeCommandArguments[] = {
   1305            "Manufacturer Specific Id",
   1306            NULL
   1307          };
   1308          #endif
   1309          
   1310          
   1311          void zclTestResponseOffCommand(void);
   1312          void zclTestResponseOnCommand(void);

   \                                 In section .rodata, align 4
   1313          static EmberCommandEntry emberCommandZclTestResponseTable[] = {
   \                     emberCommandZclTestResponseTable:
   \        0x0   0x....'....        DC32 ?_6, zclTestResponseOffCommand, ?_4, ?_8, zclTestResponseOnCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_4, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1314            emberCommandEntryActionWithDetails("off", zclTestResponseOffCommand, "", "Sets a flag so that the application framework WILL NOT respond to the  ...", NULL),
   1315            emberCommandEntryActionWithDetails("on", zclTestResponseOnCommand, "", "Sets a flag so that the application framework WILL respond to the next ...", NULL),
   1316            emberCommandEntryTerminator(),
   1317          };

   \                                 In section .rodata, align 4
   1318          static EmberCommandEntry emberCommandZclTestTable[] = {
   \                     emberCommandZclTestTable:
   \        0x0   0x....'....        DC32 ?_157, 0H, emberCommandZclTestResponseTable, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1319            emberCommandEntrySubMenu("response", emberCommandZclTestResponseTable, ""),
   1320            emberCommandEntryTerminator(),
   1321          };
   1322          void zclTimeCommand(void);
   1323          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1324          static const char * const zclTimeCommandArguments[] = {
   1325            "ZigBee UTC time, number of seconds since the year 2000",
   1326            NULL
   1327          };
   1328          #endif
   1329          
   1330          
   1331          void zclUseNextSequenceCommand(void);
   1332          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1333          static const char * const zclUseNextSequenceCommandArguments[] = {
   1334            "bool value indicating whether raw command will use the incremented seq ...",
   1335            NULL
   1336          };
   1337          #endif
   1338          
   1339          
   1340          void zclXDefaultRespCommand(void);
   1341          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1342          static const char * const zclXDefaultRespCommandArguments[] = {
   1343            "bool value indicating whether the disable default response bit is set( ...",
   1344            NULL
   1345          };
   1346          #endif
   1347          
   1348          

   \                                 In section .rodata, align 4
   1349          static EmberCommandEntry emberCommandZclTable[] = {
   \                     emberCommandZclTable:
   \        0x0   0x....'....        DC32 ?_158, 0H, emberCommandZclBasicTable, ?_159, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandZclGlobalTable, ?_103, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x20   0x....'....        DC32 emberCommandZclIdentifyTable, ?_160, zclMfgCodeCommand, ?_46
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x30   0x....'....        DC32 ?_161, 0H, emberCommandZclTestTable, ?_135, zclTimeCommand, ?_75
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x48   0x....'....        DC32 ?_162, zclUseNextSequenceCommand, ?_7, ?_163
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 zclXDefaultRespCommand, ?_7, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1350            emberCommandEntrySubMenu("basic", emberCommandZclBasicTable, ""),
   1351            emberCommandEntrySubMenu("global", emberCommandZclGlobalTable, ""),
   1352            emberCommandEntrySubMenu("identify", emberCommandZclIdentifyTable, ""),
   1353            emberCommandEntryActionWithDetails("mfg-code", zclMfgCodeCommand, "v", "Sets the two byte manufacturer specific identifier to use for the next ...", zclMfgCodeCommandArguments),
   1354            emberCommandEntrySubMenu("test", emberCommandZclTestTable, ""),
   1355            emberCommandEntryActionWithDetails("time", zclTimeCommand, "w", "Cli command to call emberAfSetTime function documented in af.h", zclTimeCommandArguments),
   1356            emberCommandEntryActionWithDetails("use-next-sequence", zclUseNextSequenceCommand, "u", "Sets the flag to use the incremented sequence number from the framewor ...", zclUseNextSequenceCommandArguments),
   1357            emberCommandEntryActionWithDetails("x-default-resp", zclXDefaultRespCommand, "u", "Sets the Disable Default Response Frame Control bit to use for the nex ...", zclXDefaultRespCommandArguments),
   1358            emberCommandEntryTerminator(),
   1359          };
   1360          void zdoActiveEpCommand(void);
   1361          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1362          static const char * const zdoActiveCommandArguments[] = {
   1363            "Two byte short id, destination for the active endpoint request",
   1364            NULL
   1365          };
   1366          #endif
   1367          
   1368          
   1369          void zdoBindCommand(void);
   1370          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1371          static const char * const zdoBindCommandArguments[] = {
   1372            "Two byte destination node id",
   1373            "Remote device's source endpoint to bind",
   1374            "Remote endpoint to bind",
   1375            "Cluster on which to bind",
   1376            "Remote node EUI64",
   1377            "Binding's dest EUI64.  Usually the local node's EUI64",
   1378            NULL
   1379          };
   1380          #endif
   1381          
   1382          
   1383          void zdoIeeeAddressRequestCommand(void);
   1384          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1385          static const char * const zdoIeeeCommandArguments[] = {
   1386            "Short address of the device for which a long address is requested",
   1387            NULL
   1388          };
   1389          #endif
   1390          
   1391          
   1392          void zdoAddClusterCommand(void);
   1393          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1394          static const char * const zdoInClListAddCommandArguments[] = {
   1395            "Server cluster id",
   1396            NULL
   1397          };
   1398          #endif
   1399          
   1400          
   1401          void zdoClearClusterCommand(void);

   \                                 In section .rodata, align 4
   1402          static EmberCommandEntry emberCommandZdoInClListTable[] = {
   \                     emberCommandZdoInClListTable:
   \        0x0   0x....'....        DC32 ?_84, zdoAddClusterCommand, ?_46, ?_18, zdoClearClusterCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_4, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1403            emberCommandEntryActionWithDetails("add", zdoAddClusterCommand, "v", "Add clusters to the known server (in) clusters on this device.", zdoInClListAddCommandArguments),
   1404            emberCommandEntryActionWithDetails("clear", zdoClearClusterCommand, "", "Clear the ZDO list of server (in) clusters.", NULL),
   1405            emberCommandEntryTerminator(),
   1406          };
   1407          void zdoLeaveRequestCommand(void);
   1408          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1409          static const char * const zdoLeaveCommandArguments[] = {
   1410            "Target node ID",
   1411            "Remove children",
   1412            "Rejoin after leave",
   1413            NULL
   1414          };
   1415          #endif
   1416          
   1417          
   1418          void zdoMatchCommand(void);
   1419          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1420          static const char * const zdoMatchCommandArguments[] = {
   1421            "Two byte node id indicating wher",
   1422            "Two byte profile id for the match descriptor request",
   1423            NULL
   1424          };
   1425          #endif
   1426          
   1427          
   1428          void zdoMgmtBindCommand(void);
   1429          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1430          static const char * const zdoMgmtBindCommandArguments[] = {
   1431            "Target node ID",
   1432            "Starting index into table query",
   1433            NULL
   1434          };
   1435          #endif
   1436          
   1437          
   1438          void zdoMgmtLqiCommand(void);
   1439          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1440          static const char * const zdoMgmtLqiCommandArguments[] = {
   1441            "Target node ID",
   1442            "Starting index into table query",
   1443            NULL
   1444          };
   1445          #endif
   1446          
   1447          
   1448          void zdoNodeCommand(void);
   1449          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1450          static const char * const zdoNodeCommandArguments[] = {
   1451            "Two byte address for the target device.",
   1452            NULL
   1453          };
   1454          #endif
   1455          
   1456          
   1457          void zdoNwkAddressRequestCommand(void);
   1458          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1459          static const char * const zdoNwkCommandArguments[] = {
   1460            "IEEE address for which a short address is being requested",
   1461            NULL
   1462          };
   1463          #endif
   1464          
   1465          
   1466          void zdoNetworkUpdateChannelCommand(void);
   1467          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1468          static const char * const zdoNwkUpdChanCommandArguments[] = {
   1469            "One byte channel to change to.",
   1470            NULL
   1471          };
   1472          #endif
   1473          
   1474          
   1475          void zdoNetworkUpdateChannelCommand(void);
   1476          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1477          static const char * const zdoNwkUpdChanPgCommandArguments[] = {
   1478            "One byte channel to change to.",
   1479            "One byte page to change to.",
   1480            NULL
   1481          };
   1482          #endif
   1483          
   1484          
   1485          void zdoNetworkUpdateScanCommand(void);
   1486          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1487          static const char * const zdoNwkUpdScanCommandArguments[] = {
   1488            "Two byte short id of the target device",
   1489            "One byte scan duration. Must be in range 0 - 5",
   1490            "Number of scans to perform. Must be in range 1 - 8",
   1491            NULL
   1492          };
   1493          #endif
   1494          
   1495          
   1496          void zdoNetworkUpdateScanCommand(void);
   1497          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1498          static const char * const zdoNwkUpdScanChanMaskCommandArguments[] = {
   1499            "Two byte short id of the target device",
   1500            "One byte scan duration. Must be in range 0 - 5",
   1501            "Number of scans to perform. Must be in range 1 - 8",
   1502            "Four byte channel mask",
   1503            NULL
   1504          };
   1505          #endif
   1506          
   1507          
   1508          void zdoNetworkUpdateSetCommand(void);
   1509          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1510          static const char * const zdoNwkUpdSetCommandArguments[] = {
   1511            "Two byte network manager id",
   1512            "Four byte channel mask",
   1513            NULL
   1514          };
   1515          #endif
   1516          
   1517          

   \                                 In section .rodata, align 4
   1518          static EmberCommandEntry emberCommandZdoNwkUpdTable[] = {
   \                     emberCommandZdoNwkUpdTable:
   \        0x0   0x....'....        DC32 ?_164, zdoNetworkUpdateChannelCommand, ?_7, ?_165
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x10   0x....'....        DC32 zdoNetworkUpdateChannelCommand, ?_48, ?_115
   \              0x....'....  
   \              0x....'....  
   \       0x1C   0x....'....        DC32 zdoNetworkUpdateScanCommand, ?_166, ?_167
   \              0x....'....  
   \              0x....'....  
   \       0x28   0x....'....        DC32 zdoNetworkUpdateScanCommand, ?_168, ?_40
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 zdoNetworkUpdateSetCommand, ?_169, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1519            emberCommandEntryActionWithDetails("chan", zdoNetworkUpdateChannelCommand, "u", "Sends an update channel request.", zdoNwkUpdChanCommandArguments),
   1520            emberCommandEntryActionWithDetails("chanPg", zdoNetworkUpdateChannelCommand, "uu", "Sends an update channel page reques ...", zdoNwkUpdChanPgCommandArguments),
   1521            emberCommandEntryActionWithDetails("scan", zdoNetworkUpdateScanCommand, "vuv", "Performs an energy scan.", zdoNwkUpdScanCommandArguments),
   1522            emberCommandEntryActionWithDetails("scan-chan-mask", zdoNetworkUpdateScanCommand, "vuvw", "Performs an energy scan on given channel mas ...", zdoNwkUpdScanChanMaskCommandArguments),
   1523            emberCommandEntryActionWithDetails("set", zdoNetworkUpdateSetCommand, "vw", "Broadcasts the ID of the new network manager and active channels.", zdoNwkUpdSetCommandArguments),
   1524            emberCommandEntryTerminator(),
   1525          };
   1526          void zdoAddClusterCommand(void);
   1527          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1528          static const char * const zdoOutClListAddCommandArguments[] = {
   1529            "Client cluster ids",
   1530            NULL
   1531          };
   1532          #endif
   1533          
   1534          
   1535          void zdoClearClusterCommand(void);

   \                                 In section .rodata, align 4
   1536          static EmberCommandEntry emberCommandZdoOutClListTable[] = {
   \                     emberCommandZdoOutClListTable:
   \        0x0   0x....'....        DC32 ?_84, zdoAddClusterCommand, ?_46, ?_18, zdoClearClusterCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_4, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1537            emberCommandEntryActionWithDetails("add", zdoAddClusterCommand, "v", "Add clusters to the known client (out) clusters on this device.", zdoOutClListAddCommandArguments),
   1538            emberCommandEntryActionWithDetails("clear", zdoClearClusterCommand, "", "Clear the ZDO list of client (out) clusters.", NULL),
   1539            emberCommandEntryTerminator(),
   1540          };
   1541          void zdoPowerDescriptorRequestCommand(void);
   1542          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1543          static const char * const zdoPowerCommandArguments[] = {
   1544            "Target node ID",
   1545            NULL
   1546          };
   1547          #endif
   1548          
   1549          
   1550          void zdoRouteRequestCommand(void);
   1551          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1552          static const char * const zdoRouteCommandArguments[] = {
   1553            "Target node ID",
   1554            "The index of the remote node's routing table to request.",
   1555            NULL
   1556          };
   1557          #endif
   1558          
   1559          
   1560          void zdoSimpleCommand(void);
   1561          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1562          static const char * const zdoSimpleCommandArguments[] = {
   1563            "Short address of the device where the simple descriptor request should ...",
   1564            "The endpoint on the target device where the simple descriptor request  ...",
   1565            NULL
   1566          };
   1567          #endif
   1568          
   1569          
   1570          void zdoUnbindGroupCommand(void);
   1571          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1572          static const char * const zdoUnbindGroupCommandArguments[] = {
   1573            "Target node ID",
   1574            "The source EUI64 of the binding (the remote device's EUI64)",
   1575            "The source endpoint of the binding.",
   1576            "The cluster ID to unbind.",
   1577            "The group address in the binding",
   1578            NULL
   1579          };
   1580          #endif
   1581          
   1582          
   1583          void zdoUnbindUnicastCommand(void);
   1584          #if defined(EMBER_COMMAND_INTEPRETER_HAS_DESCRIPTION_FIELD)
   1585          static const char * const zdoUnbindUnicastCommandArguments[] = {
   1586            "Target node ID",
   1587            "The source EUI64 of the binding (the remote device's EUI64)",
   1588            "The source endpoint of the binding.",
   1589            "The cluster ID to unbind.",
   1590            "The destination EUI64 in the binding (usually the local node's EUI64",
   1591            "The destination endpoint of the binding",
   1592            NULL
   1593          };
   1594          #endif
   1595          
   1596          

   \                                 In section .rodata, align 4
   1597          static EmberCommandEntry emberCommandZdoUnbindTable[] = {
   \                     emberCommandZdoUnbindTable:
   \        0x0   0x....'....        DC32 ?_13, zdoUnbindGroupCommand, ?_170, ?_171, zdoUnbindUnicastCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x14   0x....'....        DC32 ?_172, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1598            emberCommandEntryActionWithDetails("group", zdoUnbindGroupCommand, "vbuvv", "Sends an unbind request for a multicast binding to the target device.", zdoUnbindGroupCommandArguments),
   1599            emberCommandEntryActionWithDetails("unicast", zdoUnbindUnicastCommand, "vbuvbu", "Sends an unbind request for a unicast binding to the target device.", zdoUnbindUnicastCommandArguments),
   1600            emberCommandEntryTerminator(),
   1601          };

   \                                 In section .rodata, align 4
   1602          static EmberCommandEntry emberCommandZdoTable[] = {
   \                     emberCommandZdoTable:
   \        0x0   0x....'....        DC32 ?_173, zdoActiveEpCommand, ?_46, ?_174, zdoBindCommand, ?_175
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x18   0x....'....        DC32 ?_176, zdoIeeeAddressRequestCommand, ?_46, ?_177, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x2C   0x....'....        DC32 emberCommandZdoInClListTable, ?_31, zdoLeaveRequestCommand, ?_112
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x3C   0x....'....        DC32 ?_178, zdoMatchCommand, ?_52, ?_179, zdoMgmtBindCommand, ?_180
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x54   0x....'....        DC32 ?_181, zdoMgmtLqiCommand, ?_180, ?_182, zdoNodeCommand, ?_46
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x6C   0x....'....        DC32 ?_183, zdoNwkAddressRequestCommand, ?_1, ?_184, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x80   0x....'....        DC32 emberCommandZdoNwkUpdTable, ?_185, 0H
   \              0x....'....  
   \              0x0000'0000  
   \       0x8C   0x....'....        DC32 emberCommandZdoOutClListTable, ?_186
   \              0x....'....  
   \       0x94   0x....'....        DC32 zdoPowerDescriptorRequestCommand, ?_46, ?_187
   \              0x....'....  
   \              0x....'....  
   \       0xA0   0x....'....        DC32 zdoRouteRequestCommand, ?_180, ?_188, zdoSimpleCommand, ?_180
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xB4   0x....'....        DC32 ?_189, 0H, emberCommandZdoUnbindTable, 0H, 0H, 0H
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  
   1603            emberCommandEntryActionWithDetails("active", zdoActiveEpCommand, "v", "Send an active endpoint request to the device with the given short id.", zdoActiveCommandArguments),
   1604            emberCommandEntryActionWithDetails("bind", zdoBindCommand, "vuuvbb", "Send a ZDO Bind command to a device specified in the command arguments ...", zdoBindCommandArguments),
   1605            emberCommandEntryActionWithDetails("ieee", zdoIeeeAddressRequestCommand, "v", "Request an ieee address based on a given node id.", zdoIeeeCommandArguments),
   1606            emberCommandEntrySubMenu("in-cl-list", emberCommandZdoInClListTable, ""),
   1607            emberCommandEntryActionWithDetails("leave", zdoLeaveRequestCommand, "vuu", "Send a ZDO Management Leave command to the target device.", zdoLeaveCommandArguments),
   1608            emberCommandEntryActionWithDetails("match", zdoMatchCommand, "vv", "Sends a matchDescriptorsRequest to the given destination with the give ...", zdoMatchCommandArguments),
   1609            emberCommandEntryActionWithDetails("mgmt-bind", zdoMgmtBindCommand, "vu", "Send a ZDO MGMT-Bind (Binding Table) Request to the target device.", zdoMgmtBindCommandArguments),
   1610            emberCommandEntryActionWithDetails("mgmt-lqi", zdoMgmtLqiCommand, "vu", "Send a ZDO MGMT-LQI (LQI Table) Request to the target device.", zdoMgmtLqiCommandArguments),
   1611            emberCommandEntryActionWithDetails("node", zdoNodeCommand, "v", "Sends a node descriptor request to a given target device", zdoNodeCommandArguments),
   1612            emberCommandEntryActionWithDetails("nwk", zdoNwkAddressRequestCommand, "b", "Sends a network address request for the given IEEE address.", zdoNwkCommandArguments),
   1613            emberCommandEntrySubMenu("nwk-upd", emberCommandZdoNwkUpdTable, ""),
   1614            emberCommandEntrySubMenu("out-cl-list", emberCommandZdoOutClListTable, ""),
   1615            emberCommandEntryActionWithDetails("power", zdoPowerDescriptorRequestCommand, "v", "Send a ZDO Power Descriptor Request to the target device.", zdoPowerCommandArguments),
   1616            emberCommandEntryActionWithDetails("route", zdoRouteRequestCommand, "vu", "Send a ZDO route request command to the target.", zdoRouteCommandArguments),
   1617            emberCommandEntryActionWithDetails("simple", zdoSimpleCommand, "vu", "Sends out a simple descriptor request for the short address and endpoi ...", zdoSimpleCommandArguments),
   1618            emberCommandEntrySubMenu("unbind", emberCommandZdoUnbindTable, ""),
   1619            emberCommandEntryTerminator(),
   1620          };

   \                                 In section .rodata, align 4
   1621          EmberCommandEntry emberCommandTable[] = {
   \                     emberCommandTable:
   \        0x0   0x....'....        DC32 ?_190, emAfCliBsendCommand, ?_7, ?_191, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x14   0x....'....        DC32 emberCommandChangekeyTable, ?_192, 0H, emberCommandDebugprintTable
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \       0x24   0x....'....        DC32 ?_193, echoCommand, ?_7, ?_194, 0H, emberCommandEndpointTable
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \       0x3C   0x....'....        DC32 ?_195, printEvents, ?_4, ?_196, helpCommand, ?_4, ?_111
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 emAfCliInfoCommand, ?_4, ?_124, 0H, emberCommandInterpanTable
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \       0x6C   0x....'....        DC32 ?_197, 0H, emberCommandKeysTable, ?_198, printAllLibraryStatus
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x80   0x....'....        DC32 ?_4, ?_2, 0H, emberCommandNetworkTable, ?_199, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0x98   0x....'....        DC32 emberCommandOptionTable, ?_200, 0H, emberCommandPluginTable, ?_12
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \       0xAC   0x0000'0000        DC32 0H, emberCommandPrintTable, ?_201, emAfCliRawCommand, ?_202, ?_148
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xC4   0x....'....        DC32 emAfCliReadCommand, ?_150, ?_104, resetCommand, ?_4, ?_58, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \       0xE0   0x....'....        DC32 emberCommandSecurityTable, ?_203, emAfCliSendCommand, ?_112, ?_204
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0xF4   0x....'....        DC32 emAfCliSendUsingMulticastBindingCommand, ?_7, ?_205
   \              0x....'....  
   \              0x....'....  
   \      0x100   0x....'....        DC32 emAfCliSendCommand, ?_180, ?_206, emAfCliTimesyncCommand, ?_112
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \      0x114   0x....'....        DC32 ?_207, emAfCliVersionCommand, ?_4, ?_155, emAfCliWriteCommand
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \      0x128   0x....'....        DC32 ?_208, ?_209, 0H, emberCommandZclTable, ?_210, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
   \      0x140   0x....'....        DC32 emberCommandZdoTable, ?_211, 0H, emberAfCustomCommands, 0H, 0H, 0H
   \              0x....'....  
   \              0x0000'0000  
   \              0x....'....  
   \              0x0000'0000  
   \              0x0000'0000  
   \              0x0000'0000  

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x6C 0x69          DC8 "link"
   \              0x6E 0x6B    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 2
   \                     ?_1:
   \        0x0   0x62 0x00          DC8 "b"

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x6E 0x65          DC8 "network"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x61 0x6C          DC8 "all_off"
   \              0x6C 0x5F    
   \              0x6F 0x66    
   \              0x66 0x00    

   \                                 In section .rodata, align 1
   \                     ?_4:
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x61 0x6C          DC8 "all_on"
   \              0x6C 0x5F    
   \              0x6F 0x6E    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x6F 0x66          DC8 "off"
   \              0x66 0x00    

   \                                 In section .rodata, align 2
   \                     ?_7:
   \        0x0   0x75 0x00          DC8 "u"

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x6F 0x6E          DC8 "on"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x73 0x74          DC8 "status"
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x64 0x69          DC8 "disable"
   \              0x73 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x65 0x6E          DC8 "enable"
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x70 0x72          DC8 "print"
   \              0x69 0x6E    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x67 0x72          DC8 "group"
   \              0x6F 0x75    
   \              0x70 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x76 0x76          DC8 "vvv"
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x6C 0x6F          DC8 "long"
   \              0x6E 0x67    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x62 0x76          DC8 "bvvv"
   \              0x76 0x76    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x73 0x68          DC8 "short"
   \              0x6F 0x72    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x63 0x6C          DC8 "clear"
   \              0x65 0x61    
   \              0x72 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x64 0x65          DC8 "delete"
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x6A 0x6F          DC8 "joinable"
   \              0x69 0x6E    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x75 0x6E          DC8 "unused"
   \              0x75 0x73    
   \              0x65 0x64    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x62 0x72          DC8 "broad-pjoin"
   \              0x6F 0x61    
   \              0x64 0x2D    
   \              0x70 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x63 0x68          DC8 "change-channel"
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x2D 0x63    
   \              0x68 0x61    
   \              0x6E 0x6E    
   \              0x65 0x6C    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x65 0x78          DC8 "extpanid"
   \              0x74 0x70    
   \              0x61 0x6E    
   \              0x69 0x64    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x66 0x69          DC8 "find"
   \              0x6E 0x64    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x66 0x6F          DC8 "form"
   \              0x72 0x6D    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x75 0x73          DC8 "usv"
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x69 0x64          DC8 "id"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x69 0x6E          DC8 "init"
   \              0x69 0x74    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x6A 0x6F          DC8 "join"
   \              0x69 0x6E    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x6C 0x65          DC8 "leave"
   \              0x61 0x76    
   \              0x65 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x6D 0x75          DC8 "multi-phy-start"
   \              0x6C 0x74    
   \              0x69 0x2D    
   \              0x70 0x68    
   \              0x79 0x2D    
   \              0x73 0x74    
   \              0x61 0x72    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x75 0x75          DC8 "uus*"
   \              0x73 0x2A    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x6D 0x75          DC8 "multi-phy-stop"
   \              0x6C 0x74    
   \              0x69 0x2D    
   \              0x70 0x68    
   \              0x79 0x2D    
   \              0x73 0x74    
   \              0x6F 0x70    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x70 0x6A          DC8 "pjoin"
   \              0x6F 0x69    
   \              0x6E 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x72 0x65          DC8 "rejoin"
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x75 0x77          DC8 "uw"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x72 0x65          DC8 "rejoin-diff-device-type"
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x2D 0x64    
   \              0x69 0x66    
   \              0x66 0x2D    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x2D 0x74    
   \              0x79 0x70    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x75 0x77          DC8 "uwu"
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x73 0x65          DC8 "set"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x64 0x65          DC8 "default"
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x75 0x76          DC8 "uvuub"
   \              0x75 0x75    
   \              0x62 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x61 0x70          DC8 "aps"
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x73 0x65          DC8 73H, 65H, 74H, 2DH, 61H, 6CH, 6CH, 6FH
   \              0x74 0x2D    
   \              0x61 0x6C    
   \              0x6C 0x6F    
   \        0x8   0x77 0x2D          DC8 77H, 2DH, 74H, 72H, 75H, 73H, 74H, 2DH
   \              0x74 0x72    
   \              0x75 0x73    
   \              0x74 0x2D    
   \       0x10   0x63 0x65          DC8 63H, 65H, 6EH, 74H, 65H, 72H, 2DH, 72H
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x2D 0x72    
   \       0x18   0x65 0x6A          DC8 65H, 6AH, 6FH, 69H, 6EH, 2DH, 75H, 73H
   \              0x6F 0x69    
   \              0x6E 0x2D    
   \              0x75 0x73    
   \       0x20   0x69 0x6E          DC8 69H, 6EH, 67H, 2DH, 77H, 65H, 6CH, 6CH
   \              0x67 0x2D    
   \              0x77 0x65    
   \              0x6C 0x6C    
   \       0x28   0x2D 0x6B          DC8 2DH, 6BH, 6EH, 6FH, 77H, 6EH, 2DH, 6BH
   \              0x6E 0x6F    
   \              0x77 0x6E    
   \              0x2D 0x6B    
   \       0x30   0x65 0x79          DC8 65H, 79H, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x73 0x65          DC8 73H, 65H, 74H, 2DH, 61H, 6CH, 6CH, 6FH
   \              0x74 0x2D    
   \              0x61 0x6C    
   \              0x6C 0x6F    
   \        0x8   0x77 0x2D          DC8 77H, 2DH, 74H, 72H, 75H, 73H, 74H, 2DH
   \              0x74 0x72    
   \              0x75 0x73    
   \              0x74 0x2D    
   \       0x10   0x63 0x65          DC8 63H, 65H, 6EH, 74H, 65H, 72H, 2DH, 72H
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x2D 0x72    
   \       0x18   0x65 0x6A          DC8 65H, 6AH, 6FH, 69H, 6EH, 2DH, 75H, 73H
   \              0x6F 0x69    
   \              0x6E 0x2D    
   \              0x75 0x73    
   \       0x20   0x69 0x6E          DC8 69H, 6EH, 67H, 2DH, 77H, 65H, 6CH, 6CH
   \              0x67 0x2D    
   \              0x77 0x65    
   \              0x6C 0x6C    
   \       0x28   0x2D 0x6B          DC8 2DH, 6BH, 6EH, 6FH, 77H, 6EH, 2DH, 6BH
   \              0x6E 0x6F    
   \              0x77 0x6E    
   \              0x2D 0x6B    
   \       0x30   0x65 0x79          DC8 65H, 79H, 2DH, 74H, 69H, 6DH, 65H, 6FH
   \              0x2D 0x74    
   \              0x69 0x6D    
   \              0x65 0x6F    
   \       0x38   0x75 0x74          DC8 75H, 74H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     ?_46:
   \        0x0   0x76 0x00          DC8 "v"

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x73 0x65          DC8 "set-key-request-policy"
   \              0x74 0x2D    
   \              0x6B 0x65    
   \              0x79 0x2D    
   \              0x72 0x65    
   \              0x71 0x75    
   \              0x65 0x73    
   \              0x74 0x2D    
   \              0x70 0x6F    
   \              0x6C 0x69    
   \              0x63 0x79    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x75 0x75          DC8 "uu"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x61 0x70          DC8 "apsretry"
   \              0x73 0x72    
   \              0x65 0x74    
   \              0x72 0x79    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x62 0x69          DC8 "binding-table"
   \              0x6E 0x64    
   \              0x69 0x6E    
   \              0x67 0x2D    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x64 0x69          DC8 "disc"
   \              0x73 0x63    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x76 0x76          DC8 "vv"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x65 0x64          DC8 "edb"
   \              0x62 0x00    

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x69 0x6E          DC8 "install-code"
   \              0x73 0x74    
   \              0x61 0x6C    
   \              0x6C 0x2D    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x75 0x62          DC8 "ubb"
   \              0x62 0x00    

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x70 0x72          DC8 "print-rx-msgs"
   \              0x69 0x6E    
   \              0x74 0x2D    
   \              0x72 0x78    
   \              0x2D 0x6D    
   \              0x73 0x67    
   \              0x73 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x72 0x65          DC8 "register"
   \              0x67 0x69    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x73 0x65          DC8 "security"
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x70 0x72          DC8 "print-counter-type"
   \              0x69 0x6E    
   \              0x74 0x2D    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x65    
   \              0x72 0x2D    
   \              0x74 0x79    
   \              0x70 0x65    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x70 0x72          DC8 "print-thresholds"
   \              0x69 0x6E    
   \              0x74 0x2D    
   \              0x74 0x68    
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x6F 0x6C    
   \              0x64 0x73    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x72 0x65          DC8 "reset-threshold"
   \              0x73 0x65    
   \              0x74 0x2D    
   \              0x74 0x68    
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x6F 0x6C    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x73 0x65          DC8 "send-request"
   \              0x6E 0x64    
   \              0x2D 0x72    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x73 0x74    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x73 0x65          DC8 "set-threshold"
   \              0x74 0x2D    
   \              0x74 0x68    
   \              0x72 0x65    
   \              0x73 0x68    
   \              0x6F 0x6C    
   \              0x64 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x75 0x76          DC8 "uv"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x73 0x69          DC8 "simple-print"
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x2D 0x70    
   \              0x72 0x69    
   \              0x6E 0x74    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x74 0x61          DC8 "target"
   \              0x72 0x67    
   \              0x65 0x74    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x61 0x64          DC8 "add-group-sink"
   \              0x64 0x2D    
   \              0x67 0x72    
   \              0x6F 0x75    
   \              0x70 0x2D    
   \              0x73 0x69    
   \              0x6E 0x6B    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x77 0x76          DC8 "wv"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x61 0x64          DC8 "add-sink"
   \              0x64 0x2D    
   \              0x73 0x69    
   \              0x6E 0x6B    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x77 0x62          DC8 "wb"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_71:
   \        0x0   0x63 0x6C          DC8 "clear-proxy-table"
   \              0x65 0x61    
   \              0x72 0x2D    
   \              0x70 0x72    
   \              0x6F 0x78    
   \              0x79 0x2D    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_72:
   \        0x0   0x64 0x75          DC8 "duplicate-filter-test"
   \              0x70 0x6C    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x65 0x2D    
   \              0x66 0x69    
   \              0x6C 0x74    
   \              0x65 0x72    
   \              0x2D 0x74    
   \              0x65 0x73    
   \              0x74 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x70 0x72          DC8 "print-proxy-table"
   \              0x69 0x6E    
   \              0x74 0x2D    
   \              0x70 0x72    
   \              0x6F 0x78    
   \              0x79 0x2D    
   \              0x74 0x61    
   \              0x62 0x6C    
   \              0x65 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x72 0x6D          DC8 "rm-gpd"
   \              0x2D 0x67    
   \              0x70 0x64    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 2
   \                     ?_75:
   \        0x0   0x77 0x00          DC8 "w"

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0x72 0x6D          DC8 "rm-sink"
   \              0x2D 0x73    
   \              0x69 0x6E    
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x73 0x65          DC8 "set-key"
   \              0x74 0x2D    
   \              0x6B 0x65    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x75 0x62          DC8 "ub"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x73 0x65          DC8 "set-proxy-entry"
   \              0x74 0x2D    
   \              0x70 0x72    
   \              0x6F 0x78    
   \              0x79 0x2D    
   \              0x65 0x6E    
   \              0x74 0x72    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x75 0x77          DC8 "uwvw"
   \              0x76 0x77    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x66 0x72          DC8 "fragment-test"
   \              0x61 0x67    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x2D 0x74    
   \              0x65 0x73    
   \              0x74 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x76 0x62          DC8 "vbvv"
   \              0x76 0x76    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x73 0x65          DC8 "set-msg-timeout"
   \              0x74 0x2D    
   \              0x6D 0x73    
   \              0x67 0x2D    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x6F 0x75    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x61 0x64          DC8 "add"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_85:
   \        0x0   0x73 0x75          DC8 "subtract"
   \              0x62 0x74    
   \              0x72 0x61    
   \              0x63 0x74    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_86:
   \        0x0   0x75 0x76          DC8 "uvsu"
   \              0x73 0x75    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_87:
   \        0x0   0x6D 0x61          DC8 "mask"
   \              0x73 0x6B    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_88:
   \        0x0   0x73 0x74          DC8 "start"
   \              0x61 0x72    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_89:
   \        0x0   0x73 0x74          DC8 "stop"
   \              0x6F 0x70    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_90:
   \        0x0   0x63 0x6C          DC8 "clear-joining-link-keys"
   \              0x65 0x61    
   \              0x72 0x2D    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x2D    
   \              0x6C 0x69    
   \              0x6E 0x6B    
   \              0x2D 0x6B    
   \              0x65 0x79    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_91:
   \        0x0   0x63 0x6C          DC8 "close-network"
   \              0x6F 0x73    
   \              0x65 0x2D    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_92:
   \        0x0   0x6F 0x70          DC8 "open-network"
   \              0x65 0x6E    
   \              0x2D 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_93:
   \        0x0   0x6F 0x70          DC8 "open-with-key"
   \              0x65 0x6E    
   \              0x2D 0x77    
   \              0x69 0x74    
   \              0x68 0x2D    
   \              0x6B 0x65    
   \              0x79 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_94:
   \        0x0   0x62 0x62          DC8 "bb"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_95:
   \        0x0   0x73 0x65          DC8 "set-distributed-key"
   \              0x74 0x2D    
   \              0x64 0x69    
   \              0x73 0x74    
   \              0x72 0x69    
   \              0x62 0x75    
   \              0x74 0x65    
   \              0x64 0x2D    
   \              0x6B 0x65    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_96:
   \        0x0   0x73 0x65          DC8 "set-joining-link-key"
   \              0x74 0x2D    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x2D    
   \              0x6C 0x69    
   \              0x6E 0x6B    
   \              0x2D 0x6B    
   \              0x65 0x79    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_97:
   \        0x0   0x70 0x72          DC8 "pre-configured-key-set"
   \              0x65 0x2D    
   \              0x63 0x6F    
   \              0x6E 0x66    
   \              0x69 0x67    
   \              0x75 0x72    
   \              0x65 0x64    
   \              0x2D 0x6B    
   \              0x65 0x79    
   \              0x2D 0x73    
   \              0x65 0x74    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_98:
   \        0x0   0x75 0x76          DC8 "uvvuvvw"
   \              0x76 0x75    
   \              0x76 0x76    
   \              0x77 0x00    

   \                                 In section .rodata, align 4
   \                     ?_99:
   \        0x0   0x63 0x6C          DC8 "clear-last-report-time"
   \              0x65 0x61    
   \              0x72 0x2D    
   \              0x6C 0x61    
   \              0x73 0x74    
   \              0x2D 0x72    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x2D    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_100:
   \        0x0   0x72 0x65          DC8 "remove"
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_101:
   \        0x0   0x74 0x69          DC8 "timer"
   \              0x6D 0x65    
   \              0x72 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_102:
   \        0x0   0x64 0x65          DC8 "device"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_103:
   \        0x0   0x69 0x64          DC8 "identify"
   \              0x65 0x6E    
   \              0x74 0x69    
   \              0x66 0x79    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_104:
   \        0x0   0x72 0x65          DC8 "reset"
   \              0x73 0x65    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_105:
   \        0x0   0x61 0x62          DC8 "abort"
   \              0x6F 0x72    
   \              0x74 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_106:
   \        0x0   0x63 0x61          DC8 "cancel-rx-on"
   \              0x6E 0x63    
   \              0x65 0x6C    
   \              0x2D 0x72    
   \              0x78 0x2D    
   \              0x6F 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_107:
   \        0x0   0x63 0x68          DC8 "channel"
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x00    

   \                                 In section .rodata, align 4
   \                     ?_108:
   \        0x0   0x65 0x6E          DC8 "endpoints"
   \              0x64 0x70    
   \              0x6F 0x69    
   \              0x6E 0x74    
   \              0x73 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_109:
   \        0x0   0x76 0x75          DC8 "vuuu"
   \              0x75 0x75    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_110:
   \        0x0   0x67 0x72          DC8 "groups"
   \              0x6F 0x75    
   \              0x70 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_111:
   \        0x0   0x69 0x6E          DC8 "info"
   \              0x66 0x6F    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_112:
   \        0x0   0x76 0x75          DC8 "vuu"
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     ?_113:
   \        0x0   0x6E 0x6F          DC8 "notouchlink-nfn"
   \              0x74 0x6F    
   \              0x75 0x63    
   \              0x68 0x6C    
   \              0x69 0x6E    
   \              0x6B 0x2D    
   \              0x6E 0x66    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_114:
   \        0x0   0x72 0x78          DC8 "rx-on-active"
   \              0x2D 0x6F    
   \              0x6E 0x2D    
   \              0x61 0x63    
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_115:
   \        0x0   0x73 0x63          DC8 "scan"
   \              0x61 0x6E    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_116:
   \        0x0   0x73 0x65          DC8 "secondary-channel"
   \              0x63 0x6F    
   \              0x6E 0x64    
   \              0x61 0x72    
   \              0x79 0x2D    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_117:
   \        0x0   0x73 0x65          DC8 "set-rx-on"
   \              0x74 0x2D    
   \              0x72 0x78    
   \              0x2D 0x6F    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_118:
   \        0x0   0x74 0x6F          DC8 "tokens"
   \              0x6B 0x65    
   \              0x6E 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_119:
   \        0x0   0x63 0x6F          DC8 "counter"
   \              0x75 0x6E    
   \              0x74 0x65    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_120:
   \        0x0   0x63 0x6F          DC8 "counters"
   \              0x75 0x6E    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_121:
   \        0x0   0x66 0x69          DC8 "find-and-bind"
   \              0x6E 0x64    
   \              0x2D 0x61    
   \              0x6E 0x64    
   \              0x2D 0x62    
   \              0x69 0x6E    
   \              0x64 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_122:
   \        0x0   0x67 0x72          DC8 "green-power-client"
   \              0x65 0x65    
   \              0x6E 0x2D    
   \              0x70 0x6F    
   \              0x77 0x65    
   \              0x72 0x2D    
   \              0x63 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_123:
   \        0x0   0x67 0x72          DC8 "groups-server"
   \              0x6F 0x75    
   \              0x70 0x73    
   \              0x2D 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_124:
   \        0x0   0x69 0x6E          DC8 "interpan"
   \              0x74 0x65    
   \              0x72 0x70    
   \              0x61 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_125:
   \        0x0   0x6E 0x65          DC8 "network-creator"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x2D    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x6F    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_126:
   \        0x0   0x6E 0x65          DC8 "network-creator-security"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x2D    
   \              0x63 0x72    
   \              0x65 0x61    
   \              0x74 0x6F    
   \              0x72 0x2D    
   \              0x73 0x65    
   \              0x63 0x75    
   \              0x72 0x69    
   \              0x74 0x79    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_127:
   \        0x0   0x6E 0x65          DC8 "network-steering"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x2D    
   \              0x73 0x74    
   \              0x65 0x65    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_128:
   \        0x0   0x72 0x65          DC8 "reporting"
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x69 0x6E    
   \              0x67 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_129:
   \        0x0   0x73 0x63          DC8 "scenes"
   \              0x65 0x6E    
   \              0x65 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_130:
   \        0x0   0x75 0x70          DC8 "update-tc-link-key"
   \              0x64 0x61    
   \              0x74 0x65    
   \              0x2D 0x74    
   \              0x63 0x2D    
   \              0x6C 0x69    
   \              0x6E 0x6B    
   \              0x2D 0x6B    
   \              0x65 0x79    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_131:
   \        0x0   0x7A 0x6C          DC8 "zll-commissioning"
   \              0x6C 0x2D    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x69 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_132:
   \        0x0   0x73 0x6F          DC8 "source"
   \              0x75 0x72    
   \              0x63 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_133:
   \        0x0   0x61 0x74          DC8 "attr"
   \              0x74 0x72    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_134:
   \        0x0   0x65 0x6E          DC8 "entropy"
   \              0x74 0x72    
   \              0x6F 0x70    
   \              0x79 0x00    

   \                                 In section .rodata, align 4
   \                     ?_135:
   \        0x0   0x74 0x69          DC8 "time"
   \              0x6D 0x65    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_136:
   \        0x0   0x67 0x65          DC8 "get"
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_137:
   \        0x0   0x6D 0x66          DC8 "mfg-token"
   \              0x67 0x2D    
   \              0x74 0x6F    
   \              0x6B 0x65    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_138:
   \        0x0   0x67 0x6C          DC8 "glsr"
   \              0x73 0x72    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_139:
   \        0x0   0x75 0x62          DC8 "ub*"
   \              0x2A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_140:
   \        0x0   0x64 0x69          DC8 "direction"
   \              0x72 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_141:
   \        0x0   0x64 0x69          DC8 "disc-com-gen"
   \              0x73 0x63    
   \              0x2D 0x63    
   \              0x6F 0x6D    
   \              0x2D 0x67    
   \              0x65 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_142:
   \        0x0   0x64 0x69          DC8 "disc-com-rec"
   \              0x73 0x63    
   \              0x2D 0x63    
   \              0x6F 0x6D    
   \              0x2D 0x72    
   \              0x65 0x63    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_143:
   \        0x0   0x64 0x69          DC8 "discover"
   \              0x73 0x63    
   \              0x6F 0x76    
   \              0x65 0x72    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_144:
   \        0x0   0x76 0x76          DC8 "vvu"
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     ?_145:
   \        0x0   0x65 0x78          DC8 "expect-report-from-me"
   \              0x70 0x65    
   \              0x63 0x74    
   \              0x2D 0x72    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x2D    
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x2D 0x6D    
   \              0x65 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_146:
   \        0x0   0x6E 0x77          DC8 "nwrite"
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_147:
   \        0x0   0x76 0x76          DC8 "vvub"
   \              0x75 0x62    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_148:
   \        0x0   0x72 0x65          DC8 "read"
   \              0x61 0x64    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_149:
   \        0x0   0x72 0x65          DC8 "report"
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_150:
   \        0x0   0x75 0x76          DC8 "uvvu"
   \              0x76 0x75    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_151:
   \        0x0   0x72 0x65          DC8 "report-read"
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x2D 0x72    
   \              0x65 0x61    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_152:
   \        0x0   0x73 0x65          DC8 "send-me-a-report"
   \              0x6E 0x64    
   \              0x2D 0x6D    
   \              0x65 0x2D    
   \              0x61 0x2D    
   \              0x72 0x65    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_153:
   \        0x0   0x76 0x76          DC8 "vvuvvb"
   \              0x75 0x76    
   \              0x76 0x62    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_154:
   \        0x0   0x75 0x77          DC8 "uwrite"
   \              0x72 0x69    
   \              0x74 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_155:
   \        0x0   0x77 0x72          DC8 "write"
   \              0x69 0x74    
   \              0x65 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_156:
   \        0x0   0x76 0x76          DC8 "vvwb"
   \              0x77 0x62    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_157:
   \        0x0   0x72 0x65          DC8 "response"
   \              0x73 0x70    
   \              0x6F 0x6E    
   \              0x73 0x65    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_158:
   \        0x0   0x62 0x61          DC8 "basic"
   \              0x73 0x69    
   \              0x63 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_159:
   \        0x0   0x67 0x6C          DC8 "global"
   \              0x6F 0x62    
   \              0x61 0x6C    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_160:
   \        0x0   0x6D 0x66          DC8 "mfg-code"
   \              0x67 0x2D    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_161:
   \        0x0   0x74 0x65          DC8 "test"
   \              0x73 0x74    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_162:
   \        0x0   0x75 0x73          DC8 "use-next-sequence"
   \              0x65 0x2D    
   \              0x6E 0x65    
   \              0x78 0x74    
   \              0x2D 0x73    
   \              0x65 0x71    
   \              0x75 0x65    
   \              0x6E 0x63    
   \              0x65 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_163:
   \        0x0   0x78 0x2D          DC8 "x-default-resp"
   \              0x64 0x65    
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x2D    
   \              0x72 0x65    
   \              0x73 0x70    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_164:
   \        0x0   0x63 0x68          DC8 "chan"
   \              0x61 0x6E    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_165:
   \        0x0   0x63 0x68          DC8 "chanPg"
   \              0x61 0x6E    
   \              0x50 0x67    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_166:
   \        0x0   0x76 0x75          DC8 "vuv"
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     ?_167:
   \        0x0   0x73 0x63          DC8 "scan-chan-mask"
   \              0x61 0x6E    
   \              0x2D 0x63    
   \              0x68 0x61    
   \              0x6E 0x2D    
   \              0x6D 0x61    
   \              0x73 0x6B    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_168:
   \        0x0   0x76 0x75          DC8 "vuvw"
   \              0x76 0x77    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_169:
   \        0x0   0x76 0x77          DC8 "vw"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_170:
   \        0x0   0x76 0x62          DC8 "vbuvv"
   \              0x75 0x76    
   \              0x76 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_171:
   \        0x0   0x75 0x6E          DC8 "unicast"
   \              0x69 0x63    
   \              0x61 0x73    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_172:
   \        0x0   0x76 0x62          DC8 "vbuvbu"
   \              0x75 0x76    
   \              0x62 0x75    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_173:
   \        0x0   0x61 0x63          DC8 "active"
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_174:
   \        0x0   0x62 0x69          DC8 "bind"
   \              0x6E 0x64    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_175:
   \        0x0   0x76 0x75          DC8 "vuuvbb"
   \              0x75 0x76    
   \              0x62 0x62    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_176:
   \        0x0   0x69 0x65          DC8 "ieee"
   \              0x65 0x65    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_177:
   \        0x0   0x69 0x6E          DC8 "in-cl-list"
   \              0x2D 0x63    
   \              0x6C 0x2D    
   \              0x6C 0x69    
   \              0x73 0x74    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_178:
   \        0x0   0x6D 0x61          DC8 "match"
   \              0x74 0x63    
   \              0x68 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_179:
   \        0x0   0x6D 0x67          DC8 "mgmt-bind"
   \              0x6D 0x74    
   \              0x2D 0x62    
   \              0x69 0x6E    
   \              0x64 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_180:
   \        0x0   0x76 0x75          DC8 "vu"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_181:
   \        0x0   0x6D 0x67          DC8 "mgmt-lqi"
   \              0x6D 0x74    
   \              0x2D 0x6C    
   \              0x71 0x69    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_182:
   \        0x0   0x6E 0x6F          DC8 "node"
   \              0x64 0x65    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_183:
   \        0x0   0x6E 0x77          DC8 "nwk"
   \              0x6B 0x00    

   \                                 In section .rodata, align 4
   \                     ?_184:
   \        0x0   0x6E 0x77          DC8 "nwk-upd"
   \              0x6B 0x2D    
   \              0x75 0x70    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_185:
   \        0x0   0x6F 0x75          DC8 "out-cl-list"
   \              0x74 0x2D    
   \              0x63 0x6C    
   \              0x2D 0x6C    
   \              0x69 0x73    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_186:
   \        0x0   0x70 0x6F          DC8 "power"
   \              0x77 0x65    
   \              0x72 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_187:
   \        0x0   0x72 0x6F          DC8 "route"
   \              0x75 0x74    
   \              0x65 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_188:
   \        0x0   0x73 0x69          DC8 "simple"
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_189:
   \        0x0   0x75 0x6E          DC8 "unbind"
   \              0x62 0x69    
   \              0x6E 0x64    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_190:
   \        0x0   0x62 0x73          DC8 "bsend"
   \              0x65 0x6E    
   \              0x64 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_191:
   \        0x0   0x63 0x68          DC8 "changekey"
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x6B 0x65    
   \              0x79 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_192:
   \        0x0   0x64 0x65          DC8 "debugprint"
   \              0x62 0x75    
   \              0x67 0x70    
   \              0x72 0x69    
   \              0x6E 0x74    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_193:
   \        0x0   0x65 0x63          DC8 "echo"
   \              0x68 0x6F    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_194:
   \        0x0   0x65 0x6E          DC8 "endpoint"
   \              0x64 0x70    
   \              0x6F 0x69    
   \              0x6E 0x74    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_195:
   \        0x0   0x65 0x76          DC8 "events"
   \              0x65 0x6E    
   \              0x74 0x73    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_196:
   \        0x0   0x68 0x65          DC8 "help"
   \              0x6C 0x70    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_197:
   \        0x0   0x6B 0x65          DC8 "keys"
   \              0x79 0x73    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_198:
   \        0x0   0x6C 0x69          DC8 "libs"
   \              0x62 0x73    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_199:
   \        0x0   0x6F 0x70          DC8 "option"
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_200:
   \        0x0   0x70 0x6C          DC8 "plugin"
   \              0x75 0x67    
   \              0x69 0x6E    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_201:
   \        0x0   0x72 0x61          DC8 "raw"
   \              0x77 0x00    

   \                                 In section .rodata, align 4
   \                     ?_202:
   \        0x0   0x76 0x62          DC8 "vb"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_203:
   \        0x0   0x73 0x65          DC8 "send"
   \              0x6E 0x64    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_204:
   \        0x0   0x73 0x65          DC8 "send-using-multicast-binding"
   \              0x6E 0x64    
   \              0x2D 0x75    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x2D 0x6D    
   \              0x75 0x6C    
   \              0x74 0x69    
   \              0x63 0x61    
   \              0x73 0x74    
   \              0x2D 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_205:
   \        0x0   0x73 0x65          DC8 "send_multicast"
   \              0x6E 0x64    
   \              0x5F 0x6D    
   \              0x75 0x6C    
   \              0x74 0x69    
   \              0x63 0x61    
   \              0x73 0x74    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_206:
   \        0x0   0x74 0x69          DC8 "timesync"
   \              0x6D 0x65    
   \              0x73 0x79    
   \              0x6E 0x63    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_207:
   \        0x0   0x76 0x65          DC8 "version"
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_208:
   \        0x0   0x75 0x76          DC8 "uvvuub"
   \              0x76 0x75    
   \              0x75 0x62    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_209:
   \        0x0   0x7A 0x63          DC8 "zcl"
   \              0x6C 0x00    

   \                                 In section .rodata, align 4
   \                     ?_210:
   \        0x0   0x7A 0x64          DC8 "zdo"
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     ?_211:
   \        0x0   0x63 0x75          DC8 "custom"
   \              0x73 0x74    
   \              0x6F 0x6D    
   \              0x00         
   \        0x7   0x00               DC8 0
   1622            emberCommandEntryActionWithDetails("bsend", emAfCliBsendCommand, "u", "Send using a binding based on the clusterId in the globalApsFrame and  ...", bsendCommandArguments),
   1623            emberCommandEntrySubMenu("changekey", emberCommandChangekeyTable, ""),
   1624            emberCommandEntrySubMenu("debugprint", emberCommandDebugprintTable, ""),
   1625            emberCommandEntryActionWithDetails("echo", echoCommand, "u", "Turns echo on the command line on or off depending on the argument", echoCommandArguments),
   1626            emberCommandEntrySubMenu("endpoint", emberCommandEndpointTable, ""),
   1627            emberCommandEntryActionWithDetails("events", printEvents, "", "Print the list of timer events.", NULL),
   1628            emberCommandEntryActionWithDetails("help", helpCommand, "", "Prints out the cli command options for the device", NULL),
   1629            emberCommandEntryActionWithDetails("info", emAfCliInfoCommand, "", "Gives information about the local node", NULL),
   1630            emberCommandEntrySubMenu("interpan", emberCommandInterpanTable, ""),
   1631            emberCommandEntrySubMenu("keys", emberCommandKeysTable, ""),
   1632            emberCommandEntryActionWithDetails("libs", printAllLibraryStatus, "", "Lists which optional libraries of the stack are implemented on this de ...", NULL),
   1633            emberCommandEntrySubMenu("network", emberCommandNetworkTable, ""),
   1634            emberCommandEntrySubMenu("option", emberCommandOptionTable, ""),
   1635            emberCommandEntrySubMenu("plugin", emberCommandPluginTable, ""),
   1636            emberCommandEntrySubMenu("print", emberCommandPrintTable, ""),
   1637            emberCommandEntryActionWithDetails("raw", emAfCliRawCommand, "vb", "Creates a message by specifying the raw byte ...", rawCommandArguments),
   1638            emberCommandEntryActionWithDetails("read", emAfCliReadCommand, "uvvu", "Read an attribute from the local attribute tabl ...", readCommandArguments),
   1639            emberCommandEntryActionWithDetails("reset", resetCommand, "", "resets the device", NULL),
   1640            emberCommandEntrySubMenu("security", emberCommandSecurityTable, ""),
   1641            emberCommandEntryActionWithDetails("send", emAfCliSendCommand, "vuu", "Send a pre-buffered message from a given endpoint to an endpoint on a  ...", sendCommandArguments),
   1642            emberCommandEntryActionWithDetails("send-using-multicast-binding", emAfCliSendUsingMulticastBindingCommand, "u", "When sending using a binding, specify whether a multicast binding shou ...", sendUsingMulticastBindingCommandArguments),
   1643            emberCommandEntryActionWithDetails("send_multicast", emAfCliSendCommand, "vu", "Send a pre-buffered multicast message to a given group id from a given ...", sendMulticastCommandArguments),
   1644            emberCommandEntryActionWithDetails("timesync", emAfCliTimesyncCommand, "vuu", "This sends a read attr for the time of the device specifie ...", timesyncCommandArguments),
   1645            emberCommandEntryActionWithDetails("version", emAfCliVersionCommand, "", "Shows the version of the software", NULL),
   1646            emberCommandEntryActionWithDetails("write", emAfCliWriteCommand, "uvvuub", "Write an attribute value into the local attribute table", writeCommandArguments),
   1647            emberCommandEntrySubMenu("zcl", emberCommandZclTable, ""),
   1648            emberCommandEntrySubMenu("zdo", emberCommandZdoTable, ""),
   1649          #ifdef EMBER_AF_ENABLE_CUSTOM_COMMANDS
   1650            CUSTOM_COMMANDS
   1651          #endif // EMBER_AF_ENABLE_CUSTOM_COMMANDS
   1652            emberCommandEntryTerminator(),
   1653          };

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   zclBasicGlsrCommand
         0   -> zclSimpleCommand


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?_0
       2  ?_1
       8  ?_10
       8  ?_100
       8  ?_101
       8  ?_102
      12  ?_103
       8  ?_104
       8  ?_105
      16  ?_106
       8  ?_107
      12  ?_108
       8  ?_109
       8  ?_11
       8  ?_110
       8  ?_111
       4  ?_112
      16  ?_113
      16  ?_114
       8  ?_115
      20  ?_116
      12  ?_117
       8  ?_118
       8  ?_119
       8  ?_12
      12  ?_120
      16  ?_121
      20  ?_122
      16  ?_123
      12  ?_124
      16  ?_125
      28  ?_126
      20  ?_127
      12  ?_128
       8  ?_129
       8  ?_13
      20  ?_130
      20  ?_131
       8  ?_132
       8  ?_133
       8  ?_134
       8  ?_135
       4  ?_136
      12  ?_137
       8  ?_138
       4  ?_139
       4  ?_14
      12  ?_140
      16  ?_141
      16  ?_142
      12  ?_143
       4  ?_144
      24  ?_145
       8  ?_146
       8  ?_147
       8  ?_148
       8  ?_149
       8  ?_15
       8  ?_150
      12  ?_151
      20  ?_152
       8  ?_153
       8  ?_154
       8  ?_155
       8  ?_156
      12  ?_157
       8  ?_158
       8  ?_159
       8  ?_16
      12  ?_160
       8  ?_161
      20  ?_162
      16  ?_163
       8  ?_164
       8  ?_165
       4  ?_166
      16  ?_167
       8  ?_168
       4  ?_169
       8  ?_17
       8  ?_170
       8  ?_171
       8  ?_172
       8  ?_173
       8  ?_174
       8  ?_175
       8  ?_176
      12  ?_177
       8  ?_178
      12  ?_179
       8  ?_18
       4  ?_180
      12  ?_181
       8  ?_182
       4  ?_183
       8  ?_184
      12  ?_185
       8  ?_186
       8  ?_187
       8  ?_188
       8  ?_189
       8  ?_19
       8  ?_190
      12  ?_191
      12  ?_192
       8  ?_193
      12  ?_194
       8  ?_195
       8  ?_196
       8  ?_197
       8  ?_198
       8  ?_199
       8  ?_2
      12  ?_20
       8  ?_200
       4  ?_201
       4  ?_202
       8  ?_203
      32  ?_204
      16  ?_205
      12  ?_206
       8  ?_207
       8  ?_208
       4  ?_209
       8  ?_21
       4  ?_210
       8  ?_211
      12  ?_22
      16  ?_23
      12  ?_24
       8  ?_25
       8  ?_26
       4  ?_27
       4  ?_28
       8  ?_29
       8  ?_3
       8  ?_30
       8  ?_31
      16  ?_32
       8  ?_33
      16  ?_34
       8  ?_35
       8  ?_36
       4  ?_37
      24  ?_38
       4  ?_39
       1  ?_4
       4  ?_40
       8  ?_41
       8  ?_42
       4  ?_43
      52  ?_44
      60  ?_45
       2  ?_46
      24  ?_47
       4  ?_48
      12  ?_49
       8  ?_5
      16  ?_50
       8  ?_51
       4  ?_52
       4  ?_53
      16  ?_54
       4  ?_55
      16  ?_56
      12  ?_57
      12  ?_58
      20  ?_59
       4  ?_6
      20  ?_60
      16  ?_61
      16  ?_62
      16  ?_63
       4  ?_64
      16  ?_65
       8  ?_66
      16  ?_67
       4  ?_68
      12  ?_69
       2  ?_7
       4  ?_70
      20  ?_71
      24  ?_72
      20  ?_73
       8  ?_74
       2  ?_75
       8  ?_76
       8  ?_77
       4  ?_78
      16  ?_79
       4  ?_8
       8  ?_80
      16  ?_81
       8  ?_82
      16  ?_83
       4  ?_84
      12  ?_85
       8  ?_86
       8  ?_87
       8  ?_88
       8  ?_89
       8  ?_9
      24  ?_90
      16  ?_91
      16  ?_92
      16  ?_93
       4  ?_94
      20  ?_95
      24  ?_96
      24  ?_97
       8  ?_98
      24  ?_99
      36  emberCommandChangekeyTable
      72  emberCommandDebugprintTable
      48  emberCommandEndpointTable
      48  emberCommandInterpanTable
      48  emberCommandKeysTable
      36  emberCommandNetworkFindTable
     192  emberCommandNetworkTable
      48  emberCommandOptionApsretryTable
      48  emberCommandOptionBindingTableTable
      36  emberCommandOptionPrintRxMsgsTable
      36  emberCommandOptionSecurityApsTable
      60  emberCommandOptionSecurityTable
     120  emberCommandOptionTable
      24  emberCommandPluginCounterTable
      96  emberCommandPluginCountersTable
      24  emberCommandPluginFindAndBindTable
     120  emberCommandPluginGreenPowerClientTable
      36  emberCommandPluginGroupsServerTable
      24  emberCommandPluginIdentifyTable
      60  emberCommandPluginInterpanTable
      48  emberCommandPluginNetworkCreatorMaskTable
      84  emberCommandPluginNetworkCreatorSecurityTable
      72  emberCommandPluginNetworkCreatorTable
      48  emberCommandPluginNetworkSteeringMaskTable
      72  emberCommandPluginNetworkSteeringTable
      72  emberCommandPluginReportingTable
      36  emberCommandPluginScenesTable
     180  emberCommandPluginTable
      24  emberCommandPluginUpdateTcLinkKeyTable
      48  emberCommandPluginZllCommissioningScanTable
     276  emberCommandPluginZllCommissioningTable
      24  emberCommandPrintEntropyTable
      48  emberCommandPrintTable
      36  emberCommandSecurityMfgTokenTable
      24  emberCommandSecurityTable
     348  emberCommandTable
      24  emberCommandZclBasicTable
     156  emberCommandZclGlobalTable
      36  emberCommandZclIdentifyTable
     108  emberCommandZclTable
      36  emberCommandZclTestResponseTable
      24  emberCommandZclTestTable
      36  emberCommandZdoInClListTable
      72  emberCommandZdoNwkUpdTable
      36  emberCommandZdoOutClListTable
     204  emberCommandZdoTable
      36  emberCommandZdoUnbindTable
      10  zclBasicGlsrCommand

 
 5 709 bytes in section .rodata
    10 bytes in section .text
 
    10 bytes of CODE  memory
 5 709 bytes of CONST memory

Errors: none
Warnings: none
