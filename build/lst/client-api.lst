###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:27
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\client-api.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWF173.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\client-api.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"client-api.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\client-api.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\client-api.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\client-api.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          #include PLATFORM_HEADER
     19          #include "common.h"
     20          #include "util.h"
     21          #include "client-api.h"
     22          

   \                                 In section .bss, align 4
     23          uint8_t *emAfZclBuffer = NULL;
   \                     emAfZclBuffer:
   \        0x0                      DS8 4

   \                                 In section .bss, align 2
     24          uint16_t emAfZclBufferLen = 0;
   \                     emAfZclBufferLen:
   \        0x0                      DS8 2
     25          
     26          // Pointer to where this API should put the length

   \                                 In section .bss, align 4
     27          uint16_t *emAfResponseLengthPtr = NULL;
   \                     emAfResponseLengthPtr:
   \        0x0                      DS8 4
     28          
     29          // Pointer to where the API should put the cluster ID

   \                                 In section .bss, align 4
     30          EmberApsFrame *emAfCommandApsFrame = NULL;
   \                     emAfCommandApsFrame:
   \        0x0                      DS8 4
     31          
     32          /////////////////
     33          
     34          // Method that fills in the buffer.
     35          // It returns number of bytes filled
     36          // and 0 on error.

   \                                 In section .text, align 2, keep-with-next
     37          static uint16_t vFillBuffer(uint8_t *buffer,
     38                                      uint16_t bufferLen,
     39                                      uint8_t frameControl,
     40                                      uint16_t manufacturerCode,
     41                                      uint8_t commandId,
     42                                      const char * format,
     43                                      va_list argPointer)
     44          {
   \                     vFillBuffer: (+1)
   \        0x0   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
     45            uint32_t value;
     46            uint8_t valueLen;
     47            uint8_t *data;
     48            uint16_t dataLen;
     49            uint8_t i;
     50            uint16_t bytes = 0;
     51          
     52            // The destination buffer must be at least large enough to hold the ZCL
     53            // overhead: frame control, manufacturer code (if applicable), sequence
     54            // number, and command id.  If it is, add these in order.
     55            if (bufferLen < EMBER_AF_ZCL_OVERHEAD
     56                || (manufacturerCode != EMBER_AF_NULL_MANUFACTURER_CODE
     57                    && bufferLen < EMBER_AF_ZCL_MANUFACTURER_SPECIFIC_OVERHEAD)) {
   \        0x4   0x2902             CMP      R1,#+2
   \                     ??vFillBuffer_0: (+1)
   \        0x6   0xF340 0x8095      BLE.W    ??vFillBuffer_1
   \        0xA   0x0019             MOVS     R1,R3
   \        0xC   0xD005             BEQ.N    ??vFillBuffer_2
   \        0xE   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \       0x12   0x2905             CMP      R1,#+5
   \       0x14   0xDBF7             BLT.N    ??vFillBuffer_0
     58              emberAfDebugPrintln("ERR: Buffer too short for ZCL header");
     59              return 0;
     60            }
     61            if (manufacturerCode != EMBER_AF_NULL_MANUFACTURER_CODE) {
     62              frameControl |= ZCL_MANUFACTURER_SPECIFIC_MASK;
   \       0x16   0xF042 0x0204      ORR      R2,R2,#0x4
   \                     ??vFillBuffer_2: (+1)
   \       0x1A   0x4682             MOV      R10,R0
     63            }
     64            buffer[bytes++] = frameControl;
   \       0x1C   0x2601             MOVS     R6,#+1
   \       0x1E   0xF88A 0x2000      STRB     R2,[R10, #+0]
     65            if (manufacturerCode != EMBER_AF_NULL_MANUFACTURER_CODE) {
   \       0x22   0x0018             MOVS     R0,R3
   \       0x24   0xD005             BEQ.N    ??vFillBuffer_3
     66              buffer[bytes++] = LOW_BYTE(manufacturerCode);
   \       0x26   0xF88A 0x3001      STRB     R3,[R10, #+1]
     67              buffer[bytes++] = HIGH_BYTE(manufacturerCode);
   \       0x2A   0x0A1B             LSRS     R3,R3,#+8
   \       0x2C   0xF88A 0x3002      STRB     R3,[R10, #+2]
   \       0x30   0x2603             MOVS     R6,#+3
   \                     ??vFillBuffer_3: (+1)
   \       0x32   0x9C0A             LDR      R4,[SP, #+40]
     68            }
     69            buffer[bytes++] = emberAfNextSequence();
   \       0x34   0x....'....        BL       emberAfNextSequence
   \       0x38   0xF80A 0x0006      STRB     R0,[R10, R6]
   \       0x3C   0x1C76             ADDS     R6,R6,#+1
     70            buffer[bytes++] = commandId;
   \       0x3E   0xB2B0             UXTH     R0,R6
   \       0x40   0xF80A 0x4000      STRB     R4,[R10, R0]
   \       0x44   0x1C76             ADDS     R6,R6,#+1
     71          
     72            // Each argument comes in as an integer value, a pointer to a buffer, or a
     73            // pointer to a buffer followed by an integer length.
     74            for (i = 0; format[i] != 0; i++) {
   \       0x46   0xF04F 0x0B00      MOV      R11,#+0
   \       0x4A   0xF8DD 0x9030      LDR      R9,[SP, #+48]
   \       0x4E   0xE007             B.N      ??vFillBuffer_4
     75              char cmd;
     76              value = 0;
     77              valueLen = 0;
     78              data = 0;
     79              cmd = format[i];
     80              if (cmd <= 's') {
     81                //  0--9, A--G, L, S, b, l, and s all have a pointer to a buffer.  The
     82                // length of that buffer is implied by 0--9 and A--G (0 to 16 bytes).
     83                // For L, S, and b, a separate integer specifies the length.  That length
     84                // will precede the data in the destination buffer for L and S, which
     85                // turns them into regular ZigBee strings.  In this case, care must be
     86                // taken to account for invalid strings, which have length 0xFFFF or 0xFF
     87                // for L and S respectively.  In the case of invalid strings, the length
     88                // byte(s) are copied to the destination buffer but the string itself is
     89                // not.  Finally, l and s are just ZigBee strings and the length of the
     90                // string data is contained within the buffer itself and the entire
     91                // buffer is copied as is to the destination buffer.  Note that
     92                // emberAf(Long)StringLength handles invalid strings, but it does not
     93                // include the length byte(s) in the total length, so the overhead
     94                // must be maually accounted for when copying.
     95                data = (uint8_t *)va_arg(argPointer, uint8_t *);
     96                valueLen = 0;
     97                if (cmd == 'L' || cmd == 'S' || cmd == 'b') {
     98                  dataLen = (uint16_t)va_arg(argPointer, int);
     99                  if (cmd == 'L') {
    100                    value = dataLen;
    101                    valueLen = (value == 0xFFFF ? 0 : 2);
    102                  } else if (cmd == 'S') {
    103                    value = (uint8_t)dataLen;
    104                    valueLen = (value == 0xFF ? 0 : 1);
    105                  } else {
    106                    // MISRA requires ..else if.. to have terminating else.
    107                  }
    108                } else if (cmd == 'l') {
    109                  dataLen = emberAfLongStringLength(data) + 2;
    110                } else if (cmd == 's') {
    111                  dataLen = emberAfStringLength(data) + 1;
    112                } else if ('0' <= cmd && cmd <= '9') {
    113                  dataLen = cmd - '0';
    114                } else if ('A' <= cmd && cmd <= 'G') {
    115                  dataLen = cmd - 'A' + 10;
    116                } else {
    117                  emberAfDebugPrintln("ERR: Unknown format '%c'", cmd);
    118                  return 0;
    119                }
    120              } else {
    121                // u, v, x, and w are one-, two-, three-, or four-byte integers.  u and v
    122                // must be extracted as an int while x and w come through as an uint32_t.
    123                // In all cases, the value is copied to the destination buffer in little-
    124                // endian format.
    125                dataLen = 0;
    126                if (cmd == 'u') {
    127                  valueLen = 1;
    128                } else if (cmd == 'v') {
    129                  valueLen = 2;
    130                } else if (cmd == 'x') {
    131                  valueLen = 3;
    132                } else if (cmd == 'w') {
    133                  valueLen = 4;
    134                } else {
    135                  emberAfDebugPrintln("ERR: Unknown format '%c'", cmd);
    136                  return 0;
    137                }
    138                value = (uint32_t)(valueLen <= 2
    139                                   ? va_arg(argPointer, int)
    140                                   : va_arg(argPointer, uint32_t));
    141              }
    142          
    143              // The destination buffer must be at least as large as the running total
    144              // plus the length of the integer value (if applicable) plus the length of
    145              // the data (if applicable).
    146              if (bufferLen < bytes + dataLen + valueLen) {
    147                emberAfDebugPrintln("ERR: Buffer too short for %d bytes for format '%c'",
    148                                    dataLen + valueLen,
    149                                    cmd);
    150                return 0;
    151              }
    152          
    153              // If there is an integer value, add it to destination buffer in little-
    154              // endian format.
    155              for (; 0 < valueLen; valueLen--) {
    156                buffer[bytes++] = LOW_BYTE(value);
    157                value = value >> 8;
    158              }
    159          
    160              // Finally, if there is data, add it to the destination buffer as is.  If
    161              // the data length is zero, data may actually be NULL.  Even if the length
    162              // argument is zero, passing NULL as either the source or destination to
    163              // MEMCOPY is invalid and the behavior is undefined.  We avoid that with an
    164              // explicit check.
    165              if (dataLen != 0) {
    166                if (data == NULL) {
    167                  emberAfDebugPrintln("ERR: Missing data for %d bytes for format '%c'",
    168                                      dataLen,
    169                                      cmd);
    170                  return 0;
    171                }
    172                MEMCOPY(buffer + bytes, data, dataLen);
   \                     ??vFillBuffer_5: (+1)
   \       0x50   0xB2BA             UXTH     R2,R7
   \       0x52   0x4641             MOV      R1,R8
   \       0x54   0x4450             ADD      R0,R10,R0
   \       0x56   0x....'....        BL       halCommonMemMove
    173                bytes += dataLen;
   \       0x5A   0x19BE             ADDS     R6,R7,R6
   \                     ??vFillBuffer_6: (+1)
   \       0x5C   0xF10B 0x0B01      ADD      R11,R11,#+1
   \                     ??vFillBuffer_4: (+1)
   \       0x60   0x980B             LDR      R0,[SP, #+44]
   \       0x62   0xFA5F 0xF18B      UXTB     R1,R11
   \       0x66   0x5C40             LDRB     R0,[R0, R1]
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD065             BEQ.N    ??vFillBuffer_7
   \       0x6C   0x2500             MOVS     R5,#+0
   \       0x6E   0x2400             MOVS     R4,#+0
   \       0x70   0x46A0             MOV      R8,R4
   \       0x72   0x2873             CMP      R0,#+115
   \       0x74   0xDC34             BGT.N    ??vFillBuffer_8
   \       0x76   0x284C             CMP      R0,#+76
   \       0x78   0xF859 0x8B04      LDR      R8,[R9], #+4
   \       0x7C   0xBF1C             ITT      NE 
   \       0x7E   0x2853             CMPNE    R0,#+83
   \       0x80   0x2862             CMPNE    R0,#+98
   \       0x82   0xD111             BNE.N    ??vFillBuffer_9
   \       0x84   0xF859 0x7B04      LDR      R7,[R9], #+4
   \       0x88   0x284C             CMP      R0,#+76
   \       0x8A   0xD106             BNE.N    ??vFillBuffer_10
   \       0x8C   0xB2BD             UXTH     R5,R7
   \       0x8E   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x92   0x4285             CMP      R5,R0
   \       0x94   0xD036             BEQ.N    ??vFillBuffer_11
   \       0x96   0x2402             MOVS     R4,#+2
   \       0x98   0xE034             B.N      ??vFillBuffer_11
   \                     ??vFillBuffer_10: (+1)
   \       0x9A   0x2853             CMP      R0,#+83
   \       0x9C   0xD132             BNE.N    ??vFillBuffer_11
   \       0x9E   0xB2FD             UXTB     R5,R7
   \       0xA0   0x2DFF             CMP      R5,#+255
   \       0xA2   0xD02F             BEQ.N    ??vFillBuffer_11
   \       0xA4   0x2401             MOVS     R4,#+1
   \       0xA6   0xE02D             B.N      ??vFillBuffer_11
   \                     ??vFillBuffer_9: (+1)
   \       0xA8   0x286C             CMP      R0,#+108
   \       0xAA   0xD104             BNE.N    ??vFillBuffer_12
   \       0xAC   0x4640             MOV      R0,R8
   \       0xAE   0x....'....        BL       emberAfLongStringLength
   \       0xB2   0x1C87             ADDS     R7,R0,#+2
   \       0xB4   0xE026             B.N      ??vFillBuffer_11
   \                     ??vFillBuffer_12: (+1)
   \       0xB6   0x2873             CMP      R0,#+115
   \       0xB8   0xD104             BNE.N    ??vFillBuffer_13
   \       0xBA   0x4640             MOV      R0,R8
   \       0xBC   0x....'....        BL       emberAfStringLength
   \       0xC0   0x1C47             ADDS     R7,R0,#+1
   \       0xC2   0xE01F             B.N      ??vFillBuffer_11
   \                     ??vFillBuffer_13: (+1)
   \       0xC4   0xF1A0 0x0130      SUB      R1,R0,#+48
   \       0xC8   0x290A             CMP      R1,#+10
   \       0xCA   0xBF38             IT       CC 
   \       0xCC   0xF1A0 0x0730      SUBCC    R7,R0,#+48
   \       0xD0   0xD318             BCC.N    ??vFillBuffer_11
   \       0xD2   0xF1A0 0x0141      SUB      R1,R0,#+65
   \       0xD6   0x2907             CMP      R1,#+7
   \       0xD8   0xD22C             BCS.N    ??vFillBuffer_1
   \       0xDA   0xF1A0 0x0737      SUB      R7,R0,#+55
   \       0xDE   0xE011             B.N      ??vFillBuffer_11
   \                     ??vFillBuffer_8: (+1)
   \       0xE0   0x2700             MOVS     R7,#+0
   \       0xE2   0x2875             CMP      R0,#+117
   \       0xE4   0xBF08             IT       EQ 
   \       0xE6   0x2401             MOVEQ    R4,#+1
   \       0xE8   0xD00A             BEQ.N    ??vFillBuffer_14
   \       0xEA   0x2876             CMP      R0,#+118
   \       0xEC   0xBF08             IT       EQ 
   \       0xEE   0x2402             MOVEQ    R4,#+2
   \       0xF0   0xD006             BEQ.N    ??vFillBuffer_14
   \       0xF2   0x2878             CMP      R0,#+120
   \       0xF4   0xBF08             IT       EQ 
   \       0xF6   0x2403             MOVEQ    R4,#+3
   \       0xF8   0xD002             BEQ.N    ??vFillBuffer_14
   \       0xFA   0x2877             CMP      R0,#+119
   \       0xFC   0xD11A             BNE.N    ??vFillBuffer_1
   \       0xFE   0x2404             MOVS     R4,#+4
   \                     ??vFillBuffer_14: (+1)
   \      0x100   0xF859 0x5B04      LDR      R5,[R9], #+4
   \                     ??vFillBuffer_11: (+1)
   \      0x104   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \      0x108   0xB2B2             UXTH     R2,R6
   \      0x10A   0xB2B8             UXTH     R0,R7
   \      0x10C   0x1882             ADDS     R2,R0,R2
   \      0x10E   0x18A2             ADDS     R2,R4,R2
   \      0x110   0x4291             CMP      R1,R2
   \      0x112   0xDA05             BGE.N    ??vFillBuffer_15
   \      0x114   0xE00E             B.N      ??vFillBuffer_1
   \                     ??vFillBuffer_16: (+1)
   \      0x116   0xF80A 0x5000      STRB     R5,[R10, R0]
   \      0x11A   0x1C76             ADDS     R6,R6,#+1
   \      0x11C   0x0A2D             LSRS     R5,R5,#+8
   \      0x11E   0x1E64             SUBS     R4,R4,#+1
   \                     ??vFillBuffer_15: (+1)
   \      0x120   0xB2E1             UXTB     R1,R4
   \      0x122   0xB2B0             UXTH     R0,R6
   \      0x124   0x2900             CMP      R1,#+0
   \      0x126   0xD1F6             BNE.N    ??vFillBuffer_16
   \      0x128   0xB2B9             UXTH     R1,R7
   \      0x12A   0x2900             CMP      R1,#+0
   \      0x12C   0xD096             BEQ.N    ??vFillBuffer_6
   \      0x12E   0xF1B8 0x0F00      CMP      R8,#+0
   \      0x132   0xD18D             BNE.N    ??vFillBuffer_5
   \                     ??vFillBuffer_1: (+1)
   \      0x134   0x2000             MOVS     R0,#+0
   \      0x136   0xE000             B.N      ??vFillBuffer_17
    174              }
    175            }
    176          
    177            return bytes;
   \                     ??vFillBuffer_7: (+1)
   \      0x138   0xB2B0             UXTH     R0,R6
   \                     ??vFillBuffer_17: (+1)
   \      0x13A   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    178          }
    179          
    180          ////////////////////// Public API ////////////////////////
    181          

   \                                 In section .text, align 2, keep-with-next
    182          void emberAfSetExternalBuffer(uint8_t *buffer,
    183                                        uint16_t bufferLen,
    184                                        uint16_t *lenPtr,
    185                                        EmberApsFrame *apsFrame)
    186          {
   \                     emberAfSetExternalBuffer: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    187            emAfZclBuffer = buffer;
   \        0x2   0x....             LDR.N    R4,??DataTable11
   \        0x4   0x6020             STR      R0,[R4, #+0]
    188            emAfZclBufferLen = bufferLen;
   \        0x6   0x....             LDR.N    R0,??DataTable11_1
   \        0x8   0x8001             STRH     R1,[R0, #+0]
    189            emAfResponseLengthPtr = lenPtr;
   \        0xA   0x....             LDR.N    R1,??DataTable11_2
   \        0xC   0x600A             STR      R2,[R1, #+0]
    190            emAfCommandApsFrame = apsFrame;
   \        0xE   0x....             LDR.N    R2,??DataTable11_3
   \       0x10   0x6013             STR      R3,[R2, #+0]
    191          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    192          

   \                                 In section .text, align 2, keep-with-next
    193          uint16_t emberAfFillExternalManufacturerSpecificBuffer(uint8_t frameControl,
    194                                                                 EmberAfClusterId clusterId,
    195                                                                 uint16_t manufacturerCode,
    196                                                                 uint8_t commandId,
    197                                                                 const char * format,
    198                                                                 ...)
    199          {
   \                     emberAfFillExternalManufacturerSpecificBuffer: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
   \        0x4   0x9908             LDR      R1,[SP, #+32]
    200            uint16_t returnValue;
    201            va_list argPointer = { 0 };
    202          
    203            va_start(argPointer, format);
   \        0x6   0xAD09             ADD      R5,SP,#+36
    204            returnValue = vFillBuffer(emAfZclBuffer,
    205                                      emAfZclBufferLen,
    206                                      frameControl,
    207                                      manufacturerCode,
    208                                      commandId,
    209                                      format,
    210                                      argPointer);
   \        0x8   0x9300             STR      R3,[SP, #+0]
   \        0xA   0x9502             STR      R5,[SP, #+8]
   \        0xC   0x4613             MOV      R3,R2
   \        0xE   0x9101             STR      R1,[SP, #+4]
   \       0x10   0x....'....        BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0x14   0x....             B.N      ?Subroutine0
    211            va_end(argPointer);
    212            *emAfResponseLengthPtr = returnValue;
    213            emAfCommandApsFrame->clusterId = clusterId;
    214            emAfCommandApsFrame->options = EMBER_AF_DEFAULT_APS_OPTIONS;
    215            return returnValue;
    216          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x....'....        BL       vFillBuffer
   \        0x4   0x....             LDR.N    R1,??DataTable11_2
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x....             LDR.N    R3,??DataTable11_3
   \        0xA   0x8010             STRH     R0,[R2, #+0]
   \        0xC   0x6819             LDR      R1,[R3, #+0]
   \        0xE   0xF44F 0x528A      MOV      R2,#+4416
   \       0x12   0x804C             STRH     R4,[R1, #+2]
   \       0x14   0x80CA             STRH     R2,[R1, #+6]
   \       0x16   0xB004             ADD      SP,SP,#+16
   \       0x18   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x4602             MOV      R2,R0
   \        0x2   0x....             LDR.N    R5,??DataTable11_1
   \        0x4   0x....             LDR.N    R6,??DataTable11
   \        0x6   0x8829             LDRH     R1,[R5, #+0]
   \        0x8   0x6830             LDR      R0,[R6, #+0]
   \        0xA   0x4770             BX       LR
    217          

   \                                 In section .text, align 2, keep-with-next
    218          uint16_t emberAfFillExternalBuffer(uint8_t frameControl,
    219                                             EmberAfClusterId clusterId,
    220                                             uint8_t commandId,
    221                                             const char * format,
    222                                             ...)
    223          {
   \                     emberAfFillExternalBuffer: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x460C             MOV      R4,R1
    224            uint16_t returnValue;
    225            va_list argPointer = { 0 };
    226          
    227            va_start(argPointer, format);
   \        0x4   0xA908             ADD      R1,SP,#+32
    228            returnValue = vFillBuffer(emAfZclBuffer,
    229                                      emAfZclBufferLen,
    230                                      frameControl,
    231                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    232                                      commandId,
    233                                      format,
    234                                      argPointer);
   \        0x6   0x9200             STR      R2,[SP, #+0]
   \        0x8   0x9102             STR      R1,[SP, #+8]
   \        0xA   0x....'....        BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_5: (+1)
   \        0xE   0x9301             STR      R3,[SP, #+4]
   \       0x10   0x2300             MOVS     R3,#+0
   \       0x12                      REQUIRE ?Subroutine0
   \       0x12                      ;; // Fall through to label ?Subroutine0
    235            va_end(argPointer);
    236            *emAfResponseLengthPtr = returnValue;
    237            emAfCommandApsFrame->clusterId = clusterId;
    238            emAfCommandApsFrame->options = EMBER_AF_DEFAULT_APS_OPTIONS;
    239            return returnValue;
    240          }
    241          

   \                                 In section .text, align 2, keep-with-next
    242          uint16_t emberAfFillBuffer(uint8_t *buffer,
    243                                     uint16_t bufferLen,
    244                                     uint8_t frameControl,
    245                                     uint8_t commandId,
    246                                     const char * format,
    247                                     ...)
    248          {
   \                     emberAfFillBuffer: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x9C06             LDR      R4,[SP, #+24]
    249            uint16_t returnValue;
    250            va_list argPointer = { 0 };
    251            va_start(argPointer, format);
   \        0x4   0xAD07             ADD      R5,SP,#+28
    252            returnValue = vFillBuffer(buffer,
    253                                      bufferLen,
    254                                      frameControl,
    255                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    256                                      commandId,
    257                                      format,
    258                                      argPointer);
    259            va_end(argPointer);
    260            return returnValue;
   \        0x6   0x9300             STR      R3,[SP, #+0]
   \        0x8   0x9502             STR      R5,[SP, #+8]
   \        0xA   0x9401             STR      R4,[SP, #+4]
   \        0xC   0x2300             MOVS     R3,#+0
   \        0xE   0x....'....        BL       vFillBuffer
   \       0x12   0xBD3E             POP      {R1-R5,PC}       ;; return
    261          }
    262          

   \                                 In section .text, align 2, keep-with-next
    263          EmberStatus emberAfSendCommandUnicastToBindingsWithCallback(EmberAfMessageSentFunction callback)
    264          {
   \                     emberAfSendCommandUnicastToBindingsWithCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4603             MOV      R3,R0
    265            return emberAfSendUnicastToBindingsWithCallback(emAfCommandApsFrame,
    266                                                            *emAfResponseLengthPtr,
    267                                                            emAfZclBuffer,
    268                                                            callback);
   \        0x4   0x....             LDR.N    R4,??DataTable11_2
   \        0x6   0x....             LDR.N    R0,??DataTable11
   \        0x8   0x6825             LDR      R5,[R4, #+0]
   \        0xA   0x6802             LDR      R2,[R0, #+0]
   \        0xC   0x....             LDR.N    R0,??DataTable11_3
   \        0xE   0x8829             LDRH     R1,[R5, #+0]
   \       0x10   0x6800             LDR      R0,[R0, #+0]
   \       0x12   0xB001             ADD      SP,SP,#+4
   \       0x14   0xE8BD 0x4030      POP      {R4,R5,LR}
   \       0x18   0x....'....        B.W      emberAfSendUnicastToBindingsWithCallback
    269          }
    270          

   \                                 In section .text, align 2, keep-with-next
    271          EmberStatus emberAfSendCommandUnicastToBindings(void)
    272          {
    273            return emberAfSendCommandUnicastToBindingsWithCallback(NULL);
   \                     emberAfSendCommandUnicastToBindings: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....             B.N      emberAfSendCommandUnicastToBindingsWithCallback
    274          }
    275          

   \                                 In section .text, align 2, keep-with-next
    276          EmberStatus emberAfSendCommandMulticastWithCallback(EmberMulticastId multicastId,
    277                                                              EmberAfMessageSentFunction callback)
    278          {
   \                     emberAfSendCommandMulticastWithCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    279            return emberAfSendMulticastWithCallback(multicastId,
    280                                                    emAfCommandApsFrame,
    281                                                    *emAfResponseLengthPtr,
    282                                                    emAfZclBuffer,
    283                                                    callback);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_2: (+1)
   \        0x6   0x....'....        BL       emberAfSendMulticastWithCallback
   \        0xA   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    284          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x9100             STR      R1,[SP, #+0]
   \        0x2   0x....             LDR.N    R4,??DataTable11_2
   \        0x4   0x....             LDR.N    R1,??DataTable11
   \        0x6   0x6825             LDR      R5,[R4, #+0]
   \        0x8   0x680B             LDR      R3,[R1, #+0]
   \        0xA   0x....             LDR.N    R1,??DataTable11_3
   \        0xC   0x882A             LDRH     R2,[R5, #+0]
   \        0xE   0x6809             LDR      R1,[R1, #+0]
   \       0x10   0x4770             BX       LR
    285          

   \                                 In section .text, align 2, keep-with-next
    286          EmberStatus emberAfSendCommandMulticastWithAliasWithCallback(EmberMulticastId multicastId, EmberNodeId alias, uint8_t sequence, EmberAfMessageSentFunction callback)
    287          {
   \                     emberAfSendCommandMulticastWithAliasWithCallback: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
    288            return emberAfSendMulticastWithAliasWithCallback(multicastId,
    289                                                             emAfCommandApsFrame,
    290                                                             *emAfResponseLengthPtr,
    291                                                             emAfZclBuffer,
    292                                                             alias,
    293                                                             sequence,
    294                                                             callback);
   \        0x2   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x6   0x....'....        BL       emberAfSendMulticastWithAliasWithCallback
   \        0xA   0xB004             ADD      SP,SP,#+16
   \        0xC   0xBD70             POP      {R4-R6,PC}       ;; return
    295          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x....             LDR.N    R4,??DataTable11_2
   \        0x2   0x9100             STR      R1,[SP, #+0]
   \        0x4   0x6825             LDR      R5,[R4, #+0]
   \        0x6   0x9302             STR      R3,[SP, #+8]
   \        0x8   0x....             LDR.N    R1,??DataTable11
   \        0xA   0x9201             STR      R2,[SP, #+4]
   \        0xC   0x680B             LDR      R3,[R1, #+0]
   \        0xE   0x....             LDR.N    R6,??DataTable11_3
   \       0x10   0x882A             LDRH     R2,[R5, #+0]
   \       0x12   0x6831             LDR      R1,[R6, #+0]
   \       0x14   0x4770             BX       LR
    296          

   \                                 In section .text, align 2, keep-with-next
    297          EmberStatus emberAfSendCommandMulticast(EmberMulticastId multicastId)
    298          {
    299            return emberAfSendCommandMulticastWithCallback(multicastId, NULL);
   \                     emberAfSendCommandMulticast: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x....             B.N      emberAfSendCommandMulticastWithCallback
    300          }
    301          

   \                                 In section .text, align 2, keep-with-next
    302          EmberStatus emberAfSendCommandMulticastWithAlias(EmberMulticastId multicastId, EmberNodeId alias, uint8_t sequence)
    303          {
    304            return emberAfSendCommandMulticastWithAliasWithCallback(multicastId, alias, sequence, NULL);
   \                     emberAfSendCommandMulticastWithAlias: (+1)
   \        0x0   0x2300             MOVS     R3,#+0
   \        0x2   0x....             B.N      emberAfSendCommandMulticastWithAliasWithCallback
    305          }
    306          

   \                                 In section .text, align 2, keep-with-next
    307          EmberStatus emberAfSendCommandMulticastToBindings(void)
    308          {
   \                     emberAfSendCommandMulticastToBindings: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    309            return emberAfSendMulticastToBindings(emAfCommandApsFrame,
    310                                                  *emAfResponseLengthPtr,
    311                                                  emAfZclBuffer);
   \        0x2   0x....             LDR.N    R0,??DataTable11
   \        0x4   0x....             LDR.N    R3,??DataTable11_2
   \        0x6   0x6802             LDR      R2,[R0, #+0]
   \        0x8   0x681C             LDR      R4,[R3, #+0]
   \        0xA   0x....             LDR.N    R0,??DataTable11_3
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0x8821             LDRH     R1,[R4, #+0]
   \       0x10   0xE8BD 0x4010      POP      {R4,LR}
   \       0x14   0x....'....        B.W      emberAfSendMulticastToBindings
    312          }
    313          

   \                                 In section .text, align 2, keep-with-next
    314          EmberStatus emberAfSendCommandUnicastWithCallback(EmberOutgoingMessageType type,
    315                                                            uint16_t indexOrDestination,
    316                                                            EmberAfMessageSentFunction callback)
    317          {
   \                     emberAfSendCommandUnicastWithCallback: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
    318            return emberAfSendUnicastWithCallback(type,
    319                                                  indexOrDestination,
    320                                                  emAfCommandApsFrame,
    321                                                  *emAfResponseLengthPtr,
    322                                                  emAfZclBuffer,
    323                                                  callback);
   \        0x2   0x9201             STR      R2,[SP, #+4]
   \        0x4   0x....             LDR.N    R2,??DataTable11
   \        0x6   0x6814             LDR      R4,[R2, #+0]
   \        0x8   0x....             LDR.N    R5,??DataTable11_2
   \        0xA   0x682E             LDR      R6,[R5, #+0]
   \        0xC   0x9400             STR      R4,[SP, #+0]
   \        0xE   0x....             LDR.N    R4,??DataTable11_3
   \       0x10   0x8833             LDRH     R3,[R6, #+0]
   \       0x12   0x6822             LDR      R2,[R4, #+0]
   \       0x14   0x....'....        BL       emberAfSendUnicastWithCallback
   \       0x18   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    324          }
    325          

   \                                 In section .text, align 2, keep-with-next
    326          EmberStatus emberAfSendCommandUnicast(EmberOutgoingMessageType type,
    327                                                uint16_t indexOrDestination)
    328          {
    329            return emberAfSendCommandUnicastWithCallback(type, indexOrDestination, NULL);
   \                     emberAfSendCommandUnicast: (+1)
   \        0x0   0x2200             MOVS     R2,#+0
   \        0x2   0x....             B.N      emberAfSendCommandUnicastWithCallback
    330          }
    331          

   \                                 In section .text, align 2, keep-with-next
    332          EmberStatus emberAfSendCommandBroadcastWithCallback(EmberNodeId destination,
    333                                                              EmberAfMessageSentFunction callback)
    334          {
   \                     emberAfSendCommandBroadcastWithCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    335            return emberAfSendBroadcastWithCallback(destination,
    336                                                    emAfCommandApsFrame,
    337                                                    *emAfResponseLengthPtr,
    338                                                    emAfZclBuffer,
    339                                                    callback);
   \        0x2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_3: (+1)
   \        0x6   0x....'....        BL       emberAfSendBroadcastWithCallback
   \        0xA   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    340          }
    341          

   \                                 In section .text, align 2, keep-with-next
    342          EmberStatus emberAfSendCommandBroadcastWithAliasWithCallback(EmberNodeId destination,
    343                                                                       EmberNodeId alias,
    344                                                                       uint8_t sequence,
    345                                                                       EmberAfMessageSentFunction callback)
    346          {
   \                     emberAfSendCommandBroadcastWithAliasWithCallback: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
    347            return emberAfSendBroadcastWithAliasWithCallback(destination,
    348                                                             emAfCommandApsFrame,
    349                                                             *emAfResponseLengthPtr,
    350                                                             emAfZclBuffer,
    351                                                             alias,
    352                                                             sequence,
    353                                                             callback);
   \        0x2   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x6   0x....'....        BL       emberAfSendBroadcastWithAliasWithCallback
   \        0xA   0xB004             ADD      SP,SP,#+16
   \        0xC   0xBD70             POP      {R4-R6,PC}       ;; return
    354          }
    355          

   \                                 In section .text, align 2, keep-with-next
    356          EmberStatus emberAfSendCommandBroadcastWithAlias(EmberNodeId destination,
    357                                                           EmberNodeId alias,
    358                                                           uint8_t sequence)
    359          {
    360            return emberAfSendCommandBroadcastWithAliasWithCallback(destination,
    361                                                                    alias,
    362                                                                    sequence,
    363                                                                    NULL);
   \                     emberAfSendCommandBroadcastWithAlias: (+1)
   \        0x0   0x2300             MOVS     R3,#+0
   \        0x2   0x....             B.N      emberAfSendCommandBroadcastWithAliasWithCallback
    364          }
    365          

   \                                 In section .text, align 2, keep-with-next
    366          EmberStatus emberAfSendCommandBroadcast(EmberNodeId destination)
    367          {
    368            return emberAfSendCommandBroadcastWithCallback(destination, NULL);
   \                     emberAfSendCommandBroadcast: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x....             B.N      emberAfSendCommandBroadcastWithCallback
    369          }
    370          

   \                                 In section .text, align 2, keep-with-next
    371          EmberStatus emberAfSendCommandInterPan(EmberPanId panId,
    372                                                 const EmberEUI64 destinationLongId,
    373                                                 EmberNodeId destinationShortId,
    374                                                 EmberMulticastId multicastId,
    375                                                 EmberAfProfileId profileId)
    376          {
   \                     emberAfSendCommandInterPan: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    377            return emberAfSendInterPan(panId,
    378                                       destinationLongId,
    379                                       destinationShortId,
    380                                       multicastId,
    381                                       emAfCommandApsFrame->clusterId,
    382                                       profileId,
    383                                       *emAfResponseLengthPtr,
    384                                       emAfZclBuffer);
   \        0x2   0x....             LDR.N    R5,??DataTable11
   \        0x4   0x682E             LDR      R6,[R5, #+0]
   \        0x6   0xB084             SUB      SP,SP,#+16
   \        0x8   0x9C0A             LDR      R4,[SP, #+40]
   \        0xA   0x9603             STR      R6,[SP, #+12]
   \        0xC   0x....             LDR.N    R7,??DataTable11_2
   \        0xE   0x683E             LDR      R6,[R7, #+0]
   \       0x10   0x8835             LDRH     R5,[R6, #+0]
   \       0x12   0x9401             STR      R4,[SP, #+4]
   \       0x14   0x....             LDR.N    R4,??DataTable11_3
   \       0x16   0x6826             LDR      R6,[R4, #+0]
   \       0x18   0x9502             STR      R5,[SP, #+8]
   \       0x1A   0x8875             LDRH     R5,[R6, #+2]
   \       0x1C   0x9500             STR      R5,[SP, #+0]
   \       0x1E   0x....'....        BL       emberAfSendInterPan
   \       0x22   0xB005             ADD      SP,SP,#+20
   \       0x24   0xBDF0             POP      {R4-R7,PC}       ;; return
    385          }
    386          

   \                                 In section .text, align 2, keep-with-next
    387          EmberApsFrame *emberAfGetCommandApsFrame(void)
    388          {
    389            return emAfCommandApsFrame;
   \                     emberAfGetCommandApsFrame: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable11_3
   \        0x2   0x6800             LDR      R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
    390          }
    391          

   \                                 In section .text, align 2, keep-with-next
    392          void emberAfSetCommandEndpoints(uint8_t sourceEndpoint, uint8_t destinationEndpoint)
    393          {
    394            emAfCommandApsFrame->sourceEndpoint = sourceEndpoint;
   \                     emberAfSetCommandEndpoints: (+1)
   \        0x0   0x....             LDR.N    R2,??DataTable11_3
   \        0x2   0x6813             LDR      R3,[R2, #+0]
   \        0x4   0x7118             STRB     R0,[R3, #+4]
    395            emAfCommandApsFrame->destinationEndpoint = destinationEndpoint;
   \        0x6   0x6810             LDR      R0,[R2, #+0]
   \        0x8   0x7141             STRB     R1,[R0, #+5]
    396          }
   \        0xA   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x....'....        DC32     emAfZclBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \        0x0   0x....'....        DC32     emAfZclBufferLen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \        0x0   0x....'....        DC32     emAfResponseLengthPtr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \        0x0   0x....'....        DC32     emAfCommandApsFrame

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   emberAfFillBuffer
        24   -> vFillBuffer
      32   emberAfFillExternalBuffer
        32   -> vFillBuffer
      32   emberAfFillExternalManufacturerSpecificBuffer
        32   -> vFillBuffer
       0   emberAfGetCommandApsFrame
       0   emberAfSendCommandBroadcast
         0   -> emberAfSendCommandBroadcastWithCallback
       0   emberAfSendCommandBroadcastWithAlias
         0   -> emberAfSendCommandBroadcastWithAliasWithCallback
      32   emberAfSendCommandBroadcastWithAliasWithCallback
        32   -> emberAfSendBroadcastWithAliasWithCallback
      16   emberAfSendCommandBroadcastWithCallback
        16   -> emberAfSendBroadcastWithCallback
      40   emberAfSendCommandInterPan
        40   -> emberAfSendInterPan
       0   emberAfSendCommandMulticast
         0   -> emberAfSendCommandMulticastWithCallback
       8   emberAfSendCommandMulticastToBindings
         0   -> emberAfSendMulticastToBindings
       0   emberAfSendCommandMulticastWithAlias
         0   -> emberAfSendCommandMulticastWithAliasWithCallback
      32   emberAfSendCommandMulticastWithAliasWithCallback
        32   -> emberAfSendMulticastWithAliasWithCallback
      16   emberAfSendCommandMulticastWithCallback
        16   -> emberAfSendMulticastWithCallback
       0   emberAfSendCommandUnicast
         0   -> emberAfSendCommandUnicastWithCallback
       0   emberAfSendCommandUnicastToBindings
         0   -> emberAfSendCommandUnicastToBindingsWithCallback
      16   emberAfSendCommandUnicastToBindingsWithCallback
         0   -> emberAfSendUnicastToBindingsWithCallback
      24   emberAfSendCommandUnicastWithCallback
        24   -> emberAfSendUnicastWithCallback
       0   emberAfSetCommandEndpoints
       8   emberAfSetExternalBuffer
      40   vFillBuffer
        40   -> emberAfLongStringLength
        40   -> emberAfNextSequence
        40   -> emberAfStringLength
        40   -> halCommonMemMove


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_2
       4  ??DataTable11_3
      26  ?Subroutine0
      22  ?Subroutine1
      18  ?Subroutine2
      12  ?Subroutine3
       4  emAfCommandApsFrame
       4  emAfResponseLengthPtr
       4  emAfZclBuffer
       2  emAfZclBufferLen
      20  emberAfFillBuffer
      18  emberAfFillExternalBuffer
      22  emberAfFillExternalManufacturerSpecificBuffer
       6  emberAfGetCommandApsFrame
       4  emberAfSendCommandBroadcast
       4  emberAfSendCommandBroadcastWithAlias
      14  emberAfSendCommandBroadcastWithAliasWithCallback
      12  emberAfSendCommandBroadcastWithCallback
      38  emberAfSendCommandInterPan
       4  emberAfSendCommandMulticast
      24  emberAfSendCommandMulticastToBindings
       4  emberAfSendCommandMulticastWithAlias
      14  emberAfSendCommandMulticastWithAliasWithCallback
      12  emberAfSendCommandMulticastWithCallback
       4  emberAfSendCommandUnicast
       4  emberAfSendCommandUnicastToBindings
      28  emberAfSendCommandUnicastToBindingsWithCallback
      26  emberAfSendCommandUnicastWithCallback
      12  emberAfSetCommandEndpoints
      20  emberAfSetExternalBuffer
     318  vFillBuffer

 
  14 bytes in section .bss
 702 bytes in section .text
 
 702 bytes of CODE memory
  14 bytes of DATA memory

Errors: none
Warnings: none
