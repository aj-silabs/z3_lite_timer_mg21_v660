###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:04
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\green-power-client\green-power-client.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW8040.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\green-power-client\green-power-client.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"green-power-client.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\green-power-client\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\green-power-client.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\green-power-client.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\green-power-client\green-power-client.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Routines for the Green Power Client plugin.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          #include "enums.h"
     19          #include "app/framework/include/af.h"
     20          #include "app/framework/util/af-main.h"
     21          #include "app/framework/util/common.h"
     22          #include "green-power-client.h"
     23          #include "stack/include/gp-types.h"
     24          //#include "green-power-proxy-table.h"
     25          #include "stack/gp/gp-proxy-table.h"
     26          #include "app/framework/plugin/green-power-common/green-power-common.h"
     27          
     28          //#include "stack/gp/gp.h"//emClearGpTxQueue();
     29          
     30          #ifdef EZSP_HOST
     31            #define emberGpepIncomingMessageHandler ezspGpepIncomingMessageHandler
     32            #define emberDGpSentHandler ezspDGpSentHandler
     33          #endif
     34          
     35          #define MIN_RESERVED_GPD_COMMAND_ID 0xE4
     36          #define MAX_RESERVED_GPD_COMMAND_ID 0xEF
     37          #define EMBER_ZCL_GP_GPDF_RESERVED_MIN 0xF7
     38          #define EMBER_ZCL_GP_GPDF_RESERVED_MAX  0xFF
     39          
     40          #define GP_PROXY_TABLE_RESPONSE_ENTRIES_OFFSET 3
     41          #define GP_NON_MANUFACTURER_ZCL_HEADER_LENGTH 3
     42          

   \                                 In section .bss, align 1
     43          bool __emIsGpTestDevice = false;
   \                     __emIsGpTestDevice:
   \        0x0                      DS8 1
     44          
     45          void emGpSecurityResponse(EmberStatus status,
     46                                    uint8_t dgpHandle,
     47                                    EmberGpAddress *addr,
     48                                    EmberGpSecurityLevel gpdfSecurityLevel,
     49                                    EmberGpKeyType gpdf_KeyType,
     50                                    EmberKeyData gpdKey,
     51                                    EmberGpSecurityFrameCounter gpdSecurityFrameCounter);
     52          
     53          /*
     54             EmberStatus emberDGpSend(bool action,
     55                                   bool useCca,
     56                                   EmberGpAddress *addr,
     57                                   uint8_t gpdCommandId,
     58                                   uint8_t gpdAsduLength,
     59                                   uint8_t const *gpdAsdu,
     60                                   uint8_t gpepHandle,
     61                                   uint16_t gpTxQueueEntryLifetimeMs);
     62           */
     63          
     64          void emSetAddDelay(uint16_t delay);
     65          bool emGpTxQueueFull(EmberGpAddress *addr);
     66          

   \                                 In section .bss, align 4
     67          static EmberAfGreenPowerClientCommissioningState commissioningState;
   \                     commissioningState:
   \        0x0                      DS8 12

   \                                 In section .bss, align 4
     68          static EmberAfGreenPowerDuplicateFilter duplicateFilter;
   \                     duplicateFilter:
   \        0x0                      DS8 96

   \                                 In section .bss, align 4
     69          EmberEventControl emberAfPluginGreenPowerClientExpireSeqNumEventControl;
   \                     emberAfPluginGreenPowerClientExpireSeqNumEventControl:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
     70          EmberEventControl emberAfPluginGreenPowerClientExitCommissioningEventControl;
   \                     emberAfPluginGreenPowerClientExitCommissioningEventControl:
   \        0x0                      DS8 8

   \                                 In section .bss, align 4
     71          EmberEventControl emberAfPluginGreenPowerClientChannelEventControl;
   \                     emberAfPluginGreenPowerClientChannelEventControl:
   \        0x0                      DS8 8
     72          

   \                                 In section .text, align 2, keep-with-next
     73          void emberAfPluginGreenPowerClientInitCallback(void)
     74          {
   \                     emberAfPluginGreenPowerClientInitCallback: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
     75            MEMSET(&commissioningState,
     76                   0x00,
     77                   sizeof(EmberAfGreenPowerClientCommissioningState));
   \        0x2   0x....'....        LDR.W    R4,??DataTable12
   \        0x6   0x220A             MOVS     R2,#+10
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0x4620             MOV      R0,R4
   \        0xC   0x....'....        BL       halCommonMemSet
     78            MEMSET(&duplicateFilter, 0x00, sizeof(EmberAfGreenPowerDuplicateFilter));
   \       0x10   0x2260             MOVS     R2,#+96
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x....'....        LDR.W    R0,??DataTable13
   \       0x18   0x....'....        BL       halCommonMemSet
     79          
     80            commissioningState.gppCommissioningWindow = EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_GPP_COMMISSIONING_WINDOW;
   \       0x1C   0x20A0             MOVS     R0,#+160
   \       0x1E   0x8060             STRH     R0,[R4, #+2]
     81          
     82            // Write the max proxy table entries attribute, since we currently have no way
     83            // to configure it at compile time.
     84            uint8_t proxyTableSize = EMBER_GP_PROXY_TABLE_SIZE;
   \       0x20   0x2105             MOVS     R1,#+5
     85            EmberAfStatus UNUSED status
     86              = emberAfWriteClientAttribute(GP_ENDPOINT,
     87                                            ZCL_GREEN_POWER_CLUSTER_ID,
     88                                            ZCL_GP_CLIENT_GPP_MAX_PROXY_TABLE_ENTRIES_ATTRIBUTE_ID,
     89                                            &proxyTableSize,
     90                                            ZCL_INT8U_ATTRIBUTE_TYPE);
   \       0x22   0x2020             MOVS     R0,#+32
   \       0x24   0xF88D 0x1004      STRB     R1,[SP, #+4]
   \       0x28   0x9000             STR      R0,[SP, #+0]
   \       0x2A   0xAB01             ADD      R3,SP,#+4
   \       0x2C   0x2210             MOVS     R2,#+16
   \       0x2E   0x2121             MOVS     R1,#+33
   \       0x30   0x20F2             MOVS     R0,#+242
   \       0x32   0x....'....        BL       emberAfWriteClientAttribute
     91          }
   \       0x36   0xBD13             POP      {R0,R1,R4,PC}    ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          void emberAfGreenPowerClusterExitCommissioningMode()
     94          {
     95            EmberGpAddress addr;
     96            //emberAfPluginGreenPowerClientInitCallback();
     97            commissioningState.inCommissioningMode = false;
   \                     emberAfGreenPowerClusterExitCommissioningMode: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....'....        LDR.W    R1,??DataTable12
   \        0x6   0xB500             PUSH     {LR}
   \        0x8   0x7008             STRB     R0,[R1, #+0]
     98            emberAfGreenPowerClusterPrintln("Exit comm for sink %2x", commissioningState.commissioningSink);
     99          
    100            // Use 0xFFFFFFFF wildcard to clear out the gpTxQueue
    101            addr.applicationId = EMBER_GP_APPLICATION_SOURCE_ID;
    102            addr.id.sourceId = 0xFFFFFFFF;
   \        0xA   0xF04F 0x31FF      MOV      R1,#-1
   \        0xE   0xB087             SUB      SP,SP,#+28
   \       0x10   0x9104             STR      R1,[SP, #+16]
    103            emberDGpSend(false, false, &addr, 0, 0, NULL, 0, 0);
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x2300             MOVS     R3,#+0
   \       0x16   0xF88D 0x0018      STRB     R0,[SP, #+24]
   \       0x1A   0x9003             STR      R0,[SP, #+12]
   \       0x1C   0x9002             STR      R0,[SP, #+8]
   \       0x1E   0x9101             STR      R1,[SP, #+4]
   \       0x20   0x9300             STR      R3,[SP, #+0]
   \       0x22   0xAA04             ADD      R2,SP,#+16
   \       0x24   0x....'....        BL       emberDGpSend
    104            //  TODO:  remove sender information in stack.
    105          }
   \       0x28   0xB007             ADD      SP,SP,#+28
   \       0x2A   0xBD00             POP      {PC}             ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void emberAfPluginGreenPowerClientChannelEventHandler()
    108          {
   \                     emberAfPluginGreenPowerClientChannelEventHandler: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
    109            if (commissioningState.channelStatus & GP_CLIENT_ON_TRANSMIT_CHANNEL_MASK) {
   \        0x2   0x....'....        LDR.W    R4,??DataTable12
   \        0x6   0x7A20             LDRB     R0,[R4, #+8]
   \        0x8   0xB087             SUB      SP,SP,#+28
   \        0xA   0x07C1             LSLS     R1,R0,#+31
   \        0xC   0xD510             BPL.N    ??emberAfPluginGreenPowerClientChannelEventHand_0
    110              EmberGpAddress addr;
    111              addr.id.sourceId = 0;
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x9204             STR      R2,[SP, #+16]
    112              addr.applicationId = 0;
   \       0x12   0xF88D 0x2018      STRB     R2,[SP, #+24]
    113              emberAfGreenPowerClusterPrintln("return to chan %d", emberAfGetRadioChannel());
    114              emberStopScan();
   \       0x16   0x....'....        BL       emberStopScan
    115              commissioningState.channelStatus = 0;
   \       0x1A   0x2000             MOVS     R0,#+0
    116              //clear the gpTxQueue
    117              emberDGpSend(false, false, &addr, 0, 0, NULL, 0, 0);
   \       0x1C   0x2100             MOVS     R1,#+0
   \       0x1E   0x2300             MOVS     R3,#+0
   \       0x20   0x7220             STRB     R0,[R4, #+8]
   \       0x22   0x9103             STR      R1,[SP, #+12]
   \       0x24   0x9002             STR      R0,[SP, #+8]
   \       0x26   0x9001             STR      R0,[SP, #+4]
   \       0x28   0x9300             STR      R3,[SP, #+0]
   \       0x2A   0xAA04             ADD      R2,SP,#+16
   \       0x2C   0x....'....        BL       emberDGpSend
    118            }
    119            emberEventControlSetInactive(emberAfPluginGreenPowerClientChannelEventControl);
   \                     ??emberAfPluginGreenPowerClientChannelEventHand_0: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x....'....        LDR.W    R1,??DataTable13_1
   \       0x36   0x7008             STRB     R0,[R1, #+0]
    120          }
   \       0x38   0xB008             ADD      SP,SP,#+32
   \       0x3A   0xBD10             POP      {R4,PC}          ;; return
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void emberAfPluginGreenPowerClientExitCommissioningEventHandler()
    123          {
   \                     emberAfPluginGreenPowerClientExitCommissioningEventHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    124            emberAfGreenPowerClusterExitCommissioningMode();
   \        0x2   0x....'....        BL       emberAfGreenPowerClusterExitCommissioningMode
    125            emberEventControlSetInactive(emberAfPluginGreenPowerClientExitCommissioningEventControl);
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x....'....        LDR.W    R1,??DataTable13_2
   \        0xC   0x7008             STRB     R0,[R1, #+0]
    126          }
   \        0xE   0xBD01             POP      {R0,PC}          ;; return
    127          
    128          /*
    129           * Disable default response bit should be set per GP Spec 14-0563-08
    130           */

   \                                 In section .text, align 2, keep-with-next
    131          bool emberAfGreenPowerClusterGpProxyCommissioningModeCallback(uint8_t options,
    132                                                                        uint16_t commissioningWindow,
    133                                                                        uint8_t channel)
    134          {
   \                     emberAfGreenPowerClusterGpProxyCommissioningModeCallback: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
    135            bool enterCommissioningMode = (options
    136                                           & EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_ACTION);
   \        0x4   0xF000 0x0801      AND      R8,R0,#0x1
    137            // The exitMode enumuration type is mapped as [b3b2b1] = [b3b2] | [b1] of `options` feilds in the Gp Proxy Commissioning Mode
    138            // commaand where (b3-b2) for `ExitMode` feilds and b1 is the exit on commissioning window time expiry.
    139            uint8_t exitMode = (options                                                                         \
    140                                & (EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_EXIT_MODE                        \
    141                                   | EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_COMMISSIONING_WINDOW_PRESENT)) \
    142                               >> 1;
   \        0x8   0xF3C0 0x0442      UBFX     R4,R0,#+1,#+3
   \        0xC   0x4689             MOV      R9,R1
   \        0xE   0x4692             MOV      R10,R2
    143          
    144            bool chanPresent = (options
    145                                & EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_CHANNEL_PRESENT); // should always be 0
   \       0x10   0x0906             LSRS     R6,R0,#+4
    146            bool unicastCommunication = (options
    147                                         & EMBER_AF_GP_PROXY_COMMISSIONING_MODE_OPTION_UNICAST_COMMUNICATION);
   \       0x12   0x0945             LSRS     R5,R0,#+5
    148          
    149            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
   \       0x14   0x....'....        LDR.W    R0,??DataTable13_3
   \       0x18   0x6801             LDR      R1,[R0, #+0]
   \       0x1A   0xF006 0x0601      AND      R6,R6,#0x1
   \       0x1E   0xF005 0x0501      AND      R5,R5,#0x1
   \       0x22   0x680A             LDR      R2,[R1, #+0]
   \       0x24   0x7950             LDRB     R0,[R2, #+5]
   \       0x26   0x28F2             CMP      R0,#+242
   \       0x28   0xD126             BNE.N    ??emberAfGreenPowerClusterGpProxyCommissioningM_0
    150            } else if (commissioningState.inCommissioningMode
    151                       && (emberGetSender() != commissioningState.commissioningSink)) {
   \       0x2A   0x....'....        LDR.W    R7,??DataTable12
   \       0x2E   0x7838             LDRB     R0,[R7, #+0]
   \       0x30   0xB120             CBZ.N    R0,??emberAfGreenPowerClusterGpProxyCommissioningM_1
   \       0x32   0x....'....        BL       emberGetSender
   \       0x36   0x88F9             LDRH     R1,[R7, #+6]
   \       0x38   0x4288             CMP      R0,R1
   \       0x3A   0xD11D             BNE.N    ??emberAfGreenPowerClusterGpProxyCommissioningM_0
    152              // check if current message sender is same as sender that put us in
    153              // commissioning mode.
    154              // if not, drop message silently.
    155            } else if (enterCommissioningMode) {
   \                     ??emberAfGreenPowerClusterGpProxyCommissioningM_1: (+1)
   \       0x3C   0xF1B8 0x0F00      CMP      R8,#+0
   \       0x40   0xD018             BEQ.N    ??emberAfGreenPowerClusterGpProxyCommissioningM_2
    156              commissioningState.commissioningSink = emberGetSender();
   \       0x42   0x....'....        BL       emberGetSender
   \       0x46   0x80F8             STRH     R0,[R7, #+6]
    157              commissioningState.inCommissioningMode = true;
   \       0x48   0x2001             MOVS     R0,#+1
    158              commissioningState.gppCommissioningWindow = EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_GPP_COMMISSIONING_WINDOW;
   \       0x4A   0x21A0             MOVS     R1,#+160
    159              commissioningState.exitMode = (EmberAfGreenPowerClientCommissioningExitMode) exitMode;
    160              commissioningState.unicastCommunication = unicastCommunication;
    161              emberAfGreenPowerClusterPrintln("Enter comm for sink %2x", commissioningState.commissioningSink);
    162              if (commissioningState.exitMode & EMBER_AF_GPC_COMMISSIONING_EXIT_ON_COMMISSIONING_WINDOW_EXP) {
   \       0x4C   0x07E2             LSLS     R2,R4,#+31
   \       0x4E   0x7038             STRB     R0,[R7, #+0]
   \       0x50   0x8079             STRH     R1,[R7, #+2]
   \       0x52   0x707C             STRB     R4,[R7, #+1]
   \       0x54   0xBF46             ITTE     MI 
   \       0x56   0xF44F 0x717A      MOVMI    R1,#+1000
   \       0x5A   0xFB01 0xF109      MULMI    R1,R1,R9
   \       0x5E   0x....'....        LDRPL.W  R1,??DataTable13_4  ;; 0x27100
   \       0x62   0x717D             STRB     R5,[R7, #+5]
   \       0x64   0x....'....        LDR.W    R0,??DataTable13_2
    163                // store the new commissioning window value and update our local default
    164                // one.
    165                emberEventControlSetDelayMS(emberAfPluginGreenPowerClientExitCommissioningEventControl, commissioningWindow * 1000);
    166              } else {
    167                emberEventControlSetDelayMS(emberAfPluginGreenPowerClientExitCommissioningEventControl, EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_GPP_COMMISSIONING_WINDOW * 1000);
   \       0x68   0x....'....        BL       emEventControlSetDelayMS
    168              }
    169              if (chanPresent) {
   \       0x6C   0xB126             CBZ.N    R6,??emberAfGreenPowerClusterGpProxyCommissioningM_0
    170                commissioningState.channel = channel;
   \       0x6E   0xF887 0xA004      STRB     R10,[R7, #+4]
   \       0x72   0xE001             B.N      ??emberAfGreenPowerClusterGpProxyCommissioningM_0
    171                // TODO: goto channel
    172              } else {
    173                // TODO: goto operational channel
    174              }
    175            } else {
    176              // exit commissioning mode.
    177              emberAfGreenPowerClusterExitCommissioningMode();
   \                     ??emberAfGreenPowerClusterGpProxyCommissioningM_2: (+1)
   \       0x74   0x....'....        BL       emberAfGreenPowerClusterExitCommissioningMode
    178            }
    179            return true;
   \                     ??emberAfGreenPowerClusterGpProxyCommissioningM_0: (+1)
   \       0x78   0x2001             MOVS     R0,#+1
   \       0x7A   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    180          }
    181          

   \                                 In section .text, align 2, keep-with-next
    182          bool emberAfGreenPowerClusterGpNotificationResponseCallback(uint8_t options,
    183                                                                      uint32_t gpdSrcId,
    184                                                                      uint8_t* gpdIeee,
    185                                                                      uint8_t endpoint,
    186                                                                      uint32_t gpdSecurityFrameCounter)
    187          {
    188            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
    189              goto kickout;
    190            }
    191            kickout: return false;
   \                     emberAfGreenPowerClusterGpNotificationResponseCallback: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    192          }
    193          
    194          /*
    195           * Disable default response should be enabled in the sending message.
    196           */

   \                                 In section .text, align 2, keep-with-next
    197          bool emberAfGreenPowerClusterGpPairingCallback(uint32_t options, // actually a int24u.
    198                                                         uint32_t gpdSrcId,
    199                                                         uint8_t* gpdIeee,
    200                                                         uint8_t endpoint,
    201                                                         uint8_t* sinkIeeeAddress,
    202                                                         uint16_t sinkNwkAddress,
    203                                                         uint16_t sinkGroupId,
    204                                                         uint8_t deviceId,
    205                                                         uint32_t gpdSecurityFrameCounter,
    206                                                         uint8_t* gpdKey,
    207                                                         uint16_t assignedAlias,
    208                                                         uint8_t groupcastRadius)
    209          {
   \                     emberAfGreenPowerClusterGpPairingCallback: (+1)
   \        0x0   0xE92D 0x4FF3      PUSH     {R0,R1,R4-R11,LR}
   \        0x4   0xB08F             SUB      SP,SP,#+60
   \        0x6   0x4607             MOV      R7,R0
   \        0x8   0x4615             MOV      R5,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0xF8DD 0x9084      LDR      R9,[SP, #+132]
    210            uint8_t allZeroesIeeeAddress[17] = { 0 };
   \       0x10   0xA80A             ADD      R0,SP,#+40
   \       0x12   0x2114             MOVS     R1,#+20
   \       0x14   0x....'....        BL       __aeabi_memclr4
    211            uint8_t securityLevel = (options & EMBER_AF_GP_PAIRING_OPTION_SECURITY_LEVEL)
    212                                    >> EMBER_AF_GP_PAIRING_OPTION_SECURITY_LEVEL_OFFSET;
   \       0x18   0x0A78             LSRS     R0,R7,#+9
   \       0x1A   0xF000 0x0A03      AND      R10,R0,#0x3
    213            uint8_t commMode = ((options & EMBER_AF_GP_PAIRING_OPTION_COMMUNICATION_MODE)
    214                                >> EMBER_AF_GP_PAIRING_OPTION_COMMUNICATION_MODE_OFFSET);
   \       0x1E   0xF3C7 0x1041      UBFX     R0,R7,#+5,#+2
   \       0x22   0xF88D 0x0018      STRB     R0,[SP, #+24]
    215            uint8_t securityKeyType = ((options & EMBER_AF_GP_PAIRING_OPTION_SECURITY_KEY_TYPE)
    216                                       >> EMBER_AF_GP_PAIRING_OPTION_SECURITY_KEY_TYPE_OFFSET);
   \       0x26   0x0AF8             LSRS     R0,R7,#+11
   \       0x28   0xF000 0x0B07      AND      R11,R0,#0x7
    217            EmberGpAddress addr;
    218            bool createdPairing = false;
    219            bool broadcast = false;
    220            // If "option & addSinkBit(3) == 1" AND "groupcastRadiusBit(17)==0"
    221            // then groupcastRadius = 0 not 0xFF that was passed by call-command-handler
    222            if ((options & EMBER_AF_GP_PAIRING_OPTION_ADD_SINK)
    223                && !(options & EMBER_AF_GP_PAIRING_OPTION_GROUPCAST_RADIUS_PRESENT)) {
   \       0x2C   0x....'....        LDR.W    R0,??DataTable14  ;; 0x20008
   \       0x30   0x2400             MOVS     R4,#+0
   \       0x32   0x4038             ANDS     R0,R0,R7
   \       0x34   0x2808             CMP      R0,#+8
    224              groupcastRadius = 0;
    225            }
    226          
    227            EmberAfClusterCommand *cmd =  emberAfCurrentCommand();
    228            if (cmd->type == EMBER_INCOMING_BROADCAST) {
   \       0x36   0x....'....        LDR.W    R0,??DataTable13_3
   \       0x3A   0x6801             LDR      R1,[R0, #+0]
   \       0x3C   0xBF08             IT       EQ 
   \       0x3E   0x46A1             MOVEQ    R9,R4
   \       0x40   0x790A             LDRB     R2,[R1, #+4]
   \       0x42   0x2A04             CMP      R2,#+4
   \       0x44   0xBF08             IT       EQ 
   \       0x46   0x2401             MOVEQ    R4,#+1
    229              broadcast = true;
   \       0x48   0x002B             MOVS     R3,R5
    230            }
    231          
    232            //handle null args for EZSP
    233            if (gpdIeee  == NULL) {
    234              gpdIeee = allZeroesIeeeAddress;
   \       0x4A   0x9D1A             LDR      R5,[SP, #+104]
   \       0x4C   0xBF08             IT       EQ 
   \       0x4E   0xAB0A             ADDEQ    R3,SP,#+40
    235            }
    236            if (sinkIeeeAddress  == NULL) {
   \       0x50   0xB905             CBNZ.N   R5,??emberAfGreenPowerClusterGpPairingCallback_0
    237              sinkIeeeAddress = allZeroesIeeeAddress;
   \       0x52   0xAD0A             ADD      R5,SP,#+40
   \                     ??emberAfGreenPowerClusterGpPairingCallback_0: (+1)
   \       0x54   0x9E1F             LDR      R6,[SP, #+124]
    238            }
    239            if (gpdKey  == NULL) {
   \       0x56   0xB906             CBNZ.N   R6,??emberAfGreenPowerClusterGpPairingCallback_1
    240              gpdKey = allZeroesIeeeAddress;
   \       0x58   0xAE0A             ADD      R6,SP,#+40
   \                     ??emberAfGreenPowerClusterGpPairingCallback_1: (+1)
   \       0x5A   0x9A10             LDR      R2,[SP, #+64]
    241            }
    242          
    243            if (!emGpMakeAddr(&addr,
    244                              options & EMBER_AF_GP_PAIRING_OPTION_APPLICATION_ID,
    245                              gpdSrcId,
    246                              gpdIeee,
    247                              endpoint)) {
   \       0x5C   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x60   0xF007 0x0107      AND      R1,R7,#0x7
   \       0x64   0xA807             ADD      R0,SP,#+28
   \       0x66   0x....'....        BL       emGpMakeAddr
   \       0x6A   0x2800             CMP      R0,#+0
   \       0x6C   0xD054             BEQ.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    248              // GPD Address is invalid, so drop the command
    249              return true;
    250            }
    251          
    252            emberAfCorePrint("GP Pairing\n");
   \       0x6E   0x....'....        LDR.W    R1,??DataTable15
   \       0x72   0x2001             MOVS     R0,#+1
   \       0x74   0x....'....        BL       emberAfPrint
    253          
    254            // Commissioning: Step 21a: Proxy finalizes commissioning
    255            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
   \       0x78   0x....'....        BL       ?Subroutine9
   \                     ??CrossCallReturnLabel_26: (+1)
   \       0x7C   0xD14C             BNE.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    256            } else if (securityLevel == EMBER_GP_SECURITY_LEVEL_RESERVED) {
   \       0x7E   0xF1BA 0x0F01      CMP      R10,#+1
   \       0x82   0xD049             BEQ.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    257            } else if ((addr.applicationId != EMBER_GP_APPLICATION_SOURCE_ID)
    258                       && (addr.applicationId != EMBER_GP_APPLICATION_IEEE_ADDRESS)) {
   \       0x84   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \       0x88   0xB1C0             CBZ.N    R0,??emberAfGreenPowerClusterGpPairingCallback_3
   \       0x8A   0x2802             CMP      R0,#+2
   \       0x8C   0xD144             BNE.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    259            } else if ((addr.applicationId == EMBER_GP_APPLICATION_SOURCE_ID)
    260                       && ((addr.id.sourceId == GP_GPD_SRC_ID_RESERVED_0)
    261                           || ((addr.id.sourceId >= GP_GPD_SRC_ID_RESERVED_FFFFFF9)
    262                               && (addr.id.sourceId <= GP_GPD_SRC_ID_RESERVED_FFFFFFE)))) {
    263            } else if ((addr.applicationId == EMBER_GP_APPLICATION_IEEE_ADDRESS)
    264                       && ((emberAfMemoryByteCompare(addr.id.gpdIeeeAddress, EUI64_SIZE, 0)))) {
   \       0x8E   0x2200             MOVS     R2,#+0
   \       0x90   0x2108             MOVS     R1,#+8
   \       0x92   0xA807             ADD      R0,SP,#+28
   \       0x94   0x....'....        BL       emMemoryByteCompare
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD13D             BNE.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    265            } else if ((options & EMBER_AF_GP_PAIRING_OPTION_ADD_SINK)
    266                       && (options & EMBER_AF_GP_PAIRING_OPTION_REMOVE_GPD)) {
   \                     ??emberAfGreenPowerClusterGpPairingCallback_4: (+1)
   \       0x9C   0xF007 0x0018      AND      R0,R7,#0x18
   \       0xA0   0x2818             CMP      R0,#+24
   \       0xA2   0xD039             BEQ.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    267            } else if ((securityKeyType > EMBER_GP_SECURITY_KEY_GPD_OOB)
    268                       &&  (securityKeyType < EMBER_GP_SECURITY_KEY_GPD_DERIVED)) {
   \       0xA4   0xF1AB 0x0005      SUB      R0,R11,#+5
   \       0xA8   0x2802             CMP      R0,#+2
   \       0xAA   0xD335             BCC.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    269            } else if ((commMode == EMBER_ZCL_GP_PAIRING_OPTIONS_COMMUNICATION_MODE_FULL_UNICAST_FORWARDING)
    270                       && (!(options & EMBER_AF_GP_PAIRING_OPTION_REMOVE_GPD))) {
   \       0xAC   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \       0xB0   0xB968             CBNZ.N   R0,??emberAfGreenPowerClusterGpPairingCallback_5
   \       0xB2   0x06F8             LSLS     R0,R7,#+27
   \       0xB4   0xD40B             BMI.N    ??emberAfGreenPowerClusterGpPairingCallback_5
    271              // CCB #2278 -In case of unicast GP Pairing, the proxy SHALL respond with ZCL Default
    272              //  Response with relevant error code: INVALID_FIELD for Full unicast;
    273              //  -In case of broadcast GP Pairing, the proxy SHALL silently drop the frame.
    274              //  If RemoveGPD options bit is set the comms mode is not valid so ignore this test
    275              if (broadcast == true) {
   \       0xB6   0xBB7C             CBNZ.N   R4,??emberAfGreenPowerClusterGpPairingCallback_2
    276                // Silently drop it as its a broadcast
    277              } else {
    278                //send default response for unicast pairing
    279                emberAfSendImmediateDefaultResponse(EMBER_ZCL_STATUS_INVALID_FIELD);
   \       0xB8   0x2085             MOVS     R0,#+133
   \       0xBA   0xE02B             B.N      ??emberAfGreenPowerClusterGpPairingCallback_6
    280              }
    281            } else {
   \                     ??emberAfGreenPowerClusterGpPairingCallback_3: (+1)
   \       0xBC   0x9807             LDR      R0,[SP, #+28]
   \       0xBE   0xB358             CBZ.N    R0,??emberAfGreenPowerClusterGpPairingCallback_2
   \       0xC0   0xF110 0x0F07      CMN      R0,#+7
   \       0xC4   0xD3EA             BCC.N    ??emberAfGreenPowerClusterGpPairingCallback_4
   \       0xC6   0xF110 0x0F01      CMN      R0,#+1
   \       0xCA   0xD125             BNE.N    ??emberAfGreenPowerClusterGpPairingCallback_2
   \       0xCC   0xE7E6             B.N      ??emberAfGreenPowerClusterGpPairingCallback_4
   \                     ??emberAfGreenPowerClusterGpPairingCallback_5: (+1)
   \       0xCE   0x9A1E             LDR      R2,[SP, #+120]
   \       0xD0   0x9820             LDR      R0,[SP, #+128]
   \       0xD2   0x991C             LDR      R1,[SP, #+112]
    282              // Step b:
    283          
    284              emberAfGreenPowerClusterPrintln("GP Pairing SRCID = %4x, Opt= %u Sink = %2x", addr.id.sourceId, options, sinkNwkAddress);
    285          
    286              createdPairing = emberGpProxyTableProcessGpPairing(options,
    287                                                                 &addr,
    288                                                                 commMode,
    289                                                                 sinkNwkAddress,
    290                                                                 sinkGroupId,
    291                                                                 assignedAlias,
    292                                                                 sinkIeeeAddress,
    293                                                                 (EmberKeyData *) gpdKey,
    294                                                                 gpdSecurityFrameCounter,
    295                                                                 groupcastRadius);
    296          
    297              // step c: optionally, exit commissioning mode
    298              if (createdPairing
    299                  && (commissioningState.exitMode & EMBER_AF_GPC_COMMISSIONING_EXIT_ON_FIRST_PAIRING_SUCCESS)) {
   \       0xD4   0x9204             STR      R2,[SP, #+16]
   \       0xD6   0x9B1B             LDR      R3,[SP, #+108]
   \       0xD8   0xF89D 0x2018      LDRB     R2,[SP, #+24]
   \       0xDC   0x9001             STR      R0,[SP, #+4]
   \       0xDE   0x9100             STR      R1,[SP, #+0]
   \       0xE0   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \       0xE4   0x9603             STR      R6,[SP, #+12]
   \       0xE6   0x9502             STR      R5,[SP, #+8]
   \       0xE8   0xA907             ADD      R1,SP,#+28
   \       0xEA   0x4638             MOV      R0,R7
   \       0xEC   0x....'....        BL       emberGpProxyTableProcessGpPairing
   \       0xF0   0xB138             CBZ.N    R0,??emberAfGreenPowerClusterGpPairingCallback_7
   \       0xF2   0x....'....        LDR.W    R0,??DataTable12
   \       0xF6   0x7841             LDRB     R1,[R0, #+1]
   \       0xF8   0x0788             LSLS     R0,R1,#+30
   \       0xFA   0xD50D             BPL.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    300                emberAfGreenPowerClusterExitCommissioningMode();
   \       0xFC   0x....'....        BL       emberAfGreenPowerClusterExitCommissioningMode
   \      0x100   0xE00A             B.N      ??emberAfGreenPowerClusterGpPairingCallback_2
    301              } else if ((options & EMBER_AF_GP_PAIRING_OPTION_ADD_SINK) && !createdPairing) {
   \                     ??emberAfGreenPowerClusterGpPairingCallback_7: (+1)
   \      0x102   0x0738             LSLS     R0,R7,#+28
   \      0x104   0xD508             BPL.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    302          #ifndef EZSP_HOST
    303                uint8_t index = emGpProxyTableGetFreeEntryIndex();  //emGpProxyTableFindOrAllocateEntry(&addr);   //checking if pairing failed because of no
    304                // space
    305                if (index == 0xFF) {
   \      0x106   0x....'....        BL       emGpProxyTableGetFreeEntryIndex
   \      0x10A   0x28FF             CMP      R0,#+255
   \      0x10C   0xBF08             IT       EQ 
   \      0x10E   0x2C00             CMPEQ    R4,#+0
    306                  emberAfGreenPowerClusterPrintln("ERR PROXY TABLE FULL");
    307                  if (broadcast != true) {
   \      0x110   0xD102             BNE.N    ??emberAfGreenPowerClusterGpPairingCallback_2
    308                    // CCB # 2279 - only send default response if not broadcast - broadcasts are dropped
    309                    emberAfSendImmediateDefaultResponse(EMBER_ZCL_STATUS_INSUFFICIENT_SPACE);
   \      0x112   0x2089             MOVS     R0,#+137
   \                     ??emberAfGreenPowerClusterGpPairingCallback_6: (+1)
   \      0x114   0x....'....        BL       emberAfSendImmediateDefaultResponse
    310                  }
    311                }
    312              }
    313          #else
    314                // Checking if the proxy table is full is more of a pain on Host
    315                // We have to search through the whole table.
    316                // Because of this, we only do it for the non-broadcast case
    317                // Next time we bump the EZSP version, we should change the
    318                // return of Process GP Pairing to a status instead of a bool
    319                if (!broadcast) {
    320                  EmberGpProxyTableEntry entry;
    321                  for (uint8_t entryIndex = 0; entryIndex < EMBER_GP_PROXY_TABLE_SIZE; entryIndex++) {
    322                    emberGpProxyTableGetEntry(entryIndex, &entry);
    323                    if (entry.status == EMBER_GP_PROXY_TABLE_ENTRY_STATUS_UNUSED) {
    324                      return true; // We have an unused entry so we don't need to send a DR for full
    325                    }
    326                  }
    327                  emberAfGreenPowerClusterPrintln("ERR PROXY TABLE FULL");
    328                  emberAfSendImmediateDefaultResponse(EMBER_ZCL_STATUS_INSUFFICIENT_SPACE);
    329                }
    330              }
    331          #endif
    332            }
    333            return true;
   \                     ??emberAfGreenPowerClusterGpPairingCallback_2: (+1)
   \      0x118   0x2001             MOVS     R0,#+1
   \      0x11A   0xB011             ADD      SP,SP,#+68
   \      0x11C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    334          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine9: (+1)
   \        0x0   0x....'....        LDR.W    R0,??DataTable13_3
   \        0x4   0x6801             LDR      R1,[R0, #+0]
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x7950             LDRB     R0,[R2, #+5]
   \        0xA   0x28F2             CMP      R0,#+242
   \        0xC   0x4770             BX       LR
    335          

   \                                 In section .text, align 2, keep-with-next
    336          bool emberAfGreenPowerClusterGpResponseCallback(uint8_t options,
    337                                                          uint16_t tempMasterShortAddress,
    338                                                          uint8_t tempMasterTxChannel,
    339                                                          uint32_t gpdSrcId,
    340                                                          uint8_t* gpdIeee,
    341                                                          uint8_t endpoint,
    342                                                          uint8_t gpdCommandId,
    343                                                          uint8_t* gpdCommandPayload)
    344          {
   \                     emberAfGreenPowerClusterGpResponseCallback: (+1)
   \        0x0   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \        0x4   0xB08F             SUB      SP,SP,#+60
   \        0x6   0x4681             MOV      R9,R0
   \        0x8   0x4688             MOV      R8,R1
   \        0xA   0x4616             MOV      R6,R2
   \        0xC   0x461D             MOV      R5,R3
   \        0xE   0x9C16             LDR      R4,[SP, #+88]
    345            EmberGpAddress addr;
    346            uint8_t allZeroesIeeeAddress[17] = { 0 };
   \       0x10   0xA80A             ADD      R0,SP,#+40
   \       0x12   0x2114             MOVS     R1,#+20
   \       0x14   0x....'....        BL       __aeabi_memclr4
    347          
    348            //handle null args for EZSP
    349            if (gpdIeee  == NULL) {
   \       0x18   0xB904             CBNZ.N   R4,??emberAfGreenPowerClusterGpResponseCallback_0
    350              gpdIeee = allZeroesIeeeAddress;
   \       0x1A   0xAC0A             ADD      R4,SP,#+40
    351            }
    352          
    353            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
   \                     ??emberAfGreenPowerClusterGpResponseCallback_0: (+1)
   \       0x1C   0x....'....        BL       ?Subroutine9
   \                     ??CrossCallReturnLabel_27: (+1)
   \       0x20   0xD14E             BNE.N    ??emberAfGreenPowerClusterGpResponseCallback_1
   \       0x22   0x9F18             LDR      R7,[SP, #+96]
    354              goto kickout;
    355            }
    356            emberAfGreenPowerClusterPrintln("GpResponse cmd: %1x", gpdCommandId);
    357          
    358            switch (gpdCommandId) {
   \       0x24   0x4629             MOV      R1,R5
   \       0x26   0x9A17             LDR      R2,[SP, #+92]
   \       0x28   0x9D19             LDR      R5,[SP, #+100]
   \       0x2A   0x2FF0             CMP      R7,#+240
   \       0x2C   0xD049             BEQ.N    ??emberAfGreenPowerClusterGpResponseCallback_2
   \       0x2E   0x2FF3             CMP      R7,#+243
   \       0x30   0xD161             BNE.N    ??emberAfGreenPowerClusterGpResponseCallback_3
    359              case EMBER_ZCL_GP_GPDF_CHANNEL_CONFIGURATION:
    360                addr.applicationId = EMBER_GP_APPLICATION_SOURCE_ID;
   \       0x32   0x2200             MOVS     R2,#+0
   \       0x34   0xF88D 0x2024      STRB     R2,[SP, #+36]
    361                addr.id.sourceId = 0x00000000;
   \       0x38   0x9207             STR      R2,[SP, #+28]
    362                if (gpdSrcId != 0x00000000) {
   \       0x3A   0x2900             CMP      R1,#+0
   \       0x3C   0xD13C             BNE.N    ??emberAfGreenPowerClusterGpResponseCallback_4
    363                  return true;
    364                }
    365          
    366                if (tempMasterShortAddress == emberGetNodeId()) {
   \       0x3E   0x....'....        BL       emberGetNodeId
   \       0x42   0x4580             CMP      R8,R0
   \       0x44   0xD13A             BNE.N    ??emberAfGreenPowerClusterGpResponseCallback_5
    367                  if (!emberEventControlGetActive(emberAfPluginGreenPowerClientChannelEventControl)
    368                      || (commissioningState.channelStatus & GP_CLIENT_TRANSMIT_SAME_AS_OPERATIONAL_CHANNEL_MASK)) {
   \       0x46   0x....'....        LDR.W    R5,??DataTable13_1
   \       0x4A   0x7828             LDRB     R0,[R5, #+0]
   \       0x4C   0x....'....        LDR.W    R4,??DataTable12
   \       0x50   0xB110             CBZ.N    R0,??emberAfGreenPowerClusterGpResponseCallback_6
   \       0x52   0x7A20             LDRB     R0,[R4, #+8]
   \       0x54   0x0781             LSLS     R1,R0,#+30
   \       0x56   0xD564             BPL.N    ??emberAfGreenPowerClusterGpResponseCallback_7
    369                    //Look at me, I'm the tempMaster now
    370                    //TODO set firstToForward
    371          
    372                    uint8_t payload = (emberAfGetRadioChannel() - 11) //channel ID
    373                                      | 0x10;//basic
   \                     ??emberAfGreenPowerClusterGpResponseCallback_6: (+1)
   \       0x58   0x....'....        BL       emberAfGetRadioChannel
   \       0x5C   0x380B             SUBS     R0,R0,#+11
   \       0x5E   0xF040 0x0010      ORR      R0,R0,#0x10
    374                    emberDGpSend(true, //add
    375                                 false,//no CCA
    376                                 &addr,
    377                                 EMBER_ZCL_GP_GPDF_CHANNEL_CONFIGURATION,
    378                                 1, //length
    379                                 &(payload),
    380                                 0, //gpepHandle
    381                                 0); //entryLifetimeMs
   \       0x62   0xAA04             ADD      R2,SP,#+16
   \       0x64   0x2301             MOVS     R3,#+1
   \       0x66   0xF88D 0x0010      STRB     R0,[SP, #+16]
   \       0x6A   0x2100             MOVS     R1,#+0
   \       0x6C   0x9201             STR      R2,[SP, #+4]
   \       0x6E   0x9300             STR      R3,[SP, #+0]
   \       0x70   0x9103             STR      R1,[SP, #+12]
   \       0x72   0x9102             STR      R1,[SP, #+8]
   \       0x74   0x23F3             MOVS     R3,#+243
   \       0x76   0xAA07             ADD      R2,SP,#+28
   \       0x78   0x2001             MOVS     R0,#+1
   \       0x7A   0x....'....        BL       emberDGpSend
    382                    commissioningState.channelStatus = GP_CLIENT_ON_TRANSMIT_CHANNEL_MASK;
   \       0x7E   0x2001             MOVS     R0,#+1
   \       0x80   0x7220             STRB     R0,[R4, #+8]
   \       0x82   0x....'....        BL       emberAfGetRadioChannel
   \       0x86   0xF106 0x010B      ADD      R1,R6,#+11
   \       0x8A   0x4288             CMP      R0,R1
   \       0x8C   0xD00B             BEQ.N    ??emberAfGreenPowerClusterGpResponseCallback_8
    383                    // based on figure 88 of GP proxy basic spec V1.0 page 191
    384                    // the following condition seems neccessary
    385                    if (emberAfGetRadioChannel() != (tempMasterTxChannel + 11) ) {
    386                      emberAfGreenPowerClusterPrintln("GP switch to chan %d", tempMasterTxChannel + 11);
    387                      emberStartScan(EMBER_STACK_GP_CHANNEL_DELIVERY_SCAN, (1 << (tempMasterTxChannel + 11)), 0 /*duration*/);
   \       0x8E   0x2001             MOVS     R0,#+1
   \       0x90   0x360B             ADDS     R6,R6,#+11
   \       0x92   0xFA00 0xF106      LSL      R1,R0,R6
   \       0x96   0x2200             MOVS     R2,#+0
   \       0x98   0x2003             MOVS     R0,#+3
   \       0x9A   0x....'....        BL       emberStartScan
    388                      commissioningState.channelStatus = commissioningState.channelStatus | ~GP_CLIENT_TRANSMIT_SAME_AS_OPERATIONAL_CHANNEL_MASK;
   \       0x9E   0x7A20             LDRB     R0,[R4, #+8]
   \       0xA0   0xF040 0x00FD      ORR      R0,R0,#0xFD
   \       0xA4   0xE002             B.N      ??emberAfGreenPowerClusterGpResponseCallback_9
    389                    } else {
    390                      commissioningState.channelStatus = commissioningState.channelStatus | GP_CLIENT_TRANSMIT_SAME_AS_OPERATIONAL_CHANNEL_MASK;
   \                     ??emberAfGreenPowerClusterGpResponseCallback_8: (+1)
   \       0xA6   0x7A20             LDRB     R0,[R4, #+8]
   \       0xA8   0xF040 0x0002      ORR      R0,R0,#0x2
   \                     ??emberAfGreenPowerClusterGpResponseCallback_9: (+1)
   \       0xAC   0x7220             STRB     R0,[R4, #+8]
    391                    }
    392                    // Stared timeout to clear the Tx Queue if the packet is not delivered,
    393                    emberEventControlSetDelayMS(emberAfPluginGreenPowerClientChannelEventControl, 5000);
   \       0xAE   0xF241 0x3188      MOVW     R1,#+5000
   \       0xB2   0x4628             MOV      R0,R5
   \       0xB4   0x....'....        BL       emEventControlSetDelayMS
    394                    return true;
   \                     ??emberAfGreenPowerClusterGpResponseCallback_4: (+1)
   \       0xB8   0x2001             MOVS     R0,#+1
   \       0xBA   0xE033             B.N      ??emberAfGreenPowerClusterGpResponseCallback_10
    395                  } else {
    396                    return false;
    397                  }
    398                } else {
    399                  //TODO clear firstToForward
    400                  emberAfPluginGreenPowerClientChannelEventHandler();
   \                     ??emberAfGreenPowerClusterGpResponseCallback_5: (+1)
   \       0xBC   0x....'....        BL       emberAfPluginGreenPowerClientChannelEventHandler
   \                     ??emberAfGreenPowerClusterGpResponseCallback_1: (+1)
   \       0xC0   0xE02F             B.N      ??emberAfGreenPowerClusterGpResponseCallback_7
    401                  //emberDGpSend(false, false, &addr, 0, 0, NULL, 0, 0);
    402                }
    403                break;
    404              case EMBER_ZCL_GP_GPDF_COMMISSIONING_REPLY:
    405                //TODO IEEE GPD
    406              {
    407                EmberStatus result;
    408                EmberGpAddress addr;
    409                addr.applicationId = options & EMBER_AF_GP_RESPONSE_OPTION_APPLICATION_ID;
   \                     ??emberAfGreenPowerClusterGpResponseCallback_2: (+1)
   \       0xC2   0xF019 0x0007      ANDS     R0,R9,#0x7
   \       0xC6   0xF88D 0x0018      STRB     R0,[SP, #+24]
    410                if (addr.applicationId == EMBER_GP_APPLICATION_SOURCE_ID) {
   \       0xCA   0xBF08             IT       EQ 
   \       0xCC   0x9104             STREQ    R1,[SP, #+16]
    411                  addr.id.sourceId = gpdSrcId;
   \       0xCE   0xD001             BEQ.N    ??CrossCallReturnLabel_33
    412                } else {
    413                  addr.applicationId = EMBER_GP_APPLICATION_IEEE_ADDRESS;
   \       0xD0   0x....'....        BL       ?Subroutine11
    414                  addr.endpoint = endpoint;
    415                  // addr.id is a union so it is fine to dereference it in this was
    416                  MEMCOPY(addr.id.gpdIeeeAddress, gpdIeee, 8);
    417                }
    418                if (tempMasterShortAddress == emberGetNodeId()) {
   \                     ??CrossCallReturnLabel_33: (+1)
   \       0xD4   0x....'....        BL       emberGetNodeId
   \       0xD8   0x4580             CMP      R8,R0
   \       0xDA   0xD103             BNE.N    ??emberAfGreenPowerClusterGpResponseCallback_11
    419                  emberAfGreenPowerClusterPrintln("dgpsend comm reply %s", "A");
    420                  result = emberDGpSend(true, //add
    421                                        false, //skip cca
    422                                        &addr,
    423                                        EMBER_ZCL_GP_GPDF_COMMISSIONING_REPLY,
    424                                        gpdCommandPayload[0],
    425                                        gpdCommandPayload + 1,
    426                                        0, 0
    427                                        );
   \       0xDC   0x....'....        BL       ?Subroutine6
    428                  if (result == EMBER_SUCCESS) {
    429                    emberAfGreenPowerClusterPrintln("success");
    430                  } else {
    431                    emberAfGreenPowerClusterPrintln("fail %02x", result);
    432                  }
    433                } else {
   \                     ??CrossCallReturnLabel_16: (+1)
   \       0xE0   0x23F0             MOVS     R3,#+240
   \       0xE2   0xE01A             B.N      ??emberAfGreenPowerClusterGpResponseCallback_12
    434                  emberAfGreenPowerClusterPrintln("Flush GP TX");
    435                  emberDGpSend(false, false, &addr, 0, 0, NULL, 0, 0);
   \                     ??emberAfGreenPowerClusterGpResponseCallback_11: (+1)
   \       0xE4   0x2000             MOVS     R0,#+0
   \       0xE6   0x2100             MOVS     R1,#+0
   \       0xE8   0x2300             MOVS     R3,#+0
   \       0xEA   0x9003             STR      R0,[SP, #+12]
   \       0xEC   0x9102             STR      R1,[SP, #+8]
   \       0xEE   0x9001             STR      R0,[SP, #+4]
   \       0xF0   0x9300             STR      R3,[SP, #+0]
   \       0xF2   0xAA04             ADD      R2,SP,#+16
   \       0xF4   0xE013             B.N      ??emberAfGreenPowerClusterGpResponseCallback_13
    436                }
    437              }
    438          
    439              break;
    440              default:
    441                if ((gpdCommandId >= EMBER_ZCL_GP_GPDF_RESERVED_MIN) //and implicitly check gpdCommandId <= EMBER_ZCL_GP_GPDF_RESERVED_MAX
    442                    || (gpdCommandId >= EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD0
    443                        && gpdCommandId <= EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_F)) {
   \                     ??emberAfGreenPowerClusterGpResponseCallback_3: (+1)
   \       0xF6   0x2FF7             CMP      R7,#+247
   \       0xF8   0xDA03             BGE.N    ??emberAfGreenPowerClusterGpResponseCallback_14
   \       0xFA   0xF1A7 0x03B0      SUB      R3,R7,#+176
   \       0xFE   0x2B10             CMP      R3,#+16
   \      0x100   0xD20F             BCS.N    ??emberAfGreenPowerClusterGpResponseCallback_7
    444                  EmberStatus result;
    445                  EmberGpAddress addr;
    446                  addr.applicationId = options & 0x03;
   \                     ??emberAfGreenPowerClusterGpResponseCallback_14: (+1)
   \      0x102   0xF019 0x0003      ANDS     R0,R9,#0x3
   \      0x106   0xF88D 0x0018      STRB     R0,[SP, #+24]
    447                  if (addr.applicationId == EMBER_GP_APPLICATION_SOURCE_ID) {
   \      0x10A   0xBF08             IT       EQ 
   \      0x10C   0x9104             STREQ    R1,[SP, #+16]
    448                    addr.id.sourceId = gpdSrcId;
   \      0x10E   0xD001             BEQ.N    ??CrossCallReturnLabel_32
    449                  } else {
    450                    addr.applicationId = EMBER_GP_APPLICATION_IEEE_ADDRESS;
   \      0x110   0x....'....        BL       ?Subroutine11
    451                    addr.endpoint = endpoint;
    452                    MEMCOPY(addr.id.gpdIeeeAddress, gpdIeee, 8);
    453                  }
    454          
    455                  emberAfGreenPowerClusterPrintln("dgpsend comm reply %s", "B");
    456                  result = emberDGpSend(true,   //add
    457                                        false,   //skip cca
    458                                        &addr,
    459                                        gpdCommandId,
    460                                        gpdCommandPayload[0],
    461                                        gpdCommandPayload + 1,
    462                                        0, 0
    463                                        );
   \                     ??CrossCallReturnLabel_32: (+1)
   \      0x114   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_17: (+1)
   \      0x118   0x463B             MOV      R3,R7
   \                     ??emberAfGreenPowerClusterGpResponseCallback_12: (+1)
   \      0x11A   0xAA04             ADD      R2,SP,#+16
   \      0x11C   0x2001             MOVS     R0,#+1
   \                     ??emberAfGreenPowerClusterGpResponseCallback_13: (+1)
   \      0x11E   0x....'....        BL       emberDGpSend
    464                  if (result == EMBER_SUCCESS) {
    465                    emberAfGreenPowerClusterPrintln("success");
    466                  } else {
    467                    emberAfGreenPowerClusterPrintln("fail %02x", result);
    468                  }
    469                }
    470                break;
    471            }
    472          
    473            kickout: return false;
   \                     ??emberAfGreenPowerClusterGpResponseCallback_7: (+1)
   \      0x122   0x2000             MOVS     R0,#+0
   \                     ??emberAfGreenPowerClusterGpResponseCallback_10: (+1)
   \      0x124   0xB00F             ADD      SP,SP,#+60
   \      0x126   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    474          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine11: (+1)
   \        0x0   0x2102             MOVS     R1,#+2
   \        0x2   0xF88D 0x1018      STRB     R1,[SP, #+24]
   \        0x6   0xF88D 0x2019      STRB     R2,[SP, #+25]
   \        0xA   0x2208             MOVS     R2,#+8
   \        0xC   0x4621             MOV      R1,R4
   \        0xE   0xA804             ADD      R0,SP,#+16
   \       0x10   0x....'....        B.W      halCommonMemMove

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x1C6A             ADDS     R2,R5,#+1
   \        0x6   0x9003             STR      R0,[SP, #+12]
   \        0x8   0x9102             STR      R1,[SP, #+8]
   \        0xA   0x9201             STR      R2,[SP, #+4]
   \        0xC   0x782B             LDRB     R3,[R5, #+0]
   \        0xE   0x9300             STR      R3,[SP, #+0]
   \       0x10   0x4770             BX       LR
    475          

   \                                 In section .text, align 2, keep-with-next
    476          bool emberAfGreenPowerClusterGpSinkTableResponseCallback(uint8_t status,
    477                                                                   uint8_t totalNumberofNonEmptySinkTableEntries,
    478                                                                   uint8_t startIndex,
    479                                                                   uint8_t entriesCount,
    480                                                                   uint8_t* sinkTableEntry)
    481          {
    482            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
    483              goto kickout;
    484            }
    485            kickout: return false;
   \                     emberAfGreenPowerClusterGpSinkTableResponseCallback: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    486          }
    487          

   \                                 In section .text, align 2, keep-with-next
    488          uint16_t emberAfGreenPowerClientStoreProxyTableEntry(EmberGpProxyTableEntry *entry,
    489                                                               uint8_t *buffer)
    490          {
   \                     emberAfGreenPowerClientStoreProxyTableEntry: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4604             MOV      R4,R0
    491            uint8_t *finger = buffer;
    492            //uint8_t securityLevel = entry->securityOptions & EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_LEVEL;
    493            //uint8_t securityKeyType = entry->securityOptions & EMBER_AF_GP_PROXY_TABLE_ENTRY_SECURITY_OPTIONS_SECURITY_KEY_TYPE;
    494          
    495            emberAfCopyInt16u(finger, 0, (uint16_t)(entry->options & 0xFFFF));
   \        0x6   0x6862             LDR      R2,[R4, #+4]
   \        0x8   0x4688             MOV      R8,R1
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0xB292             UXTH     R2,R2
   \        0xE   0x4640             MOV      R0,R8
   \       0x10   0x....'....        BL       emberAfCopyInt16u
    496            finger += sizeof(uint16_t);
    497            if (entry->gpd.applicationId == EMBER_GP_APPLICATION_SOURCE_ID) {
   \       0x14   0x7C20             LDRB     R0,[R4, #+16]
   \       0x16   0xF108 0x0502      ADD      R5,R8,#+2
   \       0x1A   0xB930             CBNZ.N   R0,??emberAfGreenPowerClientStoreProxyTableEntry_0
    498              emberAfCopyInt32u(finger, 0, entry->gpd.id.sourceId);
   \       0x1C   0x68A2             LDR      R2,[R4, #+8]
   \       0x1E   0x2100             MOVS     R1,#+0
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       emberAfCopyInt32u
    499              finger += sizeof(uint32_t);
   \       0x26   0x1D2D             ADDS     R5,R5,#+4
   \       0x28   0xE007             B.N      ??emberAfGreenPowerClientStoreProxyTableEntry_1
    500            } else if (entry->gpd.applicationId == EMBER_GP_APPLICATION_IEEE_ADDRESS) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_0: (+1)
   \       0x2A   0x2802             CMP      R0,#+2
   \       0x2C   0xD105             BNE.N    ??emberAfGreenPowerClientStoreProxyTableEntry_1
    501              MEMMOVE(finger, entry->gpd.id.gpdIeeeAddress, EUI64_SIZE);
   \       0x2E   0x2208             MOVS     R2,#+8
   \       0x30   0xF104 0x0108      ADD      R1,R4,#+8
   \       0x34   0x....'....        BL       ??Subroutine12_0
    502              finger += EUI64_SIZE;
   \                     ??CrossCallReturnLabel_35: (+1)
   \       0x38   0x3508             ADDS     R5,R5,#+8
    503            }
    504          
    505            if (entry->gpd.applicationId == EMBER_GP_APPLICATION_IEEE_ADDRESS) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_1: (+1)
   \       0x3A   0x7C20             LDRB     R0,[R4, #+16]
   \       0x3C   0x2802             CMP      R0,#+2
   \       0x3E   0xBF04             ITT      EQ 
   \       0x40   0x7C60             LDRBEQ   R0,[R4, #+17]
   \       0x42   0xF805 0x0B01      STRBEQ   R0,[R5], #+1
    506              emberAfCopyInt8u(finger, 0, entry->gpd.endpoint);
    507              finger += sizeof(uint8_t);
    508            }
    509          
    510            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS) {
   \       0x46   0x6861             LDR      R1,[R4, #+4]
   \       0x48   0x0488             LSLS     R0,R1,#+18
   \       0x4A   0xD503             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_2
    511              emberAfCopyInt16u(finger, 0, entry->assignedAlias);
   \       0x4C   0x8AA2             LDRH     R2,[R4, #+20]
   \       0x4E   0x....'....        BL       ??Subroutine5_0
    512              finger += sizeof(uint16_t);
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x52   0x1CAD             ADDS     R5,R5,#+2
    513            }
    514          
    515            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SECURITY_USE) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_2: (+1)
   \       0x54   0x6860             LDR      R0,[R4, #+4]
   \       0x56   0x0441             LSLS     R1,R0,#+17
   \       0x58   0xD50F             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_3
    516              emberAfCopyInt8u(finger, 0, entry->securityOptions);
   \       0x5A   0x7DA0             LDRB     R0,[R4, #+22]
    517              finger += sizeof(uint8_t);
    518              emberAfCopyInt32u(finger, 0, entry->gpdSecurityFrameCounter);
   \       0x5C   0x2100             MOVS     R1,#+0
   \       0x5E   0xF805 0x0B01      STRB     R0,[R5], #+1
   \       0x62   0x69A2             LDR      R2,[R4, #+24]
   \       0x64   0x4628             MOV      R0,R5
   \       0x66   0x1D2D             ADDS     R5,R5,#+4
   \       0x68   0x....'....        BL       emberAfCopyInt32u
    519              finger += sizeof(uint32_t);
    520              MEMMOVE(finger, entry->gpdKey.contents, EMBER_ENCRYPTION_KEY_SIZE);
   \       0x6C   0x2210             MOVS     R2,#+16
   \       0x6E   0xF104 0x011C      ADD      R1,R4,#+28
   \       0x72   0x....'....        BL       ??Subroutine12_0
    521              finger += EMBER_ENCRYPTION_KEY_SIZE;
   \                     ??CrossCallReturnLabel_34: (+1)
   \       0x76   0x3510             ADDS     R5,R5,#+16
   \       0x78   0xE007             B.N      ??emberAfGreenPowerClientStoreProxyTableEntry_4
    522            } else if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SEQUENCE_NUMBER_CAP) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_3: (+1)
   \       0x7A   0x0680             LSLS     R0,R0,#+26
   \       0x7C   0xD505             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_4
    523              emberAfCopyInt32u(finger, 0, entry->gpdSecurityFrameCounter);
   \       0x7E   0x69A2             LDR      R2,[R4, #+24]
   \       0x80   0x2100             MOVS     R1,#+0
   \       0x82   0x4628             MOV      R0,R5
   \       0x84   0x....'....        BL       emberAfCopyInt32u
    524              finger += sizeof(uint32_t);
   \       0x88   0x1D2D             ADDS     R5,R5,#+4
    525            }
    526          
    527            // Lightweight sink address list
    528            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_LIGHTWEIGHT_UNICAST_GPS) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_4: (+1)
   \       0x8A   0x7920             LDRB     R0,[R4, #+4]
   \       0x8C   0xF04F 0x0A0C      MOV      R10,#+12
   \       0x90   0x0641             LSLS     R1,R0,#+25
   \       0x92   0xD50E             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_5
    529              // let's count
    530              uint8_t index = 0;
   \       0x94   0x....'....        BL       ?Subroutine14
    531              uint8_t *entryCount = finger;
    532              emberAfCopyInt8u(finger, 0, 0x00);
    533              finger += sizeof(uint8_t);
    534              for (index = 0; index < GP_SINK_LIST_ENTRIES; index++) {
    535                EmberGpSinkListEntry * sinkEntry = &entry->sinkList[index];
   \                     ??CrossCallReturnLabel_40: (+1)
   \       0x98   0x....'....        BL       ?Subroutine13
    536          
    537                if (sinkEntry->type == EMBER_GP_SINK_TYPE_LW_UNICAST) {
   \                     ??CrossCallReturnLabel_38: (+1)
   \       0x9C   0xD105             BNE.N    ??CrossCallReturnLabel_43
    538                  MEMMOVE(finger, sinkEntry->target.unicast.sinkEUI, EUI64_SIZE);
   \       0x9E   0x....'....        BL       ?Subroutine12
    539                  finger += EUI64_SIZE;
    540                  emberAfCopyInt16u(finger, 0, sinkEntry->target.unicast.sinkNodeId);
   \                     ??CrossCallReturnLabel_37: (+1)
   \       0xA2   0x....'....        BL       ?Subroutine5
    541                  finger += sizeof(uint16_t);
    542                  (*entryCount)++;
   \                     ??CrossCallReturnLabel_15: (+1)
   \       0xA6   0x....'....        BL       ?Subroutine15
    543                } else {
    544                  continue;
    545                }
    546              }
   \                     ??CrossCallReturnLabel_43: (+1)
   \       0xAA   0x1C7F             ADDS     R7,R7,#+1
   \       0xAC   0xB2F9             UXTB     R1,R7
   \       0xAE   0x2902             CMP      R1,#+2
   \       0xB0   0xDBF2             BLT.N    ??CrossCallReturnLabel_40
    547            }
    548          
    549            // Sink group list
    550            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_COMMISIONED_GROUP_GPS) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_5: (+1)
   \       0xB2   0x6860             LDR      R0,[R4, #+4]
   \       0xB4   0x05C1             LSLS     R1,R0,#+23
   \       0xB6   0xD517             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_6
    551              // let's count
    552              uint8_t index = 0;
   \       0xB8   0x....'....        BL       ?Subroutine14
    553              uint8_t *entryCount = finger;
    554              emberAfCopyInt8u(finger, 0, 0x00);
    555              finger += sizeof(uint8_t);
    556              for (index = 0; index < GP_SINK_LIST_ENTRIES; index++) {
    557                EmberGpSinkListEntry * sinkEntry = &entry->sinkList[index];
   \                     ??CrossCallReturnLabel_41: (+1)
   \       0xBC   0xB2FA             UXTB     R2,R7
   \       0xBE   0xFB0A 0xF202      MUL      R2,R10,R2
   \       0xC2   0xF104 0x012C      ADD      R1,R4,#+44
   \       0xC6   0x188E             ADDS     R6,R1,R2
    558          
    559                if (sinkEntry->type == EMBER_GP_SINK_TYPE_GROUPCAST) {
   \       0xC8   0x7833             LDRB     R3,[R6, #+0]
   \       0xCA   0x2B02             CMP      R3,#+2
   \       0xCC   0xD108             BNE.N    ??CrossCallReturnLabel_44
    560                  emberAfCopyInt16u(finger, 0, sinkEntry->target.groupcast.groupID);
   \       0xCE   0x8872             LDRH     R2,[R6, #+2]
   \       0xD0   0x....'....        BL       ??Subroutine5_0
    561                  finger += sizeof(uint16_t);
    562                  emberAfCopyInt16u(finger, 0, sinkEntry->target.groupcast.alias);
   \                     ??CrossCallReturnLabel_12: (+1)
   \       0xD4   0x88B2             LDRH     R2,[R6, #+4]
   \       0xD6   0x1CAD             ADDS     R5,R5,#+2
   \       0xD8   0x....'....        BL       ??Subroutine5_0
    563                  finger += sizeof(uint16_t);
    564                  (*entryCount)++;
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0xDC   0x....'....        BL       ?Subroutine15
    565                } else {
    566                  continue;
    567                }
    568              }
   \                     ??CrossCallReturnLabel_44: (+1)
   \       0xE0   0x1C7F             ADDS     R7,R7,#+1
   \       0xE2   0xB2F9             UXTB     R1,R7
   \       0xE4   0x2902             CMP      R1,#+2
   \       0xE6   0xDBE9             BLT.N    ??CrossCallReturnLabel_41
    569            }
    570          
    571            emberAfCopyInt8u(finger, 0, entry->groupcastRadius);
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_6: (+1)
   \       0xE8   0xF104 0x0044      ADD      R0,R4,#+68
   \       0xEC   0x7801             LDRB     R1,[R0, #+0]
   \       0xEE   0xF805 0x1B01      STRB     R1,[R5], #+1
    572            finger += sizeof(uint8_t);
    573          
    574            if ((entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_ACTIVE) == 0
    575                || (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ENTRY_VALID) == 0) {
   \       0xF2   0x7922             LDRB     R2,[R4, #+4]
   \       0xF4   0xF002 0x0218      AND      R2,R2,#0x18
   \       0xF8   0x2A18             CMP      R2,#+24
   \       0xFA   0xBF1C             ITT      NE 
   \       0xFC   0x7840             LDRBNE   R0,[R0, #+1]
   \       0xFE   0xF805 0x0B01      STRBNE   R0,[R5], #+1
    576              emberAfCopyInt8u(finger, 0, entry->searchCounter);
    577              finger += sizeof(uint8_t);
    578            }
    579          
    580            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_EXTENSION) {
   \      0x102   0x6862             LDR      R2,[R4, #+4]
   \      0x104   0x0410             LSLS     R0,R2,#+16
   \      0x106   0xD503             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_7
    581              emberAfCopyInt16u(finger, 0, (entry->options >> 16) & 0xFFFF);
   \      0x108   0x0C12             LSRS     R2,R2,#+16
   \      0x10A   0x....'....        BL       ??Subroutine5_0
    582              finger += sizeof(uint16_t);
   \                     ??CrossCallReturnLabel_10: (+1)
   \      0x10E   0x1CAD             ADDS     R5,R5,#+2
    583            }
    584          
    585            // full unicast sink address list
    586            if (entry->options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_FULL_UNICAST_GPS) {
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_7: (+1)
   \      0x110   0x6860             LDR      R0,[R4, #+4]
   \      0x112   0x03C1             LSLS     R1,R0,#+15
   \      0x114   0xD512             BPL.N    ??emberAfGreenPowerClientStoreProxyTableEntry_8
    587              // let's count
    588              uint8_t index = 0;
   \      0x116   0x....'....        BL       ?Subroutine14
    589              uint8_t *len = finger;
    590              emberAfCopyInt8u(finger, 0, 0); // Add zero length
    591              finger += sizeof(uint8_t);
    592              for (index = 0; index < GP_SINK_LIST_ENTRIES; index++) {
    593                EmberGpSinkListEntry * sinkEntry = &entry->sinkList[index];
   \                     ??CrossCallReturnLabel_42: (+1)
   \      0x11A   0x....'....        BL       ?Subroutine13
    594          
    595                if (sinkEntry->type == EMBER_GP_SINK_TYPE_LW_UNICAST) {
   \                     ??CrossCallReturnLabel_39: (+1)
   \      0x11E   0xD109             BNE.N    ??emberAfGreenPowerClientStoreProxyTableEntry_9
    596                  MEMMOVE(finger, sinkEntry->target.unicast.sinkEUI, EUI64_SIZE);
   \      0x120   0x....'....        BL       ?Subroutine12
    597                  finger += EUI64_SIZE;
    598                  emberAfCopyInt16u(finger, 0, sinkEntry->target.unicast.sinkNodeId);
   \                     ??CrossCallReturnLabel_36: (+1)
   \      0x124   0x....'....        BL       ?Subroutine5
    599                  finger += sizeof(uint16_t);
    600                  *len += EUI64_SIZE + sizeof(uint16_t);
   \                     ??CrossCallReturnLabel_14: (+1)
   \      0x128   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \      0x12C   0x1CAD             ADDS     R5,R5,#+2
   \      0x12E   0x300A             ADDS     R0,R0,#+10
   \      0x130   0xF889 0x0000      STRB     R0,[R9, #+0]
    601                } else {
    602                  continue;
    603                }
    604              }
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_9: (+1)
   \      0x134   0x1C7F             ADDS     R7,R7,#+1
   \      0x136   0xB2F9             UXTB     R1,R7
   \      0x138   0x2902             CMP      R1,#+2
   \      0x13A   0xDBEE             BLT.N    ??CrossCallReturnLabel_42
    605            }
    606          
    607            return (uint16_t)(finger - buffer);
   \                     ??emberAfGreenPowerClientStoreProxyTableEntry_8: (+1)
   \      0x13C   0xEBA5 0x0108      SUB      R1,R5,R8
   \      0x140   0xB288             UXTH     R0,R1
   \      0x142   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    608          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine15: (+1)
   \        0x0   0xF899 0x0000      LDRB     R0,[R9, #+0]
   \        0x4   0x1CAD             ADDS     R5,R5,#+2
   \        0x6   0x1C40             ADDS     R0,R0,#+1
   \        0x8   0xF889 0x0000      STRB     R0,[R9, #+0]
   \        0xC   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine14: (+1)
   \        0x0   0x2700             MOVS     R7,#+0
   \        0x2   0x46A9             MOV      R9,R5
   \        0x4   0xF805 0x7B01      STRB     R7,[R5], #+1
   \        0x8   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine13: (+1)
   \        0x0   0xB2FA             UXTB     R2,R7
   \        0x2   0xFB0A 0xF202      MUL      R2,R10,R2
   \        0x6   0xF104 0x012C      ADD      R1,R4,#+44
   \        0xA   0x188E             ADDS     R6,R1,R2
   \        0xC   0x7833             LDRB     R3,[R6, #+0]
   \        0xE   0x2B03             CMP      R3,#+3
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine12: (+1)
   \        0x0   0x2208             MOVS     R2,#+8
   \        0x2   0x1CB1             ADDS     R1,R6,#+2
   \                     ??Subroutine12_0: (+1)
   \        0x4   0x4628             MOV      R0,R5
   \        0x6   0x....'....        B.W      halCommonMemMove

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x8972             LDRH     R2,[R6, #+10]
   \        0x2   0x3508             ADDS     R5,R5,#+8
   \                     ??Subroutine5_0: (+1)
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x....'....        B.W      emberAfCopyInt16u
    609          

   \                                 In section .text, align 2, keep-with-next
    610          bool emberAfGreenPowerClusterGpProxyTableRequestCallback(uint8_t options,
    611                                                                   uint32_t gpdSrcId,
    612                                                                   uint8_t* gpdIeee,
    613                                                                   uint8_t endpoint,
    614                                                                   uint8_t index)
    615          {
   \                     emberAfGreenPowerClusterGpProxyTableRequestCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x460F             MOV      R7,R1
   \        0x6   0xB0B6             SUB      SP,SP,#+216
    616            uint8_t validEntriesCount = 0;
    617            uint8_t entryIndex = 0;
    618            uint8_t appId = options & EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_APPLICATION_ID;
   \        0x8   0xF000 0x0107      AND      R1,R0,#0x7
    619            uint8_t requestType = (options & EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE)
    620                                  >> EMBER_AF_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_OFFSET;
   \        0xC   0xF3C0 0x00C1      UBFX     R0,R0,#+3,#+2
   \       0x10   0xF88D 0x1004      STRB     R1,[SP, #+4]
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x4693             MOV      R11,R2
   \       0x18   0x4698             MOV      R8,R3
    621            EmberGpProxyTableEntry entry;
    622            uint8_t allZeroesIeeeAddress[17] = { 0 };
   \       0x1A   0xA807             ADD      R0,SP,#+28
   \       0x1C   0x2114             MOVS     R1,#+20
   \       0x1E   0x2600             MOVS     R6,#+0
   \       0x20   0x2500             MOVS     R5,#+0
   \       0x22   0x....'....        BL       __aeabi_memclr4
    623          
    624            //handle null args for EZSP
    625            if (gpdIeee  == NULL) {
    626              gpdIeee = allZeroesIeeeAddress;
    627            }
    628          
    629            // only respond to unicast messages.
    630            if (emberAfCurrentCommand()->type != EMBER_INCOMING_UNICAST) {
   \       0x26   0x....'....        LDR.W    R1,??DataTable13_3
   \       0x2A   0x6809             LDR      R1,[R1, #+0]
   \       0x2C   0xF1BB 0x0F00      CMP      R11,#+0
   \       0x30   0x7908             LDRB     R0,[R1, #+4]
   \       0x32   0xBF08             IT       EQ 
   \       0x34   0xF10D 0x0B1C      ADDEQ    R11,SP,#+28
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD14D             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_0
    631              goto kickout;
    632            }
    633          
    634            if (EMBER_GP_PROXY_TABLE_SIZE == 0) {
    635              emberAfSendImmediateDefaultResponse(EMBER_ZCL_STATUS_UNSUP_CLUSTER_COMMAND);
    636              goto kickout;
    637            }
    638          
    639            if (emberAfCurrentEndpoint() != GP_ENDPOINT) {
   \       0x3C   0x6809             LDR      R1,[R1, #+0]
   \       0x3E   0x7948             LDRB     R0,[R1, #+5]
   \       0x40   0x28F2             CMP      R0,#+242
   \       0x42   0xD13C             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_1
    640              return false;
    641            }
    642          
    643            for (entryIndex = 0; entryIndex < EMBER_GP_PROXY_TABLE_SIZE; entryIndex++) {
    644              if (emberGpProxyTableGetEntry(entryIndex, &entry) != EMBER_SUCCESS) {
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_2: (+1)
   \       0x44   0xA90F             ADD      R1,SP,#+60
   \       0x46   0xB2E8             UXTB     R0,R5
   \       0x48   0x....'....        BL       emberGpProxyTableGetEntry
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD136             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_1
    645                return false;
    646              }
    647          
    648              if (entry.status != EMBER_GP_PROXY_TABLE_ENTRY_STATUS_UNUSED) {
   \       0x50   0xF89D 0x003C      LDRB     R0,[SP, #+60]
   \       0x54   0x28FF             CMP      R0,#+255
   \       0x56   0xBF18             IT       NE 
   \       0x58   0x1C76             ADDNE    R6,R6,#+1
    649                validEntriesCount++;
    650              }
    651            }
   \       0x5A   0x1C6D             ADDS     R5,R5,#+1
   \       0x5C   0xB2E8             UXTB     R0,R5
   \       0x5E   0x2804             CMP      R0,#+4
   \       0x60   0xDDF0             BLE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_2
    652          
    653            if (requestType == EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_GPD_ID) {
   \       0x62   0xF89D 0x0100      LDRB     R0,[SP, #+256]
   \       0x66   0xB2F4             UXTB     R4,R6
   \       0x68   0x....'....        LDR.W    R5,??DataTable17
   \       0x6C   0x9006             STR      R0,[SP, #+24]
   \       0x6E   0x9800             LDR      R0,[SP, #+0]
   \       0x70   0x....'....        LDR.W    R9,??DataTable17_1
   \       0x74   0x....'....        LDR.W    R10,??DataTable17_2
   \       0x78   0xBB60             CBNZ.N   R0,??emberAfGreenPowerClusterGpProxyTableRequestCa_3
    654              EmberGpAddress addr;
    655              if (!emGpMakeAddr(&addr,
    656                                appId,
    657                                gpdSrcId,
    658                                gpdIeee,
    659                                endpoint)) {
   \       0x7A   0xF89D 0x1004      LDRB     R1,[SP, #+4]
   \       0x7E   0x463A             MOV      R2,R7
   \       0x80   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x84   0x465B             MOV      R3,R11
   \       0x86   0xA80C             ADD      R0,SP,#+48
   \       0x88   0x....'....        BL       emGpMakeAddr
   \       0x8C   0x2800             CMP      R0,#+0
   \       0x8E   0xF000 0x807F      BEQ.W    ??emberAfGreenPowerClusterGpProxyTableRequestCa_4
    660                // Malformed GPD address
    661                goto kickout;
    662              }
    663              entryIndex = emberGpProxyTableLookup(&addr);
   \       0x92   0xA80C             ADD      R0,SP,#+48
   \       0x94   0x....'....        BL       emberGpProxyTableLookup
   \       0x98   0x4606             MOV      R6,R0
    664              if (entryIndex == 0xFF) {
   \       0x9A   0x28FF             CMP      R0,#+255
   \       0x9C   0xD022             BEQ.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_5
    665                emberAfFillCommandGreenPowerClusterGpProxyTableResponse(EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_NOT_FOUND,
    666                                                                        validEntriesCount,
    667                                                                        index,
    668                                                                        0x00,
    669                                                                        NULL,
    670                                                                        0);
    671                emberAfSendResponse();
    672                goto kickout;
    673              } else {
    674                emberAfFillCommandGreenPowerClusterGpProxyTableResponse(EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_SUCCESS,
    675                                                                        validEntriesCount,
    676                                                                        0xff,
    677                                                                        1,
    678                                                                        NULL,
    679                                                                        0);
   \       0x9E   0x2000             MOVS     R0,#+0
   \       0xA0   0x2201             MOVS     R2,#+1
   \       0xA2   0x23FF             MOVS     R3,#+255
   \       0xA4   0x9005             STR      R0,[SP, #+20]
   \       0xA6   0x9004             STR      R0,[SP, #+16]
   \       0xA8   0x9203             STR      R2,[SP, #+12]
   \       0xAA   0x9302             STR      R3,[SP, #+8]
   \       0xAC   0x9401             STR      R4,[SP, #+4]
   \       0xAE   0x9000             STR      R0,[SP, #+0]
   \       0xB0   0x....'....        BL       ?Subroutine7
    680                if (emberGpProxyTableGetEntry(entryIndex, &entry) != EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_20: (+1)
   \       0xB4   0xA90F             ADD      R1,SP,#+60
   \       0xB6   0x4630             MOV      R0,R6
   \       0xB8   0x....'....        BL       emberGpProxyTableGetEntry
   \       0xBC   0x2800             CMP      R0,#+0
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_1: (+1)
   \       0xBE   0xD16B             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_6
    681                  return false;
    682                }
    683          
    684                appResponseLength
    685                  += emberAfGreenPowerClientStoreProxyTableEntry(&entry,
    686                                                                 appResponseData + appResponseLength);
   \       0xC0   0x8828             LDRH     R0,[R5, #+0]
   \       0xC2   0xEB09 0x0100      ADD      R1,R9,R0
   \       0xC6   0xA80F             ADD      R0,SP,#+60
   \       0xC8   0x....'....        BL       emberAfGreenPowerClientStoreProxyTableEntry
   \       0xCC   0x8829             LDRH     R1,[R5, #+0]
   \       0xCE   0x1840             ADDS     R0,R0,R1
   \       0xD0   0x8028             STRH     R0,[R5, #+0]
    687                emberAfSendResponse();
   \       0xD2   0xE05B             B.N      ??CrossCallReturnLabel_18
    688                goto kickout;
    689              }
    690            } else if (requestType == EMBER_ZCL_GP_PROXY_TABLE_REQUEST_OPTIONS_REQUEST_TYPE_BY_INDEX) {
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_3: (+1)
   \       0xD4   0x9800             LDR      R0,[SP, #+0]
   \       0xD6   0x2801             CMP      R0,#+1
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_0: (+1)
   \       0xD8   0xD15A             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_4
    691              if (index >= validEntriesCount) {
   \       0xDA   0xF89D 0x0100      LDRB     R0,[SP, #+256]
   \       0xDE   0xB2F6             UXTB     R6,R6
   \       0xE0   0x42B0             CMP      R0,R6
   \       0xE2   0xD309             BCC.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_7
    692                //Nothing to send
    693                emberAfFillCommandGreenPowerClusterGpProxyTableResponse(EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_NOT_FOUND,
    694                                                                        validEntriesCount,
    695                                                                        index,
    696                                                                        0x00,
    697                                                                        NULL,
    698                                                                        0);
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_5: (+1)
   \       0xE4   0x2100             MOVS     R1,#+0
   \       0xE6   0x9105             STR      R1,[SP, #+20]
   \       0xE8   0x9104             STR      R1,[SP, #+16]
   \       0xEA   0x9103             STR      R1,[SP, #+12]
   \       0xEC   0x9906             LDR      R1,[SP, #+24]
   \       0xEE   0x228B             MOVS     R2,#+139
   \       0xF0   0x9102             STR      R1,[SP, #+8]
   \       0xF2   0x9401             STR      R4,[SP, #+4]
   \       0xF4   0x9200             STR      R2,[SP, #+0]
   \       0xF6   0xE047             B.N      ??emberAfGreenPowerClusterGpProxyTableRequestCa_8
    699                emberAfSendResponse();
    700                goto kickout;
    701              } else {
    702                emberAfFillCommandGreenPowerClusterGpProxyTableResponse(EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_SUCCESS,
    703                                                                        validEntriesCount,
    704                                                                        index,
    705                                                                        0xff,
    706                                                                        NULL,
    707                                                                        0);
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_7: (+1)
   \       0xF8   0x2000             MOVS     R0,#+0
   \       0xFA   0x9005             STR      R0,[SP, #+20]
   \       0xFC   0x9806             LDR      R0,[SP, #+24]
   \       0xFE   0x2100             MOVS     R1,#+0
   \      0x100   0x22FF             MOVS     R2,#+255
   \      0x102   0x9104             STR      R1,[SP, #+16]
   \      0x104   0x9203             STR      R2,[SP, #+12]
   \      0x106   0x9002             STR      R0,[SP, #+8]
   \      0x108   0x9401             STR      R4,[SP, #+4]
   \      0x10A   0x9100             STR      R1,[SP, #+0]
   \      0x10C   0x....'....        BL       ?Subroutine7
    708          
    709                validEntriesCount = 0;
   \                     ??CrossCallReturnLabel_19: (+1)
   \      0x110   0x2700             MOVS     R7,#+0
    710                uint16_t entriesCount = 0;
   \      0x112   0x2400             MOVS     R4,#+0
    711                for (entryIndex = 0; entryIndex < EMBER_GP_PROXY_TABLE_SIZE; entryIndex++) {
   \      0x114   0x46B8             MOV      R8,R7
   \      0x116   0xF89D 0xB100      LDRB     R11,[SP, #+256]
    712                  if (emberGpProxyTableGetEntry(entryIndex, &entry) != EMBER_SUCCESS) {
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_9: (+1)
   \      0x11A   0xA90F             ADD      R1,SP,#+60
   \      0x11C   0xFA5F 0xF088      UXTB     R0,R8
   \      0x120   0x....'....        BL       emberGpProxyTableGetEntry
   \      0x124   0x2800             CMP      R0,#+0
   \      0x126   0xD137             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_6
    713                    return false;
    714                  }
    715          
    716                  uint8_t  tempDatabuffer[EMBER_AF_RESPONSE_BUFFER_LEN];
    717                  uint16_t tempDataLength = 0;
    718          
    719                  if (entry.status != EMBER_GP_PROXY_TABLE_ENTRY_STATUS_UNUSED) {
   \      0x128   0xF89D 0x003C      LDRB     R0,[SP, #+60]
   \      0x12C   0x28FF             CMP      R0,#+255
   \      0x12E   0xD015             BEQ.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_10
    720                    validEntriesCount++;
   \      0x130   0x1C7F             ADDS     R7,R7,#+1
    721                    if (validEntriesCount > index) {
   \      0x132   0xB2FA             UXTB     R2,R7
   \      0x134   0x4593             CMP      R11,R2
   \      0x136   0xD211             BCS.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_10
    722                      // Copy to a temp buffer and add if there is spoce
    723                      tempDataLength = emberAfGreenPowerClientStoreProxyTableEntry(&entry, tempDatabuffer);
   \      0x138   0xA921             ADD      R1,SP,#+132
   \      0x13A   0xA80F             ADD      R0,SP,#+60
   \      0x13C   0x....'....        BL       emberAfGreenPowerClientStoreProxyTableEntry
   \      0x140   0x4606             MOV      R6,R0
    724          
    725                      // If space add to buffer
    726                      if ( sizeof(appResponseData) > (appResponseLength + tempDataLength)) {
   \      0x142   0x8828             LDRH     R0,[R5, #+0]
   \      0x144   0x1831             ADDS     R1,R6,R0
   \      0x146   0x2952             CMP      R1,#+82
   \      0x148   0xD20E             BCS.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_11
    727                        MEMMOVE(&appResponseData[appResponseLength], tempDatabuffer, tempDataLength);
   \      0x14A   0x4632             MOV      R2,R6
   \      0x14C   0xA921             ADD      R1,SP,#+132
   \      0x14E   0x4448             ADD      R0,R9,R0
   \      0x150   0x....'....        BL       halCommonMemMove
    728                        appResponseLength +=  tempDataLength;
   \      0x154   0x8828             LDRH     R0,[R5, #+0]
    729                        entriesCount++;
   \      0x156   0x1C64             ADDS     R4,R4,#+1
   \      0x158   0x1836             ADDS     R6,R6,R0
   \      0x15A   0x802E             STRH     R6,[R5, #+0]
    730                      } else {
    731                        break;
    732                      }
    733                    }
    734                  }
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_10: (+1)
   \      0x15C   0xF108 0x0801      ADD      R8,R8,#+1
   \      0x160   0xFA5F 0xF188      UXTB     R1,R8
   \      0x164   0x2904             CMP      R1,#+4
   \      0x166   0xDDD8             BLE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_9
    735                }
    736          
    737                //Insert the number of entries actually included
    738                appResponseData[GP_PROXY_TABLE_RESPONSE_ENTRIES_OFFSET + GP_NON_MANUFACTURER_ZCL_HEADER_LENGTH] = entriesCount;
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_11: (+1)
   \      0x168   0xF889 0x4006      STRB     R4,[R9, #+6]
    739          
    740                EmberStatus status = emberAfSendResponse();
    741          
    742                if (status == EMBER_MESSAGE_TOO_LONG) {
   \      0x16C   0x....'....        BL       emberAfSendResponse
   \      0x170   0x2874             CMP      R0,#+116
   \      0x172   0xD10D             BNE.N    ??emberAfGreenPowerClusterGpProxyTableRequestCa_4
    743                  emberAfFillCommandGreenPowerClusterGpProxyTableResponse(EMBER_ZCL_GP_PROXY_TABLE_RESPONSE_STATUS_SUCCESS,
    744                                                                          validEntriesCount,
    745                                                                          index,
    746                                                                          0x00,
    747                                                                          NULL,
    748                                                                          0);
   \      0x174   0x2000             MOVS     R0,#+0
   \      0x176   0x9005             STR      R0,[SP, #+20]
   \      0x178   0x9003             STR      R0,[SP, #+12]
   \      0x17A   0x9806             LDR      R0,[SP, #+24]
   \      0x17C   0x2100             MOVS     R1,#+0
   \      0x17E   0xB2FF             UXTB     R7,R7
   \      0x180   0x9104             STR      R1,[SP, #+16]
   \      0x182   0x9002             STR      R0,[SP, #+8]
   \      0x184   0x9701             STR      R7,[SP, #+4]
   \      0x186   0x9100             STR      R1,[SP, #+0]
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_8: (+1)
   \      0x188   0x....'....        BL       ?Subroutine7
    749                  emberAfSendResponse();
   \                     ??CrossCallReturnLabel_18: (+1)
   \      0x18C   0x....'....        BL       emberAfSendResponse
    750                }
    751                goto kickout;
    752              }
    753            }
    754          
    755            kickout:  return true;
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_4: (+1)
   \      0x190   0x2001             MOVS     R0,#+1
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_12: (+1)
   \      0x192   0xB037             ADD      SP,SP,#+220
   \      0x194   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??emberAfGreenPowerClusterGpProxyTableRequestCa_6: (+1)
   \      0x198   0x2000             MOVS     R0,#+0
   \      0x19A   0xE7FA             B.N      ??emberAfGreenPowerClusterGpProxyTableRequestCa_12
    756          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x4653             MOV      R3,R10
   \        0x2   0x220B             MOVS     R2,#+11
   \        0x4   0x2121             MOVS     R1,#+33
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0x....'....        B.W      emberAfFillExternalBuffer
    757          

   \                                 In section .text, align 2, keep-with-next
    758          bool emAfPluginGreenPowerClientRetrieveAttributeAndCraftResponse(uint8_t endpoint,
    759                                                                           EmberAfClusterId clusterId,
    760                                                                           EmberAfAttributeId attrId,
    761                                                                           uint8_t mask,
    762                                                                           uint16_t manufacturerCode,
    763                                                                           uint16_t readLength)
    764          {
    765            uint8_t proxyTableEntryAppResponseData[EMBER_AF_RESPONSE_BUFFER_LEN];
    766            uint8_t zclStatus = EMBER_ZCL_STATUS_SUCCESS;
    767            uint16_t stringDataOffsetStart = 0;
    768            uint16_t stringLength = 0;
    769            bool    status = false;
    770          
    771            if (endpoint != GP_ENDPOINT
    772                || clusterId != ZCL_GREEN_POWER_CLUSTER_ID
    773                || attrId != ZCL_GP_CLIENT_PROXY_TABLE_ATTRIBUTE_ID
    774                || mask != CLUSTER_MASK_CLIENT
    775                || manufacturerCode != EMBER_AF_NULL_MANUFACTURER_CODE) {
   \                     emAfPluginGreenPowerClientRetrieveAttributeAndCraftResponse: (+1)
   \        0x0   0x28F2             CMP      R0,#+242
   \        0x2   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x6   0xF04F 0x0A00      MOV      R10,#+0
   \        0xA   0xB0A7             SUB      SP,SP,#+156
   \        0xC   0xBF08             IT       EQ 
   \        0xE   0x2921             CMPEQ    R1,#+33
   \       0x10   0x46D0             MOV      R8,R10
   \       0x12   0xD14C             BNE.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_0
   \       0x14   0x2A11             CMP      R2,#+17
   \       0x16   0xBF02             ITTT     EQ 
   \       0x18   0x2B80             CMPEQ    R3,#+128
   \       0x1A   0x9830             LDREQ    R0,[SP, #+192]
   \       0x1C   0x2800             CMPEQ    R0,#+0
   \       0x1E   0xD146             BNE.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_0
   \       0x20   0x9D31             LDR      R5,[SP, #+196]
    776              // do nothing but return false
    777            } else if (readLength < 6) {
   \       0x22   0x2D05             CMP      R5,#+5
   \       0x24   0xDD43             BLE.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_0
    778              // Can't fit the ZCL header in available length so exit with error
    779              // do nothing but return true as we are processing the correct type of packet
    780            } else {
    781              emberAfPutInt16uInResp(attrId);
   \       0x26   0x2011             MOVS     R0,#+17
   \       0x28   0x....'....        BL       emberAfPutInt16uInResp
    782          
    783              // The proxy table attribute is a long string ZCL attribute type, which means
    784              // it is encoded starting with a 2-byte length. We fill in the real length
    785              // after we have encoded the whole proxy table.
    786              // Fopur bytes extra = 2byte length + 1 byte ZCl Status + 1 byte Attribute Type
    787              uint16_t stringDataOffset =  appResponseLength + 4;
   \       0x2C   0x....'....        LDR.W    R4,??DataTable17
   \       0x30   0x8826             LDRH     R6,[R4, #+0]
    788              stringDataOffsetStart = stringDataOffset;
    789          
    790              // Search the proxy table and respond with entries
    791              for (uint8_t i = 0; i < EMBER_GP_PROXY_TABLE_SIZE; i++) {
   \       0x32   0x2700             MOVS     R7,#+0
   \       0x34   0x....'....        LDR.W    R9,??DataTable17_1
   \       0x38   0x1D36             ADDS     R6,R6,#+4
   \       0x3A   0xB2B6             UXTH     R6,R6
   \       0x3C   0x46B3             MOV      R11,R6
    792                EmberGpProxyTableEntry entry;
    793          
    794                if (emberGpProxyTableGetEntry(i, &entry) != EMBER_SUCCESS) {
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_1: (+1)
   \       0x3E   0x4669             MOV      R1,SP
   \       0x40   0xB2F8             UXTB     R0,R7
   \       0x42   0x....'....        BL       emberGpProxyTableGetEntry
   \       0x46   0xBB30             CBNZ.N   R0,??emAfPluginGreenPowerClientRetrieveAttributeAn_2
    795                  return false;
    796                } else if (entry.status != EMBER_GP_PROXY_TABLE_ENTRY_STATUS_UNUSED) {
   \       0x48   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x4C   0x28FF             CMP      R0,#+255
   \       0x4E   0xD00F             BEQ.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_3
    797                  // Have a valid entry so encode response in temp buffer and add if it fits
    798                  uint16_t proxyTableEntryLength = emberAfGreenPowerClientStoreProxyTableEntry(&entry, proxyTableEntryAppResponseData);
   \       0x50   0xA912             ADD      R1,SP,#+72
   \       0x52   0x4668             MOV      R0,SP
   \       0x54   0x....'....        BL       emberAfGreenPowerClientStoreProxyTableEntry
   \       0x58   0x4680             MOV      R8,R0
    799          
    800                  if ( (proxyTableEntryLength + stringDataOffset) > readLength) {
   \       0x5A   0x1830             ADDS     R0,R6,R0
   \       0x5C   0x4285             CMP      R5,R0
   \       0x5E   0xDB1C             BLT.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_4
    801                    // String is too big so
    802                    zclStatus = EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
    803                    break;
    804                  } else {
    805                    MEMMOVE(&appResponseData[stringDataOffset], proxyTableEntryAppResponseData, proxyTableEntryLength);
   \       0x60   0x4642             MOV      R2,R8
   \       0x62   0xA912             ADD      R1,SP,#+72
   \       0x64   0xEB09 0x0006      ADD      R0,R9,R6
   \       0x68   0x4446             ADD      R6,R8,R6
   \       0x6A   0x....'....        BL       halCommonMemMove
    806                    stringDataOffset += proxyTableEntryLength;
   \       0x6E   0xB2B6             UXTH     R6,R6
    807                  }
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_3: (+1)
   \       0x70   0x1C7F             ADDS     R7,R7,#+1
   \       0x72   0xB2F8             UXTB     R0,R7
   \       0x74   0x2805             CMP      R0,#+5
   \       0x76   0xDBE2             BLT.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_1
    808                }
    809              }
    810          
    811              // calculate string length
    812              stringLength = stringDataOffset - stringDataOffsetStart;
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_5: (+1)
   \       0x78   0xEBA6 0x060B      SUB      R6,R6,R11
    813          
    814              if (zclStatus == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x7C   0xEA5F 0x000A      MOVS     R0,R10
   \       0x80   0xD10E             BNE.N    ??emAfPluginGreenPowerClientRetrieveAttributeAn_6
    815                emberAfPutInt8uInResp(zclStatus);
   \       0x82   0x2000             MOVS     R0,#+0
   \       0x84   0x....'....        BL       emberAfPutInt8uInResp
    816                emberAfPutInt8uInResp(ZCL_LONG_OCTET_STRING_ATTRIBUTE_TYPE);
   \       0x88   0x2043             MOVS     R0,#+67
   \       0x8A   0x....'....        BL       emberAfPutInt8uInResp
    817                emberAfPutInt16uInResp(stringLength);
   \       0x8E   0xB2B0             UXTH     R0,R6
   \       0x90   0x....'....        BL       emberAfPutInt16uInResp
   \       0x94   0xE006             B.N      ??emAfPluginGreenPowerClientRetrieveAttributeAn_7
    818              } else {
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_2: (+1)
   \       0x96   0x2000             MOVS     R0,#+0
   \       0x98   0xE00A             B.N      ??emAfPluginGreenPowerClientRetrieveAttributeAn_8
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_4: (+1)
   \       0x9A   0xF04F 0x0A89      MOV      R10,#+137
   \       0x9E   0xE7EB             B.N      ??emAfPluginGreenPowerClientRetrieveAttributeAn_5
    819                emberAfPutInt8uInResp(zclStatus);
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_6: (+1)
   \       0xA0   0x....'....        BL       emberAfPutInt8uInResp
    820              }
    821          
    822              appResponseLength += stringLength;
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_7: (+1)
   \       0xA4   0x8820             LDRH     R0,[R4, #+0]
    823              status = true;
   \       0xA6   0xF04F 0x0801      MOV      R8,#+1
   \       0xAA   0x1836             ADDS     R6,R6,R0
   \       0xAC   0x8026             STRH     R6,[R4, #+0]
    824            }
    825          
    826            return status;
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_0: (+1)
   \       0xAE   0x4640             MOV      R0,R8
   \                     ??emAfPluginGreenPowerClientRetrieveAttributeAn_8: (+1)
   \       0xB0   0xB027             ADD      SP,SP,#+156
   \       0xB2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    827          }
    828          

   \                                 In section .text, align 2, keep-with-next
    829          bool emberAfGreenPowerClusterAutoCommissioningCallback(GP_PARAMS)
    830          {
   \                     emberAfGreenPowerClusterAutoCommissioningCallback: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB08B             SUB      SP,SP,#+44
    831            uint16_t options = 0;
    832            EmberApsFrame *apsFrame = NULL;
    833          
    834            if (!commissioningState.inCommissioningMode) {
   \        0x6   0x....             LDR.N    R6,??DataTable12
   \        0x8   0x7830             LDRB     R0,[R6, #+0]
   \        0xA   0xB168             CBZ.N    R0,??emberAfGreenPowerClusterAutoCommissioningCall_0
   \        0xC   0x930A             STR      R3,[SP, #+40]
    835              return true;
    836            }
    837          
    838            if (addr->applicationId == EMBER_GP_APPLICATION_SOURCE_ID
    839                && addr->id.sourceId == 0x00000000) {
   \        0xE   0x7A18             LDRB     R0,[R3, #+8]
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xBF04             ITT      EQ 
   \       0x14   0x681B             LDREQ    R3,[R3, #+0]
   \       0x16   0x2B00             CMPEQ    R3,#+0
   \       0x18   0xD006             BEQ.N    ??emberAfGreenPowerClusterAutoCommissioningCall_0
   \       0x1A   0x9C19             LDR      R4,[SP, #+100]
    840              return true;
    841            }
    842            if (gpdCommandId == EMBER_ZCL_GP_GPDF_COMMISSIONING || gpdCommandId == EMBER_ZCL_GP_GPDF_SUCCESS) {
   \       0x1C   0x2CE0             CMP      R4,#+224
   \       0x1E   0xBF18             IT       NE 
   \       0x20   0x2CE2             CMPNE    R4,#+226
   \       0x22   0xD001             BEQ.N    ??emberAfGreenPowerClusterAutoCommissioningCall_0
   \       0x24   0x9B17             LDR      R3,[SP, #+92]
    843              return true;
    844            }
    845          
    846            if (rxAfterTx) {
   \       0x26   0xB10B             CBZ.N    R3,??emberAfGreenPowerClusterAutoCommissioningCall_1
    847              return true;
   \                     ??emberAfGreenPowerClusterAutoCommissioningCall_0: (+1)
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0x....             B.N      ??Subroutine20_0
    848            }
   \                     ??emberAfGreenPowerClusterAutoCommissioningCall_1: (+1)
   \       0x2C   0xF8DD 0x9074      LDR      R9,[SP, #+116]
   \       0x30   0x9D1C             LDR      R5,[SP, #+112]
   \       0x32   0xF8DD 0xA068      LDR      R10,[SP, #+104]
   \       0x36   0xF8DD 0x8054      LDR      R8,[SP, #+84]
   \       0x3A   0x9F14             LDR      R7,[SP, #+80]
   \       0x3C   0xF88D 0x2024      STRB     R2,[SP, #+36]
   \       0x40   0xF88D 0x1025      STRB     R1,[SP, #+37]
    849          
    850            /* TODO
    851               uint8_t UNUSED proxyIndex = 0xFF;
    852               proxyIndex = emberGpProxyTableLookup(addr);
    853               if (proxyIndex != 0xFF) {
    854               //we have a proxy table entry for this GPD
    855               emGpProxyTableSetInRange(proxyIndex);
    856               } else {
    857               //we don't have a proxy table entry
    858               //optionally create an active invalid entry here
    859               //not required for proxy basic
    860               }
    861             */
    862          
    863            if (status == EMBER_NO_SECURITY) {
    864              options = 0;
    865            }
    866            //TODO handle other cases
    867          
    868            options |= addr->applicationId;
   \       0x44   0x4683             MOV      R11,R0
    869            options |= gpdfSecurityLevel
    870                       << GP_COMMISSIONING_SECURITY_LEVEL_TO_OPTIONS_SHIFT;
    871            options |= gpdfSecurityKeyType
    872                       << GP_COMMISSIONING_SECURITY_KEY_TYPE_TO_OPTIONS_SHIFT; //security key type
    873            options |= EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_PROXY_INFO_PRESENT;
    874            emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart(options,
    875                                                                                addr->id.sourceId,
    876                                                                                addr->id.gpdIeeeAddress,
    877                                                                                addr->endpoint,
    878                                                                                sequenceNumber,
    879                                                                                gpdfSecurityLevel,
    880                                                                                gpdSecurityFrameCounter,
    881                                                                                gpdCommandId,
    882                                                                                gpdCommandPayloadLength,
    883                                                                                gpdCommandPayload,
    884                                                                                emberGetNodeId(),
    885                                                                                gpdLink,
    886                                                                                mic);
   \       0x46   0x....'....        BL       emberGetNodeId
   \       0x4A   0xF89D 0x1025      LDRB     R1,[SP, #+37]
   \       0x4E   0x9006             STR      R0,[SP, #+24]
   \       0x50   0x9818             LDR      R0,[SP, #+96]
   \       0x52   0x9107             STR      R1,[SP, #+28]
   \       0x54   0xF89D 0x1024      LDRB     R1,[SP, #+36]
   \       0x58   0x9002             STR      R0,[SP, #+8]
   \       0x5A   0x980A             LDR      R0,[SP, #+40]
   \       0x5C   0xF8CD 0xA020      STR      R10,[SP, #+32]
   \       0x60   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \       0x64   0x9504             STR      R5,[SP, #+16]
   \       0x66   0x9403             STR      R4,[SP, #+12]
   \       0x68   0x9701             STR      R7,[SP, #+4]
   \       0x6A   0x9100             STR      R1,[SP, #+0]
   \       0x6C   0x7A43             LDRB     R3,[R0, #+9]
   \       0x6E   0x4602             MOV      R2,R0
   \       0x70   0x6801             LDR      R1,[R0, #+0]
   \       0x72   0xEA4B 0x1007      ORR      R0,R11,R7, LSL #+4
   \       0x76   0xEA40 0x1488      ORR      R4,R0,R8, LSL #+6
   \       0x7A   0xF444 0x6000      ORR      R0,R4,#0x800
   \       0x7E   0x....'....        BL       emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart
    887            apsFrame = emberAfGetCommandApsFrame();
   \       0x82   0x....'....        BL       emberAfGetCommandApsFrame
   \       0x86   0x4604             MOV      R4,R0
    888            apsFrame->sourceEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   \       0x88   0x20F2             MOVS     R0,#+242
   \       0x8A   0x7120             STRB     R0,[R4, #+4]
    889            apsFrame->destinationEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   \       0x8C   0x7160             STRB     R0,[R4, #+5]
    890            emSetAddDelay(GP_DMIN_U);
   \       0x8E   0x2005             MOVS     R0,#+5
   \       0x90   0x....'....        BL       emSetAddDelay
    891            if (commissioningState.unicastCommunication) {
   \       0x94   0x7970             LDRB     R0,[R6, #+5]
   \       0x96   0xB110             CBZ.N    R0,??emberAfGreenPowerClusterAutoCommissioningCall_2
    892              emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT,
    893                                        commissioningState.commissioningSink);
   \       0x98   0x....'....        BL       ?Subroutine10
    894            } else {
   \                     ??CrossCallReturnLabel_31: (+1)
   \       0x9C   0xE00D             B.N      ??CrossCallReturnLabel_46
    895              apsFrame->sequence = sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET;
   \                     ??emberAfGreenPowerClusterAutoCommissioningCall_2: (+1)
   \       0x9E   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \       0xA2   0xF1A0 0x050C      SUB      R5,R0,#+12
    896              apsFrame->options |= EMBER_APS_OPTION_USE_ALIAS_SEQUENCE_NUMBER;
   \       0xA6   0x88E0             LDRH     R0,[R4, #+6]
   \       0xA8   0x72A5             STRB     R5,[R4, #+10]
   \       0xAA   0xF040 0x0002      ORR      R0,R0,#0x2
   \       0xAE   0x80E0             STRH     R0,[R4, #+6]
    897              emberAfSendCommandBroadcastWithAlias(EMBER_RX_ON_WHEN_IDLE_BROADCAST_ADDRESS,
    898                                                   emGpdAlias(addr),
    899                                                   sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET);
   \       0xB0   0x980A             LDR      R0,[SP, #+40]
   \       0xB2   0x....'....        BL       emGpdAlias
   \       0xB6   0x....'....        BL       ?Subroutine16
    900            }
    901            emSetAddDelay(0);
   \                     ??CrossCallReturnLabel_46: (+1)
   \       0xBA   0x....'....        BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_25: (+1)
   \       0xBE   0xE7B3             B.N      ??emberAfGreenPowerClusterAutoCommissioningCall_0
    902            return true;
    903          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine10: (+1)
   \        0x0   0x88F1             LDRH     R1,[R6, #+6]
   \                     ??Subroutine10_0: (+1)
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x....'....        B.W      emberAfSendCommandUnicast

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine16: (+1)
   \        0x0   0x4601             MOV      R1,R0
   \        0x2   0xB2EA             UXTB     R2,R5
   \        0x4   0xF64F 0x70FD      MOVW     R0,#+65533
   \        0x8   0x....'....        B.W      emberAfSendCommandBroadcastWithAlias

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine20_0: (+1)
   \        0x0   0xB00B             ADD      SP,SP,#+44
   \        0x2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x....'....        B.W      emSetAddDelay
    904          

   \                                 In section .text, align 2, keep-with-next
    905          uint8_t qualityBasedDelay(uint8_t gpdLink)
    906          {
    907            uint8_t ourLqi = (gpdLink & 0xC0) >> 5;
    908            return ((3 - ourLqi) << 5);
   \                     qualityBasedDelay: (+1)
   \        0x0   0x0940             LSRS     R0,R0,#+5
   \        0x2   0xF000 0x0006      AND      R0,R0,#0x6
   \        0x6   0xF1C0 0x0003      RSB      R0,R0,#+3
   \        0xA   0x0740             LSLS     R0,R0,#+29
   \        0xC   0x0E00             LSRS     R0,R0,#+24
   \        0xE   0x4770             BX       LR               ;; return
    909          }
    910          

   \                                 In section .text, align 2, keep-with-next
    911          bool emberAfGreenPowerClusterCommissioningGpdfCallback(GP_PARAMS)
    912          {
   \                     emberAfGreenPowerClusterCommissioningGpdfCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB08A             SUB      SP,SP,#+40
   \        0x6   0x4605             MOV      R5,R0
   \        0x8   0x461C             MOV      R4,R3
    913            EmberApsFrame *apsFrame;
    914          
    915            // Per GP spec 14-0563-08:
    916            // Commissioning: Step 12a: Proxy receives commissioning command
    917            // If applicationId == 0b0000 and srcId == 0 or reserved range 0xfffffff9 - 0xffffffffe
    918            // OR applicationId == 0b0010 and srcId == 0, drop frame.
    919            if ((addr->applicationId == EMBER_GP_APPLICATION_SOURCE_ID)
    920                && (addr->id.sourceId == GP_GPD_SRC_ID_RESERVED_0)) {
   \        0xA   0x7A20             LDRB     R0,[R4, #+8]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xBF04             ITT      EQ 
   \       0x10   0x6823             LDREQ    R3,[R4, #+0]
   \       0x12   0x2B00             CMPEQ    R3,#+0
   \       0x14   0xD073             BEQ.N    ??CrossCallReturnLabel_24
    921              // silently drop frame
    922              goto kickout;
    923            }
    924          
    925            if ((addr->applicationId == EMBER_GP_APPLICATION_SOURCE_ID)
    926                && (addr->id.sourceId >=  GP_GPD_SRC_ID_RESERVED_FFFFFF9)
    927                && (addr->id.sourceId <=  GP_GPD_SRC_ID_RESERVED_FFFFFFE)) {
   \       0x16   0xB930             CBNZ.N   R0,??emberAfGreenPowerClusterCommissioningGpdfCall_0
   \       0x18   0x6823             LDR      R3,[R4, #+0]
   \       0x1A   0xF113 0x0F07      CMN      R3,#+7
   \       0x1E   0xD302             BCC.N    ??emberAfGreenPowerClusterCommissioningGpdfCall_0
   \       0x20   0xF113 0x0F01      CMN      R3,#+1
   \       0x24   0xD16B             BNE.N    ??CrossCallReturnLabel_24
    928              // silently drop frame as in reserved range
    929              goto kickout;
    930            }
    931          
    932            if (addr->applicationId == EMBER_GP_APPLICATION_IEEE_ADDRESS) {
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_0: (+1)
   \       0x26   0x2802             CMP      R0,#+2
   \       0x28   0xD10A             BNE.N    ??emberAfGreenPowerClusterCommissioningGpdfCall_1
    933              uint8_t i;
    934              for (i = 0; i < EUI64_SIZE; i++) {
   \       0x2A   0x2300             MOVS     R3,#+0
    935                if (addr->id.gpdIeeeAddress[i]) {
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_2: (+1)
   \       0x2C   0xB2D8             UXTB     R0,R3
   \       0x2E   0x5C20             LDRB     R0,[R4, R0]
   \       0x30   0xB918             CBNZ.N   R0,??emberAfGreenPowerClusterCommissioningGpdfCall_3
    936                  break;
    937                }
    938              }
   \       0x32   0x1C5B             ADDS     R3,R3,#+1
   \       0x34   0xB2DE             UXTB     R6,R3
   \       0x36   0x2E08             CMP      R6,#+8
   \       0x38   0xDBF8             BLT.N    ??emberAfGreenPowerClusterCommissioningGpdfCall_2
    939              if (i == EUI64_SIZE) {
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_3: (+1)
   \       0x3A   0xB2DB             UXTB     R3,R3
   \       0x3C   0x2B08             CMP      R3,#+8
   \       0x3E   0xD05E             BEQ.N    ??CrossCallReturnLabel_24
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_1: (+1)
   \       0x40   0x9816             LDR      R0,[SP, #+88]
    940                // silently drop frame if EUI is all zeros
    941                goto kickout;
    942              }
    943            }
    944          
    945            if (autoCommissioning) {
   \       0x42   0x2800             CMP      R0,#+0
   \       0x44   0xD15B             BNE.N    ??CrossCallReturnLabel_24
   \       0x46   0x9E17             LDR      R6,[SP, #+92]
    946              goto kickout;
    947            }
    948          
    949            // Step b
    950            if ((gpdfSecurityLevel == EMBER_GP_SECURITY_LEVEL_FC_MIC)
    951                || (gpdfSecurityLevel == EMBER_GP_SECURITY_LEVEL_FC_MIC_ENCRYPTED)) {
    952              if ((status == EMBER_AUTH_FAILURE)
    953                  || (status == EMBER_UNPROCESSED)) {
    954                // fwd frame with Security processing failed bit set as part of GP
    955                // Commissioning Notification.
    956                goto send_notification;
    957              }
    958            }
    959          
    960            // Step c
    961            // RxAfterTx is true
    962            {
    963              bool frameFound = false;
    964              if (rxAfterTx && (gpdCommandId == EMBER_ZCL_GP_GPDF_COMMISSIONING)) {
    965                if (addr->applicationId == EMBER_GP_APPLICATION_IEEE_ADDRESS) {
    966                  // TODO: check endpoint
    967                }
    968              }
    969          
    970              if (frameFound) {
    971                // send at least one Commissioning Reply GPDF
    972                //XXX compare to where we do this now
    973              }
    974            }
    975          
    976            // Step d
    977            /* TODO
    978               {
    979               uint8_t gpProxyTableIndex = emberGpProxyTableLookup(addr);
    980               if (gpProxyTableIndex != 0xFF) {
    981                emGpProxyTableSetInRange(gpProxyTableIndex);
    982               } else {
    983                 //basic proxy doesn't have to do anything in this situation
    984               }
    985          
    986               }
    987             */
    988          
    989            // Step e: sending GP Commissioning Notification
    990            send_notification: {
    991              uint16_t options = addr->applicationId;
   \       0x48   0x7A23             LDRB     R3,[R4, #+8]
    992              if (rxAfterTx) {
   \       0x4A   0x0030             MOVS     R0,R6
    993                options |= EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RX_AFTER_TX;
   \       0x4C   0x9815             LDR      R0,[SP, #+84]
   \       0x4E   0xBF18             IT       NE 
   \       0x50   0xF043 0x0308      ORRNE    R3,R3,#0x8
    994              }
    995          
    996              if ((status == EMBER_AUTH_FAILURE)
    997                  || (status == EMBER_UNPROCESSED)) {
   \       0x54   0x2D7E             CMP      R5,#+126
   \       0x56   0xBF18             IT       NE 
   \       0x58   0x2D7F             CMPNE    R5,#+127
   \       0x5A   0xD103             BNE.N    ??emberAfGreenPowerClusterCommissioningGpdfCall_4
    998                options |=
    999                  EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_PROCESSING_FAILED;
   \       0x5C   0xF443 0x7300      ORR      R3,R3,#0x200
   1000                options |= (gpdfSecurityKeyType ? 0x4 : 0) // see 1.0 spec line 3040
   1001                           << GP_COMMISSIONING_SECURITY_KEY_TYPE_TO_OPTIONS_SHIFT;
   \       0x60   0xB100             CBZ.N    R0,??emberAfGreenPowerClusterCommissioningGpdfCall_4
   \       0x62   0x2004             MOVS     R0,#+4
   1002              } else {
   1003                options |= gpdfSecurityKeyType
   1004                           << GP_COMMISSIONING_SECURITY_KEY_TYPE_TO_OPTIONS_SHIFT;
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_4: (+1)
   \       0x64   0x9D14             LDR      R5,[SP, #+80]
   \       0x66   0xEA43 0x1380      ORR      R3,R3,R0, LSL #+6
   1005              }
   1006          
   1007              options |= gpdfSecurityLevel
   1008                         << GP_COMMISSIONING_SECURITY_LEVEL_TO_OPTIONS_SHIFT;
   1009              options |= EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_PROXY_INFO_PRESENT;
   1010              if (commissioningState.unicastCommunication) {
   \       0x6A   0x....'....        LDR.W    R9,??DataTable12
   \       0x6E   0x012F             LSLS     R7,R5,#+4
   \       0x70   0xF447 0x6700      ORR      R7,R7,#0x800
   \       0x74   0xF899 0x0005      LDRB     R0,[R9, #+5]
   \       0x78   0x433B             ORRS     R3,R7,R3
   \       0x7A   0xF8AD 0x3026      STRH     R3,[SP, #+38]
   \       0x7E   0x460F             MOV      R7,R1
   \       0x80   0xF88D 0x2024      STRB     R2,[SP, #+36]
   \       0x84   0xF8DD 0xA068      LDR      R10,[SP, #+104]
   \       0x88   0xF8DD 0x8070      LDR      R8,[SP, #+112]
   \       0x8C   0xF8DD 0xB074      LDR      R11,[SP, #+116]
   \       0x90   0xB190             CBZ.N    R0,??emberAfGreenPowerClusterCommissioningGpdfCall_5
   1011                emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart(options,
   1012                                                                                    addr->id.sourceId,
   1013                                                                                    addr->id.gpdIeeeAddress,
   1014                                                                                    addr->endpoint,
   1015                                                                                    sequenceNumber,
   1016                                                                                    gpdfSecurityLevel,
   1017                                                                                    gpdSecurityFrameCounter,
   1018                                                                                    gpdCommandId,
   1019                                                                                    gpdCommandPayloadLength,
   1020                                                                                    gpdCommandPayload,
   1021                                                                                    emberGetNodeId(),
   1022                                                                                    gpdLink,
   1023                                                                                    mic);
   \       0x92   0x....'....        BL       emberGetNodeId
   \       0x96   0x....'....        BL       ?Subroutine2
   1024                if (rxAfterTx) {
   \                     ??CrossCallReturnLabel_5: (+1)
   \       0x9A   0x2E00             CMP      R6,#+0
   \       0x9C   0xBF14             ITE      NE 
   \       0x9E   0x2020             MOVNE    R0,#+32
   \       0xA0   0x2005             MOVEQ    R0,#+5
   1025                  emSetAddDelay(GP_DMIN_B);
   1026                } else {
   1027                  emSetAddDelay(GP_DMIN_U);
   \       0xA2   0x....'....        BL       emSetAddDelay
   1028                }
   1029                apsFrame = emberAfGetCommandApsFrame();
   \       0xA6   0x....'....        BL       emberAfGetCommandApsFrame
   1030                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \       0xAA   0x....'....        BL       ?Subroutine17
   1031                apsFrame->destinationEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   1032                UNUSED EmberStatus retval = emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT,
   1033                                                                      commissioningState.commissioningSink);
   \                     ??CrossCallReturnLabel_47: (+1)
   \       0xAE   0xF8B9 0x1006      LDRH     R1,[R9, #+6]
   \       0xB2   0x....'....        BL       ??Subroutine10_0
   1034                emSetAddDelay(0);
   \                     ??CrossCallReturnLabel_29: (+1)
   \       0xB6   0xE020             B.N      ??CrossCallReturnLabel_45
   1035              } else {
   1036                emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart(options,
   1037                                                                                    addr->id.sourceId,
   1038                                                                                    addr->id.gpdIeeeAddress,
   1039                                                                                    addr->endpoint,
   1040                                                                                    sequenceNumber,
   1041                                                                                    gpdfSecurityLevel,
   1042                                                                                    gpdSecurityFrameCounter,
   1043                                                                                    gpdCommandId,
   1044                                                                                    gpdCommandPayloadLength,
   1045                                                                                    gpdCommandPayload,
   1046                                                                                    emberGetNodeId(),
   1047                                                                                    gpdLink,
   1048                                                                                    mic);
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_5: (+1)
   \       0xB8   0x....'....        BL       emberGetNodeId
   \       0xBC   0x....'....        BL       ?Subroutine2
   1049                apsFrame = emberAfGetCommandApsFrame();
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0xC0   0x....'....        BL       emberAfGetCommandApsFrame
   1050                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \       0xC4   0x....'....        BL       ?Subroutine17
   1051                apsFrame->destinationEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   1052                apsFrame->sequence = sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET;
   \                     ??CrossCallReturnLabel_48: (+1)
   \       0xC8   0xF89D 0x1024      LDRB     R1,[SP, #+36]
   \       0xCC   0xF1A1 0x050C      SUB      R5,R1,#+12
   1053                apsFrame->options |= EMBER_APS_OPTION_USE_ALIAS_SEQUENCE_NUMBER;
   \       0xD0   0x88C1             LDRH     R1,[R0, #+6]
   \       0xD2   0x7285             STRB     R5,[R0, #+10]
   \       0xD4   0xF041 0x0102      ORR      R1,R1,#0x2
   \       0xD8   0x80C1             STRH     R1,[R0, #+6]
   1054                if (rxAfterTx) {
   \       0xDA   0xB136             CBZ.N    R6,??emberAfGreenPowerClusterCommissioningGpdfCall_6
   1055                  emSetAddDelay(GP_DMIN_B + qualityBasedDelay(gpdLink));
   \       0xDC   0x097F             LSRS     R7,R7,#+5
   \       0xDE   0x....'....        BL       ?Subroutine19
   \                     ??CrossCallReturnLabel_55: (+1)
   \       0xE2   0x0E3F             LSRS     R7,R7,#+24
   \       0xE4   0x3720             ADDS     R7,R7,#+32
   \       0xE6   0xB2B8             UXTH     R0,R7
   \       0xE8   0xE000             B.N      ??emberAfGreenPowerClusterCommissioningGpdfCall_7
   1056                } else {
   1057                  emSetAddDelay(GP_DMIN_U);
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_6: (+1)
   \       0xEA   0x2005             MOVS     R0,#+5
   \                     ??emberAfGreenPowerClusterCommissioningGpdfCall_7: (+1)
   \       0xEC   0x....'....        BL       emSetAddDelay
   1058                }
   1059          
   1060                UNUSED EmberStatus retval = emberAfSendCommandBroadcastWithAlias(EMBER_RX_ON_WHEN_IDLE_BROADCAST_ADDRESS,
   1061                                                                                 emGpdAlias(addr),
   1062                                                                                 sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET);
   \       0xF0   0x4620             MOV      R0,R4
   \       0xF2   0x....'....        BL       emGpdAlias
   \       0xF6   0x....'....        BL       ?Subroutine16
   1063                emSetAddDelay(0);
   1064              }
   1065            }
   \                     ??CrossCallReturnLabel_45: (+1)
   \       0xFA   0x....'....        BL       ?Subroutine8
   1066          
   1067            kickout: return true;
   \                     ??CrossCallReturnLabel_24: (+1)
   \       0xFE   0x2001             MOVS     R0,#+1
   \      0x100   0x....             B.N      ??Subroutine20_0
   1068          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x9006             STR      R0,[SP, #+24]
   \        0x2   0xF89D 0x0064      LDRB     R0,[SP, #+100]
   \        0x6   0x9918             LDR      R1,[SP, #+96]
   \        0x8   0xF8CD 0xA020      STR      R10,[SP, #+32]
   \        0xC   0x9003             STR      R0,[SP, #+12]
   \        0xE   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \       0x12   0x9707             STR      R7,[SP, #+28]
   \       0x14   0xF8CD 0xB014      STR      R11,[SP, #+20]
   \       0x18   0xF8CD 0x8010      STR      R8,[SP, #+16]
   \       0x1C   0x9102             STR      R1,[SP, #+8]
   \       0x1E   0x9501             STR      R5,[SP, #+4]
   \       0x20   0x9000             STR      R0,[SP, #+0]
   \       0x22   0x7A63             LDRB     R3,[R4, #+9]
   \       0x24   0x6821             LDR      R1,[R4, #+0]
   \       0x26   0xF8BD 0x0026      LDRH     R0,[SP, #+38]
   \       0x2A   0x4622             MOV      R2,R4
   \       0x2C   0x....'....        B.W      emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine19: (+1)
   \        0x0   0xF007 0x0706      AND      R7,R7,#0x6
   \        0x4   0xF1C7 0x0703      RSB      R7,R7,#+3
   \        0x8   0x077F             LSLS     R7,R7,#+29
   \        0xA   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine17: (+1)
   \        0x0   0x21F2             MOVS     R1,#+242
   \        0x2   0x7101             STRB     R1,[R0, #+4]
   \        0x4   0x7141             STRB     R1,[R0, #+5]
   \        0x6   0x4770             BX       LR
   1069          

   \                                 In section .text, align 2, keep-with-next
   1070          bool emberAfGreenPowerClusterDecommissioningGpdfCallback(GP_PARAMS)
   1071          {
   \                     emberAfGreenPowerClusterDecommissioningGpdfCallback: (+1)
   \        0x0   0x....             B.N      ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB08A             SUB      SP,SP,#+40
   \        0x6   0xF8DD 0x8050      LDR      R8,[SP, #+80]
   \        0xA   0xF8DD 0xE054      LDR      LR,[SP, #+84]
   \        0xE   0xF8DD 0xC058      LDR      R12,[SP, #+88]
   \       0x12   0x9F17             LDR      R7,[SP, #+92]
   \       0x14   0xF8DD 0x9060      LDR      R9,[SP, #+96]
   \       0x18   0x9E19             LDR      R6,[SP, #+100]
   \       0x1A   0xF8DD 0xA068      LDR      R10,[SP, #+104]
   \       0x1E   0x9D1B             LDR      R5,[SP, #+108]
   \       0x20   0x9C1C             LDR      R4,[SP, #+112]
   \       0x22   0xF8DD 0xB074      LDR      R11,[SP, #+116]
   1072            return emberAfGreenPowerClusterCommissioningGpdfCallback(GP_ARGS);
   \       0x26   0x9507             STR      R5,[SP, #+28]
   \       0x28   0x9408             STR      R4,[SP, #+32]
   \       0x2A   0xF8CD 0xB024      STR      R11,[SP, #+36]
   \       0x2E   0xF8CD 0xA018      STR      R10,[SP, #+24]
   \       0x32   0x9605             STR      R6,[SP, #+20]
   \       0x34   0xF8CD 0x9010      STR      R9,[SP, #+16]
   \       0x38   0x9703             STR      R7,[SP, #+12]
   \       0x3A   0xF8CD 0xC008      STR      R12,[SP, #+8]
   \       0x3E   0xF8CD 0xE004      STR      LR,[SP, #+4]
   \       0x42   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x46   0x....'....        BL       emberAfGreenPowerClusterCommissioningGpdfCallback
   \       0x4A                      REQUIRE ??Subroutine20_0
   \       0x4A                      ;; // Fall through to label ??Subroutine20_0
   1073          }
   1074          

   \                                 In section .text, align 4, keep-with-next
   1075          bool emberAfGreenPowerClusterSuccessGpdfCallback(GP_PARAMS)
   1076          {
   \                     emberAfGreenPowerClusterSuccessGpdfCallback: (+1)
   \        0x0   0xBF00             Nop      
   \        0x2                      REQUIRE ?Subroutine0
   \        0x2                      ;; // Fall through to label ?Subroutine0
   1077            return emberAfGreenPowerClusterCommissioningGpdfCallback(GP_ARGS);
   1078          }
   1079          

   \                                 In section .text, align 2, keep-with-next
   1080          bool emberAfGreenPowerClusterChannelRequestGpdfCallback(GP_PARAMS)
   1081          {
   \                     emberAfGreenPowerClusterChannelRequestGpdfCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB08A             SUB      SP,SP,#+40
   1082            if (!commissioningState.inCommissioningMode) {
   \        0x6   0x....             LDR.N    R6,??DataTable12
   \        0x8   0x7834             LDRB     R4,[R6, #+0]
   \        0xA   0x2C00             CMP      R4,#+0
   \        0xC   0xBF1E             ITTT     NE 
   \        0xE   0x7A34             LDRBNE   R4,[R6, #+8]
   \       0x10   0xF004 0x0403      ANDNE    R4,R4,#0x3
   \       0x14   0x2C01             CMPNE    R4,#+1
   1083              return true;
   1084            }
   1085          
   1086            // based on figure 88 of GP proxy basic spec V1.0 page 191
   1087            // the second condition of the following condition seems neccessary
   1088            if ((commissioningState.channelStatus & GP_CLIENT_ON_TRANSMIT_CHANNEL_MASK)
   1089                && (!(commissioningState.channelStatus & GP_CLIENT_TRANSMIT_SAME_AS_OPERATIONAL_CHANNEL_MASK))) {
   \       0x16   0xD04F             BEQ.N    ??CrossCallReturnLabel_23
   1090              //Don't forward if we're on the transmit channel, and the transmit channel
   1091              // is not same as the operational channel
   1092            } else {
   1093              //TODO: check for a reason not to forward (busy, etc)
   1094          
   1095              uint16_t options = 0; //always uses appID srcID becase srcID is absent was addr.applicationId;
   1096          
   1097              //rxAfter Tx always set for channel request
   1098              options |=
   1099                EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_RX_AFTER_TX;
   \       0x18   0x2508             MOVS     R5,#+8
   1100          
   1101              if (status == EMBER_AUTH_FAILURE) {
   \       0x1A   0x287E             CMP      R0,#+126
   1102                options |=
   1103                  EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_SECURITY_PROCESSING_FAILED;
   \       0x1C   0x9815             LDR      R0,[SP, #+84]
   \       0x1E   0x9C14             LDR      R4,[SP, #+80]
   \       0x20   0xBF08             IT       EQ 
   \       0x22   0xF44F 0x7502      MOVEQ    R5,#+520
   1104              }
   1105          
   1106              options |= gpdfSecurityLevel
   1107                         << GP_COMMISSIONING_SECURITY_LEVEL_TO_OPTIONS_SHIFT;
   1108              options |= gpdfSecurityKeyType
   1109                         << GP_COMMISSIONING_SECURITY_KEY_TYPE_TO_OPTIONS_SHIFT;
   1110              options |= EMBER_AF_GP_COMMISSIONING_NOTIFICATION_OPTION_PROXY_INFO_PRESENT;
   \       0x26   0x0180             LSLS     R0,R0,#+6
   \       0x28   0xEA40 0x1004      ORR      R0,R0,R4, LSL #+4
   1111          
   1112              EmberApsFrame *apsFrame;
   1113          
   1114              if (commissioningState.unicastCommunication) {
   \       0x2C   0xF88D 0x2024      STRB     R2,[SP, #+36]
   \       0x30   0x460F             MOV      R7,R1
   \       0x32   0xF440 0x6000      ORR      R0,R0,#0x800
   \       0x36   0x4328             ORRS     R0,R0,R5
   \       0x38   0xF8AD 0x0026      STRH     R0,[SP, #+38]
   \       0x3C   0x7970             LDRB     R0,[R6, #+5]
   \       0x3E   0xF8DD 0xB060      LDR      R11,[SP, #+96]
   \       0x42   0xF8DD 0x8064      LDR      R8,[SP, #+100]
   \       0x46   0xF8DD 0xA068      LDR      R10,[SP, #+104]
   \       0x4A   0x9D1C             LDR      R5,[SP, #+112]
   \       0x4C   0xF8DD 0x9074      LDR      R9,[SP, #+116]
   \       0x50   0xB168             CBZ.N    R0,??emberAfGreenPowerClusterChannelRequestGpdfCal_0
   1115                emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart(options,
   1116                                                                                    0x00000000, //addr.id.sourceId,
   1117                                                                                    NULL, //addr.id.gpdIeeeAddress,
   1118                                                                                    0, //addr.endpoint,
   1119                                                                                    sequenceNumber,
   1120                                                                                    gpdfSecurityLevel,
   1121                                                                                    gpdSecurityFrameCounter,
   1122                                                                                    gpdCommandId,
   1123                                                                                    gpdCommandPayloadLength,
   1124                                                                                    gpdCommandPayload,
   1125                                                                                    emberGetNodeId(),
   1126                                                                                    gpdLink,
   1127                                                                                    mic);
   \       0x52   0x....'....        BL       emberGetNodeId
   \       0x56   0x....'....        BL       ?Subroutine3
   1128                apsFrame = emberAfGetCommandApsFrame();
   \                     ??CrossCallReturnLabel_7: (+1)
   \       0x5A   0x....'....        BL       emberAfGetCommandApsFrame
   1129                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \       0x5E   0x....'....        BL       ?Subroutine17
   1130                apsFrame->destinationEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   1131                emSetAddDelay(GP_DMIN_B);
   \                     ??CrossCallReturnLabel_49: (+1)
   \       0x62   0x2020             MOVS     R0,#+32
   \       0x64   0x....'....        BL       emSetAddDelay
   1132                UNUSED EmberStatus retval = emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT,
   1133                                                                      commissioningState.commissioningSink);
   \       0x68   0x....'....        BL       ?Subroutine10
   1134                emSetAddDelay(0);
   \                     ??CrossCallReturnLabel_30: (+1)
   \       0x6C   0xE022             B.N      ??emberAfGreenPowerClusterChannelRequestGpdfCal_1
   1135              } else {
   \                     ??emberAfGreenPowerClusterChannelRequestGpdfCal_0: (+1)
   \       0x6E   0x461E             MOV      R6,R3
   1136                emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart(options,
   1137                                                                                    0x00000000, //addr.id.sourceId,
   1138                                                                                    NULL, //addr.id.gpdIeeeAddress,
   1139                                                                                    0, //addr.endpoint,
   1140                                                                                    sequenceNumber,
   1141                                                                                    gpdfSecurityLevel,
   1142                                                                                    gpdSecurityFrameCounter,
   1143                                                                                    gpdCommandId,
   1144                                                                                    gpdCommandPayloadLength,
   1145                                                                                    gpdCommandPayload,
   1146                                                                                    emberGetNodeId(),
   1147                                                                                    gpdLink,
   1148                                                                                    mic);
   \       0x70   0x....'....        BL       emberGetNodeId
   \       0x74   0x....'....        BL       ?Subroutine3
   1149                apsFrame = emberAfGetCommandApsFrame();
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0x78   0x....'....        BL       emberAfGetCommandApsFrame
   1150                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \       0x7C   0x....'....        BL       ?Subroutine17
   1151                apsFrame->destinationEndpoint = GP_ENDPOINT; //emberAfCurrentEndpoint();
   1152                apsFrame->sequence = sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET;
   1153                apsFrame->options |= EMBER_APS_OPTION_USE_ALIAS_SEQUENCE_NUMBER;
   1154                emSetAddDelay(GP_DMIN_B + qualityBasedDelay(gpdLink));
   \                     ??CrossCallReturnLabel_50: (+1)
   \       0x80   0x097F             LSRS     R7,R7,#+5
   \       0x82   0xF89D 0x1024      LDRB     R1,[SP, #+36]
   \       0x86   0x....'....        BL       ?Subroutine19
   \                     ??CrossCallReturnLabel_56: (+1)
   \       0x8A   0xF1A1 0x040C      SUB      R4,R1,#+12
   \       0x8E   0x88C1             LDRH     R1,[R0, #+6]
   \       0x90   0x0E3F             LSRS     R7,R7,#+24
   \       0x92   0x7284             STRB     R4,[R0, #+10]
   \       0x94   0xF041 0x0102      ORR      R1,R1,#0x2
   \       0x98   0x80C1             STRH     R1,[R0, #+6]
   \       0x9A   0x3720             ADDS     R7,R7,#+32
   \       0x9C   0xB2B8             UXTH     R0,R7
   \       0x9E   0x....'....        BL       emSetAddDelay
   1155                UNUSED EmberStatus retval = emberAfSendCommandBroadcastWithAlias(EMBER_RX_ON_WHEN_IDLE_BROADCAST_ADDRESS,
   1156                                                                                 emGpdAlias(addr),
   1157                                                                                 sequenceNumber - EMBER_GP_COMMISSIONING_NOTIFICATION_SEQUENCE_NUMBER_OFFSET);
   \       0xA2   0x4630             MOV      R0,R6
   \       0xA4   0x....'....        BL       emGpdAlias
   \       0xA8   0x4601             MOV      R1,R0
   \       0xAA   0xB2E2             UXTB     R2,R4
   \       0xAC   0xF64F 0x70FD      MOVW     R0,#+65533
   \       0xB0   0x....'....        BL       emberAfSendCommandBroadcastWithAlias
   1158                emSetAddDelay(0);
   1159              }
   1160            }
   \                     ??emberAfGreenPowerClusterChannelRequestGpdfCal_1: (+1)
   \       0xB4   0x....'....        BL       ?Subroutine8
   1161          
   1162            return true;
   \                     ??CrossCallReturnLabel_23: (+1)
   \       0xB8   0x2001             MOVS     R0,#+1
   \       0xBA   0x....             B.N      ??Subroutine20_0
   1163          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x9006             STR      R0,[SP, #+24]
   \        0x2   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \        0x6   0xF8CD 0xA020      STR      R10,[SP, #+32]
   \        0xA   0x9707             STR      R7,[SP, #+28]
   \        0xC   0x9000             STR      R0,[SP, #+0]
   \        0xE   0xF8BD 0x0026      LDRH     R0,[SP, #+38]
   \       0x12   0xF8CD 0x9014      STR      R9,[SP, #+20]
   \       0x16   0x9504             STR      R5,[SP, #+16]
   \       0x18   0xF8CD 0x800C      STR      R8,[SP, #+12]
   \       0x1C   0xF8CD 0xB008      STR      R11,[SP, #+8]
   \       0x20   0x9401             STR      R4,[SP, #+4]
   \       0x22   0x2300             MOVS     R3,#+0
   \       0x24   0x2200             MOVS     R2,#+0
   \       0x26   0x2100             MOVS     R1,#+0
   \       0x28   0x....'....        B.W      emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart
   1164          

   \                                 In section .text, align 2, keep-with-next
   1165          bool emberAfGreenPowerClusterGpdfForwardCallback(GP_PARAMS)
   1166          {
   \                     emberAfGreenPowerClusterGpdfForwardCallback: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB09A             SUB      SP,SP,#+104
   \        0x6   0x982B             LDR      R0,[SP, #+172]
   \        0x8   0x4692             MOV      R10,R2
   \        0xA   0x460F             MOV      R7,R1
   1167            uint8_t i;
   1168            uint16_t options = 0;
   1169            uint16_t alias = 0;
   1170            EmberApsFrame *apsFrame;
   1171          
   1172            if (proxyTableIndex == 0xFF) {
   \        0xC   0x4602             MOV      R2,R0
   \        0xE   0x461C             MOV      R4,R3
   \       0x10   0x2AFF             CMP      R2,#+255
   \       0x12   0xF000 0x80D9      BEQ.W    ??CrossCallReturnLabel_21
   1173              return true;
   1174            }
   1175            EmberGpProxyTableEntry entry;
   1176            if (proxyTableIndex != 0xFF) {
   1177          #ifndef EZSP_HOST
   1178              //TODO, we need to decide how to do this for host
   1179              emGpProxyTableSetFirstToForward(proxyTableIndex);
   \       0x16   0x2148             MOVS     R1,#+72
   \       0x18   0x434A             MULS     R2,R1,R2
   \       0x1A   0x....'....        LDR.W    R3,??DataTable17_3
   \       0x1E   0x6819             LDR      R1,[R3, #+0]
   \       0x20   0x1D0D             ADDS     R5,R1,#+4
   \       0x22   0x58AB             LDR      R3,[R5, R2]
   \       0x24   0x1D09             ADDS     R1,R1,#+4
   \       0x26   0xF443 0x7300      ORR      R3,R3,#0x200
   \       0x2A   0x508B             STR      R3,[R1, R2]
   1180              emGpProxyTableSetInRange(proxyTableIndex);    //TODO is this the right place for this?
   \       0x2C   0xF443 0x6380      ORR      R3,R3,#0x400
   \       0x30   0x50AB             STR      R3,[R5, R2]
   1181          #endif
   1182              if (emberGpProxyTableGetEntry(proxyTableIndex, &entry) != EMBER_SUCCESS) {
   \       0x32   0xA908             ADD      R1,SP,#+32
   \       0x34   0x....'....        BL       emberGpProxyTableGetEntry
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xF040 0x80C5      BNE.W    ??CrossCallReturnLabel_21
   \       0x3E   0x9407             STR      R4,[SP, #+28]
   1183                return true;
   1184              }
   1185            }
   1186          
   1187            options |= addr->applicationId;
   \       0x40   0xF894 0x9008      LDRB     R9,[R4, #+8]
   1188          
   1189            //Traverse the sink list to set the options flags
   1190            for (i = 0; i < GP_SINK_LIST_ENTRIES; i++) {
   \       0x44   0x2100             MOVS     R1,#+0
   \       0x46   0xF04F 0x080C      MOV      R8,#+12
   1191              if (entry.sinkList[i].type == EMBER_GP_SINK_TYPE_FULL_UNICAST
   1192                  || entry.sinkList[i].type == EMBER_GP_SINK_TYPE_LW_UNICAST) {
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_0: (+1)
   \       0x4A   0xFB08 0xF201      MUL      R2,R8,R1
   \       0x4E   0xA808             ADD      R0,SP,#+32
   \       0x50   0x4410             ADD      R0,R0,R2
   \       0x52   0xF890 0x002C      LDRB     R0,[R0, #+44]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xBF14             ITE      NE 
   \       0x5A   0x2803             CMPNE    R0,#+3
   \       0x5C   0xF049 0x0908      ORREQ    R9,R9,#0x8
   1193                options |= EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_UNICAST;
   \       0x60   0xD003             BEQ.N    ??emberAfGreenPowerClusterGpdfForwardCallback_1
   1194              } else if (entry.sinkList[i].type == EMBER_GP_SINK_TYPE_GROUPCAST) {
   \       0x62   0x2802             CMP      R0,#+2
   \       0x64   0xBF08             IT       EQ 
   \       0x66   0xF049 0x0920      ORREQ    R9,R9,#0x20
   1195                options |= EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_COMMISSIONED_GROUP;
   1196              }
   1197            }
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_1: (+1)
   \       0x6A   0x1C49             ADDS     R1,R1,#+1
   \       0x6C   0x2902             CMP      R1,#+2
   \       0x6E   0xDBEC             BLT.N    ??emberAfGreenPowerClusterGpdfForwardCallback_0
   1198          
   1199            if (entry.options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_DERIVED_GROUP_GPS) {
   \       0x70   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   1200              options |= EMBER_AF_GP_NOTIFICATION_OPTION_ALSO_DERIVED_GROUP;
   \       0x74   0x9D29             LDR      R5,[SP, #+164]
   1201            }
   1202          
   1203            options |= gpdfSecurityLevel
   1204                       << EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_LEVEL_OFFSET;
   1205          
   1206            options |= gpdfSecurityKeyType
   1207                       << EMBER_AF_GP_NOTIFICATION_OPTION_SECURITY_KEY_TYPE_OFFSET;
   1208          
   1209            //Basic proxy always sends queue full for data gpdfs (not commissioning)
   1210            options |= EMBER_AF_GP_NOTIFICATION_OPTION_GP_TX_QUEUE_FULL;
   1211          
   1212            // Basic Proxy implementing the latest spec always sets this
   1213            options |= EMBER_AF_GP_NOTIFICATION_OPTION_PROXY_INFO_PRESENT;
   \       0x76   0x9C27             LDR      R4,[SP, #+156]
   \       0x78   0x0601             LSLS     R1,R0,#+24
   \       0x7A   0x9924             LDR      R1,[SP, #+144]
   \       0x7C   0x9825             LDR      R0,[SP, #+148]
   \       0x7E   0xBF48             IT       MI 
   \       0x80   0xF049 0x0910      ORRMI    R9,R9,#0x10
   \       0x84   0xEA49 0x1281      ORR      R2,R9,R1, LSL #+6
   1214          
   1215            // comm/decomm frames ignore rx after tx bit in operational mode
   1216            if (((gpdCommandId != EMBER_ZCL_GP_GPDF_COMMISSIONING
   1217                  && gpdCommandId != EMBER_ZCL_GP_GPDF_DECOMMISSIONING)
   1218                 || commissioningState.inCommissioningMode)
   1219                && rxAfterTx) {
   \       0x88   0x2DE0             CMP      R5,#+224
   \       0x8A   0xEA42 0x2000      ORR      R0,R2,R0, LSL #+8
   \       0x8E   0xF440 0x40A0      ORR      R0,R0,#0x5000
   \       0x92   0xFA1F 0xF980      UXTH     R9,R0
   \       0x96   0xBF18             IT       NE 
   \       0x98   0x2DE1             CMPNE    R5,#+225
   \       0x9A   0xD103             BNE.N    ??emberAfGreenPowerClusterGpdfForwardCallback_2
   \       0x9C   0x....'....        LDR.W    R2,??DataTable17_4
   \       0xA0   0x7810             LDRB     R0,[R2, #+0]
   \       0xA2   0xB110             CBZ.N    R0,??emberAfGreenPowerClusterGpdfForwardCallback_3
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_2: (+1)
   \       0xA4   0xB10C             CBZ.N    R4,??emberAfGreenPowerClusterGpdfForwardCallback_3
   1220              options |= EMBER_AF_GP_NOTIFICATION_OPTION_RX_AFTER_TX;
   \       0xA6   0xF449 0x6900      ORR      R9,R9,#0x800
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_3: (+1)
   \       0xAA   0xF88D 0xA018      STRB     R10,[SP, #+24]
   \       0xAE   0x9E28             LDR      R6,[SP, #+160]
   1221            }
   1222          
   1223            if (  gpdfSecurityLevel == EMBER_GP_SECURITY_KEY_NONE) {
   \       0xB0   0xB901             CBNZ.N   R1,??emberAfGreenPowerClusterGpdfForwardCallback_4
   1224              // If no security use the MAC sequence number instead
   1225              gpdSecurityFrameCounter = (uint32_t)(sequenceNumber & 0x000000ff);
   \       0xB2   0x4656             MOV      R6,R10
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_4: (+1)
   \       0xB4   0xF8DD 0xB0B4      LDR      R11,[SP, #+180]
   \       0xB8   0xF8DD 0xA0B0      LDR      R10,[SP, #+176]
   1226            }
   1227          
   1228            emberAfFillCommandGreenPowerClusterGpNotificationSmart(options,
   1229                                                                   addr->id.sourceId,
   1230                                                                   addr->id.gpdIeeeAddress,
   1231                                                                   addr->endpoint,
   1232                                                                   gpdSecurityFrameCounter,
   1233                                                                   gpdCommandId,
   1234                                                                   gpdCommandPayloadLength,
   1235                                                                   gpdCommandPayload,
   1236                                                                   emberGetNodeId(),
   1237                                                                   0xFF);
   \       0xBC   0x....'....        BL       emberGetNodeId
   \       0xC0   0x21FF             MOVS     R1,#+255
   \       0xC2   0x9105             STR      R1,[SP, #+20]
   \       0xC4   0x9004             STR      R0,[SP, #+16]
   \       0xC6   0xF8CD 0xB00C      STR      R11,[SP, #+12]
   \       0xCA   0xF8CD 0xA008      STR      R10,[SP, #+8]
   \       0xCE   0x9501             STR      R5,[SP, #+4]
   \       0xD0   0x9600             STR      R6,[SP, #+0]
   \       0xD2   0x9807             LDR      R0,[SP, #+28]
   \       0xD4   0x097F             LSRS     R7,R7,#+5
   \       0xD6   0x7A43             LDRB     R3,[R0, #+9]
   \       0xD8   0x4602             MOV      R2,R0
   \       0xDA   0x6801             LDR      R1,[R0, #+0]
   \       0xDC   0x4648             MOV      R0,R9
   \       0xDE   0xF007 0x0706      AND      R7,R7,#0x6
   \       0xE2   0x....'....        BL       emberAfFillCommandGreenPowerClusterGpNotificationSmart
   1238          
   1239            for (i = 0; i < GP_SINK_LIST_ENTRIES; i++) {
   \       0xE6   0xF1C7 0x0703      RSB      R7,R7,#+3
   \       0xEA   0x077F             LSLS     R7,R7,#+29
   \       0xEC   0xF89D 0xA018      LDRB     R10,[SP, #+24]
   \       0xF0   0x0E3F             LSRS     R7,R7,#+24
   \       0xF2   0xF107 0x0520      ADD      R5,R7,#+32
   \       0xF6   0xF04F 0x0900      MOV      R9,#+0
   \       0xFA   0x9F07             LDR      R7,[SP, #+28]
   \       0xFC   0xF1AA 0x0B09      SUB      R11,R10,#+9
   1240              if (entry.sinkList[i].type == EMBER_GP_SINK_TYPE_FULL_UNICAST
   1241                  || entry.sinkList[i].type == EMBER_GP_SINK_TYPE_LW_UNICAST) {
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_5: (+1)
   \      0x100   0xFB08 0xF109      MUL      R1,R8,R9
   \      0x104   0xA808             ADD      R0,SP,#+32
   \      0x106   0x4408             ADD      R0,R0,R1
   \      0x108   0xF100 0x062C      ADD      R6,R0,#+44
   \      0x10C   0x7830             LDRB     R0,[R6, #+0]
   \      0x10E   0x2800             CMP      R0,#+0
   \      0x110   0xBF18             IT       NE 
   \      0x112   0x2803             CMPNE    R0,#+3
   \      0x114   0xD10E             BNE.N    ??emberAfGreenPowerClusterGpdfForwardCallback_6
   1242                apsFrame = emberAfGetCommandApsFrame();
   \      0x116   0x....'....        BL       emberAfGetCommandApsFrame
   1243                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \      0x11A   0x21F2             MOVS     R1,#+242
   1244                apsFrame->destinationEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   1245                if (rxAfterTx) {
   \      0x11C   0x2C00             CMP      R4,#+0
   \      0x11E   0x7101             STRB     R1,[R0, #+4]
   \      0x120   0x7141             STRB     R1,[R0, #+5]
   \      0x122   0xBF14             ITE      NE 
   \      0x124   0x2020             MOVNE    R0,#+32
   \      0x126   0x2005             MOVEQ    R0,#+5
   1246                  emSetAddDelay(GP_DMIN_B);
   1247                } else {
   1248                  emSetAddDelay(GP_DMIN_U);
   \      0x128   0x....'....        BL       emSetAddDelay
   1249                }
   1250                UNUSED EmberStatus retval = emberAfSendCommandUnicast(EMBER_OUTGOING_DIRECT,
   1251                                                                      entry.sinkList[i].target.unicast.sinkNodeId);
   \      0x12C   0x8971             LDRH     R1,[R6, #+10]
   \      0x12E   0x....'....        BL       ??Subroutine10_0
   1252                emSetAddDelay(0);
   \                     ??CrossCallReturnLabel_28: (+1)
   \      0x132   0xE01D             B.N      ??emberAfGreenPowerClusterGpdfForwardCallback_7
   1253              } else if (entry.sinkList[i].type == EMBER_GP_SINK_TYPE_GROUPCAST) {
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_6: (+1)
   \      0x134   0x2802             CMP      R0,#+2
   \      0x136   0xD11D             BNE.N    ??CrossCallReturnLabel_22
   1254                apsFrame = emberAfGetCommandApsFrame();
   \      0x138   0x....'....        BL       emberAfGetCommandApsFrame
   1255                apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \      0x13C   0x....'....        BL       ?Subroutine17
   1256                apsFrame->destinationEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   1257                apsFrame->sequence = sequenceNumber - EMBER_GP_NOTIFICATION_COMMISSIONED_GROUPCAST_SEQUENCE_NUMBER_OFFSET;
   1258                apsFrame->options |= EMBER_APS_OPTION_USE_ALIAS_SEQUENCE_NUMBER;
   \                     ??CrossCallReturnLabel_51: (+1)
   \      0x140   0x88C1             LDRH     R1,[R0, #+6]
   \      0x142   0xF880 0xB00A      STRB     R11,[R0, #+10]
   1259                apsFrame->radius = entry.groupcastRadius;
   1260                if (rxAfterTx) {
   \      0x146   0x....'....        BL       ?Subroutine18
   \                     ??CrossCallReturnLabel_53: (+1)
   \      0x14A   0xBF14             ITE      NE 
   \      0x14C   0xB2A8             UXTHNE   R0,R5
   \      0x14E   0x2005             MOVEQ    R0,#+5
   1261                  emSetAddDelay(GP_DMIN_B + qualityBasedDelay(gpdLink));
   1262                } else {
   1263                  emSetAddDelay(GP_DMIN_U);
   \      0x150   0x....'....        BL       emSetAddDelay
   1264                }
   1265                UNUSED EmberStatus retval = emberAfSendCommandMulticastWithAlias(entry.sinkList[i].target.groupcast.groupID,
   1266                                                                                 (entry.sinkList[i].target.groupcast.alias == 0xFFFF)
   1267                                                                                 ? emGpdAlias(addr)
   1268                                                                                 : entry.sinkList[i].target.groupcast.alias,
   1269                                                                                 sequenceNumber - EMBER_GP_NOTIFICATION_COMMISSIONED_GROUPCAST_SEQUENCE_NUMBER_OFFSET);
   \      0x154   0x88B0             LDRH     R0,[R6, #+4]
   \      0x156   0xF64F 0x71FF      MOVW     R1,#+65535
   \      0x15A   0x4288             CMP      R0,R1
   \      0x15C   0xBF04             ITT      EQ 
   \      0x15E   0x4638             MOVEQ    R0,R7
   \      0x160   0x....'....        BLEQ     emGpdAlias
   \      0x164   0x4601             MOV      R1,R0
   \      0x166   0x8870             LDRH     R0,[R6, #+2]
   \      0x168   0xFA5F 0xF28B      UXTB     R2,R11
   \      0x16C   0x....'....        BL       emberAfSendCommandMulticastWithAlias
   1270                emSetAddDelay(0);
   1271              }
   1272            }
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_7: (+1)
   \      0x170   0x....'....        BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_22: (+1)
   \      0x174   0xF109 0x0901      ADD      R9,R9,#+1
   \      0x178   0xF1B9 0x0F02      CMP      R9,#+2
   \      0x17C   0xDBC0             BLT.N    ??emberAfGreenPowerClusterGpdfForwardCallback_5
   1273            if (entry.options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_DERIVED_GROUP_GPS) {
   \      0x17E   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \      0x182   0x0601             LSLS     R1,R0,#+24
   \      0x184   0xD520             BPL.N    ??CrossCallReturnLabel_21
   1274              apsFrame = emberAfGetCommandApsFrame();
   \      0x186   0x....'....        BL       emberAfGetCommandApsFrame
   1275              apsFrame->sourceEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   \      0x18A   0x....'....        BL       ?Subroutine17
   1276              apsFrame->destinationEndpoint = GP_ENDPOINT;  //emberAfCurrentEndpoint();
   1277              apsFrame->sequence = sequenceNumber;
   1278              apsFrame->options |= EMBER_APS_OPTION_USE_ALIAS_SEQUENCE_NUMBER;
   \                     ??CrossCallReturnLabel_52: (+1)
   \      0x18E   0x88C1             LDRH     R1,[R0, #+6]
   \      0x190   0xF880 0xA00A      STRB     R10,[R0, #+10]
   1279              apsFrame->radius = entry.groupcastRadius;
   1280              if (rxAfterTx) {
   \      0x194   0x....'....        BL       ?Subroutine18
   \                     ??CrossCallReturnLabel_54: (+1)
   \      0x198   0xBF14             ITE      NE 
   \      0x19A   0xB2A8             UXTHNE   R0,R5
   \      0x19C   0x2005             MOVEQ    R0,#+5
   1281                emSetAddDelay(GP_DMIN_B + qualityBasedDelay(gpdLink));
   1282              } else {
   1283                emSetAddDelay(GP_DMIN_U);
   \      0x19E   0x....'....        BL       emSetAddDelay
   1284              }
   1285          
   1286              //get derived alias for address alias and group ID alias
   1287              if (entry.options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_ASSIGNED_ALIAS) {
   \      0x1A2   0x9809             LDR      R0,[SP, #+36]
   \      0x1A4   0x0481             LSLS     R1,R0,#+18
   \      0x1A6   0xBF48             IT       MI 
   \      0x1A8   0xF8BD 0x8034      LDRHMI   R8,[SP, #+52]
   1288                alias = entry.assignedAlias;
   \      0x1AC   0xD403             BMI.N    ??emberAfGreenPowerClusterGpdfForwardCallback_8
   1289              } else {
   1290                alias = emGpdAlias(addr);
   \      0x1AE   0x4638             MOV      R0,R7
   \      0x1B0   0x....'....        BL       emGpdAlias
   \      0x1B4   0x4680             MOV      R8,R0
   1291              }
   1292          
   1293              UNUSED EmberStatus retval = emberAfSendCommandMulticastWithAlias((EmberMulticastId)emGpdAlias(addr),
   1294                                                                               (EmberNodeId)alias,
   1295                                                                               sequenceNumber);
   \                     ??emberAfGreenPowerClusterGpdfForwardCallback_8: (+1)
   \      0x1B6   0x4638             MOV      R0,R7
   \      0x1B8   0x....'....        BL       emGpdAlias
   \      0x1BC   0x4652             MOV      R2,R10
   \      0x1BE   0x4641             MOV      R1,R8
   \      0x1C0   0x....'....        BL       emberAfSendCommandMulticastWithAlias
   1296              emSetAddDelay(0);
   \      0x1C4   0x....'....        BL       ?Subroutine8
   1297            }
   1298            return true;
   \                     ??CrossCallReturnLabel_21: (+1)
   \      0x1C8   0x2001             MOVS     R0,#+1
   \      0x1CA   0xB01B             ADD      SP,SP,#+108
   \      0x1CC   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1299          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine18: (+1)
   \        0x0   0x2C00             CMP      R4,#+0
   \        0x2   0xF041 0x0102      ORR      R1,R1,#0x2
   \        0x6   0x80C1             STRH     R1,[R0, #+6]
   \        0x8   0xF89D 0x1064      LDRB     R1,[SP, #+100]
   \        0xC   0x72C1             STRB     R1,[R0, #+11]
   \        0xE   0x4770             BX       LR
   1300          
   1301          /*
   1302           * Check if a EmberGpAddress entry is being used by checking each elemental
   1303           * sequence number's corresponding expiration time field.
   1304           */

   \                                 In section .text, align 2, keep-with-next
   1305          bool emAfGreenPowerIsGpAddrUsed(EmberAfGreenPowerDuplicateFilter * filter,
   1306                                          uint8_t index)
   1307          {
   \                     emAfGreenPowerIsGpAddrUsed: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   1308            uint32_t * expirationTimes;
   1309            uint8_t i;
   1310            uint32_t curTime = halCommonGetInt32uMillisecondTick();
   \        0x6   0x....'....        BL       halCommonGetInt32uMillisecondTick
   1311          
   1312            if (index >= EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_ADDR_ENTRIES) {
   \        0xA   0x2D03             CMP      R5,#+3
   \        0xC   0xDA0E             BGE.N    ??emAfGreenPowerIsGpAddrUsed_0
   1313              return true;
   1314            }
   1315            expirationTimes = (uint32_t *) &(filter->expirationTimes[index]);
   \        0xE   0xEB04 0x1105      ADD      R1,R4,R5, LSL #+4
   1316          
   1317            for (i = 0;
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0x3130             ADDS     R1,R1,#+48
   1318                 i < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR;
   1319                 i++) {
   1320              if (expirationTimes[i] > curTime) {
   \                     ??emAfGreenPowerIsGpAddrUsed_1: (+1)
   \       0x16   0xB2D3             UXTB     R3,R2
   \       0x18   0xF851 0x3023      LDR      R3,[R1, R3, LSL #+2]
   \       0x1C   0x4298             CMP      R0,R3
   \       0x1E   0xD305             BCC.N    ??emAfGreenPowerIsGpAddrUsed_0
   \       0x20   0x1C52             ADDS     R2,R2,#+1
   \       0x22   0xB2D4             UXTB     R4,R2
   \       0x24   0x2C03             CMP      R4,#+3
   \       0x26   0xDDF6             BLE.N    ??emAfGreenPowerIsGpAddrUsed_1
   1321                return true;
   1322              }
   1323            }
   1324          
   1325            return false;
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   \                     ??emAfGreenPowerIsGpAddrUsed_0: (+1)
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0xBD32             POP      {R1,R4,R5,PC}
   1326          }
   1327          

   \                                 In section .text, align 2, keep-with-next
   1328          uint32_t emAfGreenPowerFindNextExpirationTime(EmberAfGreenPowerDuplicateFilter * filter)
   1329          {
   \                     emAfGreenPowerFindNextExpirationTime: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   1330            uint32_t expirationTime = MAX_INT32U_VALUE;
   1331            uint8_t addrIndex;
   1332            uint8_t entryIndex;
   1333            uint32_t curTime = halCommonGetInt32uMillisecondTick();
   \        0x4   0x....'....        BL       halCommonGetInt32uMillisecondTick
   \        0x8   0xF04F 0x35FF      MOV      R5,#-1
   1334            for (addrIndex = 0;
   \        0xC   0x2100             MOVS     R1,#+0
   1335                 addrIndex < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_ADDR_ENTRIES;
   1336                 addrIndex++) {
   1337              for (entryIndex = 0;
   \                     ??emAfGreenPowerFindNextExpirationTime_0: (+1)
   \        0xE   0x2200             MOVS     R2,#+0
   1338                   entryIndex
   1339                   < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR;
   1340                   entryIndex++) {
   1341                // The addrIndex cannot be out of bounds as checked by the for loop conditions.
   1342                if ((filter->expirationTimes[addrIndex][entryIndex] > curTime)
   1343                    && (filter->expirationTimes[addrIndex][entryIndex] < expirationTime)) {
   \                     ??emAfGreenPowerFindNextExpirationTime_1: (+1)
   \       0x10   0xEB04 0x1301      ADD      R3,R4,R1, LSL #+4
   \       0x14   0xEB03 0x0682      ADD      R6,R3,R2, LSL #+2
   \       0x18   0x6B33             LDR      R3,[R6, #+48]
   \       0x1A   0x4298             CMP      R0,R3
   \       0x1C   0xBF3C             ITT      CC 
   \       0x1E   0x42AB             CMPCC    R3,R5
   \       0x20   0x461D             MOVCC    R5,R3
   1344                  expirationTime = filter->expirationTimes[addrIndex][entryIndex];
   1345                }
   1346              }
   \       0x22   0x1C52             ADDS     R2,R2,#+1
   \       0x24   0x2A03             CMP      R2,#+3
   \       0x26   0xDDF3             BLE.N    ??emAfGreenPowerFindNextExpirationTime_1
   1347            }
   \       0x28   0x1C49             ADDS     R1,R1,#+1
   \       0x2A   0x2903             CMP      R1,#+3
   \       0x2C   0xDBEF             BLT.N    ??emAfGreenPowerFindNextExpirationTime_0
   1348          
   1349            return expirationTime;
   \       0x2E   0x4628             MOV      R0,R5
   \       0x30   0xBD70             POP      {R4-R6,PC}       ;; return
   1350          }
   1351          
   1352          /*
   1353           * return index to the entry with the smallest expiration date.
   1354           */

   \                                 In section .text, align 2, keep-with-next
   1355          uint8_t emAfGreenPowerFindEarliestExpirationTimeInAddr(EmberAfGreenPowerDuplicateFilter * filter,
   1356                                                                 uint8_t addrIndex)
   1357          {
   1358            // addrIndex must be less than EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR
   1359            // so we dont need to check it here. It is done in preceding function calls.
   1360            uint32_t * expirationTimes = filter->expirationTimes[addrIndex];
   \                     emAfGreenPowerFindEarliestExpirationTimeInAddr: (+1)
   \        0x0   0xEB00 0x1001      ADD      R0,R0,R1, LSL #+4
   \        0x4   0xB510             PUSH     {R4,LR}
   1361            uint32_t earliestTimeIndex = 0;
   1362            uint32_t earliestTime = expirationTimes[0];
   1363            uint8_t index;
   1364          
   1365            for (index = 0;
   \        0x6   0x2300             MOVS     R3,#+0
   \        0x8   0xF100 0x0130      ADD      R1,R0,#+48
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x680A             LDR      R2,[R1, #+0]
   1366                 index < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR;
   1367                 index++) {
   1368              if (expirationTimes[index] < earliestTime) {
   \                     ??emAfGreenPowerFindEarliestExpirationTimeInAdd_0: (+1)
   \       0x10   0xF851 0x4023      LDR      R4,[R1, R3, LSL #+2]
   \       0x14   0x4294             CMP      R4,R2
   \       0x16   0xBF3C             ITT      CC 
   \       0x18   0x4622             MOVCC    R2,R4
   \       0x1A   0x4618             MOVCC    R0,R3
   1369                earliestTime = expirationTimes[index];
   1370                earliestTimeIndex = index;
   1371              }
   1372            }
   \       0x1C   0x1C5B             ADDS     R3,R3,#+1
   \       0x1E   0x2B04             CMP      R3,#+4
   \       0x20   0xDBF6             BLT.N    ??emAfGreenPowerFindEarliestExpirationTimeInAdd_0
   1373          
   1374            return earliestTimeIndex;
   \       0x22   0xB2C0             UXTB     R0,R0
   \       0x24   0xBD10             POP      {R4,PC}          ;; return
   1375          }
   1376          

   \                                 In section .text, align 2, keep-with-next
   1377          bool emAfGreenPowerAddRandomMacSeqNum(EmberAfGreenPowerDuplicateFilter * filter,
   1378                                                uint8_t addrIndex,
   1379                                                uint8_t randomSeqNum)
   1380          {
   \                     emAfGreenPowerAddRandomMacSeqNum: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x4688             MOV      R8,R1
   \        0x8   0x4614             MOV      R4,R2
   1381            uint8_t * seqNumList = NULL;
   1382            uint32_t * expirationTimeList = NULL;
   1383            uint8_t i;
   1384            uint32_t curTime = halCommonGetInt32uMillisecondTick();
   \        0xA   0x....'....        BL       halCommonGetInt32uMillisecondTick
   \        0xE   0x4605             MOV      R5,R0
   1385            uint8_t entryIndex;
   1386          
   1387            // addrIndex must be less than the EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR
   1388            // so we dont need to check it here. It is done in preceding function calls.
   1389            seqNumList = (filter->randomSeqNums[addrIndex]);
   1390            expirationTimeList = (filter->expirationTimes[addrIndex]);
   \       0x10   0xEB07 0x1008      ADD      R0,R7,R8, LSL #+4
   \       0x14   0xEB07 0x0188      ADD      R1,R7,R8, LSL #+2
   \       0x18   0xF101 0x0624      ADD      R6,R1,#+36
   \       0x1C   0xF100 0x0930      ADD      R9,R0,#+48
   1391          
   1392            // check if an existing sequence number with valid expiration date exists
   1393            for (i = 0;
   \       0x20   0x2000             MOVS     R0,#+0
   1394                 i < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_SEQ_NUM_ENTRIES_PER_ADDR;
   1395                 i++) {
   1396              if ((randomSeqNum == seqNumList[i]) && (expirationTimeList[i] > curTime)) {
   \                     ??emAfGreenPowerAddRandomMacSeqNum_0: (+1)
   \       0x22   0x5C32             LDRB     R2,[R6, R0]
   \       0x24   0x4294             CMP      R4,R2
   \       0x26   0xD103             BNE.N    ??emAfGreenPowerAddRandomMacSeqNum_1
   \       0x28   0xF859 0x1020      LDR      R1,[R9, R0, LSL #+2]
   \       0x2C   0x428D             CMP      R5,R1
   \       0x2E   0xD30F             BCC.N    ??emAfGreenPowerAddRandomMacSeqNum_2
   \                     ??emAfGreenPowerAddRandomMacSeqNum_1: (+1)
   \       0x30   0x1C40             ADDS     R0,R0,#+1
   \       0x32   0x2804             CMP      R0,#+4
   \       0x34   0xDBF5             BLT.N    ??emAfGreenPowerAddRandomMacSeqNum_0
   1397                return false;
   1398              }
   1399            }
   1400          
   1401            entryIndex = emAfGreenPowerFindEarliestExpirationTimeInAddr(filter,
   1402                                                                        addrIndex);
   \       0x36   0x4641             MOV      R1,R8
   \       0x38   0x4638             MOV      R0,R7
   \       0x3A   0x....'....        BL       emAfGreenPowerFindEarliestExpirationTimeInAddr
   1403          
   1404            seqNumList[entryIndex] = randomSeqNum;
   1405            expirationTimeList[entryIndex] = curTime + (2 * MILLISECOND_TICKS_PER_MINUTE);
   \       0x3E   0xF505 0x35EA      ADD      R5,R5,#+119808
   \       0x42   0x5434             STRB     R4,[R6, R0]
   \       0x44   0x35C0             ADDS     R5,R5,#+192
   \       0x46   0xF849 0x5020      STR      R5,[R9, R0, LSL #+2]
   1406          
   1407            return true;
   \       0x4A   0x2001             MOVS     R0,#+1
   \                     ??emAfGreenPowerAddRandomMacSeqNum_3: (+1)
   \       0x4C   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
   \                     ??emAfGreenPowerAddRandomMacSeqNum_2: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0xE7FB             B.N      ??emAfGreenPowerAddRandomMacSeqNum_3
   1408          }
   1409          
   1410          /* Helper function for handling duplicateFilter */

   \                                 In section .text, align 2, keep-with-next
   1411          uint8_t emAfGreenPowerFindGpAddrIndex(EmberGpAddress * addr,
   1412                                                EmberGpAddress * addrList,
   1413                                                uint8_t sizeOfList)
   1414          {
   \                     emAfGreenPowerFindGpAddrIndex: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4616             MOV      R6,R2
   1415            uint8_t index = 0;
   \        0x8   0x2700             MOVS     R7,#+0
   1416            for (index = 0; index < sizeOfList; index++) {
   \        0xA   0xE000             B.N      ??emAfGreenPowerFindGpAddrIndex_0
   \                     ??emAfGreenPowerFindGpAddrIndex_1: (+1)
   \        0xC   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emAfGreenPowerFindGpAddrIndex_0: (+1)
   \        0xE   0xB2F8             UXTB     R0,R7
   \       0x10   0x42B0             CMP      R0,R6
   \       0x12   0xD209             BCS.N    ??emAfGreenPowerFindGpAddrIndex_2
   1417              if (emGpAddressMatch(addr, &addrList[index])) {
   \       0x14   0x210C             MOVS     R1,#+12
   \       0x16   0x4348             MULS     R0,R1,R0
   \       0x18   0x1829             ADDS     R1,R5,R0
   \       0x1A   0x4620             MOV      R0,R4
   \       0x1C   0x....'....        BL       emGpAddressMatch
   \       0x20   0x2800             CMP      R0,#+0
   \       0x22   0xD0F3             BEQ.N    ??emAfGreenPowerFindGpAddrIndex_1
   1418                return index;
   \       0x24   0xB2F8             UXTB     R0,R7
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}
   1419              }
   1420            }
   1421          
   1422            return 0xFF;
   \                     ??emAfGreenPowerFindGpAddrIndex_2: (+1)
   \       0x28   0x20FF             MOVS     R0,#+255
   \       0x2A   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   1423          }
   1424          

   \                                 In section .text, align 2, keep-with-next
   1425          uint8_t emAfGreenPowerAddGpAddr(EmberAfGreenPowerDuplicateFilter * filter,
   1426                                          EmberGpAddress * addr)
   1427          {
   \                     emAfGreenPowerAddGpAddr: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   1428            uint8_t addrIndex;
   1429          
   1430            for (addrIndex = 0;
   \        0x6   0x2600             MOVS     R6,#+0
   \        0x8   0x....             LDR.N    R7,??DataTable17_5
   1431                 addrIndex < EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_ADDR_ENTRIES;
   1432                 addrIndex++) {
   1433              if (!emAfGreenPowerIsGpAddrUsed(&duplicateFilter, addrIndex)) {
   \                     ??emAfGreenPowerAddGpAddr_0: (+1)
   \        0xA   0xB2F1             UXTB     R1,R6
   \        0xC   0x4638             MOV      R0,R7
   \        0xE   0x....'....        BL       emAfGreenPowerIsGpAddrUsed
   \       0x12   0xB128             CBZ.N    R0,??emAfGreenPowerAddGpAddr_1
   \       0x14   0x1C76             ADDS     R6,R6,#+1
   \       0x16   0xB2F0             UXTB     R0,R6
   \       0x18   0x2803             CMP      R0,#+3
   \       0x1A   0xDBF6             BLT.N    ??emAfGreenPowerAddGpAddr_0
   1434                MEMCOPY(&filter->addrs[addrIndex], addr, sizeof(EmberGpAddress));
   1435                return addrIndex;
   1436              }
   1437            }
   1438          
   1439            return 0xFF;
   \       0x1C   0x20FF             MOVS     R0,#+255
   \       0x1E   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
   \                     ??emAfGreenPowerAddGpAddr_1: (+1)
   \       0x20   0x220C             MOVS     R2,#+12
   \       0x22   0xB2F3             UXTB     R3,R6
   \       0x24   0x4353             MULS     R3,R3,R2
   \       0x26   0x4629             MOV      R1,R5
   \       0x28   0x18E0             ADDS     R0,R4,R3
   \       0x2A   0x....'....        BL       halCommonMemMove
   \       0x2E   0xB2F0             UXTB     R0,R6
   \       0x30   0xBDF2             POP      {R1,R4-R7,PC}
   1440          }
   1441          
   1442          /*
   1443           * Check if the incoming message is a duplicate message when the GPD's
   1444           * Mac Sequence Number Capability indicate that random Mac Sequence Number is
   1445           * used.
   1446           *
   1447           *
   1448           * @return
   1449           * If a duplicate mac sequence number has been found, we'll return true in
   1450           * order to reject the message. Otherwise, we'll save the new random mac seq
   1451           * number and return false to accept the message.
   1452           *
   1453           */

   \                                 In section .text, align 2, keep-with-next
   1454          bool emAfGreenPowerFindDuplicateMacSeqNum(EmberGpAddress * addr,
   1455                                                    uint8_t randomSeqNum)
   1456          {
   \                     emAfGreenPowerFindDuplicateMacSeqNum: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x460D             MOV      R5,R1
   1457            bool added = false;
   1458            uint8_t addrIndex = emAfGreenPowerFindGpAddrIndex(addr,
   1459                                                              duplicateFilter.addrs,
   1460                                                              EMBER_AF_PLUGIN_GREEN_POWER_CLIENT_MAX_ADDR_ENTRIES);
   \        0x4   0x....             LDR.N    R6,??DataTable17_5
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x2203             MOVS     R2,#+3
   \        0xA   0x4631             MOV      R1,R6
   \        0xC   0x....'....        BL       emAfGreenPowerFindGpAddrIndex
   \       0x10   0x4601             MOV      R1,R0
   1461            if (addrIndex == 0xFF) {
   \       0x12   0x28FF             CMP      R0,#+255
   \       0x14   0xD104             BNE.N    ??emAfGreenPowerFindDuplicateMacSeqNum_0
   1462              addrIndex = emAfGreenPowerAddGpAddr(&duplicateFilter, addr);
   \       0x16   0x4621             MOV      R1,R4
   \       0x18   0x4630             MOV      R0,R6
   \       0x1A   0x....'....        BL       emAfGreenPowerAddGpAddr
   \       0x1E   0x4601             MOV      R1,R0
   1463            }
   1464          
   1465            if (addrIndex == 0xFF) {
   \                     ??emAfGreenPowerFindDuplicateMacSeqNum_0: (+1)
   \       0x20   0x29FF             CMP      R1,#+255
   \       0x22   0xD101             BNE.N    ??emAfGreenPowerFindDuplicateMacSeqNum_1
   1466              return false;
   \       0x24   0x2000             MOVS     R0,#+0
   \       0x26   0xBD70             POP      {R4-R6,PC}
   1467            }
   1468          
   1469            added = emAfGreenPowerAddRandomMacSeqNum(&duplicateFilter,
   1470                                                     addrIndex,
   1471                                                     randomSeqNum);
   1472            return !added;
   \                     ??emAfGreenPowerFindDuplicateMacSeqNum_1: (+1)
   \       0x28   0x462A             MOV      R2,R5
   \       0x2A   0x4630             MOV      R0,R6
   \       0x2C   0x....'....        BL       emAfGreenPowerAddRandomMacSeqNum
   \       0x30   0x1E40             SUBS     R0,R0,#+1
   \       0x32   0x4180             SBCS     R0,R0,R0
   \       0x34   0x0FC0             LSRS     R0,R0,#+31
   \       0x36   0xBD70             POP      {R4-R6,PC}       ;; return
   1473          }
   1474          
   1475          /*
   1476           * This function implements the "Duplicate checking" and "Freshness check"
   1477           * section of the GP implementation details.
   1478           *
   1479           * @return true if given sequenceNumber is valid and message should be
   1480           *         accepted, false otherwise.
   1481           */

   \                                 In section .text, align 2, keep-with-next
   1482          bool emGpMessageChecking(EmberGpAddress *gpAddr, uint8_t sequenceNumber)
   1483          {
   1484            /*
   1485               uint8_t proxyTableIndex = emberGpProxyTableLookup(gpAddr);
   1486               EmberGpProxyTableEntry entry;
   1487               EmberGpSecurityLevel securityLevel;
   1488               EmberGpGpdMacSeqNumCap macCap;
   1489          
   1490               if (proxyTableIndex == 0xFF) {
   1491               return true;
   1492               }
   1493          
   1494               emberGpProxyTableGetEntry(proxyTableIndex, &entry);
   1495               securityLevel = (EmberGpSecurityLevel) ((entry.options >> 9) & 0x03);
   1496               macCap = (EmberGpGpdMacSeqNumCap) ((entry.options >> 8) & 0x01);
   1497          
   1498               // Duplicate filtering / Freshness check
   1499               if (securityLevel == EMBER_GP_SECURITY_LEVEL_NONE) {
   1500               // filter by MAC Sequence Number
   1501               if (macCap == EMBER_GP_GPD_MAC_SEQ_NUM_CAP_SEQUENTIAL) {
   1502                uint8_t macSeqNum = (entry.gpdSecurityFrameCounter) & 0xFF;
   1503                if (sequenceNumber <= macSeqNum) {
   1504                  emberAfGreenPowerClusterPrintln("Drop frame due to invalid sequence number. incoming(0x%4X), current(0x%4X)", sequenceNumber, macSeqNum);
   1505                  return false;
   1506                }
   1507               } else { // EMBER_GP_GPD_MAC_SEQ_NUM_CAP_RANDOM
   1508                if (emAfGreenPowerFindDuplicateMacSeqNum(gpAddr, sequenceNumber)) {
   1509                  emberAfGreenPowerClusterPrintln("Drop frame due to duplicate sequence number: 0x%4X", sequenceNumber);
   1510                  return false;
   1511                }
   1512               }
   1513               } else if ((securityLevel == EMBER_GP_SECURITY_LEVEL_FC_MIC)
   1514             || (securityLevel == EMBER_GP_SECURITY_LEVEL_FC_MIC_ENCRYPTED)) {
   1515               // filter base on GPD security frame counter
   1516               if (sequenceNumber <= entry.gpdSecurityFrameCounter) {
   1517                emberAfGreenPowerClusterPrintln("Drop frame due to lower sequence number: 0x%4X", sequenceNumber);
   1518                return false;
   1519               }
   1520             */
   1521            return true;
   \                     emGpMessageChecking: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x4770             BX       LR               ;; return
   1522          }
   1523          
   1524          //GP-DATA.indication

   \                                 In section .text, align 2, keep-with-next
   1525          void emberGpepIncomingMessageHandler(GP_PARAMS)
   1526          {
   \                     emberGpepIncomingMessageHandler: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x4607             MOV      R7,R0
   \        0x6   0x460D             MOV      R5,R1
   1527            //emberAfGreenPowerClusterPrintln("Gpep cmd %x status %x SFC %4x", gpdCommandId, status, gpdSecurityFrameCounter);
   1528            if ((commissioningState.channelStatus & GP_CLIENT_ON_TRANSMIT_CHANNEL_MASK)
   1529                && gpdCommandId != EMBER_ZCL_GP_GPDF_CHANNEL_REQUEST) {
   \        0x8   0x....             LDR.N    R0,??DataTable17_4
   \        0xA   0x7A01             LDRB     R1,[R0, #+8]
   \        0xC   0xB09E             SUB      SP,SP,#+120
   \        0xE   0x4616             MOV      R6,R2
   \       0x10   0x07C8             LSLS     R0,R1,#+31
   \       0x12   0xD503             BPL.N    ??emberGpepIncomingMessageHandler_0
   \       0x14   0xF89D 0x10B4      LDRB     R1,[SP, #+180]
   \       0x18   0x29E3             CMP      R1,#+227
   \       0x1A   0xD110             BNE.N    ??emberGpepIncomingMessageHandler_1
   1530              //drop everything but a channel request when we're off on a different channel
   1531              return;
   \                     ??emberGpepIncomingMessageHandler_0: (+1)
   \       0x1C   0x9C28             LDR      R4,[SP, #+160]
   \       0x1E   0x930B             STR      R3,[SP, #+44]
   1532            }
   1533          
   1534            if ( gpdfSecurityLevel == EMBER_GP_SECURITY_LEVEL_NONE
   1535                 && !commissioningState.inCommissioningMode) {
   \       0x20   0x0020             MOVS     R0,R4
   \       0x22   0xBF02             ITTT     EQ 
   \       0x24   0x....             LDREQ.N  R1,??DataTable17_4
   \       0x26   0x7808             LDRBEQ   R0,[R1, #+0]
   \       0x28   0x2800             CMPEQ    R0,#+0
   \       0x2A   0xD110             BNE.N    ??emberGpepIncomingMessageHandler_2
   1536              // earlier a message satisfying this condition would have been
   1537              // dropped in gp-data, but
   1538              // this check is needed here after we added a condition
   1539              // in gp-data to always pass up the unsecure commissioning messages
   1540              // up to this function (EMZIGBEE-1417)
   1541              // when we have a security enabled proxy table entry
   1542              // We only need to forward the unsecure commisioning messages
   1543              // in the commisisong mode, and not in the operational mode
   1544              // (EMZIGBEE-1578)
   1545              bool secureEntry = false;
   1546              uint8_t index = emberGpProxyTableLookup(addr);
   \       0x2C   0x4618             MOV      R0,R3
   \       0x2E   0x....'....        BL       emberGpProxyTableLookup
   1547              if (index != 0xFF) {
   \       0x32   0x28FF             CMP      R0,#+255
   \       0x34   0xD00B             BEQ.N    ??emberGpepIncomingMessageHandler_2
   1548                EmberGpProxyTableEntry entry;
   1549                EmberStatus getStatus = emberGpProxyTableGetEntry(index, &entry);
   1550                if (getStatus != EMBER_SUCCESS) {
   \       0x36   0xA90C             ADD      R1,SP,#+48
   \       0x38   0x....'....        BL       emberGpProxyTableGetEntry
   \       0x3C   0x2800             CMP      R0,#+0
   \                     ??emberGpepIncomingMessageHandler_1: (+1)
   \       0x3E   0xD17B             BNE.N    ??emberGpepIncomingMessageHandler_3
   1551                  return;
   1552                }
   1553                secureEntry = ((entry.options & EMBER_AF_GP_PROXY_TABLE_ENTRY_OPTIONS_SECURITY_USE)
   1554                               || (entry.securityOptions));
   \       0x40   0x980D             LDR      R0,[SP, #+52]
   \       0x42   0x0441             LSLS     R1,R0,#+17
   \       0x44   0xD478             BMI.N    ??emberGpepIncomingMessageHandler_3
   \       0x46   0xF89D 0x0046      LDRB     R0,[SP, #+70]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD174             BNE.N    ??emberGpepIncomingMessageHandler_3
   1555              }
   1556          
   1557              if (secureEntry) {
   1558                return;
   1559              }
   1560            }
   1561          
   1562            if (status == EMBER_SUCCESS
   1563                || status == EMBER_NO_SECURITY
   1564                || (status == EMBER_UNPROCESSED && commissioningState.inCommissioningMode)) {
   \                     ??emberGpepIncomingMessageHandler_2: (+1)
   \       0x4E   0x2F00             CMP      R7,#+0
   \       0x50   0xF88D 0x7028      STRB     R7,[SP, #+40]
   \       0x54   0xBF18             IT       NE 
   \       0x56   0x2F7C             CMPNE    R7,#+124
   \       0x58   0xD005             BEQ.N    ??emberGpepIncomingMessageHandler_4
   \       0x5A   0x2F7F             CMP      R7,#+127
   \       0x5C   0xD16C             BNE.N    ??emberGpepIncomingMessageHandler_3
   \       0x5E   0x....             LDR.N    R1,??DataTable17_4
   \       0x60   0x7808             LDRB     R0,[R1, #+0]
   \       0x62   0x2800             CMP      R0,#+0
   \       0x64   0xD068             BEQ.N    ??emberGpepIncomingMessageHandler_3
   1565              // duplicate filter
   1566              if (emGpMessageChecking(addr, sequenceNumber)) {
   1567                if (commissioningState.inCommissioningMode) {
   \                     ??emberGpepIncomingMessageHandler_4: (+1)
   \       0x66   0x....             LDR.N    R1,??DataTable17_4
   \       0x68   0x7808             LDRB     R0,[R1, #+0]
   \       0x6A   0xF88D 0x502A      STRB     R5,[SP, #+42]
   \       0x6E   0xF88D 0x6029      STRB     R6,[SP, #+41]
   \       0x72   0x9D2A             LDR      R5,[SP, #+168]
   \       0x74   0x9E2B             LDR      R6,[SP, #+172]
   \       0x76   0xF8DD 0x90B0      LDR      R9,[SP, #+176]
   \       0x7A   0xF8DD 0xA0B8      LDR      R10,[SP, #+184]
   \       0x7E   0x9F2F             LDR      R7,[SP, #+188]
   \       0x80   0xF8DD 0x80C0      LDR      R8,[SP, #+192]
   \       0x84   0xF8DD 0xB0C4      LDR      R11,[SP, #+196]
   \       0x88   0x2800             CMP      R0,#+0
   \       0x8A   0xD04D             BEQ.N    ??emberGpepIncomingMessageHandler_5
   1568                  if (autoCommissioning) {
   \       0x8C   0x0028             MOVS     R0,R5
   \       0x8E   0xD003             BEQ.N    ??emberGpepIncomingMessageHandler_6
   1569                    emberAfGreenPowerClusterAutoCommissioningCallback(GP_ARGS);
   \       0x90   0x....'....        BL       ?Subroutine1
   1570                  }
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x94   0x....'....        BL       emberAfGreenPowerClusterAutoCommissioningCallback
   1571                  switch (gpdCommandId) {
   \                     ??emberGpepIncomingMessageHandler_6: (+1)
   \       0x98   0xF89D 0x00B4      LDRB     R0,[SP, #+180]
   \       0x9C   0x28E0             CMP      R0,#+224
   \       0x9E   0xD036             BEQ.N    ??emberGpepIncomingMessageHandler_7
   \       0xA0   0xD32A             BCC.N    ??emberGpepIncomingMessageHandler_8
   \       0xA2   0x28E2             CMP      R0,#+226
   \       0xA4   0xD01E             BEQ.N    ??emberGpepIncomingMessageHandler_9
   \       0xA6   0xD302             BCC.N    ??emberGpepIncomingMessageHandler_10
   \       0xA8   0x28E3             CMP      R0,#+227
   \       0xAA   0xD020             BEQ.N    ??emberGpepIncomingMessageHandler_11
   \       0xAC   0xE024             B.N      ??emberGpepIncomingMessageHandler_8
   1572                    case EMBER_ZCL_GP_GPDF_COMMISSIONING:
   1573                      emberAfGreenPowerClusterCommissioningGpdfCallback(GP_ARGS);
   1574                      break;
   1575                    case EMBER_ZCL_GP_GPDF_DECOMMISSIONING:
   1576                      emberAfGreenPowerClusterDecommissioningGpdfCallback(GP_ARGS);
   \                     ??emberGpepIncomingMessageHandler_10: (+1)
   \       0xAE   0xF89D 0x10A4      LDRB     R1,[SP, #+164]
   \       0xB2   0x20E1             MOVS     R0,#+225
   \       0xB4   0x9005             STR      R0,[SP, #+20]
   \       0xB6   0x9101             STR      R1,[SP, #+4]
   \       0xB8   0x9B0B             LDR      R3,[SP, #+44]
   \       0xBA   0xF89D 0x2029      LDRB     R2,[SP, #+41]
   \       0xBE   0xF89D 0x102A      LDRB     R1,[SP, #+42]
   \       0xC2   0xF89D 0x0028      LDRB     R0,[SP, #+40]
   \       0xC6   0xF8CD 0xB024      STR      R11,[SP, #+36]
   \       0xCA   0xF8CD 0x8020      STR      R8,[SP, #+32]
   \       0xCE   0x9707             STR      R7,[SP, #+28]
   \       0xD0   0xF8CD 0xA018      STR      R10,[SP, #+24]
   \       0xD4   0xF8CD 0x9010      STR      R9,[SP, #+16]
   \       0xD8   0x9603             STR      R6,[SP, #+12]
   \       0xDA   0x9502             STR      R5,[SP, #+8]
   \       0xDC   0x9400             STR      R4,[SP, #+0]
   \       0xDE   0x....'....        BL       emberAfGreenPowerClusterDecommissioningGpdfCallback
   1577                      break;
   \       0xE2   0xE029             B.N      ??emberGpepIncomingMessageHandler_3
   1578                    case EMBER_ZCL_GP_GPDF_SUCCESS:
   1579                      emberAfGreenPowerClusterSuccessGpdfCallback(GP_ARGS);
   \                     ??emberGpepIncomingMessageHandler_9: (+1)
   \       0xE4   0x....'....        BL       ??Subroutine1_0
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0xE8   0x....'....        BL       emberAfGreenPowerClusterSuccessGpdfCallback
   1580                      break;
   \       0xEC   0xE024             B.N      ??emberGpepIncomingMessageHandler_3
   1581                    case EMBER_ZCL_GP_GPDF_CHANNEL_REQUEST:
   1582                      emberAfGreenPowerClusterChannelRequestGpdfCallback(GP_ARGS);
   \                     ??emberGpepIncomingMessageHandler_11: (+1)
   \       0xEE   0x....'....        BL       ??Subroutine1_0
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0xF2   0x....'....        BL       emberAfGreenPowerClusterChannelRequestGpdfCallback
   1583                      break;
   \       0xF6   0xE01F             B.N      ??emberGpepIncomingMessageHandler_3
   1584          
   1585                    default:
   1586                      if (status == EMBER_NO_SECURITY
   1587                          && ((gpdCommandId >= MIN_RESERVED_GPD_COMMAND_ID
   1588                               && gpdCommandId <= MAX_RESERVED_GPD_COMMAND_ID)
   1589                              || (gpdCommandId >= EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD0
   1590                                  && gpdCommandId <= EMBER_ZCL_GP_GPDF_MFR_DEF_GPD_CMD_F))) {
   \                     ??emberGpepIncomingMessageHandler_8: (+1)
   \       0xF8   0xF89D 0x1028      LDRB     R1,[SP, #+40]
   \       0xFC   0x297C             CMP      R1,#+124
   \       0xFE   0xD10B             BNE.N    ??emberGpepIncomingMessageHandler_12
   \      0x100   0xF1A0 0x02E4      SUB      R2,R0,#+228
   \      0x104   0x2A0C             CMP      R2,#+12
   \      0x106   0xBF24             ITT      CS 
   \      0x108   0x38B0             SUBCS    R0,R0,#+176
   \      0x10A   0x2810             CMPCS    R0,#+16
   \      0x10C   0xD210             BCS.N    ??emberGpepIncomingMessageHandler_13
   1591                        emberAfGreenPowerClusterCommissioningGpdfCallback(GP_ARGS);
   \                     ??emberGpepIncomingMessageHandler_7: (+1)
   \      0x10E   0x....'....        BL       ?Subroutine4
   1592                      } else if (status == EMBER_UNPROCESSED) {
   \                     ??CrossCallReturnLabel_8: (+1)
   \      0x112   0xF89D 0x0028      LDRB     R0,[SP, #+40]
   \      0x116   0xE004             B.N      ??emberGpepIncomingMessageHandler_14
   \                     ??emberGpepIncomingMessageHandler_12: (+1)
   \      0x118   0x297F             CMP      R1,#+127
   \      0x11A   0xD109             BNE.N    ??emberGpepIncomingMessageHandler_13
   1593                        status = EMBER_AUTH_FAILURE;
   1594                        emberAfGreenPowerClusterCommissioningGpdfCallback(GP_ARGS);
   \      0x11C   0x....'....        BL       ?Subroutine4
   1595                      } else {
   1596                        emberAfGreenPowerClusterGpdfForwardCallback(GP_ARGS);
   1597                      }
   1598                      break;
   1599                  }
   1600                } else {
   \                     ??CrossCallReturnLabel_9: (+1)
   \      0x120   0x207E             MOVS     R0,#+126
   \                     ??emberGpepIncomingMessageHandler_14: (+1)
   \      0x122   0x....'....        BL       emberAfGreenPowerClusterCommissioningGpdfCallback
   \      0x126   0xE007             B.N      ??emberGpepIncomingMessageHandler_3
   1601                  //outside of commissioning mode, everything gets forwarded, including commissioning related messages
   1602                  // But not success messages (See A3.9.1)
   1603                  if (gpdCommandId == EMBER_ZCL_GP_GPDF_SUCCESS
   1604                      && !commissioningState.inCommissioningMode) {
   \                     ??emberGpepIncomingMessageHandler_5: (+1)
   \      0x128   0xF89D 0x00B4      LDRB     R0,[SP, #+180]
   \      0x12C   0x28E2             CMP      R0,#+226
   \      0x12E   0xD003             BEQ.N    ??emberGpepIncomingMessageHandler_3
   1605                    // Drop a success message
   1606                  } else {
   1607                    emberAfGreenPowerClusterGpdfForwardCallback(GP_ARGS);
   \                     ??emberGpepIncomingMessageHandler_13: (+1)
   \      0x130   0x....'....        BL       ?Subroutine1
   1608                  }
   1609                }
   1610              }
   1611            }
   \                     ??CrossCallReturnLabel_3: (+1)
   \      0x134   0x....'....        BL       emberAfGreenPowerClusterGpdfForwardCallback
   1612          }
   \                     ??emberGpepIncomingMessageHandler_3: (+1)
   \      0x138   0xB01F             ADD      SP,SP,#+124
   \      0x13A   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0xF89D 0x00B4      LDRB     R0,[SP, #+180]
   \        0x4   0xF89D 0x10A4      LDRB     R1,[SP, #+164]
   \        0x8   0x9005             STR      R0,[SP, #+20]
   \        0xA   0xF8CD 0xB024      STR      R11,[SP, #+36]
   \        0xE   0x9101             STR      R1,[SP, #+4]
   \       0x10   0xF8CD 0x8020      STR      R8,[SP, #+32]
   \       0x14   0x9707             STR      R7,[SP, #+28]
   \       0x16   0xF8CD 0xA018      STR      R10,[SP, #+24]
   \       0x1A   0xF8CD 0x9010      STR      R9,[SP, #+16]
   \       0x1E   0x9603             STR      R6,[SP, #+12]
   \       0x20   0x9502             STR      R5,[SP, #+8]
   \       0x22   0x9400             STR      R4,[SP, #+0]
   \       0x24   0x9B0B             LDR      R3,[SP, #+44]
   \       0x26   0xF89D 0x2029      LDRB     R2,[SP, #+41]
   \       0x2A   0xF89D 0x102A      LDRB     R1,[SP, #+42]
   \       0x2E   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0xF89D 0x00B4      LDRB     R0,[SP, #+180]
   \                     ??Subroutine1_0: (+1)
   \        0x4   0xF89D 0x10A4      LDRB     R1,[SP, #+164]
   \        0x8   0x9005             STR      R0,[SP, #+20]
   \        0xA   0x9B0B             LDR      R3,[SP, #+44]
   \        0xC   0x9101             STR      R1,[SP, #+4]
   \        0xE   0xF89D 0x2029      LDRB     R2,[SP, #+41]
   \       0x12   0xF89D 0x102A      LDRB     R1,[SP, #+42]
   \       0x16   0xF89D 0x0028      LDRB     R0,[SP, #+40]
   \       0x1A   0xF8CD 0xB024      STR      R11,[SP, #+36]
   \       0x1E   0xF8CD 0x8020      STR      R8,[SP, #+32]
   \       0x22   0x9707             STR      R7,[SP, #+28]
   \       0x24   0xF8CD 0xA018      STR      R10,[SP, #+24]
   \       0x28   0xF8CD 0x9010      STR      R9,[SP, #+16]
   \       0x2C   0x9603             STR      R6,[SP, #+12]
   \       0x2E   0x9502             STR      R5,[SP, #+8]
   \       0x30   0x9400             STR      R4,[SP, #+0]
   \       0x32   0x4770             BX       LR
   1613          

   \                                 In section .text, align 2, keep-with-next
   1614          void emberDGpSentHandler(EmberStatus status, uint8_t gpepHandle)
   1615          {
   \                     emberDGpSentHandler: (+1)
   \        0x0   0x2800             CMP      R0,#+0
   \        0x2   0xD000             BEQ.N    ??emberDGpSentHandler_0
   \        0x4   0x4770             BX       LR
   \                     ??emberDGpSentHandler_0: (+1)
   \        0x6   0xB510             PUSH     {R4,LR}
   1616            if (status == EMBER_SUCCESS
   1617                && (commissioningState.channelStatus & GP_CLIENT_ON_TRANSMIT_CHANNEL_MASK)) {
   \        0x8   0x....             LDR.N    R4,??DataTable17_4
   \        0xA   0x7A20             LDRB     R0,[R4, #+8]
   \        0xC   0x07C1             LSLS     R1,R0,#+31
   \        0xE   0xD507             BPL.N    ??emberDGpSentHandler_1
   1618              emberAfGreenPowerClusterPrintln("return to chan %d", emberAfGetRadioChannel());
   1619              emberStopScan();
   \       0x10   0x....'....        BL       emberStopScan
   1620              commissioningState.channelStatus = 0;
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x7220             STRB     R0,[R4, #+8]
   1621              // Here it should clear the 5 sec timer that started while submitted a packet to TxQueue
   1622              emberAfPluginGreenPowerClientChannelEventHandler();
   \       0x18   0xE8BD 0x4010      POP      {R4,LR}
   \       0x1C   0x....'....        B.W      emberAfPluginGreenPowerClientChannelEventHandler
   1623            }
   1624          }
   \                     ??emberDGpSentHandler_1: (+1)
   \       0x20   0xBD10             POP      {R4,PC}          ;; return
   1625          

   \                                 In section .text, align 2, keep-with-next
   1626          void emberAfPluginGreenPowerClientStackStatusCallback(EmberStatus status)
   1627          {
   \                     emberAfPluginGreenPowerClientStackStatusCallback: (+1)
   \        0x0   0x2891             CMP      R0,#+145
   \        0x2   0xD000             BEQ.N    ??emberAfPluginGreenPowerClientStackStatusCallb_0
   \        0x4   0x4770             BX       LR
   \                     ??emberAfPluginGreenPowerClientStackStatusCallb_0: (+1)
   \        0x6   0xB580             PUSH     {R7,LR}
   1628            if (status == EMBER_NETWORK_DOWN
   1629                && emberStackIsPerformingRejoin() == FALSE) {
   \        0x8   0x....'....        BL       emberStackIsPerformingRejoin
   \        0xC   0xB918             CBNZ.N   R0,??emberAfPluginGreenPowerClientStackStatusCallb_1
   1630              // Clear proxy table when leaving the network.
   1631              emberAfPluginGreenPowerClientClearProxyTable();
   \        0xE   0xE8BD 0x4001      POP      {R0,LR}
   \       0x12   0x....'....        B.W      emberAfPluginGreenPowerClientClearProxyTable
   1632            }
   1633          }
   \                     ??emberAfPluginGreenPowerClientStackStatusCallb_1: (+1)
   \       0x16   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \        0x0   0x....'....        DC32     commissioningState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \        0x0   0x....'....        DC32     duplicateFilter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \        0x0   0x....'....        DC32     emberAfPluginGreenPowerClientChannelEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \        0x0   0x....'....        DC32     emberAfPluginGreenPowerClientExitCommissioningEventControl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \        0x0   0x....'....        DC32     emAfCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \        0x0   0x0002'7100        DC32     0x27100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \        0x0   0x0002'0008        DC32     0x20008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \        0x0   0x....'....        DC32     appResponseLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \        0x0   0x....'....        DC32     appResponseData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \        0x0   0x....'....        DC32     emGpProxyTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \        0x0   0x....'....        DC32     commissioningState

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \        0x0   0x....'....        DC32     duplicateFilter

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x47 0x50          DC8 "GP Pairing\012"
   \              0x20 0x50    
   \              0x61 0x69    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x75 0x75          DC8 "uuuub"
   \              0x75 0x75    
   \              0x62 0x00    
   \        0x6   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   emAfGreenPowerAddGpAddr
        24   -> emAfGreenPowerIsGpAddrUsed
        24   -> halCommonMemMove
      32   emAfGreenPowerAddRandomMacSeqNum
        32   -> emAfGreenPowerFindEarliestExpirationTimeInAddr
        32   -> halCommonGetInt32uMillisecondTick
      16   emAfGreenPowerFindDuplicateMacSeqNum
        16   -> emAfGreenPowerAddGpAddr
        16   -> emAfGreenPowerAddRandomMacSeqNum
        16   -> emAfGreenPowerFindGpAddrIndex
       8   emAfGreenPowerFindEarliestExpirationTimeInAddr
      24   emAfGreenPowerFindGpAddrIndex
        24   -> emGpAddressMatch
      16   emAfGreenPowerFindNextExpirationTime
        16   -> halCommonGetInt32uMillisecondTick
      16   emAfGreenPowerIsGpAddrUsed
        16   -> halCommonGetInt32uMillisecondTick
     192   emAfPluginGreenPowerClientRetrieveAttributeAndCraftResponse
       192   -> emberAfGreenPowerClientStoreProxyTableEntry
       192   -> emberAfPutInt16uInResp
       192   -> emberAfPutInt8uInResp
       192   -> emberGpProxyTableGetEntry
       192   -> halCommonMemMove
       0   emGpMessageChecking
      32   emberAfGreenPowerClientStoreProxyTableEntry
        32   -> emberAfCopyInt16u
        32   -> emberAfCopyInt32u
        32   -> halCommonMemMove
      80   emberAfGreenPowerClusterAutoCommissioningCallback
        80   -> emGpdAlias
        80   -> emSetAddDelay
        80   -> emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart
        80   -> emberAfGetCommandApsFrame
        80   -> emberAfSendCommandBroadcastWithAlias
        80   -> emberAfSendCommandUnicast
        80   -> emberGetNodeId
      80   emberAfGreenPowerClusterChannelRequestGpdfCallback
        80   -> emGpdAlias
        80   -> emSetAddDelay
        80   -> emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart
        80   -> emberAfGetCommandApsFrame
        80   -> emberAfSendCommandBroadcastWithAlias
        80   -> emberAfSendCommandUnicast
        80   -> emberGetNodeId
      80   emberAfGreenPowerClusterCommissioningGpdfCallback
        80   -> emGpdAlias
        80   -> emSetAddDelay
        80   -> emberAfFillCommandGreenPowerClusterGpCommissioningNotificationSmart
        80   -> emberAfGetCommandApsFrame
        80   -> emberAfSendCommandBroadcastWithAlias
        80   -> emberAfSendCommandUnicast
        80   -> emberGetNodeId
       0   emberAfGreenPowerClusterDecommissioningGpdfCallback
        80   -> emberAfGreenPowerClusterCommissioningGpdfCallback
      32   emberAfGreenPowerClusterExitCommissioningMode
        32   -> emberDGpSend
       0   emberAfGreenPowerClusterGpNotificationResponseCallback
     104   emberAfGreenPowerClusterGpPairingCallback
       104   -> __aeabi_memclr4
       104   -> emGpMakeAddr
       104   -> emGpProxyTableGetFreeEntryIndex
       104   -> emMemoryByteCompare
       104   -> emberAfGreenPowerClusterExitCommissioningMode
       104   -> emberAfPrint
       104   -> emberAfSendImmediateDefaultResponse
       104   -> emberGpProxyTableProcessGpPairing
      32   emberAfGreenPowerClusterGpProxyCommissioningModeCallback
        32   -> emEventControlSetDelayMS
        32   -> emberAfGreenPowerClusterExitCommissioningMode
        32   -> emberGetSender
     256   emberAfGreenPowerClusterGpProxyTableRequestCallback
       256   -> __aeabi_memclr4
       256   -> emGpMakeAddr
       256   -> emberAfFillExternalBuffer
       256   -> emberAfGreenPowerClientStoreProxyTableEntry
       256   -> emberAfSendResponse
       256   -> emberGpProxyTableGetEntry
       256   -> emberGpProxyTableLookup
       256   -> halCommonMemMove
      88   emberAfGreenPowerClusterGpResponseCallback
        88   -> __aeabi_memclr4
        88   -> emEventControlSetDelayMS
        88   -> emberAfGetRadioChannel
        88   -> emberAfPluginGreenPowerClientChannelEventHandler
        88   -> emberDGpSend
        88   -> emberGetNodeId
        88   -> emberStartScan
        88   -> halCommonMemMove
       0   emberAfGreenPowerClusterGpSinkTableResponseCallback
     144   emberAfGreenPowerClusterGpdfForwardCallback
       144   -> emGpdAlias
       144   -> emSetAddDelay
       144   -> emberAfFillCommandGreenPowerClusterGpNotificationSmart
       144   -> emberAfGetCommandApsFrame
       144   -> emberAfSendCommandMulticastWithAlias
       144   -> emberAfSendCommandUnicast
       144   -> emberGetNodeId
       144   -> emberGpProxyTableGetEntry
       0   emberAfGreenPowerClusterSuccessGpdfCallback
        80   -> emberAfGreenPowerClusterCommissioningGpdfCallback
      40   emberAfPluginGreenPowerClientChannelEventHandler
        40   -> emberDGpSend
        40   -> emberStopScan
       8   emberAfPluginGreenPowerClientExitCommissioningEventHandler
         8   -> emberAfGreenPowerClusterExitCommissioningMode
      16   emberAfPluginGreenPowerClientInitCallback
        16   -> emberAfWriteClientAttribute
        16   -> halCommonMemSet
       8   emberAfPluginGreenPowerClientStackStatusCallback
         0   -> emberAfPluginGreenPowerClientClearProxyTable
         8   -> emberStackIsPerformingRejoin
       8   emberDGpSentHandler
         0   -> emberAfPluginGreenPowerClientChannelEventHandler
         8   -> emberStopScan
     160   emberGpepIncomingMessageHandler
       160   -> emberAfGreenPowerClusterAutoCommissioningCallback
       160   -> emberAfGreenPowerClusterChannelRequestGpdfCallback
       160   -> emberAfGreenPowerClusterCommissioningGpdfCallback
       160   -> emberAfGreenPowerClusterDecommissioningGpdfCallback
       160   -> emberAfGreenPowerClusterGpdfForwardCallback
       160   -> emberAfGreenPowerClusterSuccessGpdfCallback
       160   -> emberGpProxyTableGetEntry
       160   -> emberGpProxyTableLookup
       0   qualityBasedDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_2
       4  ??DataTable13_3
       4  ??DataTable13_4
       4  ??DataTable14
       4  ??DataTable15
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       6  ??Subroutine20_0
      74  ?Subroutine0
      52  ?Subroutine1
       8  ?Subroutine10
      20  ?Subroutine11
      10  ?Subroutine12
      18  ?Subroutine13
      10  ?Subroutine14
      14  ?Subroutine15
      12  ?Subroutine16
       8  ?Subroutine17
      16  ?Subroutine18
      12  ?Subroutine19
      48  ?Subroutine2
      44  ?Subroutine3
      48  ?Subroutine4
      12  ?Subroutine5
      18  ?Subroutine6
      12  ?Subroutine7
       6  ?Subroutine8
      14  ?Subroutine9
      20  ?_0
      12  ?_1
      20  ?_2
      20  ?_3
       8  ?_4
       1  __emIsGpTestDevice
      12  commissioningState
      96  duplicateFilter
      50  emAfGreenPowerAddGpAddr
      84  emAfGreenPowerAddRandomMacSeqNum
      56  emAfGreenPowerFindDuplicateMacSeqNum
      38  emAfGreenPowerFindEarliestExpirationTimeInAddr
      44  emAfGreenPowerFindGpAddrIndex
      50  emAfGreenPowerFindNextExpirationTime
      48  emAfGreenPowerIsGpAddrUsed
     182  emAfPluginGreenPowerClientRetrieveAttributeAndCraftResponse
       4  emGpMessageChecking
     326  emberAfGreenPowerClientStoreProxyTableEntry
     192  emberAfGreenPowerClusterAutoCommissioningCallback
     188  emberAfGreenPowerClusterChannelRequestGpdfCallback
     258  emberAfGreenPowerClusterCommissioningGpdfCallback
       2  emberAfGreenPowerClusterDecommissioningGpdfCallback
      44  emberAfGreenPowerClusterExitCommissioningMode
       4  emberAfGreenPowerClusterGpNotificationResponseCallback
     288  emberAfGreenPowerClusterGpPairingCallback
     126  emberAfGreenPowerClusterGpProxyCommissioningModeCallback
     412  emberAfGreenPowerClusterGpProxyTableRequestCallback
     298  emberAfGreenPowerClusterGpResponseCallback
       4  emberAfGreenPowerClusterGpSinkTableResponseCallback
     464  emberAfGreenPowerClusterGpdfForwardCallback
       2  emberAfGreenPowerClusterSuccessGpdfCallback
       8  emberAfPluginGreenPowerClientChannelEventControl
      60  emberAfPluginGreenPowerClientChannelEventHandler
       8  emberAfPluginGreenPowerClientExitCommissioningEventControl
      16  emberAfPluginGreenPowerClientExitCommissioningEventHandler
       8  emberAfPluginGreenPowerClientExpireSeqNumEventControl
      56  emberAfPluginGreenPowerClientInitCallback
      24  emberAfPluginGreenPowerClientStackStatusCallback
      34  emberDGpSentHandler
     318  emberGpepIncomingMessageHandler
      16  qualityBasedDelay

 
   133 bytes in section .bss
    80 bytes in section .rodata
 4 206 bytes in section .text
 
 4 206 bytes of CODE  memory
    80 bytes of CONST memory
   133 bytes of DATA  memory

Errors: none
Warnings: none
