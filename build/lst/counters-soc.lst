###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:35
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\counters\counters-soc.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW11C7.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\counters\counters-soc.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"counters-soc.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\counters\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\counters-soc.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\counters-soc.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\counters\counters-soc.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Implements emberCounterHandler() and keeps a tally
      4           * of the events reported by the stack.  The application must define
      5           * EMBER_APPLICATION_HAS_COUNTER_HANDLER in its configuration header
      6           * to use this file.
      7           *******************************************************************************
      8           * # License
      9           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
     10           *******************************************************************************
     11           *
     12           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     13           * software is governed by the terms of Silicon Labs Master Software License
     14           * Agreement (MSLA) available at
     15           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     16           * software is distributed to you in Source Code format and is governed by the
     17           * sections of the MSLA applicable to Source Code.
     18           *
     19           ******************************************************************************/
     20          
     21          #include "app/framework/include/af.h"
     22          #include "app/util/serial/command-interpreter2.h"
     23          #include "app/util/common/common.h"
     24          #include "counters.h"
     25          #include "counters-ota.h"
     26          

   \                                 In section .bss, align 4
     27          uint16_t emberCounters[EMBER_COUNTER_TYPE_COUNT];
   \                     emberCounters:
   \        0x0                      DS8 84

   \                                 In section .bss, align 4
     28          uint16_t emberCountersThresholds[EMBER_COUNTER_TYPE_COUNT];
   \                     emberCountersThresholds:
   \        0x0                      DS8 84
     29          #ifndef EMBER_MULTI_NETWORK_STRIPPED

   \                                 In section .bss, align 4
     30          uint16_t emberMultiNetworkCounters[EMBER_SUPPORTED_NETWORKS]
   \                     emberMultiNetworkCounters:
   \        0x0                      DS8 36
     31          [MULTI_NETWORK_COUNTER_TYPE_COUNT];
     32          #endif
     33          

   \                                 In section .bss, align 4
     34          uint16_t emberMacCounters[EMBER_MAX_NUM_PHYS][EMBER_MAX_MAC_ONLY_COUNTERS];
   \                     emberMacCounters:
   \        0x0                      DS8 132
     35          #ifndef EMBER_MULTI_NETWORK_STRIPPED
     36          static uint8_t getMultiNetworkCounterIndex(EmberCounterType type);
     37          static void multiNetworkCounterHandler(EmberCounterType type, uint8_t data);
     38          #endif
     39          

   \                                 In section .text, align 2, keep-with-next
     40          void emberAfPluginCountersInitCallback(void)
     41          {
   \                     emberAfPluginCountersInitCallback: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     42            emberAfPluginCountersClear();
   \        0x2   0x2252             MOVS     R2,#+82
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x....             LDR.N    R0,??DataTable4
   \        0x8   0x....'....        BL       halCommonMemSet
     43            emberAfPluginCountersResetThresholds();
   \        0xC   0x2252             MOVS     R2,#+82
   \        0xE   0x21FF             MOVS     R1,#+255
   \       0x10   0x....             LDR.N    R0,??DataTable4_1
   \       0x12   0xE8BD 0x4008      POP      {R3,LR}
   \       0x16   0x....'....        B.W      halCommonMemSet
     44          }
     45          
     46          //Implement the stack callback by simply tallying up the counts.
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void emberCounterHandler(EmberCounterType type, EmberCounterInfo info)
     49          
     50          {
   \                     emberCounterHandler: (+1)
   \        0x0   0xE92D 0x41F6      PUSH     {R1,R2,R4-R8,LR}
   \        0x4   0x4604             MOV      R4,R0
     51            bool phyIndexRequiredCounter = emberCounterRequiresPhyIndex(type);
   \        0x6   0x....'....        BL       emberCounterRequiresPhyIndex
   \        0xA   0x4606             MOV      R6,R0
     52          
     53            bool destionationRequiredCounter = emberCounterRequiresDestinationNodeId(type);
   \        0xC   0x4620             MOV      R0,R4
   \        0xE   0x....'....        BL       emberCounterRequiresDestinationNodeId
     54          
     55            uint8_t data = info.data;
   \       0x12   0xF89D 0x1000      LDRB     R1,[SP, #+0]
     56          
     57            uint8_t phyIndex = 0;
     58          
     59            EmberNodeId destinationNodeId = EMBER_NULL_NODE_ID;
     60          
     61            // retreive possible counter info
     62          
     63            if (phyIndexRequiredCounter
     64          
     65                && destionationRequiredCounter) {
   \       0x16   0x4622             MOV      R2,R4
   \       0x18   0xF64F 0x75FF      MOVW     R5,#+65535
   \       0x1C   0xB316             CBZ.N    R6,??emberCounterHandler_0
   \       0x1E   0x9B01             LDR      R3,[SP, #+4]
     66              phyIndex = ((EmberExtraCounterInfo *) (info.otherFields))->phy_index;
     67          
     68              destinationNodeId = ((EmberExtraCounterInfo *) (info.otherFields))->destinationNodeId;
     69            } else if (destionationRequiredCounter) {
     70              destinationNodeId = *((EmberNodeId*)info.otherFields);
     71            } else if (phyIndexRequiredCounter) {
     72              phyIndex = *((uint8_t*)info.otherFields);
   \       0x20   0x2A21             CMP      R2,#+33
   \       0x22   0x781B             LDRB     R3,[R3, #+0]
   \       0x24   0xDA1E             BGE.N    ??emberCounterHandler_0
     73            }
     74          
     75            //update the counter statistics
     76          
     77            if (phyIndexRequiredCounter && (type < EMBER_MAX_MAC_ONLY_COUNTERS)) {
     78              if (phyIndex < EMBER_MAX_NUM_PHYS) {
   \       0x26   0x2042             MOVS     R0,#+66
   \       0x28   0x....             LDR.N    R6,??DataTable4_2
   \       0x2A   0x2B02             CMP      R3,#+2
   \       0x2C   0xDA09             BGE.N    ??emberCounterHandler_1
     79                if (emberMacCounters[phyIndex][type] < 0xFFFF) {
   \       0x2E   0x4343             MULS     R3,R0,R3
   \       0x30   0x18F0             ADDS     R0,R6,R3
   \       0x32   0xF830 0x3012      LDRH     R3,[R0, R2, LSL #+1]
   \       0x36   0x42AB             CMP      R3,R5
   \       0x38   0xD014             BEQ.N    ??emberCounterHandler_0
     80                  emberMacCounters[phyIndex][type]++;
   \       0x3A   0x1C5B             ADDS     R3,R3,#+1
   \       0x3C   0xF820 0x3012      STRH     R3,[R0, R2, LSL #+1]
   \       0x40   0xE010             B.N      ??emberCounterHandler_0
     81                }
     82              } else if (phyIndex == EMBER_MAX_NUM_PHYS) {
   \                     ??emberCounterHandler_1: (+1)
   \       0x42   0xD10F             BNE.N    ??emberCounterHandler_0
     83                // phyIndex cannot be equal to EMBER_MAX_NUM_PHYS except for
     84                // EMBER_COUNTER_MAC_TX_BROADCAST counter as broadcast can be sent on all interfaces.
     85                uint8_t i;
     86                // update counter for all interfaces.
     87                for (i = PHY_INDEX_NATIVE; i < EMBER_MAX_NUM_PHYS; i++) {
   \       0x44   0x2300             MOVS     R3,#+0
   \       0x46   0xEB06 0x0742      ADD      R7,R6,R2, LSL #+1
     88                  if (emberMacCounters[i][type] < 0xFFFF) {
   \                     ??emberCounterHandler_2: (+1)
   \       0x4A   0xFB00 0xF603      MUL      R6,R0,R3
   \       0x4E   0xF837 0xE006      LDRH     LR,[R7, R6]
   \       0x52   0x45AE             CMP      LR,R5
   \       0x54   0xBF1C             ITT      NE 
   \       0x56   0xF10E 0x0E01      ADDNE    LR,LR,#+1
   \       0x5A   0xF827 0xE006      STRHNE   LR,[R7, R6]
     89                    emberMacCounters[i][type]++;
     90                  }
     91                }
   \       0x5E   0x1C5B             ADDS     R3,R3,#+1
   \       0x60   0x2B02             CMP      R3,#+2
   \       0x62   0xDBF2             BLT.N    ??emberCounterHandler_2
     92              } else {
     93                // adding else part for MISRA
     94              }
     95            }
     96          
     97            //To ensure that we call the counter rollover handler exactly once.
     98          
     99            bool hasCounterExceededThreshold;
    100          
    101            if (emberCounters[type] < emberCountersThresholds[type]) {
   \                     ??emberCounterHandler_0: (+1)
   \       0x64   0x....'....        LDR.W    R12,??DataTable4_1
   \       0x68   0x....             LDR.N    R6,??DataTable4
   \       0x6A   0xF83C 0x3012      LDRH     R3,[R12, R2, LSL #+1]
   \       0x6E   0xF836 0x7012      LDRH     R7,[R6, R2, LSL #+1]
   \       0x72   0x429F             CMP      R7,R3
   \       0x74   0x4180             SBCS     R0,R0,R0
   \       0x76   0x43C0             MVNS     R0,R0
   \       0x78   0x0FC0             LSRS     R0,R0,#+31
   \       0x7A   0x42AF             CMP      R7,R5
   \       0x7C   0xBF1C             ITT      NE 
   \       0x7E   0x1C7F             ADDNE    R7,R7,#+1
   \       0x80   0xF826 0x7012      STRHNE   R7,[R6, R2, LSL #+1]
    102              hasCounterExceededThreshold = false;
    103            } else {
    104              hasCounterExceededThreshold = true;
    105            }
    106          
    107            if (emberCounters[type] < 0xFFFF) {
    108              emberCounters[type] += 1;
    109            }
    110          
    111            if (EMBER_COUNTER_APS_DATA_TX_UNICAST_SUCCESS == type
    112          
    113                || EMBER_COUNTER_APS_DATA_TX_UNICAST_FAILED == type) {
   \       0x84   0x2C09             CMP      R4,#+9
   \       0x86   0xF8BC 0x7014      LDRH     R7,[R12, #+20]
   \       0x8A   0xBF18             IT       NE 
   \       0x8C   0x2C0B             CMPNE    R4,#+11
   \       0x8E   0xD108             BNE.N    ??emberCounterHandler_3
    114              if ((emberCounters[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY] + data)
    115          
    116                  < emberCountersThresholds[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY]) {
   \       0x90   0xF8B6 0xC014      LDRH     R12,[R6, #+20]
   \       0x94   0xEB01 0x0E0C      ADD      LR,R1,R12
   \       0x98   0x45BE             CMP      LR,R7
   \       0x9A   0xDA0F             BGE.N    ??emberCounterHandler_4
    117                emberCounters[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY] += data;
   \       0x9C   0x4461             ADD      R1,R1,R12
   \       0x9E   0x82B1             STRH     R1,[R6, #+20]
   \       0xA0   0xE00D             B.N      ??emberCounterHandler_5
    118              } else {
    119                emberCounters[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY] =
    120          
    121                  emberCountersThresholds[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY];
    122              }
    123            } else if (EMBER_COUNTER_PHY_TO_MAC_QUEUE_LIMIT_REACHED == type) {
   \                     ??emberCounterHandler_3: (+1)
   \       0xA2   0x2C1D             CMP      R4,#+29
   \       0xA4   0xD10B             BNE.N    ??emberCounterHandler_5
    124              if ((emberCounters[EMBER_COUNTER_PHY_TO_MAC_QUEUE_LIMIT_REACHED] + data)
    125          
    126                  < emberCountersThresholds[EMBER_COUNTER_PHY_TO_MAC_QUEUE_LIMIT_REACHED]) {
   \       0xA6   0xF8B6 0xE03A      LDRH     LR,[R6, #+58]
   \       0xAA   0xF8BC 0xC03A      LDRH     R12,[R12, #+58]
   \       0xAE   0xEB01 0x080E      ADD      R8,R1,LR
   \       0xB2   0x45E0             CMP      R8,R12
   \       0xB4   0xDA02             BGE.N    ??emberCounterHandler_4
    127                emberCounters[type] += data;
   \       0xB6   0x4471             ADD      R1,R1,LR
   \       0xB8   0x8771             STRH     R1,[R6, #+58]
   \       0xBA   0xE000             B.N      ??emberCounterHandler_5
    128              } else {
    129                emberCounters[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY] =
    130          
    131                  emberCountersThresholds[EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY];
   \                     ??emberCounterHandler_4: (+1)
   \       0xBC   0x82B7             STRH     R7,[R6, #+20]
    132              }
    133            }
    134          
    135            if (emberCounters[type] >= emberCountersThresholds[type]) {
   \                     ??emberCounterHandler_5: (+1)
   \       0xBE   0xF836 0x1012      LDRH     R1,[R6, R2, LSL #+1]
   \       0xC2   0x4299             CMP      R1,R3
   \       0xC4   0xD303             BCC.N    ??emberCounterHandler_6
    136              if (!hasCounterExceededThreshold) {
   \       0xC6   0xB910             CBNZ.N   R0,??emberCounterHandler_6
    137                emberAfPluginCountersRolloverCallback(type);
   \       0xC8   0x4620             MOV      R0,R4
   \       0xCA   0x....'....        BL       emberAfPluginCountersRolloverCallback
    138          
    139                hasCounterExceededThreshold = true;
    140              }
    141            }
    142          
    143          #ifndef EMBER_MULTI_NETWORK_STRIPPED
    144            multiNetworkCounterHandler(type, data);
   \                     ??emberCounterHandler_6: (+1)
   \       0xCE   0x2000             MOVS     R0,#+0
   \       0xD0   0x....             LDR.N    R1,??DataTable4_3
   \                     ??emberCounterHandler_7: (+1)
   \       0xD2   0xB2C6             UXTB     R6,R0
   \       0xD4   0x5D8A             LDRB     R2,[R1, R6]
   \       0xD6   0x42A2             CMP      R2,R4
   \       0xD8   0xD004             BEQ.N    ??emberCounterHandler_8
   \       0xDA   0x1C40             ADDS     R0,R0,#+1
   \       0xDC   0xB2C6             UXTB     R6,R0
   \       0xDE   0x2E11             CMP      R6,#+17
   \       0xE0   0xDBF7             BLT.N    ??emberCounterHandler_7
   \       0xE2   0xE017             B.N      ??emberCounterHandler_9
   \                     ??emberCounterHandler_8: (+1)
   \       0xE4   0x2E11             CMP      R6,#+17
   \       0xE6   0xDA15             BGE.N    ??emberCounterHandler_9
   \       0xE8   0x....'....        BL       emberGetCallbackNetwork
   \       0xEC   0x4604             MOV      R4,R0
   \       0xEE   0x....             LDR.N    R0,??DataTable4_4
   \       0xF0   0x7801             LDRB     R1,[R0, #+0]
   \       0xF2   0x428C             CMP      R4,R1
   \       0xF4   0xDB03             BLT.N    ??emberCounterHandler_10
   \       0xF6   0x21E0             MOVS     R1,#+224
   \       0xF8   0x....             LDR.N    R0,??DataTable4_5
   \       0xFA   0x....'....        BL       halInternalAssertFailed
   \                     ??emberCounterHandler_10: (+1)
   \       0xFE   0x2022             MOVS     R0,#+34
   \      0x100   0x4344             MULS     R4,R0,R4
   \      0x102   0x....             LDR.N    R1,??DataTable4_6
   \      0x104   0x1908             ADDS     R0,R1,R4
   \      0x106   0xF830 0x1016      LDRH     R1,[R0, R6, LSL #+1]
   \      0x10A   0x42A9             CMP      R1,R5
   \      0x10C   0xBF1C             ITT      NE 
   \      0x10E   0x1C49             ADDNE    R1,R1,#+1
   \      0x110   0xF820 0x1016      STRHNE   R1,[R0, R6, LSL #+1]
    145          #endif
    146          
    147            if (destionationRequiredCounter
    148                && destinationNodeId == EMBER_NULL_NODE_ID) {
    149              //this might be an error
    150              return;
    151            }
    152          }
   \                     ??emberCounterHandler_9: (+1)
   \      0x114   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    153          

   \                                 In section .text, align 2, keep-with-next
    154          void emberAfPluginCountersClear(void)
    155          {
    156            MEMSET(emberCounters, 0, sizeof(emberCounters));
   \                     emberAfPluginCountersClear: (+1)
   \        0x0   0x2252             MOVS     R2,#+82
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4   0x....             LDR.N    R0,??DataTable4
   \        0x6   0x....'....        B.W      halCommonMemSet
    157          }
    158          

   \                                 In section .text, align 2, keep-with-next
    159          void emberAfPluginCountersResetThresholds(void)
    160          {
    161            MEMSET(emberCountersThresholds, 0xFF, sizeof(emberCountersThresholds));
   \                     emberAfPluginCountersResetThresholds: (+1)
   \        0x0   0x2252             MOVS     R2,#+82
   \        0x2   0x21FF             MOVS     R1,#+255
   \        0x4   0x....             LDR.N    R0,??DataTable4_1
   \        0x6   0x....'....        B.W      halCommonMemSet
    162          }
    163          

   \                                 In section .text, align 2, keep-with-next
    164          void emberAfPluginCountersSetThreshold(EmberCounterType type, uint16_t threshold)
    165          {
    166            emberCountersThresholds[type] = threshold;
   \                     emberAfPluginCountersSetThreshold: (+1)
   \        0x0   0x....             LDR.N    R2,??DataTable4_1
   \        0x2   0xF822 0x1010      STRH     R1,[R2, R0, LSL #+1]
    167          }
   \        0x6   0x4770             BX       LR               ;; return
    168          
    169          /*******************************************************************************
    170           * Multi-network counters support
    171           *
    172           * Some of the counters are per-network. Some of them are implicitly not
    173           * per-network because of the limited multi-network support. i.e., a node can be
    174           * coordinator/router/end device on just one network. The per-network counters
    175           * are defined in a table. The per-network counters are stored in a separate
    176           * two-dimensional array. We keep writing the multi-network counters also in the
    177           * usual single-network counters array.
    178           ******************************************************************************/
    179          #ifndef EMBER_MULTI_NETWORK_STRIPPED
    180          extern uint8_t emSupportedNetworks;
    181          

   \                                 In section .rodata, align 4
    182          static const EmberCounterType multiNetworkCounterTable[] = {
   \                     multiNetworkCounterTable:
   \        0x0   0x00 0x01          DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 21, 22, 24, 25, 26, 0, 0, 0
   \              0x02 0x03    
   \              0x04 0x05    
   \              0x06 0x07    
   \              0x08 0x09    
   \              0x0A 0x0B    
   \              0x15 0x16    
   \              0x18 0x19    
   \              0x1A 0x00    
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x....'....        DC32     emberCounters

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x....'....        DC32     emberCountersThresholds

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     emberMacCounters

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     multiNetworkCounterTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     emSupportedNetworks

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     emberMultiNetworkCounters

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x63 0x6F          DC8 "counters-soc.c"
   \              0x75 0x6E    
   \              0x74 0x65    
   \              0x72 0x73    
   \              0x2D 0x73    
   \              0x6F 0x63    
   \              0x2E 0x63    
   \              0x00         
   \        0xF   0x00               DC8 0
    183            EMBER_COUNTER_MAC_RX_BROADCAST,
    184            EMBER_COUNTER_MAC_TX_BROADCAST,
    185            EMBER_COUNTER_MAC_RX_UNICAST,
    186            EMBER_COUNTER_MAC_TX_UNICAST_SUCCESS,
    187            EMBER_COUNTER_MAC_TX_UNICAST_RETRY,
    188            EMBER_COUNTER_MAC_TX_UNICAST_FAILED,
    189            EMBER_COUNTER_APS_DATA_RX_BROADCAST,
    190            EMBER_COUNTER_APS_DATA_TX_BROADCAST,
    191            EMBER_COUNTER_APS_DATA_RX_UNICAST,
    192            EMBER_COUNTER_APS_DATA_TX_UNICAST_SUCCESS,
    193            EMBER_COUNTER_APS_DATA_TX_UNICAST_RETRY,
    194            EMBER_COUNTER_APS_DATA_TX_UNICAST_FAILED,
    195            EMBER_COUNTER_NWK_FRAME_COUNTER_FAILURE,
    196            EMBER_COUNTER_APS_FRAME_COUNTER_FAILURE,
    197            EMBER_COUNTER_APS_LINK_KEY_NOT_AUTHORIZED,
    198            EMBER_COUNTER_NWK_DECRYPTION_FAILURE,
    199            EMBER_COUNTER_APS_DECRYPTION_FAILURE,
    200          };
    201          
    202          static uint8_t getMultiNetworkCounterIndex(EmberCounterType type)
    203          {
    204            uint8_t i;
    205            for (i = 0; i < MULTI_NETWORK_COUNTER_TYPE_COUNT; i++) {
    206              if (multiNetworkCounterTable[i] == type) {
    207                return i;
    208              }
    209            }
    210            return 0xFF;
    211          }
    212          
    213          static void multiNetworkCounterHandler(EmberCounterType type, uint8_t data)
    214          {
    215            uint8_t counterIndex = getMultiNetworkCounterIndex(type);
    216          
    217            // This function is always called in a callback context emberCounterHandler().
    218            // Not a multi-network counter, nothing to do.
    219            if (counterIndex >= MULTI_NETWORK_COUNTER_TYPE_COUNT) {
    220              return;
    221            }
    222          
    223            uint8_t nwkIndex = emberGetCallbackNetwork();
    224            assert(nwkIndex < emSupportedNetworks);
    225          
    226            if (emberMultiNetworkCounters[nwkIndex][counterIndex] < 0xFFFF) {
    227              emberMultiNetworkCounters[nwkIndex][counterIndex] += 1;
    228            }
    229          }
    230          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emberAfPluginCountersClear
         0   -> halCommonMemSet
       8   emberAfPluginCountersInitCallback
         0   -> halCommonMemSet
         8   -> halCommonMemSet
       0   emberAfPluginCountersResetThresholds
         0   -> halCommonMemSet
       0   emberAfPluginCountersSetThreshold
      32   emberCounterHandler
        32   -> emberAfPluginCountersRolloverCallback
        32   -> emberCounterRequiresDestinationNodeId
        32   -> emberCounterRequiresPhyIndex
        32   -> emberGetCallbackNetwork
        32   -> halInternalAssertFailed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
      16  ?_0
      10  emberAfPluginCountersClear
      26  emberAfPluginCountersInitCallback
      10  emberAfPluginCountersResetThresholds
       8  emberAfPluginCountersSetThreshold
     280  emberCounterHandler
      84  emberCounters
      84  emberCountersThresholds
     132  emberMacCounters
      36  emberMultiNetworkCounters
      20  multiNetworkCounterTable

 
 336 bytes in section .bss
  36 bytes in section .rodata
 362 bytes in section .text
 
 362 bytes of CODE  memory
  36 bytes of CONST memory
 336 bytes of DATA  memory

Errors: none
Warnings: none
