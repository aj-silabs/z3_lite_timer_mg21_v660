###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:55
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\ember-base-configuration.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW62D5.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\ember-base-configuration.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"ember-base-configuration.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\ember-base-configuration.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\ember-base-configuration.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\ember-base-configuration.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief User-configurable stack memory allocation and convenience stubs
      4           * for little-used callbacks.
      5           *
      6           * \b Note: Application developers should \b not modify any portion
      7           * of this file. Doing so may lead to mysterious bugs. Allocations should be
      8           * adjusted only with macros in a custom CONFIGURATION_HEADER.
      9           *******************************************************************************
     10           * # License
     11           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
     12           *******************************************************************************
     13           *
     14           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     15           * software is governed by the terms of Silicon Labs Master Software License
     16           * Agreement (MSLA) available at
     17           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     18           * software is distributed to you in Source Code format and is governed by the
     19           * sections of the MSLA applicable to Source Code.
     20           *
     21           ******************************************************************************/
     22          #include PLATFORM_HEADER
     23          #include "stack/include/ember.h"
     24          #include "hal/hal.h"
     25          #ifdef EMBER_STACK_COBRA
     26            #include "hal_uart.h"
     27          #endif
     28          
     29          #include "stack/config/ember-configuration-defaults.h"
     30          
     31          #ifndef EMBER_APPLICATION_HAS_CUSTOM_RADIO_CALIBRATION_CALLBACK
     32          // See stack-info.h for more information.

   \                                 In section .text, align 2, keep-with-next
     33          void emberRadioNeedsCalibratingHandler(void)
     34          {
     35            // TODO: Failsafe any critical processes or peripherals.
     36            emberCalibrateCurrentChannel();
   \                     emberRadioNeedsCalibratingHandler: (+1)
   \        0x0   0x....'....        B.W      emberCalibrateCurrentChannel
     37          }
     38          
     39          #endif//EMBER_APPLICATION_HAS_CUSTOM_RADIO_CALIBRATION_CALLBACK
     40          
     41          #ifndef EMBER_APPLICATION_HAS_BUTTON_HANDLER
     42          void halButtonIsr(uint8_t button, uint8_t state)
     43          {
     44          }
     45          
     46          #endif
     47          
     48          #if defined (CORTEXM3)
     49          #if !defined (USE_NVM3) || defined (SIMEE2_TO_NVM3_UPGRADE)
     50          #ifndef EMBER_APPLICATION_HAS_CUSTOM_SIM_EEPROM_CALLBACK
     51          #include "hal/plugin/sim-eeprom/sim-eeprom.h"
     52          // The Simulated EEPROM Callback function.
     53          void halSimEepromCallback(EmberStatus status)
     54          {
     55            switch (status) {
     56              case EMBER_SIM_EEPROM_ERASE_PAGE_GREEN:
     57                //SimEE is asking for one page to be erased.
     58                (void)halSimEepromErasePage();
     59                break;
     60              case EMBER_SIM_EEPROM_ERASE_PAGE_RED:
     61              case EMBER_SIM_EEPROM_FULL:
     62              { //SimEE says we're out of room!  Erase all pages now or data
     63                //currently being written will be dropped.
     64                if (halSimEepromPagesRemainingToBeErased() > 0) {
     65                  //If there is at least one HW page to erase, loop over ErasePage until
     66                  //all HW pages are erased.  Without this explicit check before
     67                  //ErasePage, when halSimEepromErasePage() returns 0 the code wont
     68                  //know if a page was actually erased or not and properly break out.
     69                  while (halSimEepromErasePage() != 0U) {
     70                  }
     71                  // A fresh virtual page now exists to use
     72                  break;
     73                }
     74                //If there are still pages to erase, then we have a situation where page
     75                //rotation is stuck because live tokens still exist in the
     76                //page we want to erase.  In this case we must do a repair to
     77                //get all live tokens into one virtual page. [BugzId:14392]
     78                //This bug pertains to SimEE2.
     79                //Fall into...
     80              }
     81              case EMBER_ERR_FLASH_WRITE_INHIBITED:
     82              case EMBER_ERR_FLASH_VERIFY_FAILED:
     83              { //Something went wrong while writing a token.  There is stale data and the
     84                //token the app expected to write did not get written.  Also there may
     85                //now be "stray" data written in the flash that could inhibit future token
     86                //writes.  To deal with stray/stale data, we must repair the Simulated
     87                //EEPROM.  Because the expected token write failed and will not be retried,
     88                //it is best to reset the chip and let normal boot sequences take over.
     89                //Since halInternalSimEeRepair() could potentially result in another write
     90                //failure, we use a simple semaphore to prevent recursion.
     91                static bool repairActive = false;
     92                if (!repairActive) {
     93                  repairActive = true;
     94                  halInternalSimEeRepair(false);
     95                  switch (status) {
     96                    case EMBER_SIM_EEPROM_ERASE_PAGE_RED:
     97                    case EMBER_SIM_EEPROM_FULL:
     98                      //Don't reboot - return to let SimEE code retry the token write
     99                      //[BugzId:14392]
    100                      break;
    101                    case EMBER_ERR_FLASH_VERIFY_FAILED:
    102          
    103          
    104                  #if defined (CORTEXM3)
    105                      halInternalSysReset(RESET_FLASH_VERIFY);
    106                  #elif defined (EMBER_STACK_COBRA)
    107                      halInternalSystemReset(RESET_FLASH);
    108                  #else
    109                      assert(0);
    110                  #endif
    111                      break;
    112                    case EMBER_ERR_FLASH_WRITE_INHIBITED:
    113                  #if defined (CORTEXM3)
    114                      halInternalSysReset(RESET_FLASH_INHIBIT);
    115                  #elif defined (EMBER_STACK_COBRA)
    116                      halInternalSystemReset(RESET_FLASH);
    117                  #else
    118                      assert(0);
    119                  #endif
    120                      break;
    121                    default:
    122                      assert(0);
    123                      break;
    124                  }
    125                  repairActive = false;
    126                }
    127                break;
    128              }
    129              case EMBER_SIM_EEPROM_REPAIRING:
    130                // While there's nothing for an app to do when the SimEE is going to
    131                // repair itself (SimEE has to be fully functional for the rest of the
    132                // system to work), alert the application to the fact that repairing
    133                // is occuring.  There are debugging scenarios where an app might want
    134                // to know that repairing is happening; such as monitoring frequency.
    135                // NOTE:  Common situations will trigger an expected repair, such as
    136                //        using an erased chip or changing token definitions.
    137                break;
    138              default:
    139                // this condition indicates an unexpected problem.
    140                assert(0);
    141                break;
    142            }
    143          }
    144          
    145          #endif//EMBER_APPLICATION_HAS_CUSTOM_SIM_EEPROM_CALLBACK
    146          
    147          #endif // !defined (USE_NVM3) || defined (SIMEE2_TO_NVM3_UPGRADE)
    148          #if defined (USE_NVM3)
    149          
    150          #ifndef EMBER_APPLICATION_HAS_CUSTOM_NVM3_CALLBACK
    151          #include "hal/plugin/nvm3/nvm3-token.h"
    152          // The NVM3 Callback function.

   \                                 In section .text, align 2, keep-with-next
    153          void halNvm3Callback(Ecode_t status)
    154          {
    155            // NVM3 does error handling internally, but this callback is included
    156            // in case the application requires any custom error handling.
    157          }
   \                     halNvm3Callback: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    158          
    159          #endif//EMBER_APPLICATION_HAS_CUSTOM_NVM3_CALLBACK
    160          #endif//USE_NVM3
    161          
    162          #ifndef EMBER_APPLICATION_HAS_CUSTOM_ISRS

   \                                 In section .text, align 2, keep-with-next
    163          uint16_t halInternalSc2Isr(uint16_t interrupt, uint16_t pcbContext)
    164          {
    165            return interrupt;
   \                     halInternalSc2Isr: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    166          }
    167          
    168          #endif//EMBER_APPLICATION_HAS_CUSTOM_ISRS
    169          
    170          #ifndef EMBER_APPLICATION_HAS_CUSTOM_RADIO_POWER_UP_HANDLER

   \                                 In section .text, align 2
    171          WEAK(void halRadioPowerUpHandler(void))
    172          {
    173          }
   \                     halRadioPowerUpHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    174          
    175          #endif // EMBER_APPLICATION_HAS_CUSTOM_RADIO_POWER_UP_HANDLER
    176          
    177          #ifndef EMBER_APPLICATION_HAS_CUSTOM_RADIO_POWER_DOWN_HANDLER

   \                                 In section .text, align 2
    178          WEAK(void halRadioPowerDownHandler(void))
    179          {
    180          }
   \                     halRadioPowerDownHandler: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    181          
    182          #endif // EMBER_APPLICATION_HAS_CUSTOM_RADIO_POWER_DOWN_HANDLER
    183          
    184          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   emberRadioNeedsCalibratingHandler
         0   -> emberCalibrateCurrentChannel
       0   halInternalSc2Isr
       0   halNvm3Callback
       0   halRadioPowerDownHandler
       0   halRadioPowerUpHandler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  emberRadioNeedsCalibratingHandler
       2  halInternalSc2Isr
       2  halNvm3Callback
       2  halRadioPowerDownHandler
       2  halRadioPowerUpHandler

 
 12 bytes in section .text
 
 8 bytes of CODE memory (+ 4 bytes shared)

Errors: none
Warnings: none
