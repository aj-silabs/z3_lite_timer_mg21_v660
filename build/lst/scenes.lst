###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:44
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\scenes\scenes.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW1E9D.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\scenes\scenes.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"scenes.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0 -D
#        LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D EMBER_AF_USE_HWCONF
#        -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\scenes\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\scenes.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\scenes.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\scenes\scenes.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Routines for the Scenes plugin, which implements the server side of
      4           *        the Scenes cluster.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include "../../include/af.h"
     20          #include "../../util/common.h"
     21          #include "scenes.h"
     22          
     23          #ifdef EMBER_AF_PLUGIN_ZLL_SCENES_SERVER
     24            #include "../zll-scenes-server/zll-scenes-server.h"
     25          #endif
     26          

   \                                 In section .bss, align 1
     27          uint8_t emberAfPluginScenesServerEntriesInUse = 0;
   \                     emberAfPluginScenesServerEntriesInUse:
   \        0x0                      DS8 1
     28          #if !defined(EMBER_AF_PLUGIN_SCENES_USE_TOKENS) || defined(EZSP_HOST)
     29          EmberAfSceneTableEntry emberAfPluginScenesServerSceneTable[EMBER_AF_PLUGIN_SCENES_TABLE_SIZE];
     30          #endif
     31          

   \                                 In section .text, align 2, keep-with-next
     32          static bool readServerAttribute(uint8_t endpoint,
     33                                          EmberAfClusterId clusterId,
     34                                          EmberAfAttributeId attributeId,
     35                                          const char * name,
     36                                          uint8_t *data,
     37                                          uint8_t size)
     38          {
   \                     readServerAttribute: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4616             MOV      R6,R2
     39            bool success = false;
   \        0x8   0x2700             MOVS     R7,#+0
     40            if (emberAfContainsServer(endpoint, clusterId)) {
   \        0xA   0x....'....        BL       emberAfContainsServer
   \        0xE   0xB148             CBZ.N    R0,??readServerAttribute_0
   \       0x10   0x9807             LDR      R0,[SP, #+28]
   \       0x12   0x9B06             LDR      R3,[SP, #+24]
     41              EmberAfStatus status = emberAfReadServerAttribute(endpoint,
     42                                                                clusterId,
     43                                                                attributeId,
     44                                                                data,
     45                                                                size);
     46              if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x14   0x4632             MOV      R2,R6
   \       0x16   0x9000             STR      R0,[SP, #+0]
   \       0x18   0x4629             MOV      R1,R5
   \       0x1A   0x4620             MOV      R0,R4
   \       0x1C   0x....'....        BL       emberAfReadServerAttribute
   \       0x20   0xB900             CBNZ.N   R0,??readServerAttribute_0
     47                success = true;
   \       0x22   0x2701             MOVS     R7,#+1
     48              } else {
     49                emberAfScenesClusterPrintln("ERR: %ping %p 0x%x", "read", name, status);
     50              }
     51            }
     52            return success;
   \                     ??readServerAttribute_0: (+1)
   \       0x24   0x4638             MOV      R0,R7
   \       0x26   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     53          }
     54          

   \                                 In section .text, align 2, keep-with-next
     55          static EmberAfStatus writeServerAttribute(uint8_t endpoint,
     56                                                    EmberAfClusterId clusterId,
     57                                                    EmberAfAttributeId attributeId,
     58                                                    const char * name,
     59                                                    uint8_t *data,
     60                                                    EmberAfAttributeType type)
     61          {
   \                     writeServerAttribute: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x9C05             LDR      R4,[SP, #+20]
   \        0x4   0x9B04             LDR      R3,[SP, #+16]
     62            EmberAfStatus status = emberAfWriteServerAttribute(endpoint,
     63                                                               clusterId,
     64                                                               attributeId,
     65                                                               data,
     66                                                               type);
     67            if (status != EMBER_ZCL_STATUS_SUCCESS) {
     68              emberAfScenesClusterPrintln("ERR: %ping %p 0x%x", "writ", name, status);
     69            }
     70            return status;
   \        0x6   0x9400             STR      R4,[SP, #+0]
   \        0x8   0x....'....        BL       emberAfWriteServerAttribute
   \        0xC   0xBD16             POP      {R1,R2,R4,PC}    ;; return
     71          }
     72          

   \                                 In section .text, align 2, keep-with-next
     73          void emberAfScenesClusterServerInitCallback(uint8_t endpoint)
     74          {
   \                     emberAfScenesClusterServerInitCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
     75          #ifdef EMBER_AF_PLUGIN_SCENES_NAME_SUPPORT
     76            {
     77              // The high bit of Name Support indicates whether scene names are supported.
     78              uint8_t nameSupport = BIT(7);
     79              writeServerAttribute(endpoint,
     80                                   ZCL_SCENES_CLUSTER_ID,
     81                                   ZCL_SCENE_NAME_SUPPORT_ATTRIBUTE_ID,
     82                                   "name support",
     83                                   (uint8_t *)&nameSupport,
     84                                   ZCL_BITMAP8_ATTRIBUTE_TYPE);
     85            }
     86          #endif
     87          #if !defined(EMBER_AF_PLUGIN_SCENES_USE_TOKENS) || defined(EZSP_HOST)
     88            {
     89              uint8_t i;
     90              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
     91                EmberAfSceneTableEntry entry;
     92                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
     93                entry.endpoint = EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID;
     94                emberAfPluginScenesServerSaveSceneEntry(entry, i);
     95              }
     96              emberAfPluginScenesServerSetNumSceneEntriesInUse(0);
     97            }
     98          #endif
     99            emberAfScenesSetSceneCountAttribute(endpoint,
    100                                                emberAfPluginScenesServerNumSceneEntriesInUse());
   \        0x4   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_14: (+1)
   \        0x8   0x7829             LDRB     R1,[R5, #+0]
   \        0xA   0x4620             MOV      R0,R4
   \        0xC   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \       0x10                      REQUIRE emberAfScenesSetSceneCountAttribute
   \       0x10                      ;; // Fall through to label emberAfScenesSetSceneCountAttribute
    101          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x....'....        LDR.W    R5,??DataTable17_3
   \        0x4   0x2301             MOVS     R3,#+1
   \        0x6   0x227F             MOVS     R2,#+127
   \        0x8   0x212B             MOVS     R1,#+43
   \        0xA   0x4628             MOV      R0,R5
   \        0xC   0x....'....        B.W      halInternalGetTokenData
    102          

   \                                 In section .text, align 2, keep-with-next
    103          EmberAfStatus emberAfScenesSetSceneCountAttribute(uint8_t endpoint,
    104                                                            uint8_t newCount)
    105          {
   \                     emberAfScenesSetSceneCountAttribute: (+1)
   \        0x0   0xB502             PUSH     {R1,LR}
   \        0x2   0xB082             SUB      SP,SP,#+8
    106            return writeServerAttribute(endpoint,
    107                                        ZCL_SCENES_CLUSTER_ID,
    108                                        ZCL_SCENE_COUNT_ATTRIBUTE_ID,
    109                                        "scene count",
    110                                        (uint8_t *)&newCount,
    111                                        ZCL_INT8U_ATTRIBUTE_TYPE);
   \        0x4   0x2120             MOVS     R1,#+32
   \        0x6   0xAA02             ADD      R2,SP,#+8
   \        0x8   0x9101             STR      R1,[SP, #+4]
   \        0xA   0x9200             STR      R2,[SP, #+0]
   \        0xC   0x....'....        LDR.W    R3,??DataTable18
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0x....             B.N      ?Subroutine0
    112          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x2105             MOVS     R1,#+5
   \        0x2   0x....'....        BL       writeServerAttribute
   \        0x6   0xBD0E             POP      {R1-R3,PC}       ;; return
    113          

   \                                 In section .text, align 2, keep-with-next
    114          EmberAfStatus emberAfScenesMakeValid(uint8_t endpoint,
    115                                               uint8_t sceneId,
    116                                               uint16_t groupId)
    117          {
   \                     emberAfScenesMakeValid: (+1)
   \        0x0   0xB536             PUSH     {R1,R2,R4,R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0xB083             SUB      SP,SP,#+12
    118            EmberAfStatus status;
    119            bool valid = true;
   \        0x6   0x2001             MOVS     R0,#+1
    120          
    121            // scene ID
    122            status = writeServerAttribute(endpoint,
    123                                          ZCL_SCENES_CLUSTER_ID,
    124                                          ZCL_CURRENT_SCENE_ATTRIBUTE_ID,
    125                                          "current scene",
    126                                          (uint8_t *)&sceneId,
    127                                          ZCL_INT8U_ATTRIBUTE_TYPE);
   \        0x8   0x2120             MOVS     R1,#+32
   \        0xA   0xF88D 0x0008      STRB     R0,[SP, #+8]
   \        0xE   0x9101             STR      R1,[SP, #+4]
   \       0x10   0xAD03             ADD      R5,SP,#+12
   \       0x12   0x9500             STR      R5,[SP, #+0]
   \       0x14   0x....'....        LDR.W    R3,??DataTable17
   \       0x18   0x2201             MOVS     R2,#+1
   \       0x1A   0x2105             MOVS     R1,#+5
   \       0x1C   0x....'....        BL       ??Subroutine4_0
    128            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0x20   0x0001             MOVS     R1,R0
   \       0x22   0xD115             BNE.N    ??CrossCallReturnLabel_2
    129              return status;
    130            }
    131          
    132            // group ID
    133            status = writeServerAttribute(endpoint,
    134                                          ZCL_SCENES_CLUSTER_ID,
    135                                          ZCL_CURRENT_GROUP_ATTRIBUTE_ID,
    136                                          "current group",
    137                                          (uint8_t *)&groupId,
    138                                          ZCL_INT16U_ATTRIBUTE_TYPE);
   \       0x24   0x2021             MOVS     R0,#+33
   \       0x26   0xA904             ADD      R1,SP,#+16
   \       0x28   0x9001             STR      R0,[SP, #+4]
   \       0x2A   0x9100             STR      R1,[SP, #+0]
   \       0x2C   0x....'....        LDR.W    R3,??DataTable17_1
   \       0x30   0x2202             MOVS     R2,#+2
   \       0x32   0x2105             MOVS     R1,#+5
   \       0x34   0x....'....        BL       ??Subroutine4_0
    139            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x38   0x0001             MOVS     R1,R0
   \       0x3A   0xD109             BNE.N    ??CrossCallReturnLabel_2
    140              return status;
    141            }
    142          
    143            status = writeServerAttribute(endpoint,
    144                                          ZCL_SCENES_CLUSTER_ID,
    145                                          ZCL_SCENE_VALID_ATTRIBUTE_ID,
    146                                          "scene valid",
    147                                          (uint8_t *)&valid,
    148                                          ZCL_BOOLEAN_ATTRIBUTE_TYPE);
    149            return status;
   \       0x3C   0x2010             MOVS     R0,#+16
   \       0x3E   0xA902             ADD      R1,SP,#+8
   \       0x40   0x9001             STR      R0,[SP, #+4]
   \       0x42   0x9100             STR      R1,[SP, #+0]
   \       0x44   0x....'....        LDR.W    R3,??DataTable17_2
   \       0x48   0x2203             MOVS     R2,#+3
   \       0x4A   0x2105             MOVS     R1,#+5
   \       0x4C   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x50   0xB005             ADD      SP,SP,#+20
   \       0x52   0xBD30             POP      {R4,R5,PC}       ;; return
    150          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0xF44F 0x7140      MOV      R1,#+768
   \                     ??Subroutine4_0: (+1)
   \        0x4   0x4620             MOV      R0,R4
   \        0x6   0x....             B.N      writeServerAttribute
    151          

   \                                 In section .text, align 2, keep-with-next
    152          EmberAfStatus emberAfScenesClusterMakeInvalidCallback(uint8_t endpoint)
    153          {
   \                     emberAfScenesClusterMakeInvalidCallback: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
    154            bool valid = false;
   \        0x2   0x2100             MOVS     R1,#+0
    155            return writeServerAttribute(endpoint,
    156                                        ZCL_SCENES_CLUSTER_ID,
    157                                        ZCL_SCENE_VALID_ATTRIBUTE_ID,
    158                                        "scene valid",
    159                                        (uint8_t *)&valid,
    160                                        ZCL_BOOLEAN_ATTRIBUTE_TYPE);
   \        0x4   0x2210             MOVS     R2,#+16
   \        0x6   0xAB02             ADD      R3,SP,#+8
   \        0x8   0xF88D 0x1008      STRB     R1,[SP, #+8]
   \        0xC   0x9201             STR      R2,[SP, #+4]
   \        0xE   0x9300             STR      R3,[SP, #+0]
   \       0x10   0x....'....        LDR.W    R3,??DataTable17_2
   \       0x14   0x2203             MOVS     R2,#+3
   \       0x16                      REQUIRE ?Subroutine0
   \       0x16                      ;; // Fall through to label ?Subroutine0
    161          }
    162          

   \                                 In section .text, align 2, keep-with-next
    163          void emAfPluginScenesServerPrintInfo(void)
    164          {
   \                     emAfPluginScenesServerPrintInfo: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    165            uint8_t i;
    166            EmberAfSceneTableEntry entry;
    167            emberAfCorePrintln("using 0x%x out of 0x%x table slots",
    168                               emberAfPluginScenesServerNumSceneEntriesInUse(),
    169                               EMBER_AF_PLUGIN_SCENES_TABLE_SIZE);
   \        0x4   0x....'....        LDR.W    R4,??DataTable17_3
   \        0x8   0xB08E             SUB      SP,SP,#+56
   \        0xA   0x2301             MOVS     R3,#+1
   \        0xC   0x227F             MOVS     R2,#+127
   \        0xE   0x212B             MOVS     R1,#+43
   \       0x10   0x4620             MOV      R0,R4
   \       0x12   0x....'....        BL       halInternalGetTokenData
   \       0x16   0x7822             LDRB     R2,[R4, #+0]
   \       0x18   0x2303             MOVS     R3,#+3
   \       0x1A   0x....'....        LDR.W    R1,??DataTable18_1
   \       0x1E   0x2001             MOVS     R0,#+1
   \       0x20   0x....'....        BL       emberAfPrintln
    170            for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \       0x24   0x2700             MOVS     R7,#+0
   \       0x26   0x....'....        LDR.W    R4,??DataTable18_2
   \       0x2A   0x....'....        LDR.W    R5,??DataTable18_3
   \       0x2E   0x....'....        LDR.W    R6,??DataTable18_4
   \       0x32   0x....'....        LDR.W    R11,??DataTable18_5
   \       0x36   0x....'....        LDR.W    R8,??DataTable18_6
   \       0x3A   0x....'....        LDR.W    R9,??DataTable18_7
   \       0x3E   0x....'....        LDR.W    R10,??DataTable18_8
    171              emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emAfPluginScenesServerPrintInfo_0: (+1)
   \       0x42   0x2326             MOVS     R3,#+38
   \       0x44   0xB2FA             UXTB     R2,R7
   \       0x46   0x....'....        BL       ?Subroutine14
    172              emberAfCorePrint("%x: ", i);
   \                     ??CrossCallReturnLabel_48: (+1)
   \       0x4A   0xB2FA             UXTB     R2,R7
   \       0x4C   0x4651             MOV      R1,R10
   \       0x4E   0x....'....        BL       ?Subroutine11
    173              if (entry.endpoint != EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID) {
   \                     ??CrossCallReturnLabel_39: (+1)
   \       0x52   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD038             BEQ.N    ??emAfPluginScenesServerPrintInfo_1
    174                emberAfCorePrint("ep %x grp %2x scene %x tt %d",
    175                                 entry.endpoint,
    176                                 entry.groupId,
    177                                 entry.sceneId,
    178                                 entry.transitionTime);
   \       0x5A   0xF8BD 0x0016      LDRH     R0,[SP, #+22]
   \       0x5E   0xF89D 0x1014      LDRB     R1,[SP, #+20]
   \       0x62   0xF8BD 0x3012      LDRH     R3,[SP, #+18]
   \       0x66   0xF89D 0x2010      LDRB     R2,[SP, #+16]
   \       0x6A   0x9001             STR      R0,[SP, #+4]
   \       0x6C   0x9100             STR      R1,[SP, #+0]
   \       0x6E   0x4649             MOV      R1,R9
   \       0x70   0x2001             MOVS     R0,#+1
   \       0x72   0x....'....        BL       emberAfPrint
    179                emberAfCorePrint(".%d", entry.transitionTime100ms);
   \       0x76   0xF89D 0x2018      LDRB     R2,[SP, #+24]
   \       0x7A   0x4641             MOV      R1,R8
   \       0x7C   0x....'....        BL       ?Subroutine11
    180          #ifdef EMBER_AF_PLUGIN_SCENES_NAME_SUPPORT
    181                emberAfCorePrint(" name(%x)\"", emberAfStringLength(entry.name));
    182                emberAfCorePrintString(entry.name);
    183                emberAfCorePrint("\"");
    184          #endif
    185          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
    186                emberAfCorePrint(" on/off %x", entry.onOffValue);
   \                     ??CrossCallReturnLabel_38: (+1)
   \       0x80   0xF89D 0x201A      LDRB     R2,[SP, #+26]
   \       0x84   0x4659             MOV      R1,R11
   \       0x86   0x....'....        BL       ?Subroutine11
    187          #endif
    188          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
    189                emberAfCorePrint(" lvl %x", entry.currentLevelValue);
   \                     ??CrossCallReturnLabel_37: (+1)
   \       0x8A   0xF89D 0x201C      LDRB     R2,[SP, #+28]
   \       0x8E   0x4631             MOV      R1,R6
   \       0x90   0x....'....        BL       ?Subroutine11
    190          #endif
    191          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
    192                emberAfCorePrint(" therm %2x %2x %x",
    193                                 entry.occupiedCoolingSetpointValue,
    194                                 entry.occupiedHeatingSetpointValue,
    195                                 entry.systemModeValue);
    196          #endif
    197          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    198                emberAfCorePrint(" color %2x %2x",
    199                                 entry.currentXValue,
    200                                 entry.currentYValue);
   \                     ??CrossCallReturnLabel_36: (+1)
   \       0x94   0xF8BD 0x3022      LDRH     R3,[SP, #+34]
   \       0x98   0xF8BD 0x201E      LDRH     R2,[SP, #+30]
   \       0x9C   0x4629             MOV      R1,R5
   \       0x9E   0x2001             MOVS     R0,#+1
   \       0xA0   0x....'....        BL       emberAfPrint
    201                emberAfCorePrint(" %2x %x %x %x %2x",
    202                                 entry.enhancedCurrentHueValue,
    203                                 entry.currentSaturationValue,
    204                                 entry.colorLoopActiveValue,
    205                                 entry.colorLoopDirectionValue,
    206                                 entry.colorLoopTimeValue,
    207                                 entry.colorTemperatureMiredsValue);
   \       0xA4   0xF8BD 0x0034      LDRH     R0,[SP, #+52]
   \       0xA8   0xF8BD 0x1030      LDRH     R1,[SP, #+48]
   \       0xAC   0x9003             STR      R0,[SP, #+12]
   \       0xAE   0xF89D 0x002D      LDRB     R0,[SP, #+45]
   \       0xB2   0x9102             STR      R1,[SP, #+8]
   \       0xB4   0xF89D 0x102B      LDRB     R1,[SP, #+43]
   \       0xB8   0xF89D 0x3029      LDRB     R3,[SP, #+41]
   \       0xBC   0xF8BD 0x2026      LDRH     R2,[SP, #+38]
   \       0xC0   0x9001             STR      R0,[SP, #+4]
   \       0xC2   0x9100             STR      R1,[SP, #+0]
   \       0xC4   0x4621             MOV      R1,R4
   \       0xC6   0x2001             MOVS     R0,#+1
   \       0xC8   0x....'....        BL       emberAfPrint
    208                emberAfCoreFlush();
    209          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    210          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
    211                emberAfCorePrint(" door %x", entry.lockStateValue);
    212          #endif
    213          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
    214                emberAfCorePrint(" window %x %x",
    215                                 entry.currentPositionLiftPercentageValue,
    216                                 entry.currentPositionTiltPercentageValue);
    217          #endif
    218              }
    219              emberAfCorePrintln("");
   \                     ??emAfPluginScenesServerPrintInfo_1: (+1)
   \       0xCC   0x....'....        LDR.W    R1,??DataTable19
   \       0xD0   0x2001             MOVS     R0,#+1
   \       0xD2   0x....'....        BL       emberAfPrintln
    220            }
   \       0xD6   0x1C7F             ADDS     R7,R7,#+1
   \       0xD8   0xB2F8             UXTB     R0,R7
   \       0xDA   0x2802             CMP      R0,#+2
   \       0xDC   0xDDB1             BLE.N    ??emAfPluginScenesServerPrintInfo_0
    221          }
   \       0xDE                      REQUIRE ?Subroutine1
   \       0xDE                      ;; // Fall through to label ?Subroutine1

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0xB00F             ADD      SP,SP,#+60
   \        0x2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine11: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \        0x2   0x....'....        B.W      emberAfPrint

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine14: (+1)
   \        0x0   0x212C             MOVS     R1,#+44
   \        0x2   0xA804             ADD      R0,SP,#+16
   \        0x4   0x....'....        B.W      halInternalGetTokenData
    222          

   \                                 In section .text, align 2, keep-with-next
    223          bool emberAfScenesClusterAddSceneCallback(uint16_t groupId,
    224                                                    uint8_t sceneId,
    225                                                    uint16_t transitionTime,
    226                                                    uint8_t *sceneName,
    227                                                    uint8_t *extensionFieldSets)
    228          {
   \                     emberAfScenesClusterAddSceneCallback: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x9C04             LDR      R4,[SP, #+16]
    229            return emberAfPluginScenesServerParseAddScene(emberAfCurrentCommand(),
    230                                                          groupId,
    231                                                          sceneId,
    232                                                          transitionTime,
    233                                                          sceneName,
    234                                                          extensionFieldSets);
   \        0x4   0x9300             STR      R3,[SP, #+0]
   \        0x6   0x4613             MOV      R3,R2
   \        0x8   0x9401             STR      R4,[SP, #+4]
   \        0xA   0x460A             MOV      R2,R1
   \        0xC   0x4601             MOV      R1,R0
   \        0xE   0x....'....        LDR.W    R4,??DataTable19_1
   \       0x12   0x6820             LDR      R0,[R4, #+0]
   \       0x14   0x....'....        BL       emberAfPluginScenesServerParseAddScene
   \       0x18   0xBD16             POP      {R1,R2,R4,PC}    ;; return
    235          }
    236          

   \                                 In section .text, align 2, keep-with-next
    237          bool emberAfScenesClusterViewSceneCallback(uint16_t groupId, uint8_t sceneId)
    238          {
   \                     emberAfScenesClusterViewSceneCallback: (+1)
   \        0x0   0x460A             MOV      R2,R1
    239            return emberAfPluginScenesServerParseViewScene(emberAfCurrentCommand(),
    240                                                           groupId,
    241                                                           sceneId);
   \        0x2   0x4601             MOV      R1,R0
   \        0x4   0x....'....        LDR.W    R0,??DataTable19_1
   \        0x8   0x6800             LDR      R0,[R0, #+0]
   \        0xA   0x....'....        B.W      emberAfPluginScenesServerParseViewScene
    242          }
    243          

   \                                 In section .text, align 2, keep-with-next
    244          bool emberAfScenesClusterRemoveSceneCallback(uint16_t groupId, uint8_t sceneId)
    245          {
   \                     emberAfScenesClusterRemoveSceneCallback: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4680             MOV      R8,R0
    246            EmberAfStatus status = EMBER_ZCL_STATUS_NOT_FOUND;
   \        0x6   0x278B             MOVS     R7,#+139
   \        0x8   0xB08A             SUB      SP,SP,#+40
   \        0xA   0x460C             MOV      R4,R1
    247            EmberStatus sendStatus;
    248          
    249            emberAfScenesClusterPrintln("RX: RemoveScene 0x%2x, 0x%x", groupId, sceneId);
    250          
    251            // If a group id is specified but this endpoint isn't in it, take no action.
    252            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    253                && !emberAfGroupsClusterEndpointInGroupCallback(emberAfCurrentEndpoint(),
    254                                                                groupId)) {
   \        0xC   0x....'....        LDR.W    R6,??DataTable19_1
   \       0x10   0xEA5F 0x0008      MOVS     R0,R8
   \       0x14   0xD004             BEQ.N    ??emberAfScenesClusterRemoveSceneCallback_0
   \       0x16   0x....'....        BL       ?Subroutine15
   \                     ??CrossCallReturnLabel_50: (+1)
   \       0x1A   0xB908             CBNZ.N   R0,??emberAfScenesClusterRemoveSceneCallback_0
    255              status = EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x1C   0x2785             MOVS     R7,#+133
   \       0x1E   0xE012             B.N      ??emberAfScenesClusterRemoveSceneCallback_1
    256            } else {
    257              uint8_t i;
    258              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \                     ??emberAfScenesClusterRemoveSceneCallback_0: (+1)
   \       0x20   0x2500             MOVS     R5,#+0
    259                EmberAfSceneTableEntry entry;
    260                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterRemoveSceneCallback_2: (+1)
   \       0x22   0x2326             MOVS     R3,#+38
   \       0x24   0xB2EA             UXTB     R2,R5
   \       0x26   0x....'....        BL       ?Subroutine12
    261                if (entry.endpoint == emberAfCurrentEndpoint()
    262                    && entry.groupId == groupId
    263                    && entry.sceneId == sceneId) {
   \                     ??CrossCallReturnLabel_43: (+1)
   \       0x2A   0x....'....        BL       ?Subroutine16
   \                     ??CrossCallReturnLabel_51: (+1)
   \       0x2E   0xBF01             ITTTT    EQ 
   \       0x30   0xF8BD 0x0002      LDRHEQ   R0,[SP, #+2]
   \       0x34   0x4540             CMPEQ    R0,R8
   \       0x36   0xF89D 0x0004      LDRBEQ   R0,[SP, #+4]
   \       0x3A   0x42A0             CMPEQ    R0,R4
   \       0x3C   0xD015             BEQ.N    ??emberAfScenesClusterRemoveSceneCallback_3
   \       0x3E   0x1C6D             ADDS     R5,R5,#+1
   \       0x40   0xB2EA             UXTB     R2,R5
   \       0x42   0x2A02             CMP      R2,#+2
   \       0x44   0xDDED             BLE.N    ??emberAfScenesClusterRemoveSceneCallback_2
    264                  entry.endpoint = EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID;
    265                  emberAfPluginScenesServerSaveSceneEntry(entry, i);
    266                  emberAfPluginScenesServerDecrNumSceneEntriesInUse();
    267                  emberAfScenesSetSceneCountAttribute(emberAfCurrentEndpoint(),
    268                                                      emberAfPluginScenesServerNumSceneEntriesInUse());
    269                  status = EMBER_ZCL_STATUS_SUCCESS;
    270                  break;
    271                }
    272              }
    273            }
    274          
    275            // Remove Scene commands are only responded to when they are addressed to a
    276            // single device.
    277            if (emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST
    278                || emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST_REPLY) {
   \                     ??emberAfScenesClusterRemoveSceneCallback_1: (+1)
   \       0x46   0x6830             LDR      R0,[R6, #+0]
   \       0x48   0x7900             LDRB     R0,[R0, #+4]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xBF18             IT       NE 
   \       0x4E   0x2801             CMPNE    R0,#+1
   \       0x50   0xD10A             BNE.N    ??emberAfScenesClusterRemoveSceneCallback_4
    279              emberAfFillCommandScenesClusterRemoveSceneResponse(status,
    280                                                                 groupId,
    281                                                                 sceneId);
   \       0x52   0x9402             STR      R4,[SP, #+8]
   \       0x54   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \       0x58   0x9700             STR      R7,[SP, #+0]
   \       0x5A   0x....'....        LDR.W    R3,??DataTable19_2
   \       0x5E   0x2202             MOVS     R2,#+2
   \       0x60   0x....'....        BL       ??Subroutine10_0
    282              sendStatus = emberAfSendResponse();
   \                     ??CrossCallReturnLabel_33: (+1)
   \       0x64   0x....'....        BL       emberAfSendResponse
    283              if (EMBER_SUCCESS != sendStatus) {
    284                emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
    285                                            "remove_scene",
    286                                            sendStatus);
    287              }
    288            }
    289            return true;
   \                     ??emberAfScenesClusterRemoveSceneCallback_4: (+1)
   \       0x68   0x....             B.N      ?Subroutine2
   \                     ??emberAfScenesClusterRemoveSceneCallback_3: (+1)
   \       0x6A   0x....'....        BL       ?Subroutine20
   \                     ??CrossCallReturnLabel_66: (+1)
   \       0x6E   0xB2E9             UXTB     R1,R5
   \       0x70   0x....'....        BL       ??Subroutine18_0
   \                     ??CrossCallReturnLabel_60: (+1)
   \       0x74   0x....'....        LDR.W    R7,??DataTable17_3
   \       0x78   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_20: (+1)
   \       0x7C   0x....'....        BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_25: (+1)
   \       0x80   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_19: (+1)
   \       0x84   0x6830             LDR      R0,[R6, #+0]
   \       0x86   0x7839             LDRB     R1,[R7, #+0]
   \       0x88   0x2700             MOVS     R7,#+0
   \       0x8A   0x....'....        BL       ?Subroutine19
   \                     ??CrossCallReturnLabel_65: (+1)
   \       0x8E   0xE7DA             B.N      ??emberAfScenesClusterRemoveSceneCallback_1
    290          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x2001             MOVS     R0,#+1
   \                     ??Subroutine2_0: (+1)
   \        0x2   0xB00A             ADD      SP,SP,#+40
   \        0x4   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine19: (+1)
   \        0x0   0x6802             LDR      R2,[R0, #+0]
   \        0x2   0x7950             LDRB     R0,[R2, #+5]
   \        0x4   0x....             B.N      emberAfScenesSetSceneCountAttribute

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine16: (+1)
   \        0x0   0x6831             LDR      R1,[R6, #+0]
   \        0x2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \        0x6   0x680A             LDR      R2,[R1, #+0]
   \        0x8   0x7953             LDRB     R3,[R2, #+5]
   \        0xA   0x4298             CMP      R0,R3
   \        0xC   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine15: (+1)
   \        0x0   0x6832             LDR      R2,[R6, #+0]
   \        0x2   0x4641             MOV      R1,R8
   \        0x4   0x6813             LDR      R3,[R2, #+0]
   \        0x6   0x7958             LDRB     R0,[R3, #+5]
   \        0x8   0x....'....        B.W      emberAfGroupsClusterEndpointInGroupCallback

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \        0x0   0x7838             LDRB     R0,[R7, #+0]
   \        0x2   0x2301             MOVS     R3,#+1
   \        0x4   0x463A             MOV      R2,R7
   \        0x6   0x1E41             SUBS     R1,R0,#+1
   \        0x8   0x7039             STRB     R1,[R7, #+0]
   \        0xA   0x217F             MOVS     R1,#+127
   \        0xC   0x202B             MOVS     R0,#+43
   \        0xE   0x....'....        B.W      halInternalSetTokenData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x2301             MOVS     R3,#+1
   \        0x2   0x227F             MOVS     R2,#+127
   \        0x4   0x212B             MOVS     R1,#+43
   \        0x6   0x4638             MOV      R0,R7
   \        0x8   0x....'....        B.W      halInternalGetTokenData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine10: (+1)
   \        0x0   0x....'....        LDR.W    R3,??DataTable19_2
   \                     ??Subroutine10_0: (+1)
   \        0x4   0x2105             MOVS     R1,#+5
   \        0x6   0x2009             MOVS     R0,#+9
   \        0x8   0x....'....        B.W      emberAfFillExternalBuffer

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine20: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \        0x6   0x2326             MOVS     R3,#+38
   \        0x8   0x466A             MOV      R2,SP
   \        0xA   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine12: (+1)
   \        0x0   0x212C             MOVS     R1,#+44
   \        0x2   0x4668             MOV      R0,SP
   \        0x4   0x....'....        B.W      halInternalGetTokenData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine18: (+1)
   \        0x0   0xB2E1             UXTB     R1,R4
   \                     ??Subroutine18_0: (+1)
   \        0x2   0x202C             MOVS     R0,#+44
   \        0x4   0x....'....        B.W      halInternalSetTokenData
    291          

   \                                 In section .text, align 2, keep-with-next
    292          bool emberAfScenesClusterRemoveAllScenesCallback(uint16_t groupId)
    293          {
   \                     emberAfScenesClusterRemoveAllScenesCallback: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4680             MOV      R8,R0
    294            EmberAfStatus status = EMBER_ZCL_STATUS_INVALID_FIELD;
   \        0x6   0x2585             MOVS     R5,#+133
   \        0x8   0xB08A             SUB      SP,SP,#+40
    295            EmberStatus sendStatus;
    296          
    297            emberAfScenesClusterPrintln("RX: RemoveAllScenes 0x%2x", groupId);
    298          
    299            if (groupId == ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    300                || emberAfGroupsClusterEndpointInGroupCallback(emberAfCurrentEndpoint(),
    301                                                               groupId)) {
   \        0xA   0x....'....        LDR.W    R6,??DataTable19_1
   \        0xE   0xEA5F 0x0008      MOVS     R0,R8
   \       0x12   0xD003             BEQ.N    ??emberAfScenesClusterRemoveAllScenesCallback_0
   \       0x14   0x....'....        BL       ?Subroutine15
   \                     ??CrossCallReturnLabel_49: (+1)
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD022             BEQ.N    ??CrossCallReturnLabel_64
    302              uint8_t i;
    303              status = EMBER_ZCL_STATUS_SUCCESS;
   \                     ??emberAfScenesClusterRemoveAllScenesCallback_0: (+1)
   \       0x1C   0x2500             MOVS     R5,#+0
    304              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \       0x1E   0x2400             MOVS     R4,#+0
   \       0x20   0x....'....        LDR.W    R7,??DataTable17_3
    305                EmberAfSceneTableEntry entry;
    306                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterRemoveAllScenesCallback_1: (+1)
   \       0x24   0x2326             MOVS     R3,#+38
   \       0x26   0xB2E2             UXTB     R2,R4
   \       0x28   0x....'....        BL       ?Subroutine12
    307                if (entry.endpoint == emberAfCurrentEndpoint()
    308                    && entry.groupId == groupId) {
   \                     ??CrossCallReturnLabel_42: (+1)
   \       0x2C   0x....'....        BL       ?Subroutine16
   \                     ??CrossCallReturnLabel_52: (+1)
   \       0x30   0xBF04             ITT      EQ 
   \       0x32   0xF8BD 0x0002      LDRHEQ   R0,[SP, #+2]
   \       0x36   0x4540             CMPEQ    R0,R8
   \       0x38   0xD109             BNE.N    ??CrossCallReturnLabel_24
    309                  entry.endpoint = EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID;
   \       0x3A   0xF88D 0x5000      STRB     R5,[SP, #+0]
    310                  emberAfPluginScenesServerSaveSceneEntry(entry, i);
   \       0x3E   0x2326             MOVS     R3,#+38
   \       0x40   0x466A             MOV      R2,SP
   \       0x42   0x....'....        BL       ?Subroutine18
    311                  emberAfPluginScenesServerDecrNumSceneEntriesInUse();
   \                     ??CrossCallReturnLabel_62: (+1)
   \       0x46   0x....'....        BL       ?Subroutine6
    312                }
    313              }
   \                     ??CrossCallReturnLabel_18: (+1)
   \       0x4A   0x....'....        BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_24: (+1)
   \       0x4E   0x1C64             ADDS     R4,R4,#+1
   \       0x50   0xB2E0             UXTB     R0,R4
   \       0x52   0x2802             CMP      R0,#+2
   \       0x54   0xDDE6             BLE.N    ??emberAfScenesClusterRemoveAllScenesCallback_1
    314              emberAfScenesSetSceneCountAttribute(emberAfCurrentEndpoint(),
    315                                                  emberAfPluginScenesServerNumSceneEntriesInUse());
   \       0x56   0x....'....        BL       ?Subroutine6
    316            }
   \                     ??CrossCallReturnLabel_17: (+1)
   \       0x5A   0x6830             LDR      R0,[R6, #+0]
   \       0x5C   0x7839             LDRB     R1,[R7, #+0]
   \       0x5E   0x....'....        BL       ?Subroutine19
    317          
    318            // Remove All Scenes commands are only responded to when they are addressed
    319            // to a single device.
    320            if (emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST
    321                || emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST_REPLY) {
   \                     ??CrossCallReturnLabel_64: (+1)
   \       0x62   0x6830             LDR      R0,[R6, #+0]
   \       0x64   0x7900             LDRB     R0,[R0, #+4]
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xBF18             IT       NE 
   \       0x6A   0x2801             CMPNE    R0,#+1
   \       0x6C   0xD109             BNE.N    ??emberAfScenesClusterRemoveAllScenesCallback_2
    322              emberAfFillCommandScenesClusterRemoveAllScenesResponse(status, groupId);
   \       0x6E   0xF8CD 0x8004      STR      R8,[SP, #+4]
   \       0x72   0x9500             STR      R5,[SP, #+0]
   \       0x74   0x....'....        LDR.W    R3,??DataTable19_3
   \       0x78   0x2203             MOVS     R2,#+3
   \       0x7A   0x....'....        BL       ??Subroutine10_0
    323              sendStatus = emberAfSendResponse();
   \                     ??CrossCallReturnLabel_32: (+1)
   \       0x7E   0x....'....        BL       emberAfSendResponse
    324              if (EMBER_SUCCESS != sendStatus) {
    325                emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
    326                                            "remove_all_scenes",
    327                                            sendStatus);
    328              }
    329            }
    330            return true;
   \                     ??emberAfScenesClusterRemoveAllScenesCallback_2: (+1)
   \       0x82                      REQUIRE ?Subroutine2
   \       0x82                      ;; // Fall through to label ?Subroutine2
    331          }
    332          

   \                                 In section .text, align 2, keep-with-next
    333          bool emberAfScenesClusterStoreSceneCallback(uint16_t groupId, uint8_t sceneId)
    334          {
   \                     emberAfScenesClusterStoreSceneCallback: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
    335            EmberAfStatus status;
    336            EmberStatus sendStatus;
    337            emberAfScenesClusterPrintln("RX: StoreScene 0x%2x, 0x%x", groupId, sceneId);
    338            status = emberAfScenesClusterStoreCurrentSceneCallback(emberAfCurrentEndpoint(),
    339                                                                   groupId,
    340                                                                   sceneId);
   \        0x2   0x....'....        LDR.W    R6,??DataTable19_1
   \        0x6   0x6833             LDR      R3,[R6, #+0]
   \        0x8   0x4604             MOV      R4,R0
   \        0xA   0x460D             MOV      R5,R1
   \        0xC   0x681F             LDR      R7,[R3, #+0]
   \        0xE   0x462A             MOV      R2,R5
   \       0x10   0x4621             MOV      R1,R4
   \       0x12   0x7978             LDRB     R0,[R7, #+5]
   \       0x14   0x....'....        BL       emberAfScenesClusterStoreCurrentSceneCallback
    341          
    342            // Store Scene commands are only responded to when they are addressed to a
    343            // single device.
    344            if (emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST
    345                || emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST_REPLY) {
   \       0x18   0x6832             LDR      R2,[R6, #+0]
   \       0x1A   0x4601             MOV      R1,R0
   \       0x1C   0x7910             LDRB     R0,[R2, #+4]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xBF18             IT       NE 
   \       0x22   0x2801             CMPNE    R0,#+1
   \       0x24   0xD109             BNE.N    ??emberAfScenesClusterStoreSceneCallback_0
    346              emberAfFillCommandScenesClusterStoreSceneResponse(status, groupId, sceneId);
   \       0x26   0x9100             STR      R1,[SP, #+0]
   \       0x28   0x9502             STR      R5,[SP, #+8]
   \       0x2A   0x9401             STR      R4,[SP, #+4]
   \       0x2C   0x....'....        LDR.W    R3,??DataTable19_2
   \       0x30   0x2204             MOVS     R2,#+4
   \       0x32   0x....'....        BL       ??Subroutine10_0
    347              sendStatus = emberAfSendResponse();
   \                     ??CrossCallReturnLabel_31: (+1)
   \       0x36   0x....'....        BL       emberAfSendResponse
    348              if (EMBER_SUCCESS != sendStatus) {
    349                emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
    350                                            "store_scene",
    351                                            sendStatus);
    352              }
    353            }
    354            return true;
   \                     ??emberAfScenesClusterStoreSceneCallback_0: (+1)
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xBDFE             POP      {R1-R7,PC}       ;; return
    355          }
    356          

   \                                 In section .text, align 2, keep-with-next
    357          bool emberAfScenesClusterRecallSceneCallback(uint16_t groupId,
    358                                                       uint8_t sceneId,
    359                                                       uint16_t transitionTime)
    360          {
   \                     emberAfScenesClusterRecallSceneCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    361            // NOTE: TransitionTime field in the RecallScene command is currently
    362            // ignored. Per Zigbee Alliance ZCL 7 (07-5123-07):
    363            //
    364            // "The transition time determines how long the tranition takes from the
    365            // old cluster state to the new cluster state. It is recommended that, where
    366            // possible (e.g., it is not possible for attributes with Boolean type),
    367            // a gradual transition SHOULD take place from the old to the new state
    368            // over this time. However, the exact transition is manufacturer dependent."
    369            //
    370            // The manufacturer-dependent implementation here is to immediately set
    371            // all attributes to their scene-specified values, without regard to the
    372            // value of TransitionTime.
    373          
    374            EmberAfStatus status;
    375            EmberStatus sendStatus;
    376            emberAfScenesClusterPrintln("RX: RecallScene 0x%2x, 0x%x", groupId, sceneId);
    377            status = emberAfScenesClusterRecallSavedSceneCallback(emberAfCurrentEndpoint(),
    378                                                                  groupId,
    379                                                                  sceneId);
   \        0x2   0x....'....        LDR.W    R4,??DataTable19_1
   \        0x6   0x6823             LDR      R3,[R4, #+0]
   \        0x8   0x460A             MOV      R2,R1
   \        0xA   0x4601             MOV      R1,R0
   \        0xC   0x681D             LDR      R5,[R3, #+0]
   \        0xE   0x7968             LDRB     R0,[R5, #+5]
   \       0x10   0x....'....        BL       emberAfScenesClusterRecallSavedSceneCallback
   \       0x14   0x0005             MOVS     R5,R0
    380          #ifdef EMBER_AF_PLUGIN_ZLL_SCENES_SERVER
    381            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x16   0xD104             BNE.N    ??emberAfScenesClusterRecallSceneCallback_0
    382              emberAfPluginZllScenesServerRecallSceneZllExtensions(emberAfCurrentEndpoint());
   \       0x18   0x6820             LDR      R0,[R4, #+0]
   \       0x1A   0x6801             LDR      R1,[R0, #+0]
   \       0x1C   0x7948             LDRB     R0,[R1, #+5]
   \       0x1E   0x....'....        BL       emberAfPluginZllScenesServerRecallSceneZllExtensions
    383            }
    384          #endif
    385            sendStatus = emberAfSendImmediateDefaultResponse(status);
   \                     ??emberAfScenesClusterRecallSceneCallback_0: (+1)
   \       0x22   0x4628             MOV      R0,R5
   \       0x24   0x....'....        BL       emberAfSendImmediateDefaultResponse
    386            if (EMBER_SUCCESS != sendStatus) {
    387              emberAfScenesClusterPrintln("Scenes: failed to send %s: 0x%x",
    388                                          "default_response",
    389                                          sendStatus);
    390            }
    391            return true;
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    392          }
    393          

   \                                 In section .text, align 2, keep-with-next
    394          bool emberAfScenesClusterGetSceneMembershipCallback(uint16_t groupId)
    395          {
   \                     emberAfScenesClusterGetSceneMembershipCallback: (+1)
   \        0x0   0xE92D 0x41F8      PUSH     {R3-R8,LR}
   \        0x4   0x4606             MOV      R6,R0
    396            EmberAfStatus status = EMBER_ZCL_STATUS_SUCCESS;
   \        0x6   0x2700             MOVS     R7,#+0
    397            EmberStatus sendStatus;
    398            uint8_t sceneCount = 0;
   \        0x8   0x2400             MOVS     R4,#+0
   \        0xA   0xB08B             SUB      SP,SP,#+44
    399          
    400            emberAfScenesClusterPrintln("RX: GetSceneMembership 0x%2x", groupId);
    401          
    402            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    403                && !emberAfGroupsClusterEndpointInGroupCallback(emberAfCurrentEndpoint(),
    404                                                                groupId)) {
   \        0xC   0x....'....        LDR.W    R8,??DataTable19_1
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0xD008             BEQ.N    ??emberAfScenesClusterGetSceneMembershipCallbac_0
   \       0x14   0xF8D8 0x2000      LDR      R2,[R8, #+0]
   \       0x18   0x4631             MOV      R1,R6
   \       0x1A   0x6813             LDR      R3,[R2, #+0]
   \       0x1C   0x7958             LDRB     R0,[R3, #+5]
   \       0x1E   0x....'....        BL       emberAfGroupsClusterEndpointInGroupCallback
   \       0x22   0xB900             CBNZ.N   R0,??emberAfScenesClusterGetSceneMembershipCallbac_0
    405              status = EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x24   0x2785             MOVS     R7,#+133
    406            }
    407          
    408            // The status, capacity, and group id are always included in the response, but
    409            // the scene count and scene list are only included if the group id matched.
    410            emberAfFillExternalBuffer((ZCL_CLUSTER_SPECIFIC_COMMAND
    411                                       | ZCL_FRAME_CONTROL_SERVER_TO_CLIENT
    412                                       | EMBER_AF_DEFAULT_RESPONSE_POLICY_RESPONSES),
    413                                      ZCL_SCENES_CLUSTER_ID,
    414                                      ZCL_GET_SCENE_MEMBERSHIP_RESPONSE_COMMAND_ID,
    415                                      "uuv",
    416                                      status,
    417                                      (EMBER_AF_PLUGIN_SCENES_TABLE_SIZE
    418                                       - emberAfPluginScenesServerNumSceneEntriesInUse()), // capacity
    419                                      groupId);
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_0: (+1)
   \       0x26   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x2A   0x9602             STR      R6,[SP, #+8]
   \       0x2C   0x7828             LDRB     R0,[R5, #+0]
   \       0x2E   0x9700             STR      R7,[SP, #+0]
   \       0x30   0x....'....        LDR.W    R3,??DataTable19_4
   \       0x34   0xF1C0 0x0003      RSB      R0,R0,#+3
   \       0x38   0x9001             STR      R0,[SP, #+4]
   \       0x3A   0x2206             MOVS     R2,#+6
   \       0x3C   0x....'....        BL       ??Subroutine10_0
    420            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_30: (+1)
   \       0x40   0xBB57             CBNZ.N   R7,??emberAfScenesClusterGetSceneMembershipCallbac_1
    421              uint8_t i, sceneList[EMBER_AF_PLUGIN_SCENES_TABLE_SIZE];
    422              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \       0x42   0x2500             MOVS     R5,#+0
    423                EmberAfSceneTableEntry entry;
    424                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_2: (+1)
   \       0x44   0x2326             MOVS     R3,#+38
   \       0x46   0xB2EA             UXTB     R2,R5
   \       0x48   0x212C             MOVS     R1,#+44
   \       0x4A   0xA801             ADD      R0,SP,#+4
   \       0x4C   0x....'....        BL       halInternalGetTokenData
    425                if (entry.endpoint == emberAfCurrentEndpoint()
    426                    && entry.groupId == groupId) {
   \       0x50   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x54   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \       0x58   0x680A             LDR      R2,[R1, #+0]
   \       0x5A   0x7953             LDRB     R3,[R2, #+5]
   \       0x5C   0x4298             CMP      R0,R3
   \       0x5E   0xBF04             ITT      EQ 
   \       0x60   0xF8BD 0x0006      LDRHEQ   R0,[SP, #+6]
   \       0x64   0x42B0             CMPEQ    R0,R6
   \       0x66   0xD105             BNE.N    ??emberAfScenesClusterGetSceneMembershipCallbac_3
    427                  sceneList[sceneCount] = entry.sceneId;
   \       0x68   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \       0x6C   0xB2E1             UXTB     R1,R4
    428                  sceneCount++;
   \       0x6E   0x1C64             ADDS     R4,R4,#+1
   \       0x70   0xF80D 0x0001      STRB     R0,[SP, R1]
    429                }
    430              }
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_3: (+1)
   \       0x74   0x1C6D             ADDS     R5,R5,#+1
   \       0x76   0xB2EA             UXTB     R2,R5
   \       0x78   0x2A02             CMP      R2,#+2
   \       0x7A   0xDDE3             BLE.N    ??emberAfScenesClusterGetSceneMembershipCallbac_2
    431              emberAfPutInt8uInResp(sceneCount);
   \       0x7C   0xB2E0             UXTB     R0,R4
   \       0x7E   0x....'....        BL       emberAfPutInt8uInResp
    432              for (i = 0; i < sceneCount; i++) {
   \       0x82   0x2600             MOVS     R6,#+0
   \       0x84   0xE004             B.N      ??emberAfScenesClusterGetSceneMembershipCallbac_4
    433                emberAfPutInt8uInResp(sceneList[i]);
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_5: (+1)
   \       0x86   0xF81D 0x0000      LDRB     R0,[SP, R0]
   \       0x8A   0x1C76             ADDS     R6,R6,#+1
   \       0x8C   0x....'....        BL       emberAfPutInt8uInResp
    434              }
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_4: (+1)
   \       0x90   0xB2F0             UXTB     R0,R6
   \       0x92   0xB2E1             UXTB     R1,R4
   \       0x94   0x4288             CMP      R0,R1
   \       0x96   0xD3F6             BCC.N    ??emberAfScenesClusterGetSceneMembershipCallbac_5
    435            }
    436          
    437            // Get Scene Membership commands are only responded to when they are
    438            // addressed to a single device or when an entry in the table matches.
    439            if (emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST
    440                || emberAfCurrentCommand()->type == EMBER_INCOMING_UNICAST_REPLY
    441                || sceneCount != 0) {
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_1: (+1)
   \       0x98   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x9C   0x7900             LDRB     R0,[R0, #+4]
   \       0x9E   0x2800             CMP      R0,#+0
   \       0xA0   0xBF18             IT       NE 
   \       0xA2   0x2801             CMPNE    R0,#+1
   \       0xA4   0xD001             BEQ.N    ??emberAfScenesClusterGetSceneMembershipCallbac_6
   \       0xA6   0xB2E4             UXTB     R4,R4
   \       0xA8   0xB10C             CBZ.N    R4,??emberAfScenesClusterGetSceneMembershipCallbac_7
    442              sendStatus = emberAfSendResponse();
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_6: (+1)
   \       0xAA   0x....'....        BL       emberAfSendResponse
    443              if (EMBER_SUCCESS != sendStatus) {
    444                emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
    445                                            "get_scene_membership",
    446                                            sendStatus);
    447              }
    448            }
    449            return true;
   \                     ??emberAfScenesClusterGetSceneMembershipCallbac_7: (+1)
   \       0xAE   0x2001             MOVS     R0,#+1
   \       0xB0   0x....             B.N      ?Subroutine3
    450          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0xB00C             ADD      SP,SP,#+48
   \        0x2   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    451          

   \                                 In section .text, align 2, keep-with-next
    452          EmberAfStatus emberAfScenesClusterStoreCurrentSceneCallback(uint8_t endpoint,
    453                                                                      uint16_t groupId,
    454                                                                      uint8_t sceneId)
    455          {
   \                     emberAfScenesClusterStoreCurrentSceneCallback: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4680             MOV      R8,R0
   \        0x6   0x460E             MOV      R6,R1
    456            EmberAfSceneTableEntry entry;
    457            uint8_t i, index = EMBER_AF_SCENE_TABLE_NULL_INDEX;
   \        0x8   0x24FF             MOVS     R4,#+255
   \        0xA   0xB08C             SUB      SP,SP,#+48
   \        0xC   0x4615             MOV      R5,R2
    458          
    459            // If a group id is specified but this endpoint isn't in it, take no action.
    460            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    461                && !emberAfGroupsClusterEndpointInGroupCallback(endpoint, groupId)) {
   \        0xE   0x0030             MOVS     R0,R6
   \       0x10   0xD005             BEQ.N    ??emberAfScenesClusterStoreCurrentSceneCallback_0
   \       0x12   0x4640             MOV      R0,R8
   \       0x14   0x....'....        BL       emberAfGroupsClusterEndpointInGroupCallback
   \       0x18   0xB908             CBNZ.N   R0,??emberAfScenesClusterStoreCurrentSceneCallback_0
    462              return EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x1A   0x2085             MOVS     R0,#+133
   \       0x1C   0xE0CA             B.N      ??emberAfScenesClusterStoreCurrentSceneCallback_1
    463            }
    464          
    465            for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_0: (+1)
   \       0x1E   0x2700             MOVS     R7,#+0
    466              emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_2: (+1)
   \       0x20   0x....'....        BL       ?Subroutine13
    467              if (entry.endpoint == endpoint
    468                  && entry.groupId == groupId
    469                  && entry.sceneId == sceneId) {
   \                     ??CrossCallReturnLabel_45: (+1)
   \       0x24   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \       0x28   0x4540             CMP      R0,R8
   \       0x2A   0xBF01             ITTTT    EQ 
   \       0x2C   0xF8BD 0x000A      LDRHEQ   R0,[SP, #+10]
   \       0x30   0x42B0             CMPEQ    R0,R6
   \       0x32   0xF89D 0x000C      LDRBEQ   R0,[SP, #+12]
   \       0x36   0x42A8             CMPEQ    R0,R5
   \       0x38   0xD00F             BEQ.N    ??emberAfScenesClusterStoreCurrentSceneCallback_3
    470                index = i;
    471                break;
    472              } else if (index == EMBER_AF_SCENE_TABLE_NULL_INDEX
    473                         && entry.endpoint == EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID) {
   \       0x3A   0xB2E0             UXTB     R0,R4
   \       0x3C   0x28FF             CMP      R0,#+255
   \       0x3E   0xBF02             ITTT     EQ 
   \       0x40   0xF89D 0x0008      LDRBEQ   R0,[SP, #+8]
   \       0x44   0x2800             CMPEQ    R0,#+0
   \       0x46   0x463C             MOVEQ    R4,R7
    474                index = i;
   \       0x48   0x1C7F             ADDS     R7,R7,#+1
   \       0x4A   0xB2F9             UXTB     R1,R7
   \       0x4C   0x2902             CMP      R1,#+2
   \       0x4E   0xDDE7             BLE.N    ??emberAfScenesClusterStoreCurrentSceneCallback_2
    475              }
    476            }
    477          
    478            // If the target index is still zero, the table is full.
    479            if (index == EMBER_AF_SCENE_TABLE_NULL_INDEX) {
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_4: (+1)
   \       0x50   0xB2E0             UXTB     R0,R4
   \       0x52   0x28FF             CMP      R0,#+255
   \       0x54   0xD103             BNE.N    ??emberAfScenesClusterStoreCurrentSceneCallback_5
    480              return EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
   \       0x56   0x2089             MOVS     R0,#+137
   \       0x58   0xE0AC             B.N      ??emberAfScenesClusterStoreCurrentSceneCallback_1
    481            }
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_3: (+1)
   \       0x5A   0x463C             MOV      R4,R7
   \       0x5C   0xE7F8             B.N      ??emberAfScenesClusterStoreCurrentSceneCallback_4
    482          
    483            emberAfPluginScenesServerRetrieveSceneEntry(entry, index);
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_5: (+1)
   \       0x5E   0x2326             MOVS     R3,#+38
   \       0x60   0xB2E2             UXTB     R2,R4
   \       0x62   0x212C             MOVS     R1,#+44
   \       0x64   0xA802             ADD      R0,SP,#+8
   \       0x66   0x....'....        BL       halInternalGetTokenData
    484          
    485            // When creating a new entry or refreshing an existing one, the extension
    486            // fields are updated with the current state of other clusters on the device.
    487          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
    488            entry.hasOnOffValue = readServerAttribute(endpoint,
    489                                                      ZCL_ON_OFF_CLUSTER_ID,
    490                                                      ZCL_ON_OFF_ATTRIBUTE_ID,
    491                                                      "on/off",
    492                                                      (uint8_t *)&entry.onOffValue,
    493                                                      sizeof(entry.onOffValue));
   \       0x6A   0x2001             MOVS     R0,#+1
   \       0x6C   0xF10D 0x0112      ADD      R1,SP,#+18
   \       0x70   0x9001             STR      R0,[SP, #+4]
   \       0x72   0x9100             STR      R1,[SP, #+0]
   \       0x74   0x....'....        LDR.W    R3,??DataTable19_5
   \       0x78   0x2200             MOVS     R2,#+0
   \       0x7A   0x2106             MOVS     R1,#+6
   \       0x7C   0x....'....        BL       ??Subroutine21_0
   \                     ??CrossCallReturnLabel_69: (+1)
   \       0x80   0xF88D 0x0011      STRB     R0,[SP, #+17]
    494          #endif
    495          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
    496            entry.hasCurrentLevelValue = readServerAttribute(endpoint,
    497                                                             ZCL_LEVEL_CONTROL_CLUSTER_ID,
    498                                                             ZCL_CURRENT_LEVEL_ATTRIBUTE_ID,
    499                                                             "current level",
    500                                                             (uint8_t *)&entry.currentLevelValue,
    501                                                             sizeof(entry.currentLevelValue));
   \       0x84   0x2001             MOVS     R0,#+1
   \       0x86   0xA905             ADD      R1,SP,#+20
   \       0x88   0x9001             STR      R0,[SP, #+4]
   \       0x8A   0x9100             STR      R1,[SP, #+0]
   \       0x8C   0x....'....        LDR.W    R3,??DataTable19_6
   \       0x90   0x2200             MOVS     R2,#+0
   \       0x92   0x2108             MOVS     R1,#+8
   \       0x94   0x....'....        BL       ??Subroutine21_0
   \                     ??CrossCallReturnLabel_68: (+1)
   \       0x98   0xF88D 0x0013      STRB     R0,[SP, #+19]
    502          #endif
    503          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
    504            entry.hasOccupiedCoolingSetpointValue = readServerAttribute(endpoint,
    505                                                                        ZCL_THERMOSTAT_CLUSTER_ID,
    506                                                                        ZCL_OCCUPIED_COOLING_SETPOINT_ATTRIBUTE_ID,
    507                                                                        "occupied cooling setpoint",
    508                                                                        (uint8_t *)&entry.occupiedCoolingSetpointValue,
    509                                                                        sizeof(entry.occupiedCoolingSetpointValue));
    510            entry.hasOccupiedHeatingSetpointValue = readServerAttribute(endpoint,
    511                                                                        ZCL_THERMOSTAT_CLUSTER_ID,
    512                                                                        ZCL_OCCUPIED_HEATING_SETPOINT_ATTRIBUTE_ID,
    513                                                                        "occupied heating setpoint",
    514                                                                        (uint8_t *)&entry.occupiedHeatingSetpointValue,
    515                                                                        sizeof(entry.occupiedHeatingSetpointValue));
    516            entry.hasSystemModeValue = readServerAttribute(endpoint,
    517                                                           ZCL_THERMOSTAT_CLUSTER_ID,
    518                                                           ZCL_SYSTEM_MODE_ATTRIBUTE_ID,
    519                                                           "system mode",
    520                                                           (uint8_t *)&entry.systemModeValue,
    521                                                           sizeof(entry.systemModeValue));
    522          #endif
    523          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    524            entry.hasCurrentXValue = readServerAttribute(endpoint,
    525                                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    526                                                         ZCL_COLOR_CONTROL_CURRENT_X_ATTRIBUTE_ID,
    527                                                         "current x",
    528                                                         (uint8_t *)&entry.currentXValue,
    529                                                         sizeof(entry.currentXValue));
   \       0x9C   0x2002             MOVS     R0,#+2
   \       0x9E   0xF10D 0x0116      ADD      R1,SP,#+22
   \       0xA2   0x9001             STR      R0,[SP, #+4]
   \       0xA4   0x9100             STR      R1,[SP, #+0]
   \       0xA6   0x....'....        LDR.W    R3,??DataTable19_7
   \       0xAA   0x2203             MOVS     R2,#+3
   \       0xAC   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_77: (+1)
   \       0xB0   0xF88D 0x0015      STRB     R0,[SP, #+21]
    530            entry.hasCurrentYValue = readServerAttribute(endpoint,
    531                                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    532                                                         ZCL_COLOR_CONTROL_CURRENT_Y_ATTRIBUTE_ID,
    533                                                         "current y",
    534                                                         (uint8_t *)&entry.currentYValue,
    535                                                         sizeof(entry.currentYValue));
   \       0xB4   0x2002             MOVS     R0,#+2
   \       0xB6   0xF10D 0x011A      ADD      R1,SP,#+26
   \       0xBA   0x9001             STR      R0,[SP, #+4]
   \       0xBC   0x9100             STR      R1,[SP, #+0]
   \       0xBE   0x....'....        LDR.W    R3,??DataTable19_8
   \       0xC2   0x2204             MOVS     R2,#+4
   \       0xC4   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_76: (+1)
   \       0xC8   0xF88D 0x0018      STRB     R0,[SP, #+24]
    536            entry.hasEnhancedCurrentHueValue = readServerAttribute(endpoint,
    537                                                                   ZCL_COLOR_CONTROL_CLUSTER_ID,
    538                                                                   ZCL_COLOR_CONTROL_ENHANCED_CURRENT_HUE_ATTRIBUTE_ID,
    539                                                                   "enhanced current hue",
    540                                                                   (uint8_t *)&entry.enhancedCurrentHueValue,
    541                                                                   sizeof(entry.enhancedCurrentHueValue));
   \       0xCC   0x2002             MOVS     R0,#+2
   \       0xCE   0xF10D 0x011E      ADD      R1,SP,#+30
   \       0xD2   0x9001             STR      R0,[SP, #+4]
   \       0xD4   0x9100             STR      R1,[SP, #+0]
   \       0xD6   0x....'....        LDR.W    R3,??DataTable19_9
   \       0xDA   0xF44F 0x4280      MOV      R2,#+16384
   \       0xDE   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_75: (+1)
   \       0xE2   0xF88D 0x001C      STRB     R0,[SP, #+28]
    542            entry.hasCurrentSaturationValue = readServerAttribute(endpoint,
    543                                                                  ZCL_COLOR_CONTROL_CLUSTER_ID,
    544                                                                  ZCL_COLOR_CONTROL_CURRENT_SATURATION_ATTRIBUTE_ID,
    545                                                                  "current saturation",
    546                                                                  (uint8_t *)&entry.currentSaturationValue,
    547                                                                  sizeof(entry.currentSaturationValue));
   \       0xE6   0x2001             MOVS     R0,#+1
   \       0xE8   0xF10D 0x0121      ADD      R1,SP,#+33
   \       0xEC   0x9001             STR      R0,[SP, #+4]
   \       0xEE   0x9100             STR      R1,[SP, #+0]
   \       0xF0   0x....'....        LDR.W    R3,??DataTable19_10
   \       0xF4   0x2201             MOVS     R2,#+1
   \       0xF6   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_74: (+1)
   \       0xFA   0xF88D 0x0020      STRB     R0,[SP, #+32]
    548            entry.hasColorLoopActiveValue = readServerAttribute(endpoint,
    549                                                                ZCL_COLOR_CONTROL_CLUSTER_ID,
    550                                                                ZCL_COLOR_CONTROL_COLOR_LOOP_ACTIVE_ATTRIBUTE_ID,
    551                                                                "color loop active",
    552                                                                (uint8_t *)&entry.colorLoopActiveValue,
    553                                                                sizeof(entry.colorLoopActiveValue));
   \       0xFE   0x2001             MOVS     R0,#+1
   \      0x100   0xF10D 0x0123      ADD      R1,SP,#+35
   \      0x104   0x9001             STR      R0,[SP, #+4]
   \      0x106   0x9100             STR      R1,[SP, #+0]
   \      0x108   0x....'....        LDR.W    R3,??DataTable19_11
   \      0x10C   0xF244 0x0202      MOVW     R2,#+16386
   \      0x110   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_73: (+1)
   \      0x114   0xF88D 0x0022      STRB     R0,[SP, #+34]
    554            entry.hasColorLoopDirectionValue = readServerAttribute(endpoint,
    555                                                                   ZCL_COLOR_CONTROL_CLUSTER_ID,
    556                                                                   ZCL_COLOR_CONTROL_COLOR_LOOP_DIRECTION_ATTRIBUTE_ID,
    557                                                                   "color loop direction",
    558                                                                   (uint8_t *)&entry.colorLoopDirectionValue,
    559                                                                   sizeof(entry.colorLoopDirectionValue));
   \      0x118   0x2001             MOVS     R0,#+1
   \      0x11A   0xF10D 0x0125      ADD      R1,SP,#+37
   \      0x11E   0x9001             STR      R0,[SP, #+4]
   \      0x120   0x9100             STR      R1,[SP, #+0]
   \      0x122   0x....'....        LDR.W    R3,??DataTable19_12
   \      0x126   0xF244 0x0203      MOVW     R2,#+16387
   \      0x12A   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_72: (+1)
   \      0x12E   0xF88D 0x0024      STRB     R0,[SP, #+36]
    560            entry.hasColorLoopTimeValue = readServerAttribute(endpoint,
    561                                                              ZCL_COLOR_CONTROL_CLUSTER_ID,
    562                                                              ZCL_COLOR_CONTROL_COLOR_LOOP_TIME_ATTRIBUTE_ID,
    563                                                              "color loop time",
    564                                                              (uint8_t *)&entry.colorLoopTimeValue,
    565                                                              sizeof(entry.colorLoopTimeValue));
   \      0x132   0x2002             MOVS     R0,#+2
   \      0x134   0xA90A             ADD      R1,SP,#+40
   \      0x136   0x9001             STR      R0,[SP, #+4]
   \      0x138   0x9100             STR      R1,[SP, #+0]
   \      0x13A   0x....'....        LDR.W    R3,??DataTable19_13
   \      0x13E   0xF244 0x0204      MOVW     R2,#+16388
   \      0x142   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_71: (+1)
   \      0x146   0xF88D 0x0026      STRB     R0,[SP, #+38]
    566            entry.hasColorTemperatureMiredsValue = readServerAttribute(endpoint,
    567                                                                       ZCL_COLOR_CONTROL_CLUSTER_ID,
    568                                                                       ZCL_COLOR_CONTROL_COLOR_TEMPERATURE_ATTRIBUTE_ID,
    569                                                                       "color temp mireds",
    570                                                                       (uint8_t *)&entry.colorTemperatureMiredsValue,
    571                                                                       sizeof(entry.colorTemperatureMiredsValue));
   \      0x14A   0x2002             MOVS     R0,#+2
   \      0x14C   0xA90B             ADD      R1,SP,#+44
   \      0x14E   0x9001             STR      R0,[SP, #+4]
   \      0x150   0x9100             STR      R1,[SP, #+0]
   \      0x152   0x....'....        LDR.W    R3,??DataTable19_14
   \      0x156   0x2207             MOVS     R2,#+7
   \      0x158   0x....'....        BL       ?Subroutine21
   \                     ??CrossCallReturnLabel_70: (+1)
   \      0x15C   0xF88D 0x002A      STRB     R0,[SP, #+42]
    572          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    573          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
    574            entry.hasLockStateValue = readServerAttribute(endpoint,
    575                                                          ZCL_DOOR_LOCK_CLUSTER_ID,
    576                                                          ZCL_LOCK_STATE_ATTRIBUTE_ID,
    577                                                          "lock state",
    578                                                          (uint8_t *)&entry.lockStateValue,
    579                                                          sizeof(entry.lockStateValue));
    580          #endif
    581          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
    582            entry.hasCurrentPositionLiftPercentageValue = readServerAttribute(endpoint,
    583                                                                              ZCL_WINDOW_COVERING_CLUSTER_ID,
    584                                                                              ZCL_CURRENT_LIFT_PERCENTAGE_ATTRIBUTE_ID,
    585                                                                              "current position lift percentage",
    586                                                                              (uint8_t *)&entry.currentPositionLiftPercentageValue,
    587                                                                              sizeof(entry.currentPositionLiftPercentageValue));
    588            entry.hasCurrentPositionTiltPercentageValue = readServerAttribute(endpoint,
    589                                                                              ZCL_WINDOW_COVERING_CLUSTER_ID,
    590                                                                              ZCL_CURRENT_TILT_PERCENTAGE_ATTRIBUTE_ID,
    591                                                                              "current position tilt percentage",
    592                                                                              (uint8_t *)&entry.currentPositionTiltPercentageValue,
    593                                                                              sizeof(entry.currentPositionTiltPercentageValue));
    594          #endif
    595          
    596            // When creating a new entry, the name is set to the null string (i.e., the
    597            // length is set to zero) and the transition time is set to zero.  The scene
    598            // count must be increased and written to the attribute table when adding a
    599            // new scene.  Otherwise, these fields and the count are left alone.
    600            if (i != index) {
   \      0x160   0xB2FF             UXTB     R7,R7
   \      0x162   0xB2E0             UXTB     R0,R4
   \      0x164   0x4287             CMP      R7,R0
   \      0x166   0xD01B             BEQ.N    ??emberAfScenesClusterStoreCurrentSceneCallback_6
    601              entry.endpoint = endpoint;
    602              entry.groupId = groupId;
    603              entry.sceneId = sceneId;
    604          #ifdef EMBER_AF_PLUGIN_SCENES_NAME_SUPPORT
    605              entry.name[0] = 0;
    606          #endif
    607              entry.transitionTime = 0;
   \      0x168   0x2100             MOVS     R1,#+0
   \      0x16A   0xF8AD 0x100E      STRH     R1,[SP, #+14]
    608              entry.transitionTime100ms = 0;
   \      0x16E   0xF88D 0x1010      STRB     R1,[SP, #+16]
    609              emberAfPluginScenesServerIncrNumSceneEntriesInUse();
   \      0x172   0x....'....        LDR.W    R7,??DataTable17_3
   \      0x176   0xF88D 0x8008      STRB     R8,[SP, #+8]
   \      0x17A   0xF8AD 0x600A      STRH     R6,[SP, #+10]
   \      0x17E   0xF88D 0x500C      STRB     R5,[SP, #+12]
   \      0x182   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_16: (+1)
   \      0x186   0x7838             LDRB     R0,[R7, #+0]
   \      0x188   0x2301             MOVS     R3,#+1
   \      0x18A   0x463A             MOV      R2,R7
   \      0x18C   0x1C40             ADDS     R0,R0,#+1
   \      0x18E   0x7038             STRB     R0,[R7, #+0]
   \      0x190   0x....'....        BL       ?Subroutine17
    610              emberAfScenesSetSceneCountAttribute(endpoint,
    611                                                  emberAfPluginScenesServerNumSceneEntriesInUse());
   \                     ??CrossCallReturnLabel_56: (+1)
   \      0x194   0x....'....        BL       ?Subroutine6
    612            }
   \                     ??CrossCallReturnLabel_15: (+1)
   \      0x198   0x7839             LDRB     R1,[R7, #+0]
   \      0x19A   0x4640             MOV      R0,R8
   \      0x19C   0x....'....        BL       emberAfScenesSetSceneCountAttribute
    613          
    614            // Save the scene entry and mark is as valid by storing its scene and group
    615            // ids in the attribute table and setting valid to true.
    616            emberAfPluginScenesServerSaveSceneEntry(entry, index);
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_6: (+1)
   \      0x1A0   0x2326             MOVS     R3,#+38
   \      0x1A2   0xAA02             ADD      R2,SP,#+8
   \      0x1A4   0x....'....        BL       ?Subroutine18
    617            emberAfScenesMakeValid(endpoint, sceneId, groupId);
   \                     ??CrossCallReturnLabel_61: (+1)
   \      0x1A8   0x4632             MOV      R2,R6
   \      0x1AA   0x4629             MOV      R1,R5
   \      0x1AC   0x4640             MOV      R0,R8
   \      0x1AE   0x....'....        BL       emberAfScenesMakeValid
    618            return EMBER_ZCL_STATUS_SUCCESS;
   \      0x1B2   0x2000             MOVS     R0,#+0
   \                     ??emberAfScenesClusterStoreCurrentSceneCallback_1: (+1)
   \      0x1B4                      REQUIRE ?Subroutine3
   \      0x1B4                      ;; // Fall through to label ?Subroutine3
    619          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine21: (+1)
   \        0x0   0xF44F 0x7140      MOV      R1,#+768
   \                     ??Subroutine21_0: (+1)
   \        0x4   0x4640             MOV      R0,R8
   \        0x6   0x....             B.N      readServerAttribute

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine13: (+1)
   \        0x0   0x2326             MOVS     R3,#+38
   \        0x2   0xB2FA             UXTB     R2,R7
   \        0x4   0x212C             MOVS     R1,#+44
   \        0x6   0xA802             ADD      R0,SP,#+8
   \        0x8   0x....'....        B.W      halInternalGetTokenData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine17: (+1)
   \        0x0   0x217F             MOVS     R1,#+127
   \        0x2   0x202B             MOVS     R0,#+43
   \        0x4   0x....'....        B.W      halInternalSetTokenData
    620          

   \                                 In section .text, align 2, keep-with-next
    621          EmberAfStatus emberAfScenesClusterRecallSavedSceneCallback(uint8_t endpoint,
    622                                                                     uint16_t groupId,
    623                                                                     uint8_t sceneId)
    624          {
   \                     emberAfScenesClusterRecallSavedSceneCallback: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0xB08C             SUB      SP,SP,#+48
   \        0x8   0x4616             MOV      R6,R2
    625            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    626                && !emberAfGroupsClusterEndpointInGroupCallback(endpoint, groupId)) {
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0xD005             BEQ.N    ??emberAfScenesClusterRecallSavedSceneCallback_0
   \        0xE   0x4620             MOV      R0,R4
   \       0x10   0x....'....        BL       emberAfGroupsClusterEndpointInGroupCallback
   \       0x14   0xB908             CBNZ.N   R0,??emberAfScenesClusterRecallSavedSceneCallback_0
    627              return EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x16   0x2085             MOVS     R0,#+133
   \       0x18   0xE012             B.N      ??emberAfScenesClusterRecallSavedSceneCallback_1
    628            } else {
    629              uint8_t i;
    630              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \                     ??emberAfScenesClusterRecallSavedSceneCallback_0: (+1)
   \       0x1A   0x2700             MOVS     R7,#+0
    631                EmberAfSceneTableEntry entry;
    632                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterRecallSavedSceneCallback_2: (+1)
   \       0x1C   0x....'....        BL       ?Subroutine13
    633                if (entry.endpoint == endpoint
    634                    && entry.groupId == groupId
    635                    && entry.sceneId == sceneId) {
   \                     ??CrossCallReturnLabel_44: (+1)
   \       0x20   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \       0x24   0x42A0             CMP      R0,R4
   \       0x26   0xBF01             ITTTT    EQ 
   \       0x28   0xF8BD 0x000A      LDRHEQ   R0,[SP, #+10]
   \       0x2C   0x42A8             CMPEQ    R0,R5
   \       0x2E   0xF89D 0x000C      LDRBEQ   R0,[SP, #+12]
   \       0x32   0x42B0             CMPEQ    R0,R6
   \       0x34   0xD006             BEQ.N    ??emberAfScenesClusterRecallSavedSceneCallback_3
   \       0x36   0x1C7F             ADDS     R7,R7,#+1
   \       0x38   0xB2FA             UXTB     R2,R7
   \       0x3A   0x2A02             CMP      R2,#+2
   \       0x3C   0xDDEE             BLE.N    ??emberAfScenesClusterRecallSavedSceneCallback_2
    636          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
    637                  if (entry.hasOnOffValue) {
    638                    writeServerAttribute(endpoint,
    639                                         ZCL_ON_OFF_CLUSTER_ID,
    640                                         ZCL_ON_OFF_ATTRIBUTE_ID,
    641                                         "on/off",
    642                                         (uint8_t *)&entry.onOffValue,
    643                                         ZCL_BOOLEAN_ATTRIBUTE_TYPE);
    644                  }
    645          #endif
    646          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
    647                  if (entry.hasCurrentLevelValue) {
    648                    writeServerAttribute(endpoint,
    649                                         ZCL_LEVEL_CONTROL_CLUSTER_ID,
    650                                         ZCL_CURRENT_LEVEL_ATTRIBUTE_ID,
    651                                         "current level",
    652                                         (uint8_t *)&entry.currentLevelValue,
    653                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    654                  }
    655          #endif
    656          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
    657                  if (entry.hasOccupiedCoolingSetpointValue) {
    658                    writeServerAttribute(endpoint,
    659                                         ZCL_THERMOSTAT_CLUSTER_ID,
    660                                         ZCL_OCCUPIED_COOLING_SETPOINT_ATTRIBUTE_ID,
    661                                         "occupied cooling setpoint",
    662                                         (uint8_t *)&entry.occupiedCoolingSetpointValue,
    663                                         ZCL_INT16S_ATTRIBUTE_TYPE);
    664                  }
    665                  if (entry.hasOccupiedHeatingSetpointValue) {
    666                    writeServerAttribute(endpoint,
    667                                         ZCL_THERMOSTAT_CLUSTER_ID,
    668                                         ZCL_OCCUPIED_HEATING_SETPOINT_ATTRIBUTE_ID,
    669                                         "occupied heating setpoint",
    670                                         (uint8_t *)&entry.occupiedHeatingSetpointValue,
    671                                         ZCL_INT16S_ATTRIBUTE_TYPE);
    672                  }
    673                  if (entry.hasSystemModeValue) {
    674                    writeServerAttribute(endpoint,
    675                                         ZCL_THERMOSTAT_CLUSTER_ID,
    676                                         ZCL_SYSTEM_MODE_ATTRIBUTE_ID,
    677                                         "system mode",
    678                                         (uint8_t *)&entry.systemModeValue,
    679                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    680                  }
    681          #endif
    682          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    683                  if (entry.hasCurrentXValue) {
    684                    writeServerAttribute(endpoint,
    685                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    686                                         ZCL_COLOR_CONTROL_CURRENT_X_ATTRIBUTE_ID,
    687                                         "current x",
    688                                         (uint8_t *)&entry.currentXValue,
    689                                         ZCL_INT16U_ATTRIBUTE_TYPE);
    690                  }
    691                  if (entry.hasCurrentYValue) {
    692                    writeServerAttribute(endpoint,
    693                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    694                                         ZCL_COLOR_CONTROL_CURRENT_Y_ATTRIBUTE_ID,
    695                                         "current y",
    696                                         (uint8_t *)&entry.currentYValue,
    697                                         ZCL_INT16U_ATTRIBUTE_TYPE);
    698                  }
    699          
    700                  if (entry.hasEnhancedCurrentHueValue) {
    701                    writeServerAttribute(endpoint,
    702                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    703                                         ZCL_COLOR_CONTROL_ENHANCED_CURRENT_HUE_ATTRIBUTE_ID,
    704                                         "enhanced current hue",
    705                                         (uint8_t *)&entry.enhancedCurrentHueValue,
    706                                         ZCL_INT16U_ATTRIBUTE_TYPE);
    707                  }
    708                  if (entry.hasCurrentSaturationValue) {
    709                    writeServerAttribute(endpoint,
    710                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    711                                         ZCL_COLOR_CONTROL_CURRENT_SATURATION_ATTRIBUTE_ID,
    712                                         "current saturation",
    713                                         (uint8_t *)&entry.currentSaturationValue,
    714                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    715                  }
    716                  if (entry.hasColorLoopActiveValue) {
    717                    writeServerAttribute(endpoint,
    718                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    719                                         ZCL_COLOR_CONTROL_COLOR_LOOP_ACTIVE_ATTRIBUTE_ID,
    720                                         "color loop active",
    721                                         (uint8_t *)&entry.colorLoopActiveValue,
    722                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    723                  }
    724                  if (entry.hasColorLoopDirectionValue) {
    725                    writeServerAttribute(endpoint,
    726                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    727                                         ZCL_COLOR_CONTROL_COLOR_LOOP_DIRECTION_ATTRIBUTE_ID,
    728                                         "color loop direction",
    729                                         (uint8_t *)&entry.colorLoopDirectionValue,
    730                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    731                  }
    732                  if (entry.hasColorLoopTimeValue) {
    733                    writeServerAttribute(endpoint,
    734                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    735                                         ZCL_COLOR_CONTROL_COLOR_LOOP_TIME_ATTRIBUTE_ID,
    736                                         "color loop time",
    737                                         (uint8_t *)&entry.colorLoopTimeValue,
    738                                         ZCL_INT16U_ATTRIBUTE_TYPE);
    739                  }
    740                  if (entry.hasColorTemperatureMiredsValue) {
    741                    writeServerAttribute(endpoint,
    742                                         ZCL_COLOR_CONTROL_CLUSTER_ID,
    743                                         ZCL_COLOR_CONTROL_COLOR_TEMPERATURE_ATTRIBUTE_ID,
    744                                         "color temp mireds",
    745                                         (uint8_t *)&entry.colorTemperatureMiredsValue,
    746                                         ZCL_INT16U_ATTRIBUTE_TYPE);
    747                  }
    748          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    749          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
    750                  if (entry.hasLockStateValue) {
    751                    writeServerAttribute(endpoint,
    752                                         ZCL_DOOR_LOCK_CLUSTER_ID,
    753                                         ZCL_LOCK_STATE_ATTRIBUTE_ID,
    754                                         "lock state",
    755                                         (uint8_t *)&entry.lockStateValue,
    756                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    757                  }
    758          #endif
    759          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
    760                  if (entry.hasCurrentPositionLiftPercentageValue) {
    761                    writeServerAttribute(endpoint,
    762                                         ZCL_WINDOW_COVERING_CLUSTER_ID,
    763                                         ZCL_CURRENT_LIFT_PERCENTAGE_ATTRIBUTE_ID,
    764                                         "current position lift percentage",
    765                                         (uint8_t *)&entry.currentPositionLiftPercentageValue,
    766                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    767                  }
    768                  if (entry.hasCurrentPositionTiltPercentageValue) {
    769                    writeServerAttribute(endpoint,
    770                                         ZCL_WINDOW_COVERING_CLUSTER_ID,
    771                                         ZCL_CURRENT_TILT_PERCENTAGE_ATTRIBUTE_ID,
    772                                         "current position tilt percentage",
    773                                         (uint8_t *)&entry.currentPositionTiltPercentageValue,
    774                                         ZCL_INT8U_ATTRIBUTE_TYPE);
    775                  }
    776          #endif
    777                  emberAfScenesMakeValid(endpoint, sceneId, groupId);
    778                  return EMBER_ZCL_STATUS_SUCCESS;
    779                }
    780              }
    781            }
    782          
    783            return EMBER_ZCL_STATUS_NOT_FOUND;
   \       0x3E   0x208B             MOVS     R0,#+139
   \                     ??emberAfScenesClusterRecallSavedSceneCallback_1: (+1)
   \       0x40   0xB00D             ADD      SP,SP,#+52
   \       0x42   0xBDF0             POP      {R4-R7,PC}       ;; return
   \                     ??emberAfScenesClusterRecallSavedSceneCallback_3: (+1)
   \       0x44   0xF89D 0x0011      LDRB     R0,[SP, #+17]
   \       0x48   0xB150             CBZ.N    R0,??CrossCallReturnLabel_1
   \       0x4A   0x2110             MOVS     R1,#+16
   \       0x4C   0xF10D 0x0012      ADD      R0,SP,#+18
   \       0x50   0x9101             STR      R1,[SP, #+4]
   \       0x52   0x9000             STR      R0,[SP, #+0]
   \       0x54   0x....'....        LDR.W    R3,??DataTable19_5
   \       0x58   0x2200             MOVS     R2,#+0
   \       0x5A   0x2106             MOVS     R1,#+6
   \       0x5C   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0x60   0xF89D 0x0013      LDRB     R0,[SP, #+19]
   \       0x64   0xB148             CBZ.N    R0,??CrossCallReturnLabel_0
   \       0x66   0x2120             MOVS     R1,#+32
   \       0x68   0xA805             ADD      R0,SP,#+20
   \       0x6A   0x9101             STR      R1,[SP, #+4]
   \       0x6C   0x9000             STR      R0,[SP, #+0]
   \       0x6E   0x....'....        LDR.W    R3,??DataTable19_6
   \       0x72   0x2200             MOVS     R2,#+0
   \       0x74   0x2108             MOVS     R1,#+8
   \       0x76   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x7A   0xF89D 0x0015      LDRB     R0,[SP, #+21]
   \       0x7E   0xB148             CBZ.N    R0,??CrossCallReturnLabel_12
   \       0x80   0x2121             MOVS     R1,#+33
   \       0x82   0xF10D 0x0016      ADD      R0,SP,#+22
   \       0x86   0x9101             STR      R1,[SP, #+4]
   \       0x88   0x9000             STR      R0,[SP, #+0]
   \       0x8A   0x....'....        LDR.W    R3,??DataTable19_7
   \       0x8E   0x2203             MOVS     R2,#+3
   \       0x90   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_12: (+1)
   \       0x94   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \       0x98   0xB148             CBZ.N    R0,??CrossCallReturnLabel_11
   \       0x9A   0x2121             MOVS     R1,#+33
   \       0x9C   0xF10D 0x001A      ADD      R0,SP,#+26
   \       0xA0   0x9101             STR      R1,[SP, #+4]
   \       0xA2   0x9000             STR      R0,[SP, #+0]
   \       0xA4   0x....'....        LDR.W    R3,??DataTable19_8
   \       0xA8   0x2204             MOVS     R2,#+4
   \       0xAA   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0xAE   0xF89D 0x001C      LDRB     R0,[SP, #+28]
   \       0xB2   0xB150             CBZ.N    R0,??CrossCallReturnLabel_10
   \       0xB4   0x2121             MOVS     R1,#+33
   \       0xB6   0xF10D 0x001E      ADD      R0,SP,#+30
   \       0xBA   0x9101             STR      R1,[SP, #+4]
   \       0xBC   0x9000             STR      R0,[SP, #+0]
   \       0xBE   0x....'....        LDR.W    R3,??DataTable19_9
   \       0xC2   0xF44F 0x4280      MOV      R2,#+16384
   \       0xC6   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_10: (+1)
   \       0xCA   0xF89D 0x0020      LDRB     R0,[SP, #+32]
   \       0xCE   0xB148             CBZ.N    R0,??CrossCallReturnLabel_9
   \       0xD0   0x2120             MOVS     R1,#+32
   \       0xD2   0xF10D 0x0021      ADD      R0,SP,#+33
   \       0xD6   0x9101             STR      R1,[SP, #+4]
   \       0xD8   0x9000             STR      R0,[SP, #+0]
   \       0xDA   0x....'....        LDR.W    R3,??DataTable19_10
   \       0xDE   0x2201             MOVS     R2,#+1
   \       0xE0   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_9: (+1)
   \       0xE4   0xF89D 0x0022      LDRB     R0,[SP, #+34]
   \       0xE8   0xB150             CBZ.N    R0,??CrossCallReturnLabel_8
   \       0xEA   0x2120             MOVS     R1,#+32
   \       0xEC   0xF10D 0x0023      ADD      R0,SP,#+35
   \       0xF0   0x9101             STR      R1,[SP, #+4]
   \       0xF2   0x9000             STR      R0,[SP, #+0]
   \       0xF4   0x....'....        LDR.W    R3,??DataTable19_11
   \       0xF8   0xF244 0x0202      MOVW     R2,#+16386
   \       0xFC   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_8: (+1)
   \      0x100   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \      0x104   0xB150             CBZ.N    R0,??CrossCallReturnLabel_7
   \      0x106   0x2120             MOVS     R1,#+32
   \      0x108   0xF10D 0x0025      ADD      R0,SP,#+37
   \      0x10C   0x9101             STR      R1,[SP, #+4]
   \      0x10E   0x9000             STR      R0,[SP, #+0]
   \      0x110   0x....'....        LDR.W    R3,??DataTable19_12
   \      0x114   0xF244 0x0203      MOVW     R2,#+16387
   \      0x118   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_7: (+1)
   \      0x11C   0xF89D 0x0026      LDRB     R0,[SP, #+38]
   \      0x120   0xB148             CBZ.N    R0,??CrossCallReturnLabel_6
   \      0x122   0x2121             MOVS     R1,#+33
   \      0x124   0xA80A             ADD      R0,SP,#+40
   \      0x126   0x9101             STR      R1,[SP, #+4]
   \      0x128   0x9000             STR      R0,[SP, #+0]
   \      0x12A   0x....'....        LDR.W    R3,??DataTable19_13
   \      0x12E   0xF244 0x0204      MOVW     R2,#+16388
   \      0x132   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_6: (+1)
   \      0x136   0xF89D 0x002A      LDRB     R0,[SP, #+42]
   \      0x13A   0xB140             CBZ.N    R0,??CrossCallReturnLabel_5
   \      0x13C   0x2121             MOVS     R1,#+33
   \      0x13E   0xA80B             ADD      R0,SP,#+44
   \      0x140   0x9101             STR      R1,[SP, #+4]
   \      0x142   0x9000             STR      R0,[SP, #+0]
   \      0x144   0x....'....        LDR.W    R3,??DataTable19_14
   \      0x148   0x2207             MOVS     R2,#+7
   \      0x14A   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_5: (+1)
   \      0x14E   0x462A             MOV      R2,R5
   \      0x150   0x4631             MOV      R1,R6
   \      0x152   0x4620             MOV      R0,R4
   \      0x154   0x....'....        BL       emberAfScenesMakeValid
   \      0x158   0x2000             MOVS     R0,#+0
   \      0x15A   0xE771             B.N      ??emberAfScenesClusterRecallSavedSceneCallback_1
    784          }
    785          

   \                                 In section .text, align 2, keep-with-next
    786          void emberAfScenesClusterClearSceneTableCallback(uint8_t endpoint)
    787          {
   \                     emberAfScenesClusterClearSceneTableCallback: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB08A             SUB      SP,SP,#+40
   \        0x4   0x4605             MOV      R5,R0
    788            uint8_t i, networkIndex = emberGetCurrentNetwork();
   \        0x6   0x....'....        BL       emberGetCurrentNetwork
   \        0xA   0x4604             MOV      R4,R0
    789            for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \        0xC   0x2600             MOVS     R6,#+0
    790              EmberAfSceneTableEntry entry;
    791              emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterClearSceneTableCallback_0: (+1)
   \        0xE   0x2326             MOVS     R3,#+38
   \       0x10   0xB2F2             UXTB     R2,R6
   \       0x12   0x....'....        BL       ?Subroutine12
    792              if (entry.endpoint != EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID
    793                  && (endpoint == entry.endpoint
    794                      || (endpoint == EMBER_BROADCAST_ENDPOINT
    795                          && (networkIndex
    796                              == emberAfNetworkIndexFromEndpoint(entry.endpoint))))) {
   \                     ??CrossCallReturnLabel_41: (+1)
   \       0x16   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x1A   0xB160             CBZ.N    R0,??CrossCallReturnLabel_59
   \       0x1C   0x4285             CMP      R5,R0
   \       0x1E   0xD005             BEQ.N    ??emberAfScenesClusterClearSceneTableCallback_1
   \       0x20   0x2DFF             CMP      R5,#+255
   \       0x22   0xD108             BNE.N    ??CrossCallReturnLabel_59
   \       0x24   0x....'....        BL       emberAfNetworkIndexFromEndpoint
   \       0x28   0x4284             CMP      R4,R0
   \       0x2A   0xD104             BNE.N    ??CrossCallReturnLabel_59
    797                entry.endpoint = EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID;
   \                     ??emberAfScenesClusterClearSceneTableCallback_1: (+1)
   \       0x2C   0x....'....        BL       ?Subroutine20
    798                emberAfPluginScenesServerSaveSceneEntry(entry, i);
    799              }
    800            }
   \                     ??CrossCallReturnLabel_67: (+1)
   \       0x30   0xB2F1             UXTB     R1,R6
   \       0x32   0x....'....        BL       ??Subroutine18_0
   \                     ??CrossCallReturnLabel_59: (+1)
   \       0x36   0x1C76             ADDS     R6,R6,#+1
   \       0x38   0xB2F0             UXTB     R0,R6
   \       0x3A   0x2803             CMP      R0,#+3
   \       0x3C   0xDBE7             BLT.N    ??emberAfScenesClusterClearSceneTableCallback_0
    801            emberAfPluginScenesServerSetNumSceneEntriesInUse(0);
   \       0x3E   0x....             LDR.N    R2,??DataTable17_3
   \       0x40   0x2000             MOVS     R0,#+0
   \       0x42   0x7010             STRB     R0,[R2, #+0]
   \       0x44   0x2301             MOVS     R3,#+1
   \       0x46   0x....'....        BL       ?Subroutine17
    802            if (endpoint == EMBER_BROADCAST_ENDPOINT) {
   \                     ??CrossCallReturnLabel_55: (+1)
   \       0x4A   0x4628             MOV      R0,R5
   \       0x4C   0x28FF             CMP      R0,#+255
   \       0x4E   0xD115             BNE.N    ??emberAfScenesClusterClearSceneTableCallback_2
    803              for (i = 0; i < emberAfEndpointCount(); i++) {
   \       0x50   0x2500             MOVS     R5,#+0
   \       0x52   0x....'....        LDR.W    R6,??DataTable19_15
   \                     ??emberAfScenesClusterClearSceneTableCallback_3: (+1)
   \       0x56   0x....'....        BL       emberAfEndpointCount
   \       0x5A   0xB2E9             UXTB     R1,R5
   \       0x5C   0x4281             CMP      R1,R0
   \       0x5E   0xD210             BCS.N    ??emberAfScenesClusterClearSceneTableCallback_4
    804                if (emberAfNetworkIndexFromEndpointIndex(i) == networkIndex) {
   \       0x60   0x0628             LSLS     R0,R5,#+24
   \       0x62   0xEB06 0x5010      ADD      R0,R6,R0, LSR #+20
   \       0x66   0x7B01             LDRB     R1,[R0, #+12]
   \       0x68   0x42A1             CMP      R1,R4
   \       0x6A   0xD105             BNE.N    ??emberAfScenesClusterClearSceneTableCallback_5
    805                  emberAfScenesSetSceneCountAttribute(emberAfEndpointFromIndex(i), 0);
   \       0x6C   0xB2E8             UXTB     R0,R5
   \       0x6E   0x....'....        BL       emberAfEndpointFromIndex
   \       0x72   0x2100             MOVS     R1,#+0
   \       0x74   0x....'....        BL       emberAfScenesSetSceneCountAttribute
    806                }
    807              }
   \                     ??emberAfScenesClusterClearSceneTableCallback_5: (+1)
   \       0x78   0x1C6D             ADDS     R5,R5,#+1
   \       0x7A   0xE7EC             B.N      ??emberAfScenesClusterClearSceneTableCallback_3
    808            } else {
    809              emberAfScenesSetSceneCountAttribute(endpoint, 0);
   \                     ??emberAfScenesClusterClearSceneTableCallback_2: (+1)
   \       0x7C   0x2100             MOVS     R1,#+0
   \       0x7E   0x....'....        BL       emberAfScenesSetSceneCountAttribute
    810            }
    811          }
   \                     ??emberAfScenesClusterClearSceneTableCallback_4: (+1)
   \       0x82   0xB00A             ADD      SP,SP,#+40
   \       0x84   0xBD70             POP      {R4-R6,PC}       ;; return
    812          

   \                                 In section .text, align 2, keep-with-next
    813          bool emberAfPluginScenesServerParseAddScene(const EmberAfClusterCommand *cmd,
    814                                                      uint16_t groupId,
    815                                                      uint8_t sceneId,
    816                                                      uint16_t transitionTime,
    817                                                      uint8_t *sceneName,
    818                                                      uint8_t *extensionFieldSets)
    819          {
   \                     emberAfPluginScenesServerParseAddScene: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB08E             SUB      SP,SP,#+56
   \        0x6   0x4680             MOV      R8,R0
    820            EmberAfSceneTableEntry entry;
    821            EmberAfStatus status;
    822            EmberStatus sendStatus;
    823            bool enhanced = (cmd->commandId == ZCL_ENHANCED_ADD_SCENE_COMMAND_ID);
   \        0x8   0xF898 0x0013      LDRB     R0,[R8, #+19]
   \        0xC   0x4617             MOV      R7,R2
   \        0xE   0x461D             MOV      R5,R3
   \       0x10   0x2840             CMP      R0,#+64
   \       0x12   0x9818             LDR      R0,[SP, #+96]
   \       0x14   0xF8AD 0x100E      STRH     R1,[SP, #+14]
   \       0x18   0xBF0C             ITE      EQ 
   \       0x1A   0x2401             MOVEQ    R4,#+1
   \       0x1C   0x2400             MOVNE    R4,#+0
    824            uint16_t extensionFieldSetsLen = (cmd->bufLen
    825                                              - (cmd->payloadStartIndex
    826                                                 + sizeof(groupId)
    827                                                 + sizeof(sceneId)
    828                                                 + sizeof(transitionTime)
    829                                                 + emberAfStringLength(sceneName) + 1));
   \       0x1E   0x....'....        BL       emberAfStringLength
   \       0x22   0xF8B8 0x200C      LDRH     R2,[R8, #+12]
   \       0x26   0xF898 0x1014      LDRB     R1,[R8, #+20]
    830            uint16_t extensionFieldSetsIndex = 0;
    831            uint8_t endpoint = cmd->apsFrame->destinationEndpoint;
    832            uint8_t i, index = EMBER_AF_SCENE_TABLE_NULL_INDEX;
   \       0x2A   0xF04F 0x0AFF      MOV      R10,#+255
   \       0x2E   0x1A52             SUBS     R2,R2,R1
   \       0x30   0x1A10             SUBS     R0,R2,R0
   \       0x32   0x1F86             SUBS     R6,R0,#+6
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \       0x3A   0xF8D8 0x1000      LDR      R1,[R8, #+0]
    833          
    834            emberAfScenesClusterPrint("RX: %pAddScene 0x%2x, 0x%x, 0x%2x, \"",
    835                                      (enhanced ? "Enhanced" : ""),
    836                                      groupId,
    837                                      sceneId,
    838                                      transitionTime);
    839            emberAfScenesClusterPrintString(sceneName);
    840            emberAfScenesClusterPrint("\", ");
    841            emberAfScenesClusterPrintBuffer(extensionFieldSets, extensionFieldSetsLen, false);
    842            emberAfScenesClusterPrintln("");
    843          
    844            // Add Scene commands can only reference groups to which we belong.
    845            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
    846                && !emberAfGroupsClusterEndpointInGroupCallback(endpoint, groupId)) {
   \       0x3E   0xF8BD 0x000E      LDRH     R0,[SP, #+14]
   \       0x42   0xF891 0x9005      LDRB     R9,[R1, #+5]
   \       0x46   0xF88D 0x700C      STRB     R7,[SP, #+12]
   \       0x4A   0xB130             CBZ.N    R0,??emberAfPluginScenesServerParseAddScene_0
   \       0x4C   0x4601             MOV      R1,R0
   \       0x4E   0x4648             MOV      R0,R9
   \       0x50   0x....'....        BL       emberAfGroupsClusterEndpointInGroupCallback
   \       0x54   0xB908             CBNZ.N   R0,??emberAfPluginScenesServerParseAddScene_0
    847              status = EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x56   0x2185             MOVS     R1,#+133
    848              goto kickout;
   \       0x58   0xE133             B.N      ??emberAfPluginScenesServerParseAddScene_1
    849            }
    850          
    851            for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \                     ??emberAfPluginScenesServerParseAddScene_0: (+1)
   \       0x5A   0xF04F 0x0B00      MOV      R11,#+0
   \       0x5E   0xF8BD 0x700E      LDRH     R7,[SP, #+14]
   \       0x62   0xF89D 0x800C      LDRB     R8,[SP, #+12]
    852              emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfPluginScenesServerParseAddScene_2: (+1)
   \       0x66   0x2326             MOVS     R3,#+38
   \       0x68   0xFA5F 0xF28B      UXTB     R2,R11
   \       0x6C   0x....'....        BL       ?Subroutine14
    853              if (entry.endpoint == endpoint
    854                  && entry.groupId == groupId
    855                  && entry.sceneId == sceneId) {
   \                     ??CrossCallReturnLabel_47: (+1)
   \       0x70   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \       0x74   0x4548             CMP      R0,R9
   \       0x76   0xBF01             ITTTT    EQ 
   \       0x78   0xF8BD 0x0012      LDRHEQ   R0,[SP, #+18]
   \       0x7C   0x42B8             CMPEQ    R0,R7
   \       0x7E   0xF89D 0x0014      LDRBEQ   R0,[SP, #+20]
   \       0x82   0x4540             CMPEQ    R0,R8
   \       0x84   0xD017             BEQ.N    ??emberAfPluginScenesServerParseAddScene_3
    856                index = i;
    857                break;
    858              } else if (index == EMBER_AF_SCENE_TABLE_NULL_INDEX
    859                         && entry.endpoint == EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID) {
   \       0x86   0xFA5F 0xF08A      UXTB     R0,R10
   \       0x8A   0x28FF             CMP      R0,#+255
   \       0x8C   0xBF02             ITTT     EQ 
   \       0x8E   0xF89D 0x0010      LDRBEQ   R0,[SP, #+16]
   \       0x92   0x2800             CMPEQ    R0,#+0
   \       0x94   0x46DA             MOVEQ    R10,R11
    860                index = i;
   \       0x96   0xF10B 0x0B01      ADD      R11,R11,#+1
   \       0x9A   0xFA5F 0xF18B      UXTB     R1,R11
   \       0x9E   0x2902             CMP      R1,#+2
   \       0xA0   0xDDE1             BLE.N    ??emberAfPluginScenesServerParseAddScene_2
   \       0xA2   0xF8AD 0x700E      STRH     R7,[SP, #+14]
   \       0xA6   0xF88D 0x800C      STRB     R8,[SP, #+12]
    861              }
    862            }
    863          
    864            // If the target index is still zero, the table is full.
    865            if (index == EMBER_AF_SCENE_TABLE_NULL_INDEX) {
   \                     ??emberAfPluginScenesServerParseAddScene_4: (+1)
   \       0xAA   0xFA5F 0xF08A      UXTB     R0,R10
   \       0xAE   0x28FF             CMP      R0,#+255
   \       0xB0   0xD107             BNE.N    ??emberAfPluginScenesServerParseAddScene_5
    866              status = EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
   \       0xB2   0x2189             MOVS     R1,#+137
    867              goto kickout;
   \       0xB4   0xE105             B.N      ??emberAfPluginScenesServerParseAddScene_1
    868            }
   \                     ??emberAfPluginScenesServerParseAddScene_3: (+1)
   \       0xB6   0xF8AD 0x700E      STRH     R7,[SP, #+14]
   \       0xBA   0xF88D 0x800C      STRB     R8,[SP, #+12]
   \       0xBE   0x46DA             MOV      R10,R11
   \       0xC0   0xE7F3             B.N      ??emberAfPluginScenesServerParseAddScene_4
    869          
    870            emberAfPluginScenesServerRetrieveSceneEntry(entry, index);
   \                     ??emberAfPluginScenesServerParseAddScene_5: (+1)
   \       0xC2   0x2326             MOVS     R3,#+38
   \       0xC4   0xFA5F 0xF28A      UXTB     R2,R10
   \       0xC8   0x....'....        BL       ?Subroutine14
    871          
    872            // The transition time is specified in seconds in the regular version of the
    873            // command and tenths of a second in the enhanced version.
    874            if (enhanced) {
   \                     ??CrossCallReturnLabel_46: (+1)
   \       0xCC   0xB164             CBZ.N    R4,??emberAfPluginScenesServerParseAddScene_6
    875              entry.transitionTime = transitionTime / 10;
   \       0xCE   0x200A             MOVS     R0,#+10
   \       0xD0   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \       0xD4   0xF8AD 0x0016      STRH     R0,[SP, #+22]
    876              entry.transitionTime100ms = (uint8_t)(transitionTime - entry.transitionTime * 10);
   \       0xD8   0xF8BD 0x1016      LDRH     R1,[SP, #+22]
   \       0xDC   0x200A             MOVS     R0,#+10
   \       0xDE   0xFB00 0x5511      MLS      R5,R0,R1,R5
   \       0xE2   0xF88D 0x5018      STRB     R5,[SP, #+24]
   \       0xE6   0xE004             B.N      ??emberAfPluginScenesServerParseAddScene_7
    877            } else {
    878              entry.transitionTime = transitionTime;
    879              entry.transitionTime100ms = 0;
   \                     ??emberAfPluginScenesServerParseAddScene_6: (+1)
   \       0xE8   0x2100             MOVS     R1,#+0
   \       0xEA   0xF8AD 0x5016      STRH     R5,[SP, #+22]
   \       0xEE   0xF88D 0x1018      STRB     R1,[SP, #+24]
    880            }
    881          
    882          #ifdef EMBER_AF_PLUGIN_SCENES_NAME_SUPPORT
    883            emberAfCopyString(entry.name, sceneName, ZCL_SCENES_CLUSTER_MAXIMUM_NAME_LENGTH);
    884          #endif
    885          
    886            // When adding a new scene, wipe out all of the extensions before parsing the
    887            // extension field sets data.
    888            if (i != index) {
   \                     ??emberAfPluginScenesServerParseAddScene_7: (+1)
   \       0xF2   0xFA5F 0xF08B      UXTB     R0,R11
   \       0xF6   0xFA5F 0xF18A      UXTB     R1,R10
   \       0xFA   0x9D19             LDR      R5,[SP, #+100]
   \       0xFC   0x4288             CMP      R0,R1
   \       0xFE   0xD014             BEQ.N    ??emberAfPluginScenesServerParseAddScene_8
    889          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
    890              entry.hasOnOffValue = false;
   \      0x100   0x2200             MOVS     R2,#+0
   \      0x102   0xF88D 0x2019      STRB     R2,[SP, #+25]
    891          #endif
    892          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
    893              entry.hasCurrentLevelValue = false;
   \      0x106   0xF88D 0x201B      STRB     R2,[SP, #+27]
    894          #endif
    895          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
    896              entry.hasOccupiedCoolingSetpointValue = false;
    897              entry.hasOccupiedHeatingSetpointValue = false;
    898              entry.hasSystemModeValue = false;
    899          #endif
    900          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    901              entry.hasCurrentXValue = false;
   \      0x10A   0xF88D 0x201D      STRB     R2,[SP, #+29]
    902              entry.hasCurrentYValue = false;
   \      0x10E   0xF88D 0x2020      STRB     R2,[SP, #+32]
    903              entry.hasEnhancedCurrentHueValue = false;
   \      0x112   0xF88D 0x2024      STRB     R2,[SP, #+36]
    904              entry.hasCurrentSaturationValue = false;
   \      0x116   0xF88D 0x2028      STRB     R2,[SP, #+40]
    905              entry.hasColorLoopActiveValue = false;
   \      0x11A   0xF88D 0x202A      STRB     R2,[SP, #+42]
    906              entry.hasColorLoopDirectionValue = false;
   \      0x11E   0xF88D 0x202C      STRB     R2,[SP, #+44]
    907              entry.hasColorLoopTimeValue = false;
   \      0x122   0xF88D 0x202E      STRB     R2,[SP, #+46]
    908              entry.hasColorTemperatureMiredsValue = false;
   \      0x126   0xF88D 0x2032      STRB     R2,[SP, #+50]
   \                     ??emberAfPluginScenesServerParseAddScene_8: (+1)
   \      0x12A   0x9401             STR      R4,[SP, #+4]
   \      0x12C   0xF8BD 0x7000      LDRH     R7,[SP, #+0]
   \      0x130   0xE059             B.N      ??emberAfPluginScenesServerParseAddScene_9
    909          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    910          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
    911              entry.hasLockStateValue = false;
    912          #endif
    913          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
    914              entry.hasCurrentPositionLiftPercentageValue = false;
    915              entry.hasCurrentPositionTiltPercentageValue = false;
    916          #endif
    917            }
    918          
    919            while (extensionFieldSetsIndex < extensionFieldSetsLen) {
    920              EmberAfClusterId clusterId;
    921              uint8_t length;
    922          
    923              // Each extension field set must contain a two-byte cluster id and a one-
    924              // byte length.  Otherwise, the command is malformed.
    925              if (extensionFieldSetsLen < extensionFieldSetsIndex + 3) {
    926                status = EMBER_ZCL_STATUS_MALFORMED_COMMAND;
    927                goto kickout;
    928              }
    929          
    930              clusterId = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    931              extensionFieldSetsIndex += 2;
    932              length = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    933              extensionFieldSetsIndex++;
    934          
    935              // If the length is off, the command is also malformed.
    936              if (length == 0) {
    937                continue;
    938              } else if (extensionFieldSetsLen < extensionFieldSetsIndex + length) {
    939                status = EMBER_ZCL_STATUS_MALFORMED_COMMAND;
    940                goto kickout;
    941              }
    942          
    943              switch (clusterId) {
    944          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
    945                case ZCL_ON_OFF_CLUSTER_ID:
    946                  // We only know of one extension for the On/Off cluster and it is just one
    947                  // byte, which means we can skip some logic for this cluster.  If other
    948                  // extensions are added in this cluster, more logic will be needed here.
    949                  entry.hasOnOffValue = true;
    950                  entry.onOffValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    951                  break;
    952          #endif
    953          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
    954                case ZCL_LEVEL_CONTROL_CLUSTER_ID:
    955                  // We only know of one extension for the Level Control cluster and it is
    956                  // just one byte, which means we can skip some logic for this cluster.  If
    957                  // other extensions are added in this cluster, more logic will be needed
    958                  // here.
    959                  entry.hasCurrentLevelValue = true;
    960                  entry.currentLevelValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    961                  break;
    962          #endif
    963          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
    964                case ZCL_THERMOSTAT_CLUSTER_ID:
    965                  if (length < 2) {
    966                    break;
    967                  }
    968                  entry.hasOccupiedCoolingSetpointValue = true;
    969                  entry.occupiedCoolingSetpointValue = (int16_t)emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    970                  extensionFieldSetsIndex += 2;
    971                  length -= 2;
    972                  if (length < 2) {
    973                    break;
    974                  }
    975                  entry.hasOccupiedHeatingSetpointValue = true;
    976                  entry.occupiedHeatingSetpointValue = (int16_t)emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    977                  extensionFieldSetsIndex += 2;
    978                  length -= 2;
    979                  if (length < 1) {
    980                    break;
    981                  }
    982                  entry.hasSystemModeValue = true;
    983                  entry.systemModeValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
    984                  // If additional Thermostat extensions are added, adjust the index and
    985                  // length variables here.
    986                  break;
    987          #endif
    988          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
    989                case ZCL_COLOR_CONTROL_CLUSTER_ID:
    990                  if (length < 2) {
   \                     ??emberAfPluginScenesServerParseAddScene_10: (+1)
   \      0x132   0x2C02             CMP      R4,#+2
   \      0x134   0xDB56             BLT.N    ??emberAfPluginScenesServerParseAddScene_11
    991                    break;
    992                  }
    993                  entry.hasCurrentXValue = true;
   \      0x136   0x2001             MOVS     R0,#+1
   \      0x138   0xF88D 0x001D      STRB     R0,[SP, #+29]
    994                  entry.currentXValue = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x13C   0xB2B2             UXTH     R2,R6
   \      0x13E   0x4628             MOV      R0,R5
   \      0x140   0x1EA4             SUBS     R4,R4,#+2
   \      0x142   0x....'....        BL       emberAfGetInt16u
    995                  extensionFieldSetsIndex += 2;
   \      0x146   0x1CBF             ADDS     R7,R7,#+2
    996                  length -= 2;
   \      0x148   0xB2E4             UXTB     R4,R4
   \      0x14A   0xF8AD 0x001E      STRH     R0,[SP, #+30]
    997                  if (length < 2) {
   \      0x14E   0x2C02             CMP      R4,#+2
   \      0x150   0xDB48             BLT.N    ??emberAfPluginScenesServerParseAddScene_11
    998                    break;
    999                  }
   1000                  entry.hasCurrentYValue = true;
   \      0x152   0x2001             MOVS     R0,#+1
   \      0x154   0xF88D 0x0020      STRB     R0,[SP, #+32]
   1001                  entry.currentYValue = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x158   0x....'....        BL       ?Subroutine9
   \                     ??CrossCallReturnLabel_29: (+1)
   \      0x15C   0xF8AD 0x0022      STRH     R0,[SP, #+34]
   1002                  if (enhanced) {
   \      0x160   0x9801             LDR      R0,[SP, #+4]
   \      0x162   0x2800             CMP      R0,#+0
   \      0x164   0xD03E             BEQ.N    ??emberAfPluginScenesServerParseAddScene_11
   1003                    extensionFieldSetsIndex += 2;
   1004                    length -= 2;
   \      0x166   0x1EA4             SUBS     R4,R4,#+2
   \      0x168   0x1CBF             ADDS     R7,R7,#+2
   \      0x16A   0xB2E4             UXTB     R4,R4
   1005                    if (length < 2) {
   \      0x16C   0x2C02             CMP      R4,#+2
   \      0x16E   0xDB39             BLT.N    ??emberAfPluginScenesServerParseAddScene_11
   1006                      break;
   1007                    }
   1008                    entry.hasEnhancedCurrentHueValue = true;
   \      0x170   0x2001             MOVS     R0,#+1
   \      0x172   0xF88D 0x0024      STRB     R0,[SP, #+36]
   1009                    entry.enhancedCurrentHueValue = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x176   0x....'....        BL       ?Subroutine9
   1010                    extensionFieldSetsIndex += 2;
   1011                    length -= 2;
   \                     ??CrossCallReturnLabel_28: (+1)
   \      0x17A   0x1EA4             SUBS     R4,R4,#+2
   \      0x17C   0xF8AD 0x0026      STRH     R0,[SP, #+38]
   \      0x180   0x1CBF             ADDS     R7,R7,#+2
   \      0x182   0xB2E4             UXTB     R4,R4
   1012                    if (length < 1) {
   \      0x184   0xB374             CBZ.N    R4,??emberAfPluginScenesServerParseAddScene_11
   1013                      break;
   1014                    }
   1015                    entry.hasCurrentSaturationValue = true;
   \      0x186   0x2101             MOVS     R1,#+1
   \      0x188   0xF88D 0x1028      STRB     R1,[SP, #+40]
   1016                    entry.currentSaturationValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x18C   0x....'....        BL       ?Subroutine22
   1017                    extensionFieldSetsIndex++;
   1018                    length--;
   \                     ??CrossCallReturnLabel_78: (+1)
   \      0x190   0xF88D 0x2029      STRB     R2,[SP, #+41]
   \      0x194   0xB2E4             UXTB     R4,R4
   1019                    if (length < 1) {
   \      0x196   0xB32C             CBZ.N    R4,??emberAfPluginScenesServerParseAddScene_11
   1020                      break;
   1021                    }
   1022                    entry.hasColorLoopActiveValue = true;
   \      0x198   0xF88D 0x102A      STRB     R1,[SP, #+42]
   1023                    entry.colorLoopActiveValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x19C   0x....'....        BL       ?Subroutine22
   1024                    extensionFieldSetsIndex++;
   1025                    length--;
   \                     ??CrossCallReturnLabel_79: (+1)
   \      0x1A0   0xF88D 0x202B      STRB     R2,[SP, #+43]
   \      0x1A4   0xB2E4             UXTB     R4,R4
   1026                    if (length < 1) {
   \      0x1A6   0xB1EC             CBZ.N    R4,??emberAfPluginScenesServerParseAddScene_11
   1027                      break;
   1028                    }
   1029                    entry.hasColorLoopDirectionValue = true;
   \      0x1A8   0xF88D 0x102C      STRB     R1,[SP, #+44]
   1030                    entry.colorLoopDirectionValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x1AC   0x....'....        BL       ?Subroutine22
   1031                    extensionFieldSetsIndex++;
   1032                    length--;
   \                     ??CrossCallReturnLabel_80: (+1)
   \      0x1B0   0xB2E4             UXTB     R4,R4
   \      0x1B2   0xF88D 0x202D      STRB     R2,[SP, #+45]
   1033                    if (length < 2) {
   \      0x1B6   0x2C02             CMP      R4,#+2
   \      0x1B8   0xDB14             BLT.N    ??emberAfPluginScenesServerParseAddScene_11
   1034                      break;
   1035                    }
   1036                    entry.hasColorLoopTimeValue = true;
   \      0x1BA   0xF88D 0x102E      STRB     R1,[SP, #+46]
   1037                    entry.colorLoopTimeValue = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x1BE   0xB2B2             UXTH     R2,R6
   \      0x1C0   0xB2B9             UXTH     R1,R7
   \      0x1C2   0x4628             MOV      R0,R5
   \      0x1C4   0x1EA4             SUBS     R4,R4,#+2
   \      0x1C6   0x....'....        BL       emberAfGetInt16u
   1038                    extensionFieldSetsIndex += 2;
   \      0x1CA   0x1CBF             ADDS     R7,R7,#+2
   1039                    length -= 2;
   \      0x1CC   0xB2E4             UXTB     R4,R4
   \      0x1CE   0xF8AD 0x0030      STRH     R0,[SP, #+48]
   1040                    if (length < 2) {
   \      0x1D2   0x2C02             CMP      R4,#+2
   \      0x1D4   0xDB06             BLT.N    ??emberAfPluginScenesServerParseAddScene_11
   1041                      break;
   1042                    }
   1043                    entry.hasColorTemperatureMiredsValue = true;
   \      0x1D6   0x2001             MOVS     R0,#+1
   \      0x1D8   0xF88D 0x0032      STRB     R0,[SP, #+50]
   1044                    entry.colorTemperatureMiredsValue = emberAfGetInt16u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   \      0x1DC   0x....'....        BL       ?Subroutine9
   1045                  }
   \                     ??CrossCallReturnLabel_27: (+1)
   \      0x1E0   0xF8AD 0x0034      STRH     R0,[SP, #+52]
   1046                  // If additional Color Control extensions are added, adjust the index and
   1047                  // length variables here.
   1048                  break;
   1049          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
   1050          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
   1051                case ZCL_DOOR_LOCK_CLUSTER_ID:
   1052                  // We only know of one extension for the Door Lock cluster and it is just
   1053                  // one byte, which means we can skip some logic for this cluster.  If
   1054                  // other extensions are added in this cluster, more logic will be needed
   1055                  // here.
   1056                  entry.hasLockStateValue = true;
   1057                  entry.lockStateValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   1058                  break;
   1059          #endif
   1060          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
   1061                case ZCL_WINDOW_COVERING_CLUSTER_ID:
   1062                  // If we're here, we know we have at least one byte, so we can skip the
   1063                  // length check for the first field.
   1064                  entry.hasCurrentPositionLiftPercentageValue = true;
   1065                  entry.currentPositionLiftPercentageValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   1066                  extensionFieldSetsIndex++;
   1067                  length--;
   1068                  if (length < 1) {
   1069                    break;
   1070                  }
   1071                  entry.hasCurrentPositionTiltPercentageValue = true;
   1072                  entry.currentPositionTiltPercentageValue = emberAfGetInt8u(extensionFieldSets, extensionFieldSetsIndex, extensionFieldSetsLen);
   1073                  // If additional Window Covering extensions are added, adjust the index
   1074                  // and length variables here.
   1075                  break;
   1076          #endif
   1077                default:
   1078                  break;
   1079              }
   1080          
   1081              extensionFieldSetsIndex += length;
   \                     ??emberAfPluginScenesServerParseAddScene_11: (+1)
   \      0x1E4   0x19E7             ADDS     R7,R4,R7
   \                     ??emberAfPluginScenesServerParseAddScene_9: (+1)
   \      0x1E6   0xB2B8             UXTH     R0,R7
   \      0x1E8   0xB2B1             UXTH     R1,R6
   \      0x1EA   0x4288             CMP      R0,R1
   \      0x1EC   0xD23D             BCS.N    ??emberAfPluginScenesServerParseAddScene_12
   \      0x1EE   0xFA1F 0xF886      UXTH     R8,R6
   \      0x1F2   0x1CC0             ADDS     R0,R0,#+3
   \      0x1F4   0x4580             CMP      R8,R0
   \      0x1F6   0xDB0B             BLT.N    ??emberAfPluginScenesServerParseAddScene_13
   \      0x1F8   0x....'....        BL       ?Subroutine9
   \                     ??CrossCallReturnLabel_26: (+1)
   \      0x1FC   0x1CBF             ADDS     R7,R7,#+2
   \      0x1FE   0xB2B9             UXTH     R1,R7
   \      0x200   0x5C6C             LDRB     R4,[R5, R1]
   \      0x202   0x1C7F             ADDS     R7,R7,#+1
   \      0x204   0x2C00             CMP      R4,#+0
   \      0x206   0xD0EE             BEQ.N    ??emberAfPluginScenesServerParseAddScene_9
   \      0x208   0xB2B9             UXTH     R1,R7
   \      0x20A   0x1862             ADDS     R2,R4,R1
   \      0x20C   0x4590             CMP      R8,R2
   \      0x20E   0xDA02             BGE.N    ??emberAfPluginScenesServerParseAddScene_14
   \                     ??emberAfPluginScenesServerParseAddScene_13: (+1)
   \      0x210   0x9C01             LDR      R4,[SP, #+4]
   \      0x212   0x2180             MOVS     R1,#+128
   \      0x214   0xE055             B.N      ??emberAfPluginScenesServerParseAddScene_1
   \                     ??emberAfPluginScenesServerParseAddScene_14: (+1)
   \      0x216   0x2806             CMP      R0,#+6
   \      0x218   0xD005             BEQ.N    ??emberAfPluginScenesServerParseAddScene_15
   \      0x21A   0x2808             CMP      R0,#+8
   \      0x21C   0xD00C             BEQ.N    ??emberAfPluginScenesServerParseAddScene_16
   \      0x21E   0xF5B0 0x7F40      CMP      R0,#+768
   \      0x222   0xD086             BEQ.N    ??emberAfPluginScenesServerParseAddScene_10
   \      0x224   0xE7DE             B.N      ??emberAfPluginScenesServerParseAddScene_11
   \                     ??emberAfPluginScenesServerParseAddScene_15: (+1)
   \      0x226   0x2001             MOVS     R0,#+1
   \      0x228   0xF88D 0x0019      STRB     R0,[SP, #+25]
   \      0x22C   0x5C68             LDRB     R0,[R5, R1]
   \      0x22E   0xB100             CBZ.N    R0,??emberAfPluginScenesServerParseAddScene_17
   \      0x230   0x2001             MOVS     R0,#+1
   \                     ??emberAfPluginScenesServerParseAddScene_17: (+1)
   \      0x232   0xF88D 0x001A      STRB     R0,[SP, #+26]
   \      0x236   0xE7D5             B.N      ??emberAfPluginScenesServerParseAddScene_11
   \                     ??emberAfPluginScenesServerParseAddScene_16: (+1)
   \      0x238   0x2201             MOVS     R2,#+1
   \      0x23A   0xF88D 0x201B      STRB     R2,[SP, #+27]
   \      0x23E   0x5C69             LDRB     R1,[R5, R1]
   \      0x240   0xF88D 0x101C      STRB     R1,[SP, #+28]
   \      0x244   0xE7CE             B.N      ??emberAfPluginScenesServerParseAddScene_11
   1082            }
   1083          
   1084            // If we got this far, we either added a new entry or updated an existing one.
   1085            // If we added, store the basic data and increment the scene count.  In either
   1086            // case, save the entry.
   1087            if (i != index) {
   1088              entry.endpoint = endpoint;
   1089              entry.groupId = groupId;
   1090              entry.sceneId = sceneId;
   1091              emberAfPluginScenesServerIncrNumSceneEntriesInUse();
   1092              emberAfScenesSetSceneCountAttribute(endpoint,
   1093                                                  emberAfPluginScenesServerNumSceneEntriesInUse());
   1094            }
   1095            emberAfPluginScenesServerSaveSceneEntry(entry, index);
   1096            status = EMBER_ZCL_STATUS_SUCCESS;
   1097          
   1098            kickout:
   1099            // Add Scene commands are only responded to when they are addressed to a
   1100            // single device.
   1101            if (emberAfCurrentCommand()->type != EMBER_INCOMING_UNICAST
   1102                && emberAfCurrentCommand()->type != EMBER_INCOMING_UNICAST_REPLY) {
   1103              return true;
   1104            }
   1105            emberAfFillExternalBuffer((ZCL_CLUSTER_SPECIFIC_COMMAND
   1106                                       | ZCL_FRAME_CONTROL_SERVER_TO_CLIENT),
   1107                                      ZCL_SCENES_CLUSTER_ID,
   1108                                      (enhanced
   1109                                       ? ZCL_ENHANCED_ADD_SCENE_RESPONSE_COMMAND_ID
   1110                                       : ZCL_ADD_SCENE_RESPONSE_COMMAND_ID),
   1111                                      "uvu",
   1112                                      status,
   1113                                      groupId,
   1114                                      sceneId);
   \                     ??emberAfPluginScenesServerParseAddScene_18: (+1)
   \      0x246   0x2C00             CMP      R4,#+0
   \      0x248   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \      0x24C   0xF8BD 0x300E      LDRH     R3,[SP, #+14]
   \      0x250   0xBF14             ITE      NE 
   \      0x252   0x2240             MOVNE    R2,#+64
   \      0x254   0x2200             MOVEQ    R2,#+0
   \      0x256   0x9002             STR      R0,[SP, #+8]
   \      0x258   0x9301             STR      R3,[SP, #+4]
   \      0x25A   0x9100             STR      R1,[SP, #+0]
   \      0x25C   0x....'....        BL       ?Subroutine10
   1115            sendStatus = emberAfSendResponse();
   \                     ??CrossCallReturnLabel_35: (+1)
   \      0x260   0x....'....        BL       emberAfSendResponse
   1116            if (EMBER_SUCCESS != sendStatus) {
   1117              emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
   1118                                          "add_scene",
   1119                                          sendStatus);
   1120            }
   1121            return true;
   \                     ??emberAfPluginScenesServerParseAddScene_19: (+1)
   \      0x264   0x2001             MOVS     R0,#+1
   \      0x266   0x....'....        B.W      ?Subroutine1
   \                     ??emberAfPluginScenesServerParseAddScene_12: (+1)
   \      0x26A   0xFA5F 0xF18B      UXTB     R1,R11
   \      0x26E   0xFA5F 0xF08A      UXTB     R0,R10
   \      0x272   0x9C01             LDR      R4,[SP, #+4]
   \      0x274   0x4281             CMP      R1,R0
   \      0x276   0xD01D             BEQ.N    ??emberAfPluginScenesServerParseAddScene_20
   \      0x278   0xF8BD 0x000E      LDRH     R0,[SP, #+14]
   \      0x27C   0x....             LDR.N    R5,??DataTable17_3
   \      0x27E   0xF88D 0x9010      STRB     R9,[SP, #+16]
   \      0x282   0xF8AD 0x0012      STRH     R0,[SP, #+18]
   \      0x286   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \      0x28A   0x2301             MOVS     R3,#+1
   \      0x28C   0x227F             MOVS     R2,#+127
   \      0x28E   0xF88D 0x0014      STRB     R0,[SP, #+20]
   \      0x292   0x212B             MOVS     R1,#+43
   \      0x294   0x4628             MOV      R0,R5
   \      0x296   0x....'....        BL       halInternalGetTokenData
   \      0x29A   0x7828             LDRB     R0,[R5, #+0]
   \      0x29C   0x2301             MOVS     R3,#+1
   \      0x29E   0x462A             MOV      R2,R5
   \      0x2A0   0x1C40             ADDS     R0,R0,#+1
   \      0x2A2   0x7028             STRB     R0,[R5, #+0]
   \      0x2A4   0x....'....        BL       ?Subroutine17
   \                     ??CrossCallReturnLabel_54: (+1)
   \      0x2A8   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_23: (+1)
   \      0x2AC   0x7829             LDRB     R1,[R5, #+0]
   \      0x2AE   0x4648             MOV      R0,R9
   \      0x2B0   0x....'....        BL       emberAfScenesSetSceneCountAttribute
   \                     ??emberAfPluginScenesServerParseAddScene_20: (+1)
   \      0x2B4   0x2326             MOVS     R3,#+38
   \      0x2B6   0xAA04             ADD      R2,SP,#+16
   \      0x2B8   0xFA5F 0xF18A      UXTB     R1,R10
   \      0x2BC   0x....'....        BL       ??Subroutine18_0
   \                     ??CrossCallReturnLabel_58: (+1)
   \      0x2C0   0x2100             MOVS     R1,#+0
   \                     ??emberAfPluginScenesServerParseAddScene_1: (+1)
   \      0x2C2   0x....             LDR.N    R0,??DataTable19_1
   \      0x2C4   0x6802             LDR      R2,[R0, #+0]
   \      0x2C6   0x7910             LDRB     R0,[R2, #+4]
   \      0x2C8   0x2800             CMP      R0,#+0
   \      0x2CA   0xBF18             IT       NE 
   \      0x2CC   0x2801             CMPNE    R0,#+1
   \      0x2CE   0xD0BA             BEQ.N    ??emberAfPluginScenesServerParseAddScene_18
   \      0x2D0   0xE7C8             B.N      ??emberAfPluginScenesServerParseAddScene_19
   1122          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine22: (+1)
   \        0x0   0xB2B8             UXTH     R0,R7
   \        0x2   0x5C2A             LDRB     R2,[R5, R0]
   \        0x4   0x1E64             SUBS     R4,R4,#+1
   \        0x6   0x1C7F             ADDS     R7,R7,#+1
   \        0x8   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine9: (+1)
   \        0x0   0xB2B2             UXTH     R2,R6
   \        0x2   0xB2B9             UXTH     R1,R7
   \        0x4   0x4628             MOV      R0,R5
   \        0x6   0x....'....        B.W      emberAfGetInt16u

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x2301             MOVS     R3,#+1
   \        0x2   0x227F             MOVS     R2,#+127
   \        0x4   0x212B             MOVS     R1,#+43
   \        0x6   0x4628             MOV      R0,R5
   \        0x8   0x....'....        B.W      halInternalGetTokenData
   1123          

   \                                 In section .text, align 2, keep-with-next
   1124          bool emberAfPluginScenesServerParseViewScene(const EmberAfClusterCommand *cmd,
   1125                                                       uint16_t groupId,
   1126                                                       uint8_t sceneId)
   1127          {
   \                     emberAfPluginScenesServerParseViewScene: (+1)
   \        0x0   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \        0x4   0xB08D             SUB      SP,SP,#+52
   \        0x6   0x460D             MOV      R5,R1
   1128            EmberAfSceneTableEntry entry;
   1129            EmberAfStatus status = EMBER_ZCL_STATUS_NOT_FOUND;
   1130            EmberStatus sendStatus;
   1131            bool enhanced = (cmd->commandId == ZCL_ENHANCED_VIEW_SCENE_COMMAND_ID);
   \        0x8   0x7CC1             LDRB     R1,[R0, #+19]
   \        0xA   0x278B             MOVS     R7,#+139
   1132            uint8_t endpoint = cmd->apsFrame->destinationEndpoint;
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0x2941             CMP      R1,#+65
   \       0x10   0x4691             MOV      R9,R2
   \       0x12   0xF890 0x8005      LDRB     R8,[R0, #+5]
   \       0x16   0xBF0C             ITE      EQ 
   \       0x18   0x2401             MOVEQ    R4,#+1
   \       0x1A   0x2400             MOVNE    R4,#+0
   1133          
   1134            emberAfScenesClusterPrintln("RX: %pViewScene 0x%2x, 0x%x",
   1135                                        (enhanced ? "Enhanced" : ""),
   1136                                        groupId,
   1137                                        sceneId);
   1138          
   1139            // View Scene commands can only reference groups which we belong to.
   1140            if (groupId != ZCL_SCENES_GLOBAL_SCENE_GROUP_ID
   1141                && !emberAfGroupsClusterEndpointInGroupCallback(endpoint,
   1142                                                                groupId)) {
   \       0x1C   0x0029             MOVS     R1,R5
   \       0x1E   0xD005             BEQ.N    ??emberAfPluginScenesServerParseViewScene_0
   \       0x20   0x4640             MOV      R0,R8
   \       0x22   0x....'....        BL       emberAfGroupsClusterEndpointInGroupCallback
   \       0x26   0xB908             CBNZ.N   R0,??emberAfPluginScenesServerParseViewScene_0
   1143              status = EMBER_ZCL_STATUS_INVALID_FIELD;
   \       0x28   0x2785             MOVS     R7,#+133
   \       0x2A   0xE015             B.N      ??emberAfPluginScenesServerParseViewScene_1
   1144            } else {
   1145              uint8_t i;
   1146              for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \                     ??emberAfPluginScenesServerParseViewScene_0: (+1)
   \       0x2C   0x2600             MOVS     R6,#+0
   1147                emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfPluginScenesServerParseViewScene_2: (+1)
   \       0x2E   0x2326             MOVS     R3,#+38
   \       0x30   0xB2F2             UXTB     R2,R6
   \       0x32   0x212C             MOVS     R1,#+44
   \       0x34   0xA803             ADD      R0,SP,#+12
   \       0x36   0x....'....        BL       halInternalGetTokenData
   1148                if (entry.endpoint == endpoint
   1149                    && entry.groupId == groupId
   1150                    && entry.sceneId == sceneId) {
   \       0x3A   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x3E   0x4540             CMP      R0,R8
   \       0x40   0xBF01             ITTTT    EQ 
   \       0x42   0xF8BD 0x000E      LDRHEQ   R0,[SP, #+14]
   \       0x46   0x42A8             CMPEQ    R0,R5
   \       0x48   0xF89D 0x0010      LDRBEQ   R0,[SP, #+16]
   \       0x4C   0x4548             CMPEQ    R0,R9
   \       0x4E   0xD008             BEQ.N    ??emberAfPluginScenesServerParseViewScene_3
   \       0x50   0x1C76             ADDS     R6,R6,#+1
   \       0x52   0xB2F2             UXTB     R2,R6
   \       0x54   0x2A02             CMP      R2,#+2
   \       0x56   0xDDEA             BLE.N    ??emberAfPluginScenesServerParseViewScene_2
   1151                  status = EMBER_ZCL_STATUS_SUCCESS;
   1152                  break;
   1153                }
   1154              }
   1155            }
   1156          
   1157            // The status, group id, and scene id are always included in the response, but
   1158            // the transition time, name, and extension fields are only included if the
   1159            // scene was found.
   1160            emberAfFillExternalBuffer((ZCL_CLUSTER_SPECIFIC_COMMAND
   1161                                       | ZCL_FRAME_CONTROL_SERVER_TO_CLIENT
   1162                                       | EMBER_AF_DEFAULT_RESPONSE_POLICY_RESPONSES),
   1163                                      ZCL_SCENES_CLUSTER_ID,
   1164                                      (enhanced
   1165                                       ? ZCL_ENHANCED_VIEW_SCENE_RESPONSE_COMMAND_ID
   1166                                       : ZCL_VIEW_SCENE_RESPONSE_COMMAND_ID),
   1167                                      "uvu",
   1168                                      status,
   1169                                      groupId,
   1170                                      sceneId);
   \                     ??emberAfPluginScenesServerParseViewScene_1: (+1)
   \       0x58   0x2C00             CMP      R4,#+0
   \       0x5A   0xBF14             ITE      NE 
   \       0x5C   0x2241             MOVNE    R2,#+65
   \       0x5E   0x2201             MOVEQ    R2,#+1
   \       0x60   0xE001             B.N      ??emberAfPluginScenesServerParseViewScene_4
   \                     ??emberAfPluginScenesServerParseViewScene_3: (+1)
   \       0x62   0x2700             MOVS     R7,#+0
   \       0x64   0xE7F8             B.N      ??emberAfPluginScenesServerParseViewScene_1
   \                     ??emberAfPluginScenesServerParseViewScene_4: (+1)
   \       0x66   0xF8CD 0x9008      STR      R9,[SP, #+8]
   \       0x6A   0x9501             STR      R5,[SP, #+4]
   \       0x6C   0x9700             STR      R7,[SP, #+0]
   \       0x6E   0x....'....        BL       ?Subroutine10
   1171            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_34: (+1)
   \       0x72   0x2F00             CMP      R7,#+0
   \       0x74   0xF040 0x8088      BNE.W    ??emberAfPluginScenesServerParseViewScene_5
   1172              // The transition time is returned in seconds in the regular version of the
   1173              // command and tenths of a second in the enhanced version.
   1174              emberAfPutInt16uInResp(enhanced
   1175                                     ? entry.transitionTime * 10 + entry.transitionTime100ms
   1176                                     : entry.transitionTime);
   \       0x78   0xF8BD 0x0012      LDRH     R0,[SP, #+18]
   \       0x7C   0xB124             CBZ.N    R4,??emberAfPluginScenesServerParseViewScene_6
   \       0x7E   0xF89D 0x1014      LDRB     R1,[SP, #+20]
   \       0x82   0x220A             MOVS     R2,#+10
   \       0x84   0xFB02 0x1000      MLA      R0,R2,R0,R1
   \                     ??emberAfPluginScenesServerParseViewScene_6: (+1)
   \       0x88   0xB280             UXTH     R0,R0
   \       0x8A   0x....'....        BL       emberAfPutInt16uInResp
   1177          #ifdef EMBER_AF_PLUGIN_SCENES_NAME_SUPPORT
   1178              emberAfPutStringInResp(entry.name);
   1179          #else
   1180              emberAfPutInt8uInResp(0); // name length
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x....'....        BL       emberAfPutInt8uInResp
   1181          #endif
   1182          #ifdef ZCL_USING_ON_OFF_CLUSTER_SERVER
   1183              if (entry.hasOnOffValue) {
   \       0x94   0xF89D 0x0015      LDRB     R0,[SP, #+21]
   \       0x98   0xB148             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_7
   1184                emberAfPutInt16uInResp(ZCL_ON_OFF_CLUSTER_ID);
   \       0x9A   0x2006             MOVS     R0,#+6
   \       0x9C   0x....'....        BL       emberAfPutInt16uInResp
   1185                emberAfPutInt8uInResp(1); // length
   \       0xA0   0x2001             MOVS     R0,#+1
   \       0xA2   0x....'....        BL       emberAfPutInt8uInResp
   1186                emberAfPutInt8uInResp(entry.onOffValue);
   \       0xA6   0xF89D 0x0016      LDRB     R0,[SP, #+22]
   \       0xAA   0x....'....        BL       emberAfPutInt8uInResp
   1187              }
   1188          #endif
   1189          #ifdef ZCL_USING_LEVEL_CONTROL_CLUSTER_SERVER
   1190              if (entry.hasCurrentLevelValue) {
   \                     ??emberAfPluginScenesServerParseViewScene_7: (+1)
   \       0xAE   0xF89D 0x0017      LDRB     R0,[SP, #+23]
   \       0xB2   0xB148             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_8
   1191                emberAfPutInt16uInResp(ZCL_LEVEL_CONTROL_CLUSTER_ID);
   \       0xB4   0x2008             MOVS     R0,#+8
   \       0xB6   0x....'....        BL       emberAfPutInt16uInResp
   1192                emberAfPutInt8uInResp(1); // length
   \       0xBA   0x2001             MOVS     R0,#+1
   \       0xBC   0x....'....        BL       emberAfPutInt8uInResp
   1193                emberAfPutInt8uInResp(entry.currentLevelValue);
   \       0xC0   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \       0xC4   0x....'....        BL       emberAfPutInt8uInResp
   1194              }
   1195          #endif
   1196          #ifdef ZCL_USING_THERMOSTAT_CLUSTER_SERVER
   1197              if (entry.hasOccupiedCoolingSetpointValue) {
   1198                uint8_t *length;
   1199                emberAfPutInt16uInResp(ZCL_THERMOSTAT_CLUSTER_ID);
   1200                length = &appResponseData[appResponseLength];
   1201                emberAfPutInt8uInResp(0); // temporary length
   1202                emberAfPutInt16uInResp(entry.occupiedCoolingSetpointValue);
   1203                *length += 2;
   1204                if (entry.hasOccupiedHeatingSetpointValue) {
   1205                  emberAfPutInt16uInResp(entry.occupiedHeatingSetpointValue);
   1206                  *length += 2;
   1207                  if (entry.hasSystemModeValue) {
   1208                    emberAfPutInt8uInResp(entry.systemModeValue);
   1209                    (*length)++;
   1210                  }
   1211                }
   1212              }
   1213          #endif
   1214          #ifdef ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
   1215              if (entry.hasCurrentXValue) {
   \                     ??emberAfPluginScenesServerParseViewScene_8: (+1)
   \       0xC8   0xF89D 0x0019      LDRB     R0,[SP, #+25]
   \       0xCC   0x2800             CMP      R0,#+0
   \       0xCE   0xD05B             BEQ.N    ??emberAfPluginScenesServerParseViewScene_5
   1216                uint8_t *length;
   1217                emberAfPutInt16uInResp(ZCL_COLOR_CONTROL_CLUSTER_ID);
   \       0xD0   0xF44F 0x7040      MOV      R0,#+768
   \       0xD4   0x....'....        BL       emberAfPutInt16uInResp
   1218                length = &appResponseData[appResponseLength];
   \       0xD8   0x....             LDR.N    R1,??DataTable19_16
   \       0xDA   0x880A             LDRH     R2,[R1, #+0]
   \       0xDC   0x....             LDR.N    R0,??DataTable19_17
   \       0xDE   0x1885             ADDS     R5,R0,R2
   1219                emberAfPutInt8uInResp(0); // temporary length
   \       0xE0   0x2000             MOVS     R0,#+0
   \       0xE2   0x....'....        BL       emberAfPutInt8uInResp
   1220                emberAfPutInt16uInResp(entry.currentXValue);
   \       0xE6   0xF8BD 0x001A      LDRH     R0,[SP, #+26]
   \       0xEA   0x....'....        BL       emberAfPutInt16uInResp
   1221                *length += 2;
   \       0xEE   0x7828             LDRB     R0,[R5, #+0]
   \       0xF0   0x1C80             ADDS     R0,R0,#+2
   \       0xF2   0x7028             STRB     R0,[R5, #+0]
   1222                if (entry.hasCurrentYValue) {
   \       0xF4   0xF89D 0x001C      LDRB     R0,[SP, #+28]
   \       0xF8   0x2800             CMP      R0,#+0
   \       0xFA   0xD045             BEQ.N    ??emberAfPluginScenesServerParseViewScene_5
   1223                  emberAfPutInt16uInResp(entry.currentYValue);
   \       0xFC   0xF8BD 0x001E      LDRH     R0,[SP, #+30]
   \      0x100   0x....'....        BL       emberAfPutInt16uInResp
   1224                  *length += 2;
   \      0x104   0x7828             LDRB     R0,[R5, #+0]
   \      0x106   0x1C80             ADDS     R0,R0,#+2
   1225                  if (enhanced) {
   \      0x108   0x2C00             CMP      R4,#+0
   \      0x10A   0x7028             STRB     R0,[R5, #+0]
   \      0x10C   0xBF1C             ITT      NE 
   \      0x10E   0xF89D 0x0020      LDRBNE   R0,[SP, #+32]
   \      0x112   0x2800             CMPNE    R0,#+0
   1226                    if (entry.hasEnhancedCurrentHueValue) {
   \      0x114   0xD038             BEQ.N    ??emberAfPluginScenesServerParseViewScene_5
   1227                      emberAfPutInt16uInResp(entry.enhancedCurrentHueValue);
   \      0x116   0xF8BD 0x0022      LDRH     R0,[SP, #+34]
   \      0x11A   0x....'....        BL       emberAfPutInt16uInResp
   1228                      *length += 2;
   \      0x11E   0x7828             LDRB     R0,[R5, #+0]
   \      0x120   0x1C80             ADDS     R0,R0,#+2
   \      0x122   0x7028             STRB     R0,[R5, #+0]
   1229                      if (entry.hasCurrentSaturationValue) {
   \      0x124   0xF89D 0x0024      LDRB     R0,[SP, #+36]
   \      0x128   0xB370             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_5
   1230                        emberAfPutInt8uInResp(entry.currentSaturationValue);
   \      0x12A   0xF89D 0x0025      LDRB     R0,[SP, #+37]
   \      0x12E   0x....'....        BL       emberAfPutInt8uInResp
   1231                        (*length)++;
   \      0x132   0x7828             LDRB     R0,[R5, #+0]
   \      0x134   0x1C40             ADDS     R0,R0,#+1
   \      0x136   0x7028             STRB     R0,[R5, #+0]
   1232                        if (entry.hasColorLoopActiveValue) {
   \      0x138   0xF89D 0x0026      LDRB     R0,[SP, #+38]
   \      0x13C   0xB320             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_5
   1233                          emberAfPutInt8uInResp(entry.colorLoopActiveValue);
   \      0x13E   0xF89D 0x0027      LDRB     R0,[SP, #+39]
   \      0x142   0x....'....        BL       emberAfPutInt8uInResp
   1234                          (*length)++;
   \      0x146   0x7828             LDRB     R0,[R5, #+0]
   \      0x148   0x1C40             ADDS     R0,R0,#+1
   \      0x14A   0x7028             STRB     R0,[R5, #+0]
   1235                          if (entry.hasColorLoopDirectionValue) {
   \      0x14C   0xF89D 0x0028      LDRB     R0,[SP, #+40]
   \      0x150   0xB1D0             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_5
   1236                            emberAfPutInt8uInResp(entry.colorLoopDirectionValue);
   \      0x152   0xF89D 0x0029      LDRB     R0,[SP, #+41]
   \      0x156   0x....'....        BL       emberAfPutInt8uInResp
   1237                            (*length)++;
   \      0x15A   0x7828             LDRB     R0,[R5, #+0]
   \      0x15C   0x1C40             ADDS     R0,R0,#+1
   \      0x15E   0x7028             STRB     R0,[R5, #+0]
   1238                            if (entry.hasColorLoopTimeValue) {
   \      0x160   0xF89D 0x002A      LDRB     R0,[SP, #+42]
   \      0x164   0xB180             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_5
   1239                              emberAfPutInt16uInResp(entry.colorLoopTimeValue);
   \      0x166   0xF8BD 0x002C      LDRH     R0,[SP, #+44]
   \      0x16A   0x....'....        BL       emberAfPutInt16uInResp
   1240                              *length += 2;
   \      0x16E   0x7828             LDRB     R0,[R5, #+0]
   \      0x170   0x1C80             ADDS     R0,R0,#+2
   \      0x172   0x7028             STRB     R0,[R5, #+0]
   1241                              if (entry.hasColorTemperatureMiredsValue) {
   \      0x174   0xF89D 0x002E      LDRB     R0,[SP, #+46]
   \      0x178   0xB130             CBZ.N    R0,??emberAfPluginScenesServerParseViewScene_5
   1242                                emberAfPutInt16uInResp(entry.colorTemperatureMiredsValue);
   \      0x17A   0xF8BD 0x0030      LDRH     R0,[SP, #+48]
   \      0x17E   0x....'....        BL       emberAfPutInt16uInResp
   1243                                *length += 2;
   \      0x182   0x7828             LDRB     R0,[R5, #+0]
   \      0x184   0x1C80             ADDS     R0,R0,#+2
   \      0x186   0x7028             STRB     R0,[R5, #+0]
   1244                              }
   1245                            }
   1246                          }
   1247                        }
   1248                      }
   1249                    }
   1250                  }
   1251                }
   1252              }
   1253          #endif //ZCL_USING_COLOR_CONTROL_CLUSTER_SERVER
   1254          #ifdef ZCL_USING_DOOR_LOCK_CLUSTER_SERVER
   1255              if (entry.hasLockStateValue) {
   1256                emberAfPutInt16uInResp(ZCL_DOOR_LOCK_CLUSTER_ID);
   1257                emberAfPutInt8uInResp(1); // length
   1258                emberAfPutInt8uInResp(entry.lockStateValue);
   1259              }
   1260          #endif
   1261          #ifdef ZCL_USING_WINDOW_COVERING_CLUSTER_SERVER
   1262              if (entry.hasCurrentPositionLiftPercentageValue) {
   1263                uint8_t *length;
   1264                emberAfPutInt16uInResp(ZCL_WINDOW_COVERING_CLUSTER_ID);
   1265                length = &appResponseData[appResponseLength];
   1266                emberAfPutInt8uInResp(0); // temporary length
   1267                emberAfPutInt8uInResp(entry.currentPositionLiftPercentageValue);
   1268                (*length)++;
   1269                if (entry.hasCurrentPositionTiltPercentageValue) {
   1270                  emberAfPutInt8uInResp(entry.currentPositionTiltPercentageValue);
   1271                  (*length)++;
   1272                }
   1273              }
   1274          #endif
   1275            }
   1276          
   1277            // View Scene commands are only responded to when they are addressed to a
   1278            // single device.
   1279            if (emberAfCurrentCommand()->type != EMBER_INCOMING_UNICAST
   1280                && emberAfCurrentCommand()->type != EMBER_INCOMING_UNICAST_REPLY) {
   \                     ??emberAfPluginScenesServerParseViewScene_5: (+1)
   \      0x188   0x....             LDR.N    R1,??DataTable19_1
   \      0x18A   0x6808             LDR      R0,[R1, #+0]
   \      0x18C   0x7900             LDRB     R0,[R0, #+4]
   \      0x18E   0x2800             CMP      R0,#+0
   \      0x190   0xBF14             ITE      NE 
   \      0x192   0x2801             CMPNE    R0,#+1
   1281              return true;
   1282            }
   1283            sendStatus = emberAfSendResponse();
   \      0x194   0x....'....        BLEQ     emberAfSendResponse
   1284            if (EMBER_SUCCESS != sendStatus) {
   1285              emberAfScenesClusterPrintln("Scenes: failed to send %s response: 0x%x",
   1286                                          "view_scene",
   1287                                          sendStatus);
   1288            }
   1289            return true;
   \      0x198   0x2001             MOVS     R0,#+1
   \      0x19A   0xB00D             ADD      SP,SP,#+52
   \      0x19C   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
   1290          }
   1291          

   \                                 In section .text, align 2, keep-with-next
   1292          void emberAfScenesClusterRemoveScenesInGroupCallback(uint8_t endpoint,
   1293                                                               uint16_t groupId)
   1294          {
   \                     emberAfScenesClusterRemoveScenesInGroupCallback: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0xB08A             SUB      SP,SP,#+40
   \        0x6   0x4606             MOV      R6,R0
   \        0x8   0x4688             MOV      R8,R1
   1295            uint8_t i;
   1296            for (i = 0; i < EMBER_AF_PLUGIN_SCENES_TABLE_SIZE; i++) {
   \        0xA   0x2700             MOVS     R7,#+0
   \        0xC   0x....             LDR.N    R4,??DataTable19_1
   \        0xE   0x....             LDR.N    R5,??DataTable19_18
   1297              EmberAfSceneTableEntry entry;
   1298              emberAfPluginScenesServerRetrieveSceneEntry(entry, i);
   \                     ??emberAfScenesClusterRemoveScenesInGroupCallba_0: (+1)
   \       0x10   0x2326             MOVS     R3,#+38
   \       0x12   0xB2FA             UXTB     R2,R7
   \       0x14   0x....'....        BL       ?Subroutine12
   1299              if (entry.endpoint == endpoint
   1300                  && entry.groupId == groupId) {
   \                     ??CrossCallReturnLabel_40: (+1)
   \       0x18   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x1C   0x42B0             CMP      R0,R6
   \       0x1E   0xBF04             ITT      EQ 
   \       0x20   0xF8BD 0x0002      LDRHEQ   R0,[SP, #+2]
   \       0x24   0x4540             CMPEQ    R0,R8
   \       0x26   0xD118             BNE.N    ??CrossCallReturnLabel_63
   1301                entry.groupId = ZCL_SCENES_GLOBAL_SCENE_GROUP_ID;
   \       0x28   0x2200             MOVS     R2,#+0
   \       0x2A   0xF8AD 0x2002      STRH     R2,[SP, #+2]
   1302                entry.endpoint = EMBER_AF_SCENE_TABLE_UNUSED_ENDPOINT_ID;
   \       0x2E   0xF88D 0x2000      STRB     R2,[SP, #+0]
   1303                emberAfPluginScenesServerSaveSceneEntry(entry, i);
   \       0x32   0x2326             MOVS     R3,#+38
   \       0x34   0x466A             MOV      R2,SP
   \       0x36   0xB2F9             UXTB     R1,R7
   \       0x38   0x....'....        BL       ??Subroutine18_0
   1304                emberAfPluginScenesServerDecrNumSceneEntriesInUse();
   \                     ??CrossCallReturnLabel_57: (+1)
   \       0x3C   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_22: (+1)
   \       0x40   0x7828             LDRB     R0,[R5, #+0]
   \       0x42   0x2301             MOVS     R3,#+1
   \       0x44   0x462A             MOV      R2,R5
   \       0x46   0x1E41             SUBS     R1,R0,#+1
   \       0x48   0x7029             STRB     R1,[R5, #+0]
   \       0x4A   0x....'....        BL       ?Subroutine17
   1305                emberAfScenesSetSceneCountAttribute(emberAfCurrentEndpoint(),
   1306                                                    emberAfPluginScenesServerNumSceneEntriesInUse());
   \                     ??CrossCallReturnLabel_53: (+1)
   \       0x4E   0x....'....        BL       ?Subroutine7
   1307              }
   1308            }
   \                     ??CrossCallReturnLabel_21: (+1)
   \       0x52   0x6820             LDR      R0,[R4, #+0]
   \       0x54   0x7829             LDRB     R1,[R5, #+0]
   \       0x56   0x....'....        BL       ?Subroutine19
   \                     ??CrossCallReturnLabel_63: (+1)
   \       0x5A   0x1C7F             ADDS     R7,R7,#+1
   \       0x5C   0xB2F8             UXTB     R0,R7
   \       0x5E   0x2802             CMP      R0,#+2
   \       0x60   0xDDD6             BLE.N    ??emberAfScenesClusterRemoveScenesInGroupCallba_0
   1309          }
   \       0x62   0x....'....        B.W      ??Subroutine2_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \        0x0   0x....'....        DC32     emberAfPluginScenesServerEntriesInUse

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \        0x0   0x....'....        DC32     emAfCurrentCommand

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_4:
   \        0x0   0x....'....        DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_5:
   \        0x0   0x....'....        DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_6:
   \        0x0   0x....'....        DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_7:
   \        0x0   0x....'....        DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_8:
   \        0x0   0x....'....        DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_9:
   \        0x0   0x....'....        DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_10:
   \        0x0   0x....'....        DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_11:
   \        0x0   0x....'....        DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_12:
   \        0x0   0x....'....        DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_13:
   \        0x0   0x....'....        DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_14:
   \        0x0   0x....'....        DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_15:
   \        0x0   0x....'....        DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_16:
   \        0x0   0x....'....        DC32     appResponseLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_17:
   \        0x0   0x....'....        DC32     appResponseData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_18:
   \        0x0   0x....'....        DC32     emberAfPluginScenesServerEntriesInUse

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x73 0x63          DC8 "scene count"
   \              0x65 0x6E    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x75 0x6E    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x63 0x75          DC8 "current scene"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x73 0x63    
   \              0x65 0x6E    
   \              0x65 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x63 0x75          DC8 "current group"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x67 0x72    
   \              0x6F 0x75    
   \              0x70 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x73 0x63          DC8 "scene valid"
   \              0x65 0x6E    
   \              0x65 0x20    
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x75 0x73          DC8 "using 0x%x out of 0x%x table slots"
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x6F    
   \              0x75 0x74    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x74    
   \              0x61 0x62    
   \              0x6C 0x65    
   \              0x20 0x73    
   \              0x6C 0x6F    
   \              0x74 0x73    
   \              0x00         
   \       0x23   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x25 0x78          DC8 "%x: "
   \              0x3A 0x20    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x65 0x70          DC8 "ep %x grp %2x scene %x tt %d"
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x67 0x72    
   \              0x70 0x20    
   \              0x25 0x32    
   \              0x78 0x20    
   \              0x73 0x63    
   \              0x65 0x6E    
   \              0x65 0x20    
   \              0x25 0x78    
   \              0x20 0x74    
   \              0x74 0x20    
   \              0x25 0x64    
   \              0x00         
   \       0x1D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x2E 0x25          DC8 ".%d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x20 0x6F          DC8 " on/off %x"
   \              0x6E 0x2F    
   \              0x6F 0x66    
   \              0x66 0x20    
   \              0x25 0x78    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x20 0x6C          DC8 " lvl %x"
   \              0x76 0x6C    
   \              0x20 0x25    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x20 0x63          DC8 " color %2x %2x"
   \              0x6F 0x6C    
   \              0x6F 0x72    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x20 0x25    
   \              0x32 0x78    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x20 0x25          DC8 " %2x %x %x %x %2x"
   \              0x32 0x78    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x25 0x78    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x25 0x32    
   \              0x78 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 1
   \                     ?_12:
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x75 0x76          DC8 "uvu"
   \              0x75 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x75 0x76          DC8 "uv"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x75 0x75          DC8 "uuv"
   \              0x76 0x00    

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x6F 0x6E          DC8 "on/off"
   \              0x2F 0x6F    
   \              0x66 0x66    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x63 0x75          DC8 "current level"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x6C 0x65    
   \              0x76 0x65    
   \              0x6C 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x63 0x75          DC8 "current x"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x78 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x63 0x75          DC8 "current y"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x79 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x65 0x6E          DC8 "enhanced current hue"
   \              0x68 0x61    
   \              0x6E 0x63    
   \              0x65 0x64    
   \              0x20 0x63    
   \              0x75 0x72    
   \              0x72 0x65    
   \              0x6E 0x74    
   \              0x20 0x68    
   \              0x75 0x65    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x63 0x75          DC8 "current saturation"
   \              0x72 0x72    
   \              0x65 0x6E    
   \              0x74 0x20    
   \              0x73 0x61    
   \              0x74 0x75    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x13   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x63 0x6F          DC8 "color loop active"
   \              0x6C 0x6F    
   \              0x72 0x20    
   \              0x6C 0x6F    
   \              0x6F 0x70    
   \              0x20 0x61    
   \              0x63 0x74    
   \              0x69 0x76    
   \              0x65 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x63 0x6F          DC8 "color loop direction"
   \              0x6C 0x6F    
   \              0x72 0x20    
   \              0x6C 0x6F    
   \              0x6F 0x70    
   \              0x20 0x64    
   \              0x69 0x72    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x63 0x6F          DC8 "color loop time"
   \              0x6C 0x6F    
   \              0x72 0x20    
   \              0x6C 0x6F    
   \              0x6F 0x70    
   \              0x20 0x74    
   \              0x69 0x6D    
   \              0x65 0x00    

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x63 0x6F          DC8 "color temp mireds"
   \              0x6C 0x6F    
   \              0x72 0x20    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x20 0x6D    
   \              0x69 0x72    
   \              0x65 0x64    
   \              0x73 0x00    
   \       0x12   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      96   emAfPluginScenesServerPrintInfo
        96   -> emberAfPrint
        96   -> emberAfPrintln
        96   -> halInternalGetTokenData
      96   emberAfPluginScenesServerParseAddScene
        96   -> emberAfFillExternalBuffer
        96   -> emberAfGetInt16u
        96   -> emberAfGroupsClusterEndpointInGroupCallback
        96   -> emberAfScenesSetSceneCountAttribute
        96   -> emberAfSendResponse
        96   -> emberAfStringLength
        96   -> halInternalGetTokenData
        96   -> halInternalSetTokenData
      80   emberAfPluginScenesServerParseViewScene
        80   -> emberAfFillExternalBuffer
        80   -> emberAfGroupsClusterEndpointInGroupCallback
        80   -> emberAfPutInt16uInResp
        80   -> emberAfPutInt8uInResp
        80   -> emberAfSendResponse
        80   -> halInternalGetTokenData
      16   emberAfScenesClusterAddSceneCallback
        16   -> emberAfPluginScenesServerParseAddScene
      56   emberAfScenesClusterClearSceneTableCallback
        56   -> emberAfEndpointCount
        56   -> emberAfEndpointFromIndex
        56   -> emberAfNetworkIndexFromEndpoint
        56   -> emberAfScenesSetSceneCountAttribute
        56   -> emberGetCurrentNetwork
        56   -> halInternalGetTokenData
        56   -> halInternalSetTokenData
      72   emberAfScenesClusterGetSceneMembershipCallback
        72   -> emberAfFillExternalBuffer
        72   -> emberAfGroupsClusterEndpointInGroupCallback
        72   -> emberAfPutInt8uInResp
        72   -> emberAfSendResponse
        72   -> halInternalGetTokenData
      16   emberAfScenesClusterMakeInvalidCallback
        16   -> writeServerAttribute
      72   emberAfScenesClusterRecallSavedSceneCallback
        72   -> emberAfGroupsClusterEndpointInGroupCallback
        72   -> emberAfScenesMakeValid
        72   -> halInternalGetTokenData
        72   -> writeServerAttribute
      16   emberAfScenesClusterRecallSceneCallback
        16   -> emberAfPluginZllScenesServerRecallSceneZllExtensions
        16   -> emberAfScenesClusterRecallSavedSceneCallback
        16   -> emberAfSendImmediateDefaultResponse
      64   emberAfScenesClusterRemoveAllScenesCallback
        64   -> emberAfFillExternalBuffer
        64   -> emberAfGroupsClusterEndpointInGroupCallback
        64   -> emberAfScenesSetSceneCountAttribute
        64   -> emberAfSendResponse
        64   -> halInternalGetTokenData
        64   -> halInternalSetTokenData
      64   emberAfScenesClusterRemoveSceneCallback
        64   -> emberAfFillExternalBuffer
        64   -> emberAfGroupsClusterEndpointInGroupCallback
        64   -> emberAfScenesSetSceneCountAttribute
        64   -> emberAfSendResponse
        64   -> halInternalGetTokenData
        64   -> halInternalSetTokenData
      64   emberAfScenesClusterRemoveScenesInGroupCallback
        64   -> emberAfScenesSetSceneCountAttribute
        64   -> halInternalGetTokenData
        64   -> halInternalSetTokenData
      16   emberAfScenesClusterServerInitCallback
         0   -> emberAfScenesSetSceneCountAttribute
        16   -> halInternalGetTokenData
      72   emberAfScenesClusterStoreCurrentSceneCallback
        72   -> emberAfGroupsClusterEndpointInGroupCallback
        72   -> emberAfScenesMakeValid
        72   -> emberAfScenesSetSceneCountAttribute
        72   -> halInternalGetTokenData
        72   -> halInternalSetTokenData
        72   -> readServerAttribute
      32   emberAfScenesClusterStoreSceneCallback
        32   -> emberAfFillExternalBuffer
        32   -> emberAfScenesClusterStoreCurrentSceneCallback
        32   -> emberAfSendResponse
       0   emberAfScenesClusterViewSceneCallback
         0   -> emberAfPluginScenesServerParseViewScene
      32   emberAfScenesMakeValid
        32   -> writeServerAttribute
      16   emberAfScenesSetSceneCountAttribute
        16   -> writeServerAttribute
      24   readServerAttribute
        24   -> emberAfContainsServer
        24   -> emberAfReadServerAttribute
      16   writeServerAttribute
        16   -> emberAfWriteServerAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_2
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_10
       4  ??DataTable19_11
       4  ??DataTable19_12
       4  ??DataTable19_13
       4  ??DataTable19_14
       4  ??DataTable19_15
       4  ??DataTable19_16
       4  ??DataTable19_17
       4  ??DataTable19_18
       4  ??DataTable19_2
       4  ??DataTable19_3
       4  ??DataTable19_4
       4  ??DataTable19_5
       4  ??DataTable19_6
       4  ??DataTable19_7
       4  ??DataTable19_8
       4  ??DataTable19_9
       8  ?Subroutine0
       6  ?Subroutine1
      12  ?Subroutine10
       6  ?Subroutine11
       8  ?Subroutine12
      12  ?Subroutine13
       8  ?Subroutine14
      12  ?Subroutine15
      14  ?Subroutine16
       8  ?Subroutine17
       8  ?Subroutine18
       6  ?Subroutine19
       8  ?Subroutine2
      12  ?Subroutine20
       8  ?Subroutine21
      10  ?Subroutine22
       6  ?Subroutine3
       8  ?Subroutine4
      16  ?Subroutine5
      12  ?Subroutine6
      12  ?Subroutine7
      18  ?Subroutine8
      10  ?Subroutine9
      12  ?_0
      16  ?_1
      16  ?_10
      20  ?_11
       1  ?_12
       4  ?_13
       4  ?_14
       4  ?_15
       8  ?_16
      16  ?_17
      12  ?_18
      12  ?_19
      16  ?_2
      24  ?_20
      20  ?_21
      20  ?_22
      24  ?_23
      16  ?_24
      20  ?_25
      12  ?_3
      36  ?_4
       8  ?_5
      32  ?_6
       4  ?_7
      12  ?_8
       8  ?_9
     222  emAfPluginScenesServerPrintInfo
       1  emberAfPluginScenesServerEntriesInUse
     722  emberAfPluginScenesServerParseAddScene
     416  emberAfPluginScenesServerParseViewScene
      26  emberAfScenesClusterAddSceneCallback
     134  emberAfScenesClusterClearSceneTableCallback
     178  emberAfScenesClusterGetSceneMembershipCallback
      22  emberAfScenesClusterMakeInvalidCallback
     348  emberAfScenesClusterRecallSavedSceneCallback
      44  emberAfScenesClusterRecallSceneCallback
     130  emberAfScenesClusterRemoveAllScenesCallback
     144  emberAfScenesClusterRemoveSceneCallback
     102  emberAfScenesClusterRemoveScenesInGroupCallback
      16  emberAfScenesClusterServerInitCallback
     436  emberAfScenesClusterStoreCurrentSceneCallback
      62  emberAfScenesClusterStoreSceneCallback
      14  emberAfScenesClusterViewSceneCallback
      84  emberAfScenesMakeValid
      20  emberAfScenesSetSceneCountAttribute
      40  readServerAttribute
      14  writeServerAttribute

 
     1 byte  in section .bss
   377 bytes in section .rodata
 3 530 bytes in section .text
 
 3 530 bytes of CODE  memory
   377 bytes of CONST memory
     1 byte  of DATA  memory

Errors: none
Warnings: none
