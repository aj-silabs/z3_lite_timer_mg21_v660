###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:19
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\generic\mem-util.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWBDAD.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\generic\mem-util.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"mem-util.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0
#        -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\generic\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\mem-util.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\mem-util.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\generic\mem-util.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief generic memory manipulation routines.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          #include PLATFORM_HEADER
     18          #include "stack/include/ember-types.h"
     19          #include "include/error.h"
     20          
     21          #include "hal/hal.h"
     22          
     23          #if !defined(XAP2B) && !defined(UNIX)
     24          // A version of memmove. This can handle overlapping source and
     25          // destination regions.
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void halCommonMemMove(void *dest, const void *src, uint16_t bytes)
     28          {
   \                     halCommonMemMove: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
     29            uint8_t *d = (uint8_t *)dest;
     30            uint8_t *s = (uint8_t *)src;
     31          
     32            if (d > s) {
   \        0x2   0x4281             CMP      R1,R0
   \        0x4   0xD224             BCS.N    ??CrossCallReturnLabel_0
     33              d += bytes - 1;
   \        0x6   0x4410             ADD      R0,R0,R2
     34              s += bytes - 1;
   \        0x8   0x4411             ADD      R1,R1,R2
   \        0xA   0x1E40             SUBS     R0,R0,#+1
   \        0xC   0x1E49             SUBS     R1,R1,#+1
   \        0xE   0xE010             B.N      ??halCommonMemMove_0
     35              #ifndef _HAL_SMALL_MEMUTILS_
     36              while (bytes >= 4) {
     37                bytes -= 4;
     38                *d-- = *s--;
   \                     ??halCommonMemMove_1: (+1)
   \       0x10   0xF811 0x3901      LDRB     R3,[R1], #-1
   \       0x14   0x1F12             SUBS     R2,R2,#+4
   \       0x16   0xF800 0x3901      STRB     R3,[R0], #-1
     39                *d-- = *s--;
   \       0x1A   0xF811 0x4901      LDRB     R4,[R1], #-1
   \       0x1E   0xF800 0x4901      STRB     R4,[R0], #-1
     40                *d-- = *s--;
   \       0x22   0xF811 0x5901      LDRB     R5,[R1], #-1
   \       0x26   0xF800 0x5901      STRB     R5,[R0], #-1
     41                *d-- = *s--;
   \       0x2A   0xF811 0x6901      LDRB     R6,[R1], #-1
   \       0x2E   0xF800 0x6901      STRB     R6,[R0], #-1
     42              }
   \                     ??halCommonMemMove_0: (+1)
   \       0x32   0xB293             UXTH     R3,R2
   \       0x34   0x2B04             CMP      R3,#+4
   \       0x36   0xDAEB             BGE.N    ??halCommonMemMove_1
     43              #endif // _HAL_SMALL_MEMUTILS_
     44              for (; bytes != 0U; bytes--) {
   \                     ??halCommonMemMove_2: (+1)
   \       0x38   0xB293             UXTH     R3,R2
   \       0x3A   0x2B00             CMP      R3,#+0
   \       0x3C   0xBF1E             ITTT     NE 
   \       0x3E   0xF811 0x3901      LDRBNE   R3,[R1], #-1
   \       0x42   0xF800 0x3901      STRBNE   R3,[R0], #-1
   \       0x46   0x1E52             SUBNE    R2,R2,#+1
     45                *d-- = *s--;
   \       0x48   0xD1F6             BNE.N    ??halCommonMemMove_2
   \       0x4A   0xBD70             POP      {R4-R6,PC}
     46              }
     47            } else {
     48              #ifndef _HAL_SMALL_MEMUTILS_
     49              while (bytes >= 4) {
     50                bytes -= 4;
     51                *d++ = *s++;
   \                     ??halCommonMemMove_3: (+1)
   \       0x4C   0x....'....        BL       ?Subroutine0
     52                *d++ = *s++;
     53                *d++ = *s++;
     54                *d++ = *s++;
     55              }
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x50   0xB293             UXTH     R3,R2
   \       0x52   0x2B04             CMP      R3,#+4
   \       0x54   0xDAFA             BGE.N    ??halCommonMemMove_3
     56              #endif // _HAL_SMALL_MEMUTILS_
     57              for (; bytes != 0U; bytes--) {
   \                     ??halCommonMemMove_4: (+1)
   \       0x56   0xB293             UXTH     R3,R2
   \       0x58   0x2B00             CMP      R3,#+0
   \       0x5A   0xBF1E             ITTT     NE 
   \       0x5C   0xF811 0x3B01      LDRBNE   R3,[R1], #+1
   \       0x60   0xF800 0x3B01      STRBNE   R3,[R0], #+1
   \       0x64   0x1E52             SUBNE    R2,R2,#+1
     58                *d++ = *s++;
   \       0x66   0xD1F6             BNE.N    ??halCommonMemMove_4
     59              }
     60            }
     61          }
   \       0x68   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xF811 0x3B01      LDRB     R3,[R1], #+1
   \        0x4   0x1F12             SUBS     R2,R2,#+4
   \        0x6   0xF800 0x3B01      STRB     R3,[R0], #+1
   \        0xA   0xF811 0x4B01      LDRB     R4,[R1], #+1
   \        0xE   0xF800 0x4B01      STRB     R4,[R0], #+1
   \       0x12   0xF811 0x5B01      LDRB     R5,[R1], #+1
   \       0x16   0xF800 0x5B01      STRB     R5,[R0], #+1
   \       0x1A   0xF811 0x6B01      LDRB     R6,[R1], #+1
   \       0x1E   0xF800 0x6B01      STRB     R6,[R0], #+1
   \       0x22   0x4770             BX       LR
     62          
     63          // Same as above except copies from Program space to RAM.
     64          // This routine never has to worry about overlapping source and dest

   \                                 In section .text, align 2, keep-with-next
     65          void halCommonMemPGMCopy(void* dest, const void PGM_NO_CONST *source, uint16_t bytes)
     66          {
   \                     halCommonMemPGMCopy: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
     67            uint8_t *d = (uint8_t *)dest;
     68            PGM_PU s = (PGM_PU)source;
   \        0x2   0xE001             B.N      ??CrossCallReturnLabel_1
     69          
     70            #ifndef _HAL_SMALL_MEMUTILS_
     71            while (bytes >= 4) {
     72              bytes -= 4;
     73              *d++ = *s++;
   \                     ??halCommonMemPGMCopy_0: (+1)
   \        0x4   0x....'....        BL       ?Subroutine0
     74              *d++ = *s++;
     75              *d++ = *s++;
     76              *d++ = *s++;
     77            }
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x8   0xB293             UXTH     R3,R2
   \        0xA   0x2B04             CMP      R3,#+4
   \        0xC   0xDAFA             BGE.N    ??halCommonMemPGMCopy_0
     78            #endif // _HAL_SMALL_MEMUTILS_
     79            for (; bytes != 0U; bytes--) {
   \                     ??halCommonMemPGMCopy_1: (+1)
   \        0xE   0xB293             UXTH     R3,R2
   \       0x10   0x2B00             CMP      R3,#+0
   \       0x12   0xBF1E             ITTT     NE 
   \       0x14   0xF811 0x3B01      LDRBNE   R3,[R1], #+1
   \       0x18   0xF800 0x3B01      STRBNE   R3,[R0], #+1
   \       0x1C   0x1E52             SUBNE    R2,R2,#+1
     80              *d++ = *s++;
   \       0x1E   0xD1F6             BNE.N    ??halCommonMemPGMCopy_1
     81            }
     82          }
   \       0x20   0xBD70             POP      {R4-R6,PC}       ;; return
     83          

   \                                 In section .text, align 2, keep-with-next
     84          void halCommonMemSet(void *dest, uint8_t val, uint16_t bytes)
     85          {
   \                     halCommonMemSet: (+1)
   \        0x0   0x0013             MOVS     R3,R2
     86            uint8_t *d = (uint8_t *)dest;
     87          
     88            for (; bytes != 0U; bytes--) {
   \        0x2   0xD003             BEQ.N    ??halCommonMemSet_0
     89              *d++ = val;
   \        0x4   0x460A             MOV      R2,R1
   \        0x6   0x4619             MOV      R1,R3
   \        0x8   0x....'....        B.W      __aeabi_memset
     90            }
     91          }
   \                     ??halCommonMemSet_0: (+1)
   \        0xC   0x4770             BX       LR               ;; return
     92          

   \                                 In section .text, align 2, keep-with-next
     93          int16_t halCommonMemCompare(const void *source0, const void *source1, uint16_t bytes)
     94          {
   \                     halCommonMemCompare: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4603             MOV      R3,R0
     95            uint8_t *s0 = (uint8_t *)source0;
     96            uint8_t *s1 = (uint8_t *)source1;
   \        0x4   0xE000             B.N      ??halCommonMemCompare_0
     97          
     98            while (0 < bytes) {
     99              uint8_t b0 = *s0;
    100              uint8_t b1 = *s1;
    101              if (b0 != b1) {
    102                return b0 - b1;
    103              }
    104              bytes--;
   \                     ??halCommonMemCompare_1: (+1)
   \        0x6   0x1E52             SUBS     R2,R2,#+1
    105              s0++;
    106              s1++;
   \                     ??halCommonMemCompare_0: (+1)
   \        0x8   0xB290             UXTH     R0,R2
   \        0xA   0xB118             CBZ.N    R0,??halCommonMemCompare_2
   \        0xC   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x10   0xD0F9             BEQ.N    ??halCommonMemCompare_1
   \       0x12   0x1B00             SUBS     R0,R0,R4
    107            }
    108            return 0;
   \                     ??halCommonMemCompare_2: (+1)
   \       0x14   0xBD10             POP      {R4,PC}          ;; return
    109          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0xF813 0x0B01      LDRB     R0,[R3], #+1
   \        0x4   0xF811 0x4B01      LDRB     R4,[R1], #+1
   \        0x8   0x42A0             CMP      R0,R4
   \        0xA   0x4770             BX       LR
    110          
    111          // Test code for halCommonMemCompare().  There is no good place for unit tests
    112          // for this file.  If you change the function you should probably rerun the
    113          // test.
    114          //  {
    115          //    uint8_t s0[3] = { 0, 0, 0};
    116          //    uint8_t s1[3] = { 0, 0, 0};
    117          //    uint8_t i;
    118          //    assert(halCommonMemCompare(s0, s1, 0) == 0);
    119          //    assert(halCommonMemCompare(s0, s1, 3) == 0);
    120          //    for (i = 0; i < 3; i++) {
    121          //      s0[i] = 1;
    122          //      assert(halCommonMemCompare(s0, s1, 3) > 0);
    123          //      s1[i] = 2;
    124          //      assert(halCommonMemCompare(s0, s1, 3) < 0);
    125          //      s0[i] = 2;
    126          //    }
    127          //  }
    128          
    129          // Same again, except that the second source is in program space.
    130          

   \                                 In section .text, align 2, keep-with-next
    131          int8_t halCommonMemPGMCompare(const void *source0, const void PGM_NO_CONST *source1, uint16_t bytes)
    132          {
   \                     halCommonMemPGMCompare: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4603             MOV      R3,R0
    133            uint8_t *s0 = (uint8_t *)source0;
    134            uint8_t PGM *s1 = (uint8_t PGM *)source1;
   \        0x4   0xE000             B.N      ??halCommonMemPGMCompare_0
    135          
    136            while (0 < bytes) {
    137              uint8_t b0 = *s0;
    138              uint8_t b1 = *s1;
    139              if (b0 != b1) {
    140                return b0 - b1;
    141              }
    142              bytes--;
   \                     ??halCommonMemPGMCompare_1: (+1)
   \        0x6   0x1E52             SUBS     R2,R2,#+1
    143              s0++;
    144              s1++;
   \                     ??halCommonMemPGMCompare_0: (+1)
   \        0x8   0xB290             UXTH     R0,R2
   \        0xA   0xB120             CBZ.N    R0,??halCommonMemPGMCompare_2
   \        0xC   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x10   0xD0F9             BEQ.N    ??halCommonMemPGMCompare_1
   \       0x12   0x1B00             SUBS     R0,R0,R4
   \       0x14   0xB240             SXTB     R0,R0
    145            }
    146            return 0;
   \                     ??halCommonMemPGMCompare_2: (+1)
   \       0x16   0xBD10             POP      {R4,PC}          ;; return
    147          }
    148          
    149          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   halCommonMemCompare
      16   halCommonMemMove
       8   halCommonMemPGMCompare
      16   halCommonMemPGMCopy
       0   halCommonMemSet
         0   -> __aeabi_memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      36  ?Subroutine0
      12  ?Subroutine1
      22  halCommonMemCompare
     106  halCommonMemMove
      24  halCommonMemPGMCompare
      34  halCommonMemPGMCopy
      14  halCommonMemSet

 
 248 bytes in section .text
 
 248 bytes of CODE memory

Errors: none
Warnings: none
