###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:20:12
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-identify-server\zll-identify-server.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW8C7A.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-identify-server\zll-identify-server.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"zll-identify-server.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-identify-server\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\zll-identify-server.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\zll-identify-server.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\zll-identify-server\zll-identify-server.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Routines for the ZLL Identify Server plugin, which contains additions
      4           *        to the Identify server cluster.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          // this file contains all the common includes for clusters in the util
     20          #include "app/framework/include/af.h"
     21          #include "app/framework/util/common.h"
     22          
     23          #ifndef EZSP_HOST
     24          #include "hal/hal.h"
     25          #endif
     26          
     27          typedef struct {
     28            bool active;
     29            bool cancel;
     30            EmberAfIdentifyEffectIdentifier effectId;
     31            EmberAfIdentifyEffectVariant commandVariant;
     32            uint8_t eventsRemaining;
     33            uint16_t eventDelay;
     34          } EmAfZllIdentifyState;
     35          
     36          void emAfPluginZllIdentifyServerBlinkEffect(uint8_t endpoint);
     37          
     38          void emAfPluginZllIdentifyServerBreatheEffect(uint8_t endpoint);
     39          
     40          void emAfPluginZllIdentifyServerOkayEffect(uint8_t endpoint);
     41          
     42          void emAfPluginZllIdentifyServerChannelChangeEffect(uint8_t endpoint);
     43          
     44          extern EmberEventControl emberAfPluginZllIdentifyServerTriggerEffectEndpointEventControls[];
     45          

   \                                 In section .bss, align 4
     46          static EmAfZllIdentifyState stateTable[EMBER_AF_IDENTIFY_CLUSTER_SERVER_ENDPOINT_COUNT];
   \                     stateTable:
   \        0x0                      DS8 16
     47          
     48          static EmAfZllIdentifyState *getZllIdentifyState(uint8_t endpoint);
     49          
     50          static void deactivateZllIdentify(EmAfZllIdentifyState *state, uint8_t endpoint);
     51          

   \                                 In section .text, align 2, keep-with-next
     52          static EmAfZllIdentifyState *getZllIdentifyState(uint8_t endpoint)
     53          {
   \                     getZllIdentifyState: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     54            uint8_t index = emberAfFindClusterServerEndpointIndex(endpoint, ZCL_IDENTIFY_CLUSTER_ID);
   \        0x2   0x2103             MOVS     R1,#+3
   \        0x4   0x....'....        BL       emberAfFindClusterServerEndpointIndex
     55            return (index == 0xFF ? NULL : &stateTable[index]);
   \        0x8   0x28FF             CMP      R0,#+255
   \        0xA   0xD101             BNE.N    ??getZllIdentifyState_0
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0xBD02             POP      {R1,PC}
   \                     ??getZllIdentifyState_0: (+1)
   \       0x10   0x....             LDR.N    R1,??DataTable3
   \       0x12   0xEB01 0x00C0      ADD      R0,R1,R0, LSL #+3
   \       0x16   0xBD02             POP      {R1,PC}          ;; return
     56          }
     57          

   \                                 In section .text, align 2, keep-with-next
     58          static void deactivateZllIdentify(EmAfZllIdentifyState *state, uint8_t endpoint)
     59          {
     60            if (state == NULL) {
   \                     deactivateZllIdentify: (+1)
   \        0x0   0xB128             CBZ.N    R0,??deactivateZllIdentify_0
     61              return;
     62            }
     63          
     64            state->active = false;
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x7002             STRB     R2,[R0, #+0]
     65            state->cancel = false;
   \        0x6   0x7042             STRB     R2,[R0, #+1]
     66          
     67            emberAfEndpointEventControlSetInactive(emberAfPluginZllIdentifyServerTriggerEffectEndpointEventControls, endpoint);
   \        0x8   0x....             LDR.N    R0,??DataTable3_1
   \        0xA   0x....'....        B.W      emberAfEndpointEventControlSetInactive
   \                     ??deactivateZllIdentify_0: (+1)
   \        0xE   0x4770             BX       LR               ;; return
     68          }
     69          

   \                                 In section .text, align 2, keep-with-next
     70          void emberAfPluginZllIdentifyServerTriggerEffectEndpointEventHandler(uint8_t endpoint)
     71          {
   \                     emberAfPluginZllIdentifyServerTriggerEffectEndpointEventHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
     72            EmAfZllIdentifyState *state = getZllIdentifyState(endpoint);
   \        0x4   0x....'....        BL       getZllIdentifyState
   \        0x8   0x0004             MOVS     R4,R0
     73          
     74            if (state == NULL) {
   \        0xA   0xD01A             BEQ.N    ??emberAfPluginZllIdentifyServerTriggerEffectEn_0
     75              return;
     76            }
     77          
     78            switch (state->effectId) {
   \        0xC   0x78A0             LDRB     R0,[R4, #+2]
   \        0xE   0xB128             CBZ.N    R0,??emberAfPluginZllIdentifyServerTriggerEffectEn_1
   \       0x10   0x2801             CMP      R0,#+1
   \       0x12   0xBF1C             ITT      NE 
   \       0x14   0x2802             CMPNE    R0,#+2
   \       0x16   0x280B             CMPNE    R0,#+11
   \       0x18   0xD004             BEQ.N    ??emberAfPluginZllIdentifyServerTriggerEffectEn_2
   \       0x1A   0xE008             B.N      ??emberAfPluginZllIdentifyServerTriggerEffectEn_3
     79              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BLINK:
     80                emAfPluginZllIdentifyServerBlinkEffect(endpoint);
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_1: (+1)
   \       0x1C   0x4628             MOV      R0,R5
   \       0x1E   0x....'....        BL       emAfPluginZllIdentifyServerBlinkEffect
     81                break;
   \       0x22   0xE002             B.N      ??emberAfPluginZllIdentifyServerTriggerEffectEn_4
     82              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BREATHE:
     83                emAfPluginZllIdentifyServerBreatheEffect(endpoint);
     84                break;
     85              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_OKAY:
     86                emAfPluginZllIdentifyServerOkayEffect(endpoint);
     87                break;
     88              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_CHANNEL_CHANGE:
     89                emAfPluginZllIdentifyServerChannelChangeEffect(endpoint);
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_2: (+1)
   \       0x24   0x4628             MOV      R0,R5
   \       0x26   0x....'....        BL       emAfPluginZllIdentifyServerBlinkEffect
     90                break;
     91              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT: // At this point, these are functionally equivalent
     92              case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT:
     93              default:
     94                deactivateZllIdentify(state, endpoint);
     95                return;
     96            }
     97            if (state->cancel) {
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_4: (+1)
   \       0x2A   0x7860             LDRB     R0,[R4, #+1]
   \       0x2C   0xB100             CBZ.N    R0,??emberAfPluginZllIdentifyServerTriggerEffectEn_5
     98              deactivateZllIdentify(state, endpoint);
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_3: (+1)
   \       0x2E   0x....             B.N      ?Subroutine0
     99              return;
    100            }
    101          
    102            if (state->active) {
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_5: (+1)
   \       0x30   0x7820             LDRB     R0,[R4, #+0]
   \       0x32   0xB130             CBZ.N    R0,??emberAfPluginZllIdentifyServerTriggerEffectEn_0
    103              emberAfEndpointEventControlSetDelayMS(emberAfPluginZllIdentifyServerTriggerEffectEndpointEventControls,
    104                                                    endpoint,
    105                                                    state->eventDelay);
   \       0x34   0x88E2             LDRH     R2,[R4, #+6]
   \       0x36   0x4629             MOV      R1,R5
   \       0x38   0x....             LDR.N    R0,??DataTable3_1
   \       0x3A   0xE8BD 0x4038      POP      {R3-R5,LR}
   \       0x3E   0x....'....        B.W      emberAfEndpointEventControlSetDelayMS
    106            }
    107          }
   \                     ??emberAfPluginZllIdentifyServerTriggerEffectEn_0: (+1)
   \       0x42   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x4629             MOV      R1,R5
   \        0x2   0x4620             MOV      R0,R4
   \        0x4   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \        0x8   0x....             B.N      deactivateZllIdentify
    108          

   \                                 In section .text, align 2, keep-with-next
    109          bool emberAfIdentifyClusterTriggerEffectCallback(uint8_t effectId,
    110                                                           uint8_t effectVariant)
    111          {
   \                     emberAfIdentifyClusterTriggerEffectCallback: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x460C             MOV      R4,R1
    112            uint8_t endpoint = emberAfCurrentEndpoint();
   \        0x6   0x....             LDR.N    R0,??DataTable3_2
   \        0x8   0x6801             LDR      R1,[R0, #+0]
   \        0xA   0x680A             LDR      R2,[R1, #+0]
   \        0xC   0x7956             LDRB     R6,[R2, #+5]
    113            EmAfZllIdentifyState *state = getZllIdentifyState(endpoint);
   \        0xE   0x4630             MOV      R0,R6
   \       0x10   0x....'....        BL       getZllIdentifyState
    114            EmberAfStatus status;
    115          
    116            if (state == NULL) {
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD037             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_0
    117              status = EMBER_ZCL_STATUS_FAILURE;
    118              goto default_response;
    119            }
    120          
    121            emberAfIdentifyClusterPrintln("RX identify:trigger effect 0x%x variant 0x%x", effectId, effectVariant);
    122          
    123            if (state->active) {
   \       0x18   0x7801             LDRB     R1,[R0, #+0]
   \       0x1A   0xB161             CBZ.N    R1,??emberAfIdentifyClusterTriggerEffectCallback_1
    124              switch (state->effectId) {
   \       0x1C   0x7881             LDRB     R1,[R0, #+2]
   \       0x1E   0x29FE             CMP      R1,#+254
   \       0x20   0xD002             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_2
   \       0x22   0x29FF             CMP      R1,#+255
   \       0x24   0xD003             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_3
   \       0x26   0xE02F             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_0
    125                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT:
    126                  state->cancel = true;
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_2: (+1)
   \       0x28   0x2201             MOVS     R2,#+1
   \       0x2A   0x7042             STRB     R2,[R0, #+1]
    127                  status = EMBER_ZCL_STATUS_SUCCESS;
   \       0x2C   0xE020             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_4
    128                  break;
    129                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT:
    130                  deactivateZllIdentify(state, endpoint);
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_3: (+1)
   \       0x2E   0x4631             MOV      R1,R6
   \       0x30   0x....'....        BL       deactivateZllIdentify
    131                  status = EMBER_ZCL_STATUS_SUCCESS;
   \       0x34   0xE01C             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_4
    132                  goto default_response;
    133                default:
    134                  status = EMBER_ZCL_STATUS_FAILURE;
    135                  break;
    136              }
    137            } else {
    138              switch (effectId) {
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_1: (+1)
   \       0x36   0x0029             MOVS     R1,R5
   \       0x38   0xD00A             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_5
   \       0x3A   0x2D01             CMP      R5,#+1
   \       0x3C   0xD01D             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_6
   \       0x3E   0x2D02             CMP      R5,#+2
   \       0x40   0xD01D             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_7
   \       0x42   0x2D0B             CMP      R5,#+11
   \       0x44   0xD01E             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_8
   \       0x46   0x2DFE             CMP      R5,#+254
   \       0x48   0xBF18             IT       NE 
   \       0x4A   0x2DFF             CMPNE    R5,#+255
   \       0x4C   0xD010             BEQ.N    ??emberAfIdentifyClusterTriggerEffectCallback_4
   \       0x4E   0xE01B             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_0
    139                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BLINK:
    140                  state->eventsRemaining = EMBER_AF_PLUGIN_ZLL_IDENTIFY_SERVER_BLINK_EVENTS;
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_5: (+1)
   \       0x50   0x2102             MOVS     R1,#+2
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_9: (+1)
   \       0x52   0x7101             STRB     R1,[R0, #+4]
    141                  break;
    142                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_BREATHE:
    143                  state->eventsRemaining = EMBER_AF_PLUGIN_ZLL_IDENTIFY_SERVER_BREATHE_EVENTS;
    144                  break;
    145                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_OKAY:
    146                  state->eventsRemaining = EMBER_AF_PLUGIN_ZLL_IDENTIFY_SERVER_OKAY_EVENTS;
    147                  break;
    148                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_CHANNEL_CHANGE:
    149                  state->eventsRemaining = EMBER_AF_PLUGIN_ZLL_IDENTIFY_SERVER_CHANNEL_CHANGE_EVENTS;
    150                  break;
    151                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_FINISH_EFFECT: // At this point, these are functionally equivalent
    152                case EMBER_ZCL_IDENTIFY_EFFECT_IDENTIFIER_STOP_EFFECT:
    153                  status = EMBER_ZCL_STATUS_SUCCESS;
    154                  goto default_response;
    155                default:
    156                  status = EMBER_ZCL_STATUS_FAILURE;
    157                  goto default_response;
    158              }
    159              state->active = true;
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_10: (+1)
   \       0x54   0x2201             MOVS     R2,#+1
   \       0x56   0x7002             STRB     R2,[R0, #+0]
    160              state->cancel = false;
   \       0x58   0x2100             MOVS     R1,#+0
   \       0x5A   0x7041             STRB     R1,[R0, #+1]
    161              state->effectId = (EmberAfIdentifyEffectIdentifier)effectId;
    162              state->commandVariant = (EmberAfIdentifyEffectVariant)effectVariant;
    163              state->eventDelay = EMBER_AF_PLUGIN_ZLL_IDENTIFY_SERVER_EVENT_DELAY;
   \       0x5C   0xF44F 0x6180      MOV      R1,#+1024
   \       0x60   0x7085             STRB     R5,[R0, #+2]
   \       0x62   0x70C4             STRB     R4,[R0, #+3]
   \       0x64   0x80C1             STRH     R1,[R0, #+6]
    164              emberAfEndpointEventControlSetDelayMS(emberAfPluginZllIdentifyServerTriggerEffectEndpointEventControls,
    165                                                    endpoint,
    166                                                    state->eventDelay);
   \       0x66   0x460A             MOV      R2,R1
   \       0x68   0x4631             MOV      R1,R6
   \       0x6A   0x....             LDR.N    R0,??DataTable3_1
   \       0x6C   0x....'....        BL       emberAfEndpointEventControlSetDelayMS
    167              status = EMBER_ZCL_STATUS_SUCCESS;
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_4: (+1)
   \       0x70   0x2000             MOVS     R0,#+0
    168            }
    169          
    170            default_response:
    171            emberAfSendImmediateDefaultResponse(status);
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_11: (+1)
   \       0x72   0x....'....        BL       emberAfSendImmediateDefaultResponse
    172            return true;
   \       0x76   0x2001             MOVS     R0,#+1
   \       0x78   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_6: (+1)
   \       0x7A   0x2104             MOVS     R1,#+4
   \       0x7C   0xE7E9             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_9
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_7: (+1)
   \       0x7E   0x2206             MOVS     R2,#+6
   \       0x80   0x7102             STRB     R2,[R0, #+4]
   \       0x82   0xE7E7             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_10
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_8: (+1)
   \       0x84   0x2108             MOVS     R1,#+8
   \       0x86   0xE7E4             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_9
   \                     ??emberAfIdentifyClusterTriggerEffectCallback_0: (+1)
   \       0x88   0x2001             MOVS     R0,#+1
   \       0x8A   0xE7F2             B.N      ??emberAfIdentifyClusterTriggerEffectCallback_11
    173          }
    174          

   \                                 In section .text, align 2, keep-with-next
    175          void emAfPluginZllIdentifyServerBlinkEffect(uint8_t endpoint)
    176          {
   \                     emAfPluginZllIdentifyServerBlinkEffect: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4605             MOV      R5,R0
    177            EmAfZllIdentifyState *state = getZllIdentifyState(endpoint);
   \        0x4   0x....'....        BL       getZllIdentifyState
   \        0x8   0x0004             MOVS     R4,R0
    178          
    179            if (state == NULL || state->eventsRemaining == 0) {
   \        0xA   0xBF1C             ITT      NE 
   \        0xC   0x7920             LDRBNE   R0,[R4, #+4]
   \        0xE   0x2800             CMPNE    R0,#+0
   \       0x10   0xD100             BNE.N    ??emAfPluginZllIdentifyServerBlinkEffect_0
    180              deactivateZllIdentify(state, endpoint);
   \       0x12   0x....             B.N      ?Subroutine0
    181              return;
    182            }
    183          
    184          #ifndef EZSP_HOST
    185            halToggleLed(BOARDLED0);
   \                     ??emAfPluginZllIdentifyServerBlinkEffect_0: (+1)
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x....'....        BL       halToggleLed
    186            halToggleLed(BOARDLED1);
   \       0x1A   0x2001             MOVS     R0,#+1
   \       0x1C   0x....'....        BL       halToggleLed
    187            halToggleLed(BOARDLED2);
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x....'....        BL       halToggleLed
    188            halToggleLed(BOARDLED3);
   \       0x26   0x2001             MOVS     R0,#+1
   \       0x28   0x....'....        BL       halToggleLed
    189          #endif
    190          
    191            state->eventsRemaining = state->eventsRemaining - 1;
   \       0x2C   0x7920             LDRB     R0,[R4, #+4]
   \       0x2E   0x1E41             SUBS     R1,R0,#+1
   \       0x30   0x7121             STRB     R1,[R4, #+4]
    192          }
   \       0x32   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    193          

   \                                 In section .text, align 2, keep-with-next
    194          void emAfPluginZllIdentifyServerBreatheEffect(uint8_t endpoint)
    195          {
    196            emAfPluginZllIdentifyServerBlinkEffect(endpoint);
   \                     emAfPluginZllIdentifyServerBreatheEffect: (+1)
   \        0x0   0x....             B.N      emAfPluginZllIdentifyServerBlinkEffect
    197          }
    198          

   \                                 In section .text, align 2, keep-with-next
    199          void emAfPluginZllIdentifyServerOkayEffect(uint8_t endpoint)
    200          {
    201            emAfPluginZllIdentifyServerBlinkEffect(endpoint);
   \                     emAfPluginZllIdentifyServerOkayEffect: (+1)
   \        0x0   0x....             B.N      emAfPluginZllIdentifyServerBlinkEffect
    202          }
    203          

   \                                 In section .text, align 2, keep-with-next
    204          void emAfPluginZllIdentifyServerChannelChangeEffect(uint8_t endpoint)
    205          {
    206            emAfPluginZllIdentifyServerBlinkEffect(endpoint);
   \                     emAfPluginZllIdentifyServerChannelChangeEffect: (+1)
   \        0x0   0x....             B.N      emAfPluginZllIdentifyServerBlinkEffect
    207          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     stateTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x....'....        DC32     emberAfPluginZllIdentifyServerTriggerEffectEndpointEventControls

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     emAfCurrentCommand

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   deactivateZllIdentify
         0   -> emberAfEndpointEventControlSetInactive
      16   emAfPluginZllIdentifyServerBlinkEffect
         0   -> deactivateZllIdentify
        16   -> getZllIdentifyState
        16   -> halToggleLed
       0   emAfPluginZllIdentifyServerBreatheEffect
         0   -> emAfPluginZllIdentifyServerBlinkEffect
       0   emAfPluginZllIdentifyServerChannelChangeEffect
         0   -> emAfPluginZllIdentifyServerBlinkEffect
       0   emAfPluginZllIdentifyServerOkayEffect
         0   -> emAfPluginZllIdentifyServerBlinkEffect
      16   emberAfIdentifyClusterTriggerEffectCallback
        16   -> deactivateZllIdentify
        16   -> emberAfEndpointEventControlSetDelayMS
        16   -> emberAfSendImmediateDefaultResponse
        16   -> getZllIdentifyState
      16   emberAfPluginZllIdentifyServerTriggerEffectEndpointEventHandler
         0   -> deactivateZllIdentify
        16   -> emAfPluginZllIdentifyServerBlinkEffect
         0   -> emberAfEndpointEventControlSetDelayMS
        16   -> getZllIdentifyState
       8   getZllIdentifyState
         8   -> emberAfFindClusterServerEndpointIndex


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
      10  ?Subroutine0
      16  deactivateZllIdentify
      52  emAfPluginZllIdentifyServerBlinkEffect
       2  emAfPluginZllIdentifyServerBreatheEffect
       2  emAfPluginZllIdentifyServerChannelChangeEffect
       2  emAfPluginZllIdentifyServerOkayEffect
     140  emberAfIdentifyClusterTriggerEffectCallback
      68  emberAfPluginZllIdentifyServerTriggerEffectEndpointEventHandler
      24  getZllIdentifyState
      16  stateTable

 
  16 bytes in section .bss
 328 bytes in section .text
 
 328 bytes of CODE memory
  16 bytes of DATA memory

Errors: none
Warnings: none
