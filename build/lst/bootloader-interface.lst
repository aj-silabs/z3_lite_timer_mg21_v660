###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:18
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\bootloader-interface.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWCECB.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\bootloader-interface.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"bootloader-interface.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\bootloader-interface.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\bootloader-interface.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\bootloader-interface.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief EFR32 common bootloader HAL functions
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          #include PLATFORM_HEADER
     18          #if defined(CONFIGURATION_HEADER)
     19            #include CONFIGURATION_HEADER
     20          #endif
     21          #include "stack/include/ember-types.h"
     22          #include "hal/micro/bootloader-interface.h"
     23          #include "hal/micro/cortexm3/memmap.h"
     24          #include "hal/micro/cortexm3/common/bootloader-common.h"
     25          #include "api/btl_interface.h"  // for ApplicationProperties_t and other
     26          // Gecko bootloader related definitions.
     27          
     28          //////////////////////
     29          // Generic bootloader functionality
     30          ///////////
     31          
     32          #ifdef EMBER_AF_PLUGIN_DOTDOT_MFG_CERTS
     33          
     34          // The long token section is expected to be an integer number of flash pages
     35          // so that there's no chance erasure of adjacent sections will disturb its
     36          // data. We first calculate a default size if one was not provided and then
     37          // verify that expectation.
     38            #if !defined(LONG_TOKEN_DEFAULT_SIZE)
     39              #if FLASH_PAGE_SIZE == 2048U
     40                #define LONG_TOKEN_DEFAULT_SIZE (2 * FLASH_PAGE_SIZE)
     41              #elif FLASH_PAGE_SIZE == 8192U
     42                #define LONG_TOKEN_DEFAULT_SIZE (FLASH_PAGE_SIZE)
     43              #else
     44                #error "Unsupported FLASH_PAGE_SIZE."
     45              #endif
     46            #endif
     47          
     48            #if (LONG_TOKEN_DEFAULT_SIZE % FLASH_PAGE_SIZE) != 0U
     49              #error "Long token section size must be a multiple of FLASH_PAGE_SIZE."
     50            #endif
     51          
     52            #ifndef LONG_TOKEN_BASE
     53          
     54          // IAR
     55              #if defined (__ICCARM__)
     56          
     57                #ifndef __LONGTOKEN__
     58                  #define __LONGTOKEN__ "LONGTOKEN"
     59                #endif
     60          
     61          __root uint8_t longTokenStorage[LONG_TOKEN_DEFAULT_SIZE] @ __LONGTOKEN__;
     62                #define LONG_TOKEN_BASE (longTokenStorage)
     63          
     64          // GCC
     65              #elif defined (__GNUC__)
     66          
     67                #ifndef __LONGTOKEN__
     68                  #define __LONGTOKEN__ ".longtoken"
     69                #endif
     70          
     71          __attribute__((used)) uint8_t longTokenStorage[LONG_TOKEN_DEFAULT_SIZE] __attribute__ ((section(__LONGTOKEN__)));
     72          // If the linker doesn't provide __longTokenBase symbol, then use longTokenStorage
     73          extern char __longTokenBase __attribute__((alias("longTokenStorage")));
     74                #define LONG_TOKEN_BASE (&__longTokenBase)
     75          
     76              #else
     77                #error "Unsupported toolchain"
     78              #endif // __ICCARM__
     79          
     80            #endif // LONG_TOKEN_BASE
     81          uint8_t *longTokenAddress = (uint8_t *)LONG_TOKEN_BASE;
     82          #else
     83            #define LONG_TOKEN_BASE NULL
     84          #endif // EMBER_AF_PLUGIN_DOTDOT_MFG_CERTS
     85          

   \                                 In section .rodata, align 4, root
     86          NO_STRIPPING const ApplicationProperties_t appProperties = {
   \                     appProperties:
   \        0x0   0x13 0xB7          DC8 19, 183, 121, 250, 201, 37, 221, 183, 173, 243, 207, 224, 241, 182
   \              0x79 0xFA    
   \              0xC9 0x25    
   \              0xDD 0xB7    
   \              0xAD 0xF3    
   \              0xCF 0xE0    
   \              0xF1 0xB6    
   \        0xE   0x14 0xB8          DC8 20, 184
   \       0x10   0x0000'0101        DC32 257, 0, 4294967295, 1, 0, 0
   \              0x0000'0000  
   \              0xFFFF'FFFF  
   \              0x0000'0001  
   \              0x0000'0000  
   \              0x0000'0000  
   \       0x28   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x38   0x0000'0000        DC32 0H, 0H
   \              0x0000'0000  
     87            .magic = APPLICATION_PROPERTIES_MAGIC,
     88            .structVersion = APPLICATION_PROPERTIES_VERSION,
     89            .signatureType = APPLICATION_SIGNATURE_NONE,
     90            .signatureLocation = 0xFFFFFFFFU,
     91            .app = {
     92          #if defined(EMBER_STACK_CONNECT)
     93              .type = APPLICATION_TYPE_FLEX,
     94          #elif defined(EMBER_STACK_IP)
     95              .type = APPLICATION_TYPE_THREAD,
     96          #else
     97              .type = APPLICATION_TYPE_ZIGBEE,
     98          #endif
     99              .version = CUSTOMER_APPLICATION_VERSION,
    100              .capabilities = APPLICATION_PROPERTIES_CAPABILITIES,
    101              .productId = CUSTOMER_APPLICATION_PRODUCT_ID
    102            },
    103            .longTokenSectionAddress = (uint8_t *)LONG_TOKEN_BASE,
    104          };
    105          
    106          #if defined GECKO_INFO_PAGE_BTL      \
    107            || defined APP_GECKO_INFO_PAGE_BTL \
    108            || defined STA_GECKO_INFO_PAGE_BTL \
    109            || defined LOCAL_STORAGE_GECKO_INFO_PAGE_BTL
    110          #define NO_BAT
    111          
    112          static bool bootloaderIsCommonBootloader(void)
    113          {
    114            return true;
    115          }
    116          
    117          #else
    118          
    119          static bool bootloaderIsCommonBootloader(void)
    120          {
    121            if (halBootloaderAddressTable.baseTable.type == BOOTLOADER_ADDRESS_TABLE_TYPE) {
    122              return false;
    123            } else {
    124              return true;
    125            }
    126          }
    127          
    128          #endif
    129          
    130          /** @description Returns the bootloader type the application was
    131           *  built for.
    132           *
    133           * @return BL_TYPE_NULL, BL_TYPE_STANDALONE or BL_TYPE_APPLICATION
    134           */

   \                                 In section .text, align 2, keep-with-next
    135          BlBaseType halBootloaderGetType(void)
    136          {
    137            // Important distinction:
    138            //   this returns what bootloader the app was built for
    139            #ifdef NULL_BTL
    140            BLDEBUG_PRINT("built for NULL bootloader\r\n");
    141            return BL_TYPE_NULL;
    142            #elif defined APP_BTL
    143            // Deprecated
    144            BLDEBUG_PRINT("built for APP bootloader\r\n");
    145            return BL_TYPE_APPLICATION;
    146            #elif defined SERIAL_UART_BTL
    147            // Deprecated
    148            BLDEBUG_PRINT("built for SERIAL UART standalone bootloader\r\n");
    149            return BL_TYPE_STANDALONE;
    150            #elif defined SERIAL_USB_BTL
    151            // Deprecated
    152            BLDEBUG_PRINT("built for SERIAL USB standalone bootloader\r\n");
    153            return BL_TYPE_STANDALONE;
    154            #elif defined SERIAL_OTA_BTL
    155            // Deprecated
    156            BLDEBUG_PRINT("built for SERIAL OTA standalone bootloader\r\n");
    157            return BL_TYPE_STANDALONE;
    158            #elif defined GECKO_INFO_PAGE_BTL  \
    159            || defined APP_GECKO_INFO_PAGE_BTL \
    160            || defined STA_GECKO_INFO_PAGE_BTL \
    161            || defined LOCAL_STORAGE_GECKO_INFO_PAGE_BTL
    162            BLDEBUG_PRINT("built for Gecko info page bootloader\r\n");
    163            return BL_TYPE_STANDALONE;
    164            #else
    165            BLDEBUG_PRINT("built for generic bootloader\r\n");
    166            return BL_TYPE_BOOTLOADER;
   \                     halBootloaderGetType: (+1)
   \        0x0   0x2003             MOVS     R0,#+3
   \        0x2   0x4770             BX       LR               ;; return
    167            #endif
    168          }
    169          
    170          /** @description Returns the bootloader type present on the device.
    171           *
    172           * @return BL_TYPE_NULL, BL_TYPE_STANDALONE, BL_TYPE_APPLICATION or
    173           *         BL_TYPE_COMMON
    174           */

   \                                 In section .text, align 2, keep-with-next
    175          BlExtendedType halBootloaderGetInstalledType(void)
    176          {
    177            // Important distinction:
    178            //   this returns what bootloader is actually present on the chip
    179            if (bootloaderIsCommonBootloader()) {
   \                     halBootloaderGetInstalledType: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable3
   \        0x2   0x8A01             LDRH     R1,[R0, #+16]
   \        0x4   0xF640 0x32A7      MOVW     R2,#+2983
   \        0x8   0x4291             CMP      R1,R2
   \        0xA   0xD101             BNE.N    ??halBootloaderGetInstalledType_0
    180              // TODO: Assert that mainBootloaderTable pointer is sane
    181              if (mainBootloaderTable->capabilities & BOOTLOADER_CAPABILITY_STORAGE) {
    182                return BL_EXT_TYPE_APP_UNKNOWN;
    183              } else if (mainBootloaderTable->capabilities & BOOTLOADER_CAPABILITY_COMMUNICATION) {
    184                return BL_EXT_TYPE_STANDALONE_UNKNOWN;
    185              } else {
    186                return BL_EXT_TYPE_NULL;
    187              }
    188            } else {
    189          #ifndef NO_BAT
    190              return halBootloaderAddressTable.bootloaderType;
   \        0xC   0x8B00             LDRH     R0,[R0, #+24]
   \        0xE   0x4770             BX       LR
    191          #else
    192              return BL_EXT_TYPE_NULL;
    193          #endif
    194            }
   \                     ??halBootloaderGetInstalledType_0: (+1)
   \       0x10   0x2028             MOVS     R0,#+40
   \       0x12   0x6801             LDR      R1,[R0, #+0]
   \       0x14   0x6988             LDR      R0,[R1, #+24]
   \       0x16   0x03C1             LSLS     R1,R0,#+15
   \       0x18   0xD502             BPL.N    ??halBootloaderGetInstalledType_1
   \       0x1A   0xF44F 0x7000      MOV      R0,#+512
   \       0x1E   0x4770             BX       LR
   \                     ??halBootloaderGetInstalledType_1: (+1)
   \       0x20   0x02C0             LSLS     R0,R0,#+11
   \       0x22   0xD502             BPL.N    ??halBootloaderGetInstalledType_2
   \       0x24   0xF44F 0x7080      MOV      R0,#+256
   \       0x28   0x4770             BX       LR
   \                     ??halBootloaderGetInstalledType_2: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x4770             BX       LR               ;; return
    195          }
    196          

   \                                 In section .text, align 2, keep-with-next
    197          uint16_t halGetBootloaderVersion(void)
    198          {
    199            if (bootloaderIsCommonBootloader()) {
   \                     halGetBootloaderVersion: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable3
   \        0x2   0x8A01             LDRH     R1,[R0, #+16]
   \        0x4   0xF640 0x32A7      MOVW     R2,#+2983
   \        0x8   0x4291             CMP      R1,R2
   \        0xA   0xD101             BNE.N    ??halGetBootloaderVersion_0
    200              return mainBootloaderTable->header.version >> 16;
    201            } else {
    202          #ifndef NO_BAT
    203              return halBootloaderAddressTable.bootloaderVersion;
   \        0xC   0x8B40             LDRH     R0,[R0, #+26]
   \        0xE   0x4770             BX       LR
    204          #else
    205              return BOOTLOADER_INVALID_VERSION;
    206          #endif
    207            }
   \                     ??halGetBootloaderVersion_0: (+1)
   \       0x10   0x2028             MOVS     R0,#+40
   \       0x12   0x6801             LDR      R1,[R0, #+0]
   \       0x14   0x6888             LDR      R0,[R1, #+8]
   \       0x16   0x0C00             LSRS     R0,R0,#+16
   \       0x18   0x4770             BX       LR               ;; return
    208          }
    209          

   \                                 In section .text, align 2, keep-with-next
    210          void halGetExtendedBootloaderVersion(uint32_t* getEmberVersion, uint32_t* customerVersion)
    211          {
   \                     halGetExtendedBootloaderVersion: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
    212            uint32_t ember = 0xFFFFFFFFU, customer = 0xFFFFFFFFU;
    213          
    214            if (bootloaderIsCommonBootloader()) {
   \        0x2   0x....             LDR.N    R3,??DataTable3
   \        0x4   0x8A1C             LDRH     R4,[R3, #+16]
   \        0x6   0xF640 0x35A7      MOVW     R5,#+2983
   \        0xA   0xF04F 0x32FF      MOV      R2,#-1
   \        0xE   0x42AC             CMP      R4,R5
   \       0x10   0xD10C             BNE.N    ??halGetExtendedBootloaderVersion_0
    215              ember = mainBootloaderTable->header.version;
    216              customer = mainBootloaderTable->header.version;
    217            } else {
    218          #ifndef NO_BAT
    219              // check BAT version to figure out how to create the emberVersion
    220              if (halBootloaderAddressTable.baseTable.version >= 0x0109) {
   \       0x12   0x8B5C             LDRH     R4,[R3, #+26]
   \       0x14   0x8A5E             LDRH     R6,[R3, #+18]
   \       0x16   0xF240 0x1709      MOVW     R7,#+265
   \       0x1A   0x0425             LSLS     R5,R4,#+16
   \       0x1C   0x42BE             CMP      R6,R7
   \       0x1E   0xDB0A             BLT.N    ??halGetExtendedBootloaderVersion_1
    221                // Newer BATs have a bootloaderVersion and bootloaderBuild that need to be combined
    222                ember = ((uint32_t)halBootloaderAddressTable.bootloaderVersion) << 16 | halBootloaderAddressTable.bootloaderBuild;
   \       0x20   0xF833 0x2F4C      LDRH     R2,[R3, #+76]!
   \       0x24   0xEA42 0x0405      ORR      R4,R2,R5
    223                customer = halBootloaderAddressTable.customerBootloaderVersion;
   \       0x28   0x685A             LDR      R2,[R3, #+4]
   \       0x2A   0xE009             B.N      ??halGetExtendedBootloaderVersion_2
    224              } else {
   \                     ??halGetExtendedBootloaderVersion_0: (+1)
   \       0x2C   0x2228             MOVS     R2,#+40
   \       0x2E   0x6813             LDR      R3,[R2, #+0]
   \       0x30   0x689A             LDR      R2,[R3, #+8]
   \       0x32   0x4614             MOV      R4,R2
   \       0x34   0xE004             B.N      ??halGetExtendedBootloaderVersion_2
    225                // Older BATs had these fields grouped together. Reformat them to be in the new format
    226                ember  = (((uint32_t)halBootloaderAddressTable.bootloaderVersion) << 16) & 0xFF000000;
    227                ember |= halBootloaderAddressTable.bootloaderVersion & 0x000000FF;
   \                     ??halGetExtendedBootloaderVersion_1: (+1)
   \       0x36   0xF005 0x457F      AND      R5,R5,#0xFF000000
   \       0x3A   0xF004 0x04FF      AND      R4,R4,#0xFF
   \       0x3E   0x432C             ORRS     R4,R4,R5
    228              }
    229          #endif
    230            }
    231          
    232            // If the pointers aren't NULL copy the results over
    233            if (getEmberVersion != NULL) {
   \                     ??halGetExtendedBootloaderVersion_2: (+1)
   \       0x40   0xB100             CBZ.N    R0,??halGetExtendedBootloaderVersion_3
    234              *getEmberVersion = ember;
   \       0x42   0x6004             STR      R4,[R0, #+0]
    235            }
    236            if (customerVersion != NULL) {
   \                     ??halGetExtendedBootloaderVersion_3: (+1)
   \       0x44   0xB101             CBZ.N    R1,??halGetExtendedBootloaderVersion_4
    237              *customerVersion = customer;
   \       0x46   0x600A             STR      R2,[R1, #+0]
    238            }
    239          }
   \                     ??halGetExtendedBootloaderVersion_4: (+1)
   \       0x48   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x....'....        DC32     halBootloaderAddressTable

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   halBootloaderGetInstalledType
       0   halBootloaderGetType
       0   halGetBootloaderVersion
      20   halGetExtendedBootloaderVersion


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
      64  appProperties
      46  halBootloaderGetInstalledType
       4  halBootloaderGetType
      26  halGetBootloaderVersion
      74  halGetExtendedBootloaderVersion

 
  64 bytes in section .rodata
 154 bytes in section .text
 
 154 bytes of CODE  memory
  64 bytes of CONST memory

Errors: none
Warnings: none
