###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:06
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-soc.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW9D0B.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-soc.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"af-main-soc.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\af-main-soc.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\af-main-soc.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\af-main-soc.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          
     18          #include "app/framework/include/af.h"
     19          #include "app/framework/util/attribute-storage.h"
     20          #include "app/util/serial/command-interpreter2.h"
     21          
     22          // ZDO
     23          #include "app/util/zigbee-framework/zigbee-device-common.h"
     24          #include "app/util/zigbee-framework/zigbee-device-library.h"
     25          
     26          #include "app/util/counters/counters.h"
     27          #include "app/util/security/security.h"
     28          #include "app/util/common/form-and-join.h"
     29          
     30          #include "app/framework/util/service-discovery.h"
     31          #include "app/framework/util/af-main.h"
     32          #include "app/framework/util/util.h"
     33          
     34          #include "app/framework/security/af-security.h"
     35          #include "app/framework/security/crypto-state.h"
     36          
     37          #include "app/framework/plugin/partner-link-key-exchange/partner-link-key-exchange.h"
     38          #include "app/framework/plugin/fragmentation/fragmentation.h"
     39          
     40          #include "znet-bookkeeping.h"
     41          
     42          #if defined(CORTEXM3_EFR32_MICRO) || defined(CORTEXM3_EMBER_MICRO)
     43            #define EXTENDED_RESET_INFO
     44            #include "hal/micro/cortexm3/diagnostic.h"
     45          #endif
     46          
     47          // *****************************************************************************
     48          // Globals
     49          
     50          // APP_SERIAL is set in the project files

   \                                 In section .data, align 1
     51          uint8_t serialPort = APP_SERIAL;
   \                     serialPort:
   \        0x0   0x20               DC8 32
     52          
     53          #if (EMBER_AF_BAUD_RATE == 300)
     54            #define BAUD_RATE BAUD_300
     55          #elif (EMBER_AF_BAUD_RATE == 600)
     56            #define BAUD_RATE BAUD_600
     57          #elif (EMBER_AF_BAUD_RATE == 900)
     58            #define BAUD_RATE BAUD_900
     59          #elif (EMBER_AF_BAUD_RATE == 1200)
     60            #define BAUD_RATE BAUD_1200
     61          #elif (EMBER_AF_BAUD_RATE == 2400)
     62            #define BAUD_RATE BAUD_2400
     63          #elif (EMBER_AF_BAUD_RATE == 4800)
     64            #define BAUD_RATE BAUD_4800
     65          #elif (EMBER_AF_BAUD_RATE == 9600)
     66            #define BAUD_RATE BAUD_9600
     67          #elif (EMBER_AF_BAUD_RATE == 14400)
     68            #define BAUD_RATE BAUD_14400
     69          #elif (EMBER_AF_BAUD_RATE == 19200)
     70            #define BAUD_RATE BAUD_19200
     71          #elif (EMBER_AF_BAUD_RATE == 28800)
     72            #define BAUD_RATE BAUD_28800
     73          #elif (EMBER_AF_BAUD_RATE == 38400)
     74            #define BAUD_RATE BAUD_38400
     75          #elif (EMBER_AF_BAUD_RATE == 50000)
     76            #define BAUD_RATE BAUD_50000
     77          #elif (EMBER_AF_BAUD_RATE == 57600)
     78            #define BAUD_RATE BAUD_57600
     79          #elif (EMBER_AF_BAUD_RATE == 76800)
     80            #define BAUD_RATE BAUD_76800
     81          #elif (EMBER_AF_BAUD_RATE == 100000)
     82            #define BAUD_RATE BAUD_100000
     83          #elif (EMBER_AF_BAUD_RATE == 115200)
     84            #define BAUD_RATE BAUD_115200
     85          #elif (EMBER_AF_BAUD_RATE == 230400)
     86            #define BAUD_RATE BAUD_230400
     87          #elif (EMBER_AF_BAUD_RATE == 460800)
     88            #define BAUD_RATE BAUD_460800
     89          #elif defined(HAL_CONFIG)
     90            #define BAUD_RATE HAL_SERIAL_APP_BAUD_RATE
     91          #else
     92            #error EMBER_AF_BAUD_RATE set to an invalid baud rate
     93          #endif
     94          
     95          #if defined(MAIN_FUNCTION_HAS_STANDARD_ARGUMENTS)
     96            #define APP_FRAMEWORK_MAIN_ARGUMENTS argc, argv
     97          #else
     98            #define APP_FRAMEWORK_MAIN_ARGUMENTS 0, NULL
     99          #endif
    100          
    101          #if defined(__CYGWIN__)
    102          // This is necessary when running simulation on Windows.
    103          const EmberLibraryStatus emNcpLibraryStatus = EMBER_LIBRARY_IS_STUB;
    104          #endif
    105          
    106          // *****************************************************************************
    107          // Forward declarations.
    108          
    109          #if defined(EMBER_TEST) && defined(EMBER_AF_PLUGIN_OTA_STORAGE_SIMPLE_EEPROM)
    110          void emAfSetupFakeEepromForSimulation(void);
    111            #define SETUP_FAKE_EEPROM_FOR_SIMULATION() emAfSetupFakeEepromForSimulation()
    112          #else
    113            #define SETUP_FAKE_EEPROM_FOR_SIMULATION()
    114          #endif
    115          
    116          #if defined(ZA_CLI_FULL)
    117            #define COMMAND_READER_INIT() emberCommandReaderInit()
    118          #else
    119            #define COMMAND_READER_INIT()
    120          #endif
    121          
    122          // *****************************************************************************
    123          // Functions
    124          

   \                                 In section .text, align 2, keep-with-next
    125          void emberAfMainInit(void)
    126          {
   \                     emberAfMainInit: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    127            SETUP_FAKE_EEPROM_FOR_SIMULATION();
    128          
    129            INTERRUPTS_ON();  // Safe to enable interrupts at this point
   \        0x2   0x....'....        BL       CORE_AtomicEnableIrq
    130          
    131            emberSerialInit(APP_SERIAL, BAUD_RATE, PARITY_NONE, 1);
   \        0x6   0x2301             MOVS     R3,#+1
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0xF44F 0x31E1      MOV      R1,#+115200
   \        0xE   0x2020             MOVS     R0,#+32
   \       0x10   0x....'....        BL       emberSerialInit
    132          
    133            emberAfCorePrintln("Reset info: 0x%x (%p)",
    134                               halGetResetInfo(),
    135                               halGetResetString());
   \       0x14   0x....'....        BL       halGetResetString
   \       0x18   0x4604             MOV      R4,R0
   \       0x1A   0x....'....        BL       halGetResetInfo
   \       0x1E   0x4602             MOV      R2,R0
   \       0x20   0x4623             MOV      R3,R4
   \       0x22   0x....'....        LDR.W    R1,??DataTable11
   \       0x26   0x2001             MOVS     R0,#+1
   \       0x28   0x....'....        BL       emberAfPrintln
    136          
    137          #if defined(EXTENDED_RESET_INFO)
    138            emberAfCorePrintln("Extended Reset info: 0x%2X (%p)",
    139                               halGetExtendedResetInfo(),
    140                               halGetExtendedResetString());
   \       0x2C   0x....'....        BL       halGetExtendedResetString
   \       0x30   0x4604             MOV      R4,R0
   \       0x32   0x....'....        BL       halGetExtendedResetInfo
   \       0x36   0x4602             MOV      R2,R0
   \       0x38   0x4623             MOV      R3,R4
   \       0x3A   0x....'....        LDR.W    R1,??DataTable11_1
   \       0x3E   0x2001             MOVS     R0,#+1
   \       0x40   0x....'....        BL       emberAfPrintln
    141          
    142            if (halResetWasCrash()) {
   \       0x44   0xF240 0x74A1      MOVW     R4,#+1953
   \       0x48   0x....'....        BL       halGetResetInfo
   \       0x4C   0x40C4             LSRS     R4,R4,R0
   \       0x4E   0x07E0             LSLS     R0,R4,#+31
   \       0x50   0xD50C             BPL.N    ??emberAfMainInit_0
    143              halPrintCrashSummary(serialPort);
   \       0x52   0x....'....        LDR.W    R4,??DataTable11_2
   \       0x56   0x7820             LDRB     R0,[R4, #+0]
   \       0x58   0x....'....        BL       halPrintCrashSummary
    144              halPrintCrashDetails(serialPort);
   \       0x5C   0x7820             LDRB     R0,[R4, #+0]
   \       0x5E   0x....'....        BL       halPrintCrashDetails
    145              halPrintCrashData(serialPort);
   \       0x62   0x7820             LDRB     R0,[R4, #+0]
   \       0x64   0xE8BD 0x4010      POP      {R4,LR}
   \       0x68   0x....'....        B.W      halPrintCrashData
    146            }
    147          #endif
    148          }
   \                     ??emberAfMainInit_0: (+1)
   \       0x6C   0xBD10             POP      {R4,PC}          ;; return
    149          

   \                                 In section .text, align 2, keep-with-next
    150          int emberAfMain(MAIN_FUNCTION_PARAMETERS)
    151          {
   \                     emberAfMain: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    152            EmberStatus status;
    153          
    154            {
    155              int returnCode;
    156              if (emberAfMainStartCallback(&returnCode, APP_FRAMEWORK_MAIN_ARGUMENTS)) {
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x2100             MOVS     R1,#+0
   \        0x6   0x4668             MOV      R0,SP
   \        0x8   0x....'....        BL       emberAfMainStartCallback
   \        0xC   0xB108             CBZ.N    R0,??emberAfMain_0
    157                return returnCode;
   \        0xE   0x9800             LDR      R0,[SP, #+0]
   \       0x10   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    158              }
    159            }
    160          
    161            // Initialize the Ember Stack.
    162            status = emberInit();
   \                     ??emberAfMain_0: (+1)
   \       0x12   0x....'....        BL       emberInit
    163          
    164            if (status != EMBER_SUCCESS) {
   \       0x16   0xB160             CBZ.N    R0,??emberAfMain_1
    165              emberAfCorePrintln("%pemberInit 0x%x", "ERROR: ", status);
   \       0x18   0x4603             MOV      R3,R0
   \       0x1A   0x....'....        LDR.W    R2,??DataTable11_3
   \       0x1E   0x....'....        LDR.W    R1,??DataTable11_4
   \       0x22   0x2001             MOVS     R0,#+1
   \       0x24   0x....'....        BL       emberAfPrintln
    166          
    167              // The app can choose what to do here.  If the app is running
    168              // another device then it could stay running and report the
    169              // error visually for example. This app asserts.
    170              assert(false);
   \       0x28   0x21AA             MOVS     R1,#+170
   \       0x2A   0x....'....        LDR.W    R0,??DataTable11_5
   \       0x2E   0x....'....        BL       halInternalAssertFailed
    171            } else {
    172              emberAfDebugPrintln("init pass");
    173            }
    174          
    175          #if defined(EMBER_ENABLE_EM4)
    176          #if defined(EMBER_TEST)
    177            uint8_t reset;
    178            reset = halGetResetInfo();
    179            if (reset == RESET_2xx_SOFTWARE_EM4) {
    180              // This can only be called if idle-sleep plugin is enabled, and em4 is OK.
    181              emberAfCameBackFromEM4Callback();
    182            }
    183          #else
    184            uint16_t extReset;
    185            extReset = halGetExtendedResetInfo();
    186            emberAfCorePrintln("extReset :%d , RESET_SOFTWARE_EM4 : %d, RESET_EXTERNAL_EM4PIN= %d",
    187                               extReset,
    188                               RESET_SOFTWARE_EM4,
    189                               RESET_EXTERNAL_EM4PIN);
    190            if (extReset == RESET_SOFTWARE_EM4 || extReset == RESET_EXTERNAL_EM4PIN) {
    191              emberAfCameBackFromEM4Callback();
    192            }
    193          #endif // EMBER_TEST
    194          #endif
    195          
    196            // This will initialize the stack of networks maintained by the framework,
    197            // including setting the default network.
    198            emAfInitializeNetworkIndexStack();
   \                     ??emberAfMain_1: (+1)
   \       0x32   0x....'....        BL       emAfInitializeNetworkIndexStack
    199          
    200            // Initialize messageSentCallbacks table
    201            emAfInitializeMessageSentCallbackArray();
   \       0x36   0x....'....        BL       emAfInitializeMessageSentCallbackArray
    202          
    203            emberAfEndpointConfigure();
   \       0x3A   0x....'....        BL       emberAfEndpointConfigure
    204          
    205            emAfInit();
   \       0x3E   0x....'....        BL       emAfInit
    206          
    207            // The address cache needs to be initialized and used with the source routing
    208            // code for the trust center to operate properly.
    209            securityAddressCacheInit(EMBER_AF_PLUGIN_ADDRESS_TABLE_SIZE,                     // offset
    210                                     EMBER_AF_PLUGIN_ADDRESS_TABLE_TRUST_CENTER_CACHE_SIZE); // size
   \       0x42   0x2102             MOVS     R1,#+2
   \       0x44   0x2002             MOVS     R0,#+2
   \       0x46   0x....'....        BL       securityAddressCacheInit
    211          
    212            EM_AF_NETWORK_INIT();
   \       0x4A   0x....'....        BL       emAfNetworkInit
    213          
    214            COMMAND_READER_INIT();
   \       0x4E   0x....'....        BL       emberCommandReaderInit
    215          
    216            // Set the manufacturing code. This is defined by ZigBee document 053874r10
    217            // Ember's ID is 0x1002 and is the default, but this can be overridden in App Builder.
    218            emberSetManufacturerCode(EMBER_AF_MANUFACTURER_CODE);
   \       0x52   0xF241 0x0002      MOVW     R0,#+4098
   \       0x56   0x....'....        LDR.W    R1,??DataTable11_6
   \       0x5A   0x8008             STRH     R0,[R1, #+0]
    219          
    220            emberSetMaximumIncomingTransferSize(EMBER_AF_INCOMING_BUFFER_LENGTH);
   \       0x5C   0x2252             MOVS     R2,#+82
   \       0x5E   0x....'....        LDR.W    R3,??DataTable11_7
   \       0x62   0x801A             STRH     R2,[R3, #+0]
    221            emberSetMaximumOutgoingTransferSize(EMBER_AF_MAXIMUM_SEND_PAYLOAD_LENGTH);
   \       0x64   0x....'....        LDR.W    R1,??DataTable11_8
   \       0x68   0x800A             STRH     R2,[R1, #+0]
    222            emberSetTxPowerMode(EMBER_AF_TX_POWER_MODE);
   \       0x6A   0xF44F 0x4000      MOV      R0,#+32768
   \       0x6E   0x....'....        BL       emberSetTxPowerMode
   \       0x72   0x....'....        LDR.W    R4,??DataTable11_9
   \       0x76   0x....'....        LDR.W    R5,??DataTable11_10
   \       0x7A   0xE001             B.N      ??emberAfMain_2
    223          
    224            while (true) {
    225              halResetWatchdog();   // Periodically reset the watchdog.
    226              emberTick();          // Allow the stack to run.
    227              // Allow the ZCL clusters and plugin ticks to run. This should go
    228              // immediately after emberTick
    229              // Skip these ticks if a crypto operation is ongoing
    230              if (0 == emAfIsCryptoOperationInProgress()) {
    231                emAfTick();
    232              }
    233          
    234              emberSerialBufferTick();
    235          
    236              emberAfRunEvents();
    237          
    238          #if defined(ZA_CLI_FULL)
    239              if (emberProcessCommandInput(APP_SERIAL)) {
    240                emberAfGuaranteedPrint("%p>", ZA_PROMPT);
    241              }
    242          #endif
    243          
    244          #if defined(EMBER_TEST)
    245              if (true) {
    246                // Simulation only
    247                uint32_t timeToNextEventMax = emberMsToNextStackEvent();
    248                timeToNextEventMax = emberAfMsToNextEvent(timeToNextEventMax);
    249                simulatedTimePassesMs(timeToNextEventMax);
    250              }
    251          #endif
    252          
    253              // After each interation through the main loop, our network index stack
    254              // should be empty and we should be on the default network index again.
    255              emAfAssertNetworkIndexStackIsEmpty();
   \                     ??emberAfMain_3: (+1)
   \       0x7C   0x....'....        BL       emAfAssertNetworkIndexStackIsEmpty
    256          
    257              if (false) {
   \                     ??emberAfMain_2: (+1)
   \       0x80   0x....'....        BL       halInternalResetWatchDog
   \       0x84   0x....'....        BL       emberTick
   \       0x88   0x....'....        BL       emAfGetCryptoStatus
   \       0x8C   0x2801             CMP      R0,#+1
   \       0x8E   0xBF18             IT       NE 
   \       0x90   0x....'....        BLNE     emAfTick
   \       0x94   0x....'....        BL       emberSerialBufferTick
   \       0x98   0x....'....        BL       emberAfRunEvents
   \       0x9C   0x2120             MOVS     R1,#+32
   \       0x9E   0x2000             MOVS     R0,#+0
   \       0xA0   0x....'....        BL       emberProcessCommandString
   \       0xA4   0x2800             CMP      R0,#+0
   \       0xA6   0xD0E9             BEQ.N    ??emberAfMain_3
   \       0xA8   0x462A             MOV      R2,R5
   \       0xAA   0x4621             MOV      R1,R4
   \       0xAC   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0xB0   0x....'....        BL       emberAfPrint
   \       0xB4   0xE7E2             B.N      ??emberAfMain_3
    258                break;
    259              }
    260            }
    261            return 0;
    262          }
    263          

   \                                 In section .text, align 2, keep-with-next
    264          void emberAfGetMfgString(uint8_t* returnData)
    265          {
    266            halCommonGetMfgToken(returnData, TOKEN_MFG_STRING);
   \                     emberAfGetMfgString: (+1)
   \        0x0   0x....'....        LDR.W    R1,??DataTable11_11
   \        0x4   0x8809             LDRH     R1,[R1, #+0]
   \        0x6   0x2310             MOVS     R3,#+16
   \        0x8   0x227F             MOVS     R2,#+127
   \        0xA   0x....'....        B.W      halInternalGetMfgTokenData
    267          }
    268          

   \                                 In section .text, align 2, keep-with-next
    269          EmberNodeId emberAfGetNodeId(void)
    270          {
    271            return emberGetNodeId();
   \                     emberAfGetNodeId: (+1)
   \        0x0   0x....'....        B.W      emberGetNodeId
    272          }
    273          

   \                                 In section .text, align 2, keep-with-next
    274          EmberPanId emberAfGetPanId(void)
    275          {
    276            return emberGetPanId();
   \                     emberAfGetPanId: (+1)
   \        0x0   0x....'....        B.W      emberGetPanId
    277          }
    278          

   \                                 In section .text, align 2, keep-with-next
    279          EmberNetworkStatus emberAfNetworkState(void)
    280          {
    281            return emberNetworkState();
   \                     emberAfNetworkState: (+1)
   \        0x0   0x....'....        B.W      emberNetworkState
    282          }
    283          

   \                                 In section .text, align 2, keep-with-next
    284          uint8_t emberAfGetRadioChannel(void)
    285          {
    286            return emberGetRadioChannel();
   \                     emberAfGetRadioChannel: (+1)
   \        0x0   0x....'....        B.W      emberGetRadioChannel
    287          }
    288          

   \                                 In section .text, align 2, keep-with-next
    289          uint8_t emberAfGetBindingIndex(void)
    290          {
    291            return emberGetBindingIndex();
   \                     emberAfGetBindingIndex: (+1)
   \        0x0   0x....'....        B.W      emberGetBindingIndex
    292          }
    293          

   \                                 In section .text, align 2, keep-with-next
    294          uint8_t emberAfGetStackProfile(void)
    295          {
    296            return EMBER_STACK_PROFILE;
   \                     emberAfGetStackProfile: (+1)
   \        0x0   0x2002             MOVS     R0,#+2
   \        0x2   0x4770             BX       LR               ;; return
    297          }
    298          

   \                                 In section .text, align 2, keep-with-next
    299          uint8_t emberAfGetAddressIndex(void)
    300          {
   \                     emberAfGetAddressIndex: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
    301            EmberEUI64 longId;
    302            EmberEUI64 longIdIterator;
    303            uint8_t i;
    304          
    305            if ((emberGetSenderEui64(longId)) == EMBER_SUCCESS) {
   \        0x4   0xA802             ADD      R0,SP,#+8
   \        0x6   0x....'....        BL       emberGetSenderEui64
   \        0xA   0xB988             CBNZ.N   R0,??emberAfGetAddressIndex_0
    306              for (i = 0; i < EMBER_AF_PLUGIN_ADDRESS_TABLE_SIZE; i++) {
   \        0xC   0x2400             MOVS     R4,#+0
    307                emberGetAddressTableRemoteEui64(i, longIdIterator);
   \                     ??emberAfGetAddressIndex_1: (+1)
   \        0xE   0x4669             MOV      R1,SP
   \       0x10   0xB2E0             UXTB     R0,R4
   \       0x12   0x....'....        BL       emberGetAddressTableRemoteEui64
    308                if (MEMCOMPARE(longIdIterator, longId, EUI64_SIZE) == 0) {
   \       0x16   0x2208             MOVS     R2,#+8
   \       0x18   0xA902             ADD      R1,SP,#+8
   \       0x1A   0x4668             MOV      R0,SP
   \       0x1C   0x....'....        BL       halCommonMemCompare
   \       0x20   0xB1C0             CBZ.N    R0,??emberAfGetAddressIndex_2
    309                  return i;
    310                }
    311              }
   \       0x22   0x1C64             ADDS     R4,R4,#+1
   \       0x24   0xB2E0             UXTB     R0,R4
   \       0x26   0x2802             CMP      R0,#+2
   \       0x28   0xDBF1             BLT.N    ??emberAfGetAddressIndex_1
    312            } else {
    313              EmberNodeId nodeId = emberGetSender();
    314              if (nodeId == EMBER_NULL_NODE_ID) {
    315                return EMBER_NULL_ADDRESS_TABLE_INDEX;
    316              }
    317              for (i = 0; i < EMBER_AF_PLUGIN_ADDRESS_TABLE_SIZE; i++) {
    318                if (emberGetAddressTableRemoteNodeId(i) == nodeId) {
    319                  return i;
    320                }
    321              }
    322            }
    323            return EMBER_NULL_ADDRESS_TABLE_INDEX;
   \                     ??emberAfGetAddressIndex_3: (+1)
   \       0x2A   0x20FF             MOVS     R0,#+255
   \                     ??emberAfGetAddressIndex_4: (+1)
   \       0x2C   0xB005             ADD      SP,SP,#+20
   \       0x2E   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??emberAfGetAddressIndex_0: (+1)
   \       0x30   0x....'....        BL       emberGetSender
   \       0x34   0x4605             MOV      R5,R0
   \       0x36   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x3A   0x4285             CMP      R5,R0
   \       0x3C   0xD0F5             BEQ.N    ??emberAfGetAddressIndex_3
   \       0x3E   0x2400             MOVS     R4,#+0
   \                     ??emberAfGetAddressIndex_5: (+1)
   \       0x40   0xB2E0             UXTB     R0,R4
   \       0x42   0x....'....        BL       emberGetAddressTableRemoteNodeId
   \       0x46   0x42A8             CMP      R0,R5
   \       0x48   0xD004             BEQ.N    ??emberAfGetAddressIndex_2
   \       0x4A   0x1C64             ADDS     R4,R4,#+1
   \       0x4C   0xB2E0             UXTB     R0,R4
   \       0x4E   0x2802             CMP      R0,#+2
   \       0x50   0xDBF6             BLT.N    ??emberAfGetAddressIndex_5
   \       0x52   0xE7EA             B.N      ??emberAfGetAddressIndex_3
   \                     ??emberAfGetAddressIndex_2: (+1)
   \       0x54   0xB2E0             UXTB     R0,R4
   \       0x56   0xE7E9             B.N      ??emberAfGetAddressIndex_4
    324          }
    325          
    326          // ******************************************************************
    327          // binding
    328          // ******************************************************************

   \                                 In section .text, align 2, keep-with-next
    329          EmberStatus emberAfSendEndDeviceBind(uint8_t endpoint)
    330          {
   \                     emberAfSendEndDeviceBind: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    331            EmberStatus status;
    332            EmberApsOption options = ((EMBER_AF_DEFAULT_APS_OPTIONS
    333                                       | EMBER_APS_OPTION_SOURCE_EUI64)
    334                                      & ~EMBER_APS_OPTION_RETRY);
    335          
    336            status = emberAfPushEndpointNetworkIndex(endpoint);
   \        0x4   0x....'....        BL       emberAfPushEndpointNetworkIndex
    337            if (status != EMBER_SUCCESS) {
   \        0x8   0x0001             MOVS     R1,R0
   \        0xA   0xD116             BNE.N    ??emberAfSendEndDeviceBind_0
    338              return status;
    339            }
    340          
    341            emberAfZdoPrintln("send %x %2x", endpoint, options);
   \        0xC   0xF44F 0x53A8      MOV      R3,#+5376
   \       0x10   0x4622             MOV      R2,R4
   \       0x12   0x....'....        LDR.W    R1,??DataTable11_12
   \       0x16   0x2004             MOVS     R0,#+4
   \       0x18   0x....'....        BL       emberAfPrintln
    342            status = emberEndDeviceBindRequest(endpoint, options);
   \       0x1C   0xF44F 0x51A8      MOV      R1,#+5376
   \       0x20   0x4620             MOV      R0,R4
   \       0x22   0x....'....        BL       emberEndDeviceBindRequest
   \       0x26   0x4604             MOV      R4,R0
    343            emberAfZdoPrintln("done: %x.", status);
   \       0x28   0x4622             MOV      R2,R4
   \       0x2A   0x....'....        LDR.W    R1,??DataTable11_13
   \       0x2E   0x2004             MOVS     R0,#+4
   \       0x30   0x....'....        BL       emberAfPrintln
    344            emberAfZdoFlush();
    345          
    346            emberAfPopNetworkIndex();
   \       0x34   0x....'....        BL       emberAfPopNetworkIndex
    347            return status;
   \       0x38   0x4620             MOV      R0,R4
   \                     ??emberAfSendEndDeviceBind_0: (+1)
   \       0x3A   0xBD10             POP      {R4,PC}          ;; return
    348          }
    349          

   \                                 In section .text, align 2, keep-with-next
    350          EmberZdoStatus emberRemoteSetBindingHandler(EmberBindingTableEntry *entry)
    351          {
   \                     emberRemoteSetBindingHandler: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x4605             MOV      R5,R0
    352            EmberStatus setStatus;
    353            EmberZdoStatus status = EMBER_ZDP_TABLE_FULL;
    354            EmberBindingTableEntry candidate;
    355            uint8_t i;
    356          
    357            emberAfPushCallbackNetworkIndex();
   \        0x4   0x....'....        BL       emberAfPushCallbackNetworkIndex
    358          
    359            // If we receive a bind request for the Key Establishment cluster and we are
    360            // not the trust center, then we are doing partner link key exchange.  We
    361            // don't actually have to create a binding.
    362            if (emberAfGetNodeId() != EMBER_TRUST_CENTER_NODE_ID
    363                && entry->clusterId == ZCL_KEY_ESTABLISHMENT_CLUSTER_ID) {
   \        0x8   0x....'....        BL       emberGetNodeId
   \        0xC   0xB140             CBZ.N    R0,??emberRemoteSetBindingHandler_0
   \        0xE   0x8868             LDRH     R0,[R5, #+2]
   \       0x10   0xF5B0 0x6F00      CMP      R0,#+2048
   \       0x14   0xD104             BNE.N    ??emberRemoteSetBindingHandler_0
    364              status = emberAfPartnerLinkKeyExchangeRequestCallback(entry->identifier);
   \       0x16   0x1D68             ADDS     R0,R5,#+5
   \       0x18   0x....'....        BL       emberAfPartnerLinkKeyExchangeRequestCallback
   \       0x1C   0x4604             MOV      R4,R0
    365              goto kickout;
   \       0x1E   0xE014             B.N      ??emberRemoteSetBindingHandler_1
    366            }
    367          
    368            // ask the application if current binding request is allowed or not
    369            status = emberAfRemoteSetBindingPermissionCallback(entry) == EMBER_SUCCESS ? EMBER_ZDP_SUCCESS : EMBER_ZDP_NOT_AUTHORIZED;
   \                     ??emberRemoteSetBindingHandler_0: (+1)
   \       0x20   0x4628             MOV      R0,R5
   \       0x22   0x....'....        BL       emberAfRemoteSetBindingPermissionCallback
   \       0x26   0xB9F8             CBNZ.N   R0,??emberRemoteSetBindingHandler_2
   \       0x28   0x2400             MOVS     R4,#+0
    370            if (status == EMBER_ZDP_SUCCESS) {
    371              // For all other requests, we search the binding table for an unused entry
    372              // and store the new entry there if we find one.
    373              for (i = 0; i < EMBER_BINDING_TABLE_SIZE; i++) {
   \       0x2A   0x2600             MOVS     R6,#+0
    374                if (emberGetBinding(i, &candidate) == EMBER_SUCCESS
    375                    && candidate.type == EMBER_UNUSED_BINDING) {
   \                     ??emberRemoteSetBindingHandler_3: (+1)
   \       0x2C   0x4669             MOV      R1,SP
   \       0x2E   0xB2F0             UXTB     R0,R6
   \       0x30   0x....'....        BL       emberGetBinding
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xBF04             ITT      EQ 
   \       0x38   0xF89D 0x0000      LDRBEQ   R0,[SP, #+0]
   \       0x3C   0x2800             CMPEQ    R0,#+0
   \       0x3E   0xD009             BEQ.N    ??emberRemoteSetBindingHandler_4
   \       0x40   0x1C76             ADDS     R6,R6,#+1
   \       0x42   0xB2F1             UXTB     R1,R6
   \       0x44   0x2902             CMP      R1,#+2
   \       0x46   0xDDF1             BLE.N    ??emberRemoteSetBindingHandler_3
    376                  setStatus = emberSetBinding(i, entry);
    377                  status = setStatus == EMBER_SUCCESS ? EMBER_ZDP_SUCCESS // binding set
    378                           : (setStatus == EMBER_BINDING_IS_ACTIVE ? EMBER_ZDP_NOT_PERMITTED // selected index is active
    379                              : EMBER_ZDP_TABLE_FULL); // report full for any other failure
    380                  goto kickout;
    381                }
    382              }
    383              // If we get here, we didn't find an empty table slot, so table is full.
    384              status = EMBER_ZDP_TABLE_FULL;
   \                     ??emberRemoteSetBindingHandler_5: (+1)
   \       0x48   0x248C             MOVS     R4,#+140
    385            }
    386          
    387            kickout:
    388            emberAfPopNetworkIndex();
   \                     ??emberRemoteSetBindingHandler_1: (+1)
   \       0x4A   0x....'....        BL       emberAfPopNetworkIndex
    389            return status;
   \       0x4E   0x4620             MOV      R0,R4
   \       0x50   0xB004             ADD      SP,SP,#+16
   \       0x52   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??emberRemoteSetBindingHandler_4: (+1)
   \       0x54   0x4629             MOV      R1,R5
   \       0x56   0xB2F0             UXTB     R0,R6
   \       0x58   0x....'....        BL       emberSetBinding
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD0F4             BEQ.N    ??emberRemoteSetBindingHandler_1
   \       0x60   0x2875             CMP      R0,#+117
   \       0x62   0xD1F1             BNE.N    ??emberRemoteSetBindingHandler_5
   \       0x64   0x248B             MOVS     R4,#+139
   \       0x66   0xE7F0             B.N      ??emberRemoteSetBindingHandler_1
   \                     ??emberRemoteSetBindingHandler_2: (+1)
   \       0x68   0x248D             MOVS     R4,#+141
   \       0x6A   0xE7EE             B.N      ??emberRemoteSetBindingHandler_1
    390          }
    391          

   \                                 In section .text, align 2, keep-with-next
    392          EmberZdoStatus emberRemoteDeleteBindingHandler(uint8_t index)
    393          {
   \                     emberRemoteDeleteBindingHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
    394            EmberStatus deleteStatus;
    395            EmberZdoStatus status;
    396            emberAfPushCallbackNetworkIndex();
   \        0x4   0x....'....        BL       emberAfPushCallbackNetworkIndex
    397          
    398            // ask the application if current binding request is allowed or not
    399            status = emberAfRemoteDeleteBindingPermissionCallback(index) == EMBER_SUCCESS ? EMBER_ZDP_SUCCESS : EMBER_ZDP_NOT_AUTHORIZED;
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emberAfRemoteDeleteBindingPermissionCallback
   \        0xE   0xB928             CBNZ.N   R0,??emberRemoteDeleteBindingHandler_0
    400            if (status == EMBER_SUCCESS) {
    401              deleteStatus = emberDeleteBinding(index);
   \       0x10   0x4620             MOV      R0,R4
   \       0x12   0x....'....        BL       emberDeleteBinding
    402              status = deleteStatus == EMBER_SUCCESS ? EMBER_ZDP_SUCCESS // binding deleted
    403                       : (deleteStatus == EMBER_BINDING_IS_ACTIVE ? EMBER_ZDP_NOT_PERMITTED //selected index is active
    404                          : EMBER_ZDP_NO_ENTRY); // report no entry for any other failure
   \       0x16   0xB918             CBNZ.N   R0,??emberRemoteDeleteBindingHandler_1
   \       0x18   0x2500             MOVS     R5,#+0
   \       0x1A   0xE005             B.N      ??emberRemoteDeleteBindingHandler_2
   \                     ??emberRemoteDeleteBindingHandler_0: (+1)
   \       0x1C   0x258D             MOVS     R5,#+141
   \       0x1E   0xE009             B.N      ??emberRemoteDeleteBindingHandler_3
   \                     ??emberRemoteDeleteBindingHandler_1: (+1)
   \       0x20   0x2875             CMP      R0,#+117
   \       0x22   0xBF0C             ITE      EQ 
   \       0x24   0x258B             MOVEQ    R5,#+139
   \       0x26   0x2588             MOVNE    R5,#+136
    405              emberAfZdoPrintln("delete binding: %x %x", index, status);
   \                     ??emberRemoteDeleteBindingHandler_2: (+1)
   \       0x28   0x462B             MOV      R3,R5
   \       0x2A   0x4622             MOV      R2,R4
   \       0x2C   0x....             LDR.N    R1,??DataTable11_14
   \       0x2E   0x2004             MOVS     R0,#+4
   \       0x30   0x....'....        BL       emberAfPrintln
    406            }
    407          
    408            emberAfPopNetworkIndex();
   \                     ??emberRemoteDeleteBindingHandler_3: (+1)
   \       0x34   0x....'....        BL       emberAfPopNetworkIndex
    409            return status;
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    410          }
    411          
    412          // ******************************************************************
    413          // setup endpoints and clusters for responding to ZDO requests
    414          // ******************************************************************

   \                                 In section .text, align 2, keep-with-next
    415          uint8_t emberGetEndpoint(uint8_t index)
    416          {
   \                     emberGetEndpoint: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
    417            uint8_t endpoint = EMBER_AF_INVALID_ENDPOINT;
   \        0x2   0x25FF             MOVS     R5,#+255
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0xF88D 0x5000      STRB     R5,[SP, #+0]
    418            if (emberAfGetEndpointByIndexCallback(index, &endpoint)) {
   \        0xA   0x4669             MOV      R1,SP
   \        0xC   0x....'....        BL       emberAfGetEndpointByIndexCallback
   \       0x10   0xB110             CBZ.N    R0,??emberGetEndpoint_0
    419              return endpoint;
   \       0x12   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \       0x16   0xBD76             POP      {R1,R2,R4-R6,PC}
    420            }
    421            return (((emberAfNetworkIndexFromEndpointIndex(index)
    422                      == emberGetCallbackNetwork())
    423                     && emberAfEndpointIndexIsEnabled(index))
    424                    ? emberAfEndpointFromIndex(index)
    425                    : 0xFF);
   \                     ??emberGetEndpoint_0: (+1)
   \       0x18   0x....'....        BL       emberGetCallbackNetwork
   \       0x1C   0x....             LDR.N    R1,??DataTable11_15
   \       0x1E   0xEB01 0x1304      ADD      R3,R1,R4, LSL #+4
   \       0x22   0x7B1E             LDRB     R6,[R3, #+12]
   \       0x24   0x4286             CMP      R6,R0
   \       0x26   0xD107             BNE.N    ??emberGetEndpoint_1
   \       0x28   0x4620             MOV      R0,R4
   \       0x2A   0x....'....        BL       emberAfEndpointIndexIsEnabled
   \       0x2E   0xB118             CBZ.N    R0,??emberGetEndpoint_1
   \       0x30   0x4620             MOV      R0,R4
   \       0x32   0x....'....        BL       emberAfEndpointFromIndex
   \       0x36   0x4605             MOV      R5,R0
   \                     ??emberGetEndpoint_1: (+1)
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    426          }
    427          
    428          // must return the endpoint desc of the endpoint specified

   \                                 In section .text, align 2, keep-with-next
    429          bool emberGetEndpointDescription(uint8_t endpoint,
    430                                           EmberEndpointDescription *result)
    431          {
   \                     emberGetEndpointDescription: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
    432            if (emberAfGetEndpointDescriptionCallback(endpoint, result)) {
   \        0x6   0x....'....        BL       emberAfGetEndpointDescriptionCallback
   \        0xA   0xB9F8             CBNZ.N   R0,??emberGetEndpointDescription_0
    433              return true;
    434            }
    435            uint8_t endpointIndex = emberAfIndexFromEndpoint(endpoint);
   \        0xC   0x4620             MOV      R0,R4
   \        0xE   0x....'....        BL       emberAfIndexFromEndpoint
   \       0x12   0x4606             MOV      R6,R0
    436            if (endpointIndex == 0xFF
    437                || (emberAfNetworkIndexFromEndpointIndex(endpointIndex)
    438                    != emberGetCallbackNetwork())) {
   \       0x14   0x2EFF             CMP      R6,#+255
   \       0x16   0xD007             BEQ.N    ??emberGetEndpointDescription_1
   \       0x18   0x....'....        BL       emberGetCallbackNetwork
   \       0x1C   0x....             LDR.N    R1,??DataTable11_15
   \       0x1E   0xEB01 0x1106      ADD      R1,R1,R6, LSL #+4
   \       0x22   0x7B0A             LDRB     R2,[R1, #+12]
   \       0x24   0x4282             CMP      R2,R0
   \       0x26   0xD001             BEQ.N    ??emberGetEndpointDescription_2
    439              return false;
   \                     ??emberGetEndpointDescription_1: (+1)
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0xBD70             POP      {R4-R6,PC}
    440            }
    441            result->profileId          = emberAfProfileIdFromIndex(endpointIndex);
   \                     ??emberGetEndpointDescription_2: (+1)
   \       0x2C   0x8848             LDRH     R0,[R1, #+2]
   \       0x2E   0x8028             STRH     R0,[R5, #+0]
    442            result->deviceId           = emberAfDeviceIdFromIndex(endpointIndex);
   \       0x30   0x888A             LDRH     R2,[R1, #+4]
   \       0x32   0x806A             STRH     R2,[R5, #+2]
    443            result->deviceVersion      = emberAfDeviceVersionFromIndex(endpointIndex);
   \       0x34   0x7988             LDRB     R0,[R1, #+6]
    444            result->inputClusterCount  = emberAfClusterCount(endpoint, true);
   \       0x36   0x2101             MOVS     R1,#+1
   \       0x38   0x7128             STRB     R0,[R5, #+4]
   \       0x3A   0x4620             MOV      R0,R4
   \       0x3C   0x....'....        BL       emberAfClusterCount
   \       0x40   0x7168             STRB     R0,[R5, #+5]
    445            result->outputClusterCount = emberAfClusterCount(endpoint, false);
   \       0x42   0x2100             MOVS     R1,#+0
   \       0x44   0x4620             MOV      R0,R4
   \       0x46   0x....'....        BL       emberAfClusterCount
   \       0x4A   0x71A8             STRB     R0,[R5, #+6]
    446            return true;
   \                     ??emberGetEndpointDescription_0: (+1)
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0xBD70             POP      {R4-R6,PC}       ;; return
    447          }
    448          
    449          // must return the clusterId at listIndex in the list specified for the
    450          // endpoint specified

   \                                 In section .text, align 2, keep-with-next
    451          uint16_t emberGetEndpointCluster(uint8_t endpoint,
    452                                           EmberClusterListId listId,
    453                                           uint8_t listIndex)
    454          {
   \                     emberGetEndpointCluster: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x4605             MOV      R5,R0
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4690             MOV      R8,R2
    455            EmberAfCluster *cluster = NULL;
    456            uint8_t endpointIndex = emberAfIndexFromEndpoint(endpoint);
   \        0xA   0x....'....        BL       emberAfIndexFromEndpoint
   \        0xE   0x4607             MOV      R7,R0
    457            if (endpointIndex == 0xFF
    458                || (emberAfNetworkIndexFromEndpointIndex(endpointIndex)
    459                    != emberGetCallbackNetwork())) {
   \       0x10   0xF64F 0x74FF      MOVW     R4,#+65535
   \       0x14   0x2FFF             CMP      R7,#+255
   \       0x16   0xD014             BEQ.N    ??emberGetEndpointCluster_0
   \       0x18   0x....'....        BL       emberGetCallbackNetwork
   \       0x1C   0x....             LDR.N    R1,??DataTable11_15
   \       0x1E   0xEB01 0x1207      ADD      R2,R1,R7, LSL #+4
   \       0x22   0x7B13             LDRB     R3,[R2, #+12]
   \       0x24   0x4283             CMP      R3,R0
   \       0x26   0xD10C             BNE.N    ??emberGetEndpointCluster_0
    460              return 0xFFFF;
    461            } else if (listId == EMBER_INPUT_CLUSTER_LIST) {
   \       0x28   0x0030             MOVS     R0,R6
   \       0x2A   0xBF08             IT       EQ 
   \       0x2C   0x2201             MOVEQ    R2,#+1
    462              cluster = emberAfGetNthCluster(endpoint, listIndex, true);
   \       0x2E   0xD002             BEQ.N    ??emberGetEndpointCluster_1
    463            } else if (listId == EMBER_OUTPUT_CLUSTER_LIST) {
   \       0x30   0x2E01             CMP      R6,#+1
   \       0x32   0xD106             BNE.N    ??emberGetEndpointCluster_0
    464              cluster = emberAfGetNthCluster(endpoint, listIndex, false);
   \       0x34   0x2200             MOVS     R2,#+0
   \                     ??emberGetEndpointCluster_1: (+1)
   \       0x36   0x4641             MOV      R1,R8
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0x....'....        BL       emberAfGetNthCluster
    465            } else {
    466              // MISRA requires ..else if.. to have terminating else.
    467            }
    468            return (cluster == NULL ? 0xFFFF : cluster->clusterId);
   \       0x3E   0xB100             CBZ.N    R0,??emberGetEndpointCluster_0
   \       0x40   0x8804             LDRH     R4,[R0, #+0]
   \                     ??emberGetEndpointCluster_0: (+1)
   \       0x42   0x4620             MOV      R0,R4
   \       0x44   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    469          }
    470          
    471          // *******************************************************************
    472          // Handlers required to use the Ember Stack.
    473          
    474          // Called when the stack status changes, usually as a result of an
    475          // attempt to form, join, or leave a network.

   \                                 In section .text, align 2, keep-with-next
    476          void emberStackStatusHandler(EmberStatus status)
    477          {
   \                     emberStackStatusHandler: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    478            emberAfPushCallbackNetworkIndex();
   \        0x4   0x....'....        BL       emberAfPushCallbackNetworkIndex
    479            emAfStackStatusHandler(status);
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emAfStackStatusHandler
    480            emberAfPopNetworkIndex();
   \        0xE   0xE8BD 0x4010      POP      {R4,LR}
   \       0x12   0x....'....        B.W      emberAfPopNetworkIndex
    481          }
    482          
    483          // Copy the message buffer into a RAM buffer.
    484          //   If message is too large, 0 is returned and no copying is done.
    485          //   Otherwise data is copied, and length of copied data is returned.

   \                                 In section .text, align 2, keep-with-next
    486          uint8_t emAfCopyMessageIntoRamBuffer(EmberMessageBuffer message,
    487                                               uint8_t *buffer,
    488                                               uint16_t bufLen)
    489          {
   \                     emAfCopyMessageIntoRamBuffer: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x4608             MOV      R0,R1
    490            uint8_t length = emberMessageBufferLength(message);
   \        0x6   0x....             LDR.N    R1,??DataTable11_16
   \        0x8   0x680B             LDR      R3,[R1, #+0]
   \        0xA   0x5D1D             LDRB     R5,[R3, R4]
    491            if (bufLen < length) {
   \        0xC   0x42AA             CMP      R2,R5
   \        0xE   0xD208             BCS.N    ??emAfCopyMessageIntoRamBuffer_0
    492              emberAfAppPrintln("%pmsg too big (%d > %d)",
    493                                "ERROR: ",
    494                                length,
    495                                bufLen);
   \       0x10   0x9200             STR      R2,[SP, #+0]
   \       0x12   0x462B             MOV      R3,R5
   \       0x14   0x....             LDR.N    R2,??DataTable11_3
   \       0x16   0x....             LDR.N    R1,??DataTable11_17
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0x....'....        BL       emberAfPrintln
    496              return 0;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0xBD32             POP      {R1,R4,R5,PC}
    497            }
    498            emberCopyFromLinkedBuffers(message, 0, buffer, length); // no offset
   \                     ??emAfCopyMessageIntoRamBuffer_0: (+1)
   \       0x22   0x2100             MOVS     R1,#+0
   \       0x24   0x9100             STR      R1,[SP, #+0]
   \       0x26   0x462B             MOV      R3,R5
   \       0x28   0x2200             MOVS     R2,#+0
   \       0x2A   0x4621             MOV      R1,R4
   \       0x2C   0x....'....        BL       emReallyCopyToLinkedBuffers
    499            return length;
   \       0x30   0x4628             MOV      R0,R5
   \       0x32   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    500          }
    501          

   \                                 In section .text, align 2, keep-with-next
    502          void emberIncomingMessageHandler(EmberIncomingMessageType type,
    503                                           EmberApsFrame *apsFrame,
    504                                           EmberMessageBuffer message)
    505          {
   \                     emberIncomingMessageHandler: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB098             SUB      SP,SP,#+96
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4616             MOV      R6,R2
    506            uint8_t lastHopLqi;
    507            int8_t lastHopRssi;
    508            uint16_t messageLength;
    509            uint8_t messageContents[EMBER_AF_MAXIMUM_APS_PAYLOAD_LENGTH];
    510          
    511            emberAfPushCallbackNetworkIndex();
   \        0xA   0x....'....        BL       emberAfPushCallbackNetworkIndex
    512          
    513            messageLength = emAfCopyMessageIntoRamBuffer(message,
    514                                                         messageContents,
    515                                                         EMBER_AF_MAXIMUM_APS_PAYLOAD_LENGTH);
   \        0xE   0x2252             MOVS     R2,#+82
   \       0x10   0xA903             ADD      R1,SP,#+12
   \       0x12   0x4630             MOV      R0,R6
   \       0x14   0x....'....        BL       emAfCopyMessageIntoRamBuffer
   \       0x18   0x0006             MOVS     R6,R0
    516            if (messageLength == 0) {
   \       0x1A   0xD011             BEQ.N    ??emberIncomingMessageHandler_0
    517              goto kickout;
    518            }
    519          
    520            emberGetLastHopLqi(&lastHopLqi);
   \       0x1C   0xF10D 0x0009      ADD      R0,SP,#+9
   \       0x20   0x....'....        BL       emberGetLastHopLqi
    521            emberGetLastHopRssi(&lastHopRssi);
   \       0x24   0xA802             ADD      R0,SP,#+8
   \       0x26   0x....'....        BL       emberGetLastHopRssi
    522          
    523            emAfIncomingMessageHandler(type,
    524                                       apsFrame,
    525                                       lastHopLqi,
    526                                       lastHopRssi,
    527                                       messageLength,
    528                                       messageContents);
   \       0x2A   0xA803             ADD      R0,SP,#+12
   \       0x2C   0xF99D 0x3008      LDRSB    R3,[SP, #+8]
   \       0x30   0xF89D 0x2009      LDRB     R2,[SP, #+9]
   \       0x34   0x9001             STR      R0,[SP, #+4]
   \       0x36   0x9600             STR      R6,[SP, #+0]
   \       0x38   0x4629             MOV      R1,R5
   \       0x3A   0x4620             MOV      R0,R4
   \       0x3C   0x....'....        BL       emAfIncomingMessageHandler
    529          
    530            kickout:
    531            emberAfPopNetworkIndex();
   \                     ??emberIncomingMessageHandler_0: (+1)
   \       0x40   0x....'....        BL       emberAfPopNetworkIndex
    532          }
   \       0x44   0xB018             ADD      SP,SP,#+96
   \       0x46   0xBD70             POP      {R4-R6,PC}       ;; return
    533          
    534          // Called when a message we sent is acked by the destination or when an
    535          // ack fails to arrive after several retransmissions.

   \                                 In section .text, align 2, keep-with-next
    536          void emberMessageSentHandler(EmberOutgoingMessageType type,
    537                                       uint16_t indexOrDestination,
    538                                       EmberApsFrame *apsFrame,
    539                                       EmberMessageBuffer message,
    540                                       EmberStatus status)
    541          {
   \                     emberMessageSentHandler: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB098             SUB      SP,SP,#+96
   \        0x4   0x4604             MOV      R4,R0
   \        0x6   0x460D             MOV      R5,R1
   \        0x8   0x4616             MOV      R6,R2
   \        0xA   0x461F             MOV      R7,R3
    542            uint8_t messageContents[EMBER_AF_MAXIMUM_APS_PAYLOAD_LENGTH];
    543            uint8_t messageLength;
    544            emberAfPushCallbackNetworkIndex();
   \        0xC   0x....'....        BL       emberAfPushCallbackNetworkIndex
    545          
    546          #ifdef EMBER_AF_PLUGIN_FRAGMENTATION
    547            if (emAfFragmentationMessageSent(apsFrame, status)) {
    548              goto kickout;
    549            }
    550          #endif //EMBER_AF_PLUGIN_FRAGMENTATION
    551          
    552            messageLength = emAfCopyMessageIntoRamBuffer(message,
    553                                                         messageContents,
    554                                                         EMBER_AF_MAXIMUM_APS_PAYLOAD_LENGTH);
   \       0x10   0x2252             MOVS     R2,#+82
   \       0x12   0xA903             ADD      R1,SP,#+12
   \       0x14   0x4638             MOV      R0,R7
   \       0x16   0x....'....        BL       emAfCopyMessageIntoRamBuffer
    555            if (messageLength == 0) {
   \       0x1A   0xB148             CBZ.N    R0,??emberMessageSentHandler_0
   \       0x1C   0x9B1E             LDR      R3,[SP, #+120]
    556              // Message too long.  Error printed by above function.
    557              goto kickout;
    558            }
    559          
    560            emAfMessageSentHandler(type,
    561                                   indexOrDestination,
    562                                   apsFrame,
    563                                   status,
    564                                   messageLength,
    565                                   messageContents,
    566                                   message);
   \       0x1E   0xA903             ADD      R1,SP,#+12
   \       0x20   0x9101             STR      R1,[SP, #+4]
   \       0x22   0x9000             STR      R0,[SP, #+0]
   \       0x24   0x9702             STR      R7,[SP, #+8]
   \       0x26   0x4632             MOV      R2,R6
   \       0x28   0x4629             MOV      R1,R5
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x....'....        BL       emAfMessageSentHandler
    567          
    568            kickout:
    569            emberAfPopNetworkIndex();
   \                     ??emberMessageSentHandler_0: (+1)
   \       0x30   0x....'....        BL       emberAfPopNetworkIndex
    570          }
   \       0x34   0xB019             ADD      SP,SP,#+100
   \       0x36   0xBDF0             POP      {R4-R7,PC}       ;; return
    571          

   \                                 In section .text, align 4, keep-with-next
    572          EmberStatus emAfSend(EmberOutgoingMessageType type,
    573                               uint16_t indexOrDestination,
    574                               EmberApsFrame *apsFrame,
    575                               uint8_t messageLength,
    576                               uint8_t *message,
    577                               uint8_t *messageTag,
    578                               EmberNodeId alias,
    579                               uint8_t sequence)
    580          {
   \                     emAfSend: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x4605             MOV      R5,R0
   \        0x4   0x9808             LDR      R0,[SP, #+32]
   \        0x6   0x460E             MOV      R6,R1
   \        0x8   0x4614             MOV      R4,R2
    581            EmberMessageBuffer payload = emberFillLinkedBuffers(message, messageLength);
   \        0xA   0x4619             MOV      R1,R3
   \        0xC   0x....'....        BL       emberFillLinkedBuffers
   \       0x10   0x4607             MOV      R7,R0
    582            if (payload == EMBER_NULL_MESSAGE_BUFFER) {
   \       0x12   0x28FF             CMP      R0,#+255
   \       0x14   0xD101             BNE.N    ??emAfSend_1
    583              return EMBER_NO_BUFFERS;
   \       0x16   0x2018             MOVS     R0,#+24
   \       0x18   0xBDFE             POP      {R1-R7,PC}
    584            } else {
   \                     ??emAfSend_1: (+1)
   \       0x1A   0x9809             LDR      R0,[SP, #+36]
    585              EmberStatus status;
    586          
    587              *messageTag = payload;
    588          
    589              switch (type) {
   \       0x1C   0x2D06             CMP      R5,#+6
   \       0x1E   0x7007             STRB     R7,[R0, #+0]
   \       0x20   0x980A             LDR      R0,[SP, #+40]
   \       0x22   0x9A0B             LDR      R2,[SP, #+44]
   \       0x24   0xD82C             BHI.N    ??emAfSend_2
   \       0x26   0xE8DF 0xF005      TBB      [PC, R5]
   \                     ??emAfSend_0:
   \       0x2A   0x04 0x04          DC8      0x4,0x4,0x4,0xB
   \              0x04 0x0B    
   \       0x2E   0x12 0x22          DC8      0x12,0x22,0x1B,0x0
   \              0x1B 0x00    
    590                case EMBER_OUTGOING_DIRECT:
    591                case EMBER_OUTGOING_VIA_ADDRESS_TABLE:
    592                case EMBER_OUTGOING_VIA_BINDING:
    593                  status = emberSendUnicast(type, indexOrDestination, apsFrame, payload);
   \                     ??emAfSend_3: (+1)
   \       0x32   0x463B             MOV      R3,R7
   \       0x34   0x4622             MOV      R2,R4
   \       0x36   0x4631             MOV      R1,R6
   \       0x38   0x4628             MOV      R0,R5
   \       0x3A   0x....'....        BL       emberSendUnicast
   \       0x3E   0xE01D             B.N      ??emAfSend_4
    594                  break;
    595                case EMBER_OUTGOING_MULTICAST:
    596                  status = emberSendMulticast(apsFrame,
    597                                              ZA_MAX_HOPS, // radius
    598                                              ZA_MAX_HOPS, // nonmember radius
    599                                              payload);
   \                     ??emAfSend_5: (+1)
   \       0x40   0x463B             MOV      R3,R7
   \       0x42   0x220C             MOVS     R2,#+12
   \       0x44   0x210C             MOVS     R1,#+12
   \       0x46   0x4620             MOV      R0,R4
   \       0x48   0x....'....        BL       emberSendMulticast
   \       0x4C   0xE016             B.N      ??emAfSend_4
    600                  break;
    601                case EMBER_OUTGOING_MULTICAST_WITH_ALIAS:
    602                  status = emberSendMulticastWithAlias(apsFrame,
    603                                                       apsFrame->radius, //radius
    604                                                       apsFrame->radius, //nonmember radius
    605                                                       payload,
    606                                                       alias,
    607                                                       sequence);
   \                     ??emAfSend_6: (+1)
   \       0x4E   0x7AE1             LDRB     R1,[R4, #+11]
   \       0x50   0x9201             STR      R2,[SP, #+4]
   \       0x52   0x9000             STR      R0,[SP, #+0]
   \       0x54   0x463B             MOV      R3,R7
   \       0x56   0x460A             MOV      R2,R1
   \       0x58   0x4620             MOV      R0,R4
   \       0x5A   0x....'....        BL       emberSendMulticastWithAlias
   \       0x5E   0xE00D             B.N      ??emAfSend_4
    608                  break;
    609                case EMBER_OUTGOING_BROADCAST:
    610                  status = emberSendBroadcast(indexOrDestination,
    611                                              apsFrame,
    612                                              ZA_MAX_HOPS, // radius
    613                                              payload);
   \                     ??emAfSend_7: (+1)
   \       0x60   0x463B             MOV      R3,R7
   \       0x62   0x220C             MOVS     R2,#+12
   \       0x64   0x4621             MOV      R1,R4
   \       0x66   0x4630             MOV      R0,R6
   \       0x68   0x....'....        BL       emberSendBroadcast
   \       0x6C   0xE006             B.N      ??emAfSend_4
    614                  break;
    615                case EMBER_OUTGOING_BROADCAST_WITH_ALIAS:
    616                  status = emberProxyBroadcast(alias,
    617                                               indexOrDestination,
    618                                               sequence,
    619                                               apsFrame,
    620                                               apsFrame->radius, // radius
    621                                               payload);
   \                     ??emAfSend_8: (+1)
   \       0x6E   0x9701             STR      R7,[SP, #+4]
   \       0x70   0x7AE1             LDRB     R1,[R4, #+11]
   \       0x72   0x4623             MOV      R3,R4
   \       0x74   0x9100             STR      R1,[SP, #+0]
   \       0x76   0x4631             MOV      R1,R6
   \       0x78   0x....'....        BL       emberProxyBroadcast
   \                     ??emAfSend_4: (+1)
   \       0x7C   0x4604             MOV      R4,R0
    622                  break;
   \       0x7E   0xE000             B.N      ??emAfSend_9
    623                default:
    624                  status = EMBER_BAD_ARGUMENT;
   \                     ??emAfSend_2: (+1)
   \       0x80   0x2402             MOVS     R4,#+2
    625                  break;
    626              }
    627          
    628              emberReleaseMessageBuffer(payload);
   \                     ??emAfSend_9: (+1)
   \       0x82   0x4638             MOV      R0,R7
   \       0x84   0x....'....        BL       emReleaseMessageBuffer
    629          
    630              return status;
   \       0x88   0x4620             MOV      R0,R4
   \       0x8A   0xBDFE             POP      {R1-R7,PC}       ;; return
    631            }
    632          }
    633          

   \                                 In section .text, align 2, keep-with-next
    634          void emberAfGetEui64(EmberEUI64 returnEui64)
    635          {
    636            MEMMOVE(returnEui64, emberGetEui64(), EUI64_SIZE);
   \                     emberAfGetEui64: (+1)
   \        0x0   0x2208             MOVS     R2,#+8
   \        0x2   0x....             LDR.N    R1,??DataTable11_18
   \        0x4   0x....'....        B.W      halCommonMemMove
    637          }
    638          

   \                                 In section .text, align 2, keep-with-next
    639          EmberStatus emberAfGetNetworkParameters(EmberNodeType* nodeType,
    640                                                  EmberNetworkParameters* parameters)
    641          {
   \                     emberAfGetNetworkParameters: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x4608             MOV      R0,R1
    642            emberGetNetworkParameters(parameters);
   \        0x6   0x....'....        BL       emberGetNetworkParameters
    643            return emberGetNodeType(nodeType);
   \        0xA   0x4620             MOV      R0,R4
   \        0xC   0xE8BD 0x4010      POP      {R4,LR}
   \       0x10   0x....'....        B.W      emberGetNodeType
    644          }
    645          

   \                                 In section .text, align 2, keep-with-next
    646          EmberStatus emberAfGetNodeType(EmberNodeType *nodeType)
    647          {
    648            return emberGetNodeType(nodeType);
   \                     emberAfGetNodeType: (+1)
   \        0x0   0x....'....        B.W      emberGetNodeType
    649          }
    650          

   \                                 In section .text, align 2, keep-with-next
    651          uint8_t emberAfGetSecurityLevel(void)
    652          {
    653            return EMBER_SECURITY_LEVEL;
   \                     emberAfGetSecurityLevel: (+1)
   \        0x0   0x2005             MOVS     R0,#+5
   \        0x2   0x4770             BX       LR               ;; return
    654          }
    655          

   \                                 In section .text, align 2, keep-with-next
    656          uint8_t emberAfGetKeyTableSize(void)
    657          {
    658            return EMBER_KEY_TABLE_SIZE;
   \                     emberAfGetKeyTableSize: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    659          }
    660          

   \                                 In section .text, align 2, keep-with-next
    661          uint8_t emberAfGetBindingTableSize(void)
    662          {
    663            return EMBER_BINDING_TABLE_SIZE;
   \                     emberAfGetBindingTableSize: (+1)
   \        0x0   0x2003             MOVS     R0,#+3
   \        0x2   0x4770             BX       LR               ;; return
    664          }
    665          

   \                                 In section .text, align 2, keep-with-next
    666          uint8_t emberAfGetAddressTableSize(void)
    667          {
    668            return EMBER_ADDRESS_TABLE_SIZE;
   \                     emberAfGetAddressTableSize: (+1)
   \        0x0   0x2004             MOVS     R0,#+4
   \        0x2   0x4770             BX       LR               ;; return
    669          }
    670          

   \                                 In section .text, align 2, keep-with-next
    671          uint8_t emberAfGetChildTableSize(void)
    672          {
    673            return EMBER_CHILD_TABLE_SIZE;
   \                     emberAfGetChildTableSize: (+1)
   \        0x0   0x2006             MOVS     R0,#+6
   \        0x2   0x4770             BX       LR               ;; return
    674          }
    675          

   \                                 In section .text, align 2, keep-with-next
    676          uint8_t emberAfGetNeighborTableSize(void)
    677          {
    678            return EMBER_NEIGHBOR_TABLE_SIZE;
   \                     emberAfGetNeighborTableSize: (+1)
   \        0x0   0x2010             MOVS     R0,#+16
   \        0x2   0x4770             BX       LR               ;; return
    679          }
    680          

   \                                 In section .text, align 2, keep-with-next
    681          uint8_t emberAfGetRouteTableSize(void)
    682          {
    683            return EMBER_ROUTE_TABLE_SIZE;
   \                     emberAfGetRouteTableSize: (+1)
   \        0x0   0x200A             MOVS     R0,#+10
   \        0x2   0x4770             BX       LR               ;; return
    684          }
    685          

   \                                 In section .text, align 2, keep-with-next
    686          uint8_t emberAfGetSleepyMulticastConfig(void)
    687          {
    688            return EMBER_SEND_MULTICASTS_TO_SLEEPY_ADDRESS;
   \                     emberAfGetSleepyMulticastConfig: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    689          }
    690          

   \                                 In section .text, align 2, keep-with-next
    691          EmberStatus emberAfGetSourceRouteTableEntry(
    692            uint8_t index,
    693            EmberNodeId *destination,
    694            uint8_t *closerIndex)
    695          {
    696            return emberGetSourceRouteTableEntry(index,
    697                                                 destination,
    698                                                 closerIndex);
   \                     emberAfGetSourceRouteTableEntry: (+1)
   \        0x0   0x....'....        B.W      emberGetSourceRouteTableEntry
    699          }
    700          

   \                                 In section .text, align 2, keep-with-next
    701          uint8_t emberAfGetSourceRouteTableTotalSize(void)
    702          {
    703            return emberGetSourceRouteTableTotalSize();
   \                     emberAfGetSourceRouteTableTotalSize: (+1)
   \        0x0   0x....'....        B.W      emberGetSourceRouteTableTotalSize
    704          }
    705          

   \                                 In section .text, align 2, keep-with-next
    706          uint8_t emberAfGetSourceRouteTableFilledSize(void)
    707          {
    708            return emberGetSourceRouteTableFilledSize();
   \                     emberAfGetSourceRouteTableFilledSize: (+1)
   \        0x0   0x....'....        B.W      emberGetSourceRouteTableFilledSize
    709          }
    710          

   \                                 In section .text, align 2, keep-with-next
    711          EmberStatus emberAfGetChildData(uint8_t index,
    712                                          EmberChildData *childData)
    713          {
    714            return emberGetChildData(index,
    715                                     childData);
   \                     emberAfGetChildData: (+1)
   \        0x0   0x....'....        B.W      emberGetChildData
    716          }
    717          

   \                                 In section .text, align 2, keep-with-next
    718          uint8_t emAfGetPacketBufferFreeCount(void)
    719          {
    720            return emberPacketBufferFreeCount();
   \                     emAfGetPacketBufferFreeCount: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable11_19
   \        0x2   0x7800             LDRB     R0,[R0, #+0]
   \        0x4   0x4770             BX       LR               ;; return
    721          }
    722          

   \                                 In section .text, align 2, keep-with-next
    723          uint8_t emAfGetPacketBufferTotalCount(void)
    724          {
    725            return EMBER_PACKET_BUFFER_COUNT;
   \                     emAfGetPacketBufferTotalCount: (+1)
   \        0x0   0x204B             MOVS     R0,#+75
   \        0x2   0x4770             BX       LR               ;; return
    726          }
    727          

   \                                 In section .text, align 2, keep-with-next
    728          void emAfCliVersionCommand(void)
    729          {
   \                     emAfCliVersionCommand: (+1)
   \        0x0   0xB5E0             PUSH     {R5-R7,LR}
   \        0x2   0x4668             MOV      R0,SP
   \        0x4   0x....             LDR.N    R1,??DataTable11_20
   \        0x6   0x2208             MOVS     R2,#+8
   \        0x8   0x....'....        BL       __aeabi_memcpy
    730            emAfParseAndPrintVersion(emberVersion);
   \        0xC   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \       0x10   0x....'....        BL       emAfParseAndPrintVersion
    731          }
   \       0x14   0xBD07             POP      {R0-R2,PC}       ;; return
    732          
    733          // TODO: find out a better way to handle these form-and-join scan callbacks.
    734          // Backwards compatibility...ugh.
    735          

   \                                 In section .text, align 2, keep-with-next
    736          void emberNetworkFoundHandler(EmberZigbeeNetwork *networkFound)
    737          {
   \                     emberNetworkFoundHandler: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x4604             MOV      R4,R0
    738            uint8_t lqi;
    739            int8_t rssi;
    740            emberAfPushCallbackNetworkIndex();
   \        0x4   0x....'....        BL       emberAfPushCallbackNetworkIndex
    741            emberGetLastHopLqi(&lqi);
   \        0x8   0xF10D 0x0001      ADD      R0,SP,#+1
   \        0xC   0x....'....        BL       emberGetLastHopLqi
    742            emberGetLastHopRssi(&rssi);
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x....'....        BL       emberGetLastHopRssi
    743          
    744          #ifdef EMBER_AF_PLUGIN_FORM_AND_JOIN
    745            if (!emberFormAndJoinNetworkFoundHandler(networkFound, lqi, rssi)) {
    746              emberAfNetworkFoundCallback(networkFound, lqi, rssi);
    747            }
    748          #else
    749            emberAfNetworkFoundCallback(networkFound, lqi, rssi);
   \       0x16   0xF99D 0x2000      LDRSB    R2,[SP, #+0]
   \       0x1A   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \       0x1E   0x4620             MOV      R0,R4
   \       0x20   0x....'....        BL       emberAfNetworkFoundCallback
    750          #endif
    751          
    752            emberAfPopNetworkIndex();
   \       0x24   0x....'....        BL       emberAfPopNetworkIndex
    753          }
   \       0x28   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    754          

   \                                 In section .text, align 2, keep-with-next
    755          void emberScanCompleteHandler(uint8_t channel, EmberStatus status)
    756          {
   \                     emberScanCompleteHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x....'....        BL       ?Subroutine1
    757            emberAfPushCallbackNetworkIndex();
    758          
    759          #ifdef EMBER_AF_PLUGIN_FORM_AND_JOIN
    760            if (!emberFormAndJoinScanCompleteHandler(channel, status)) {
    761              emberAfScanCompleteCallback(channel, status);
    762            }
    763          #else
    764            emberAfScanCompleteCallback(channel, status);
   \                     ??CrossCallReturnLabel_2: (+1)
   \        0x6   0x4629             MOV      R1,R5
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emberAfScanCompleteCallback
    765          #endif
    766          
    767            emberAfPopNetworkIndex();
   \        0xE   0x....             B.N      ?Subroutine0
    768          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xE8BD 0x4031      POP      {R0,R4,R5,LR}
   \        0x4   0x....'....        B.W      emberAfPopNetworkIndex

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x4604             MOV      R4,R0
   \        0x2   0x460D             MOV      R5,R1
   \        0x4   0x....'....        B.W      emberAfPushCallbackNetworkIndex
    769          

   \                                 In section .text, align 2, keep-with-next
    770          void emberEnergyScanResultHandler(uint8_t channel, int8_t maxRssiValue)
    771          {
   \                     emberEnergyScanResultHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x....'....        BL       ?Subroutine1
    772            emberAfPushCallbackNetworkIndex();
    773          
    774          #ifdef EMBER_AF_PLUGIN_FORM_AND_JOIN
    775            if (!emberFormAndJoinEnergyScanResultHandler(channel, maxRssiValue)) {
    776              emberAfEnergyScanResultCallback(channel, maxRssiValue);
    777            }
    778          #else
    779            emberAfEnergyScanResultCallback(channel, maxRssiValue);
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x6   0x4629             MOV      R1,R5
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emberAfEnergyScanResultCallback
    780          #endif
    781          
    782            emberAfPopNetworkIndex();
   \        0xE                      REQUIRE ?Subroutine0
   \        0xE                      ;; // Fall through to label ?Subroutine0
    783          }
    784          

   \                                 In section .text, align 2, keep-with-next
    785          void emberUnusedPanIdFoundHandler(EmberPanId panId, uint8_t channel)
    786          {
   \                     emberUnusedPanIdFoundHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x....'....        BL       ?Subroutine1
    787            emberAfPushCallbackNetworkIndex();
    788          #ifdef EMBER_AF_PLUGIN_FORM_AND_JOIN
    789            if (!emberFormAndJoinUnusedPanIdFoundHandler(panId, channel)) {
    790              emberAfUnusedPanIdFoundCallback(panId, channel);
    791            }
    792          #else
    793            emberAfUnusedPanIdFoundCallback(panId, channel);
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x6   0x4629             MOV      R1,R5
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x....'....        BL       emberAfUnusedPanIdFoundCallback
    794          #endif
    795            emberAfPopNetworkIndex();
   \        0xE   0x....             B.N      ?Subroutine0
    796          }
    797          

   \                                 In section .text, align 2, keep-with-next
    798          void emAfPrintEzspEndpointFlags(uint8_t endpoint)
    799          {
    800            // Not applicable for SOC
    801          }
   \                     emAfPrintEzspEndpointFlags: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    802          

   \                                 In section .text, align 2, keep-with-next
    803          void emberZigbeeKeyEstablishmentHandler(EmberEUI64 partner,
    804                                                  EmberKeyStatus status)
    805          {
    806            // This function is generated.
    807            emAfZigbeeKeyEstablishment(partner, status);
   \                     emberZigbeeKeyEstablishmentHandler: (+1)
   \        0x0   0x....'....        B.W      emAfZigbeeKeyEstablishment
    808          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \        0x0   0x....'....        DC32     serialPort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \        0x0   0x....'....        DC32     emManufacturerCode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \        0x0   0x....'....        DC32     emMaximumIncomingTransferSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \        0x0   0x....'....        DC32     emMaximumOutgoingTransferSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \        0x0   0x....'....        DC32     TOKEN_MFG_STRING

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \        0x0   0x....'....        DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \        0x0   0x....'....        DC32     emMessageBufferLengths

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \        0x0   0x....'....        DC32     emLocalEui64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \        0x0   0x....'....        DC32     emPacketBufferFreeCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \        0x0   0x....'....        DC32     emberVersion

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x52 0x65          DC8 "Reset info: 0x%x (%p)"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x69 0x6E    
   \              0x66 0x6F    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x20 0x28    
   \              0x25 0x70    
   \              0x29 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x45 0x78          DC8 "Extended Reset info: 0x%2X (%p)"
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x65 0x74    
   \              0x20 0x69    
   \              0x6E 0x66    
   \              0x6F 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x32 0x58    
   \              0x20 0x28    
   \              0x25 0x70    
   \              0x29 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x25 0x70          DC8 "%pemberInit 0x%x"
   \              0x65 0x6D    
   \              0x62 0x65    
   \              0x72 0x49    
   \              0x6E 0x69    
   \              0x74 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \       0x11   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x45 0x52          DC8 "ERROR: "
   \              0x52 0x4F    
   \              0x52 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x61 0x66          DC8 "af-main-soc.c"
   \              0x2D 0x6D    
   \              0x61 0x69    
   \              0x6E 0x2D    
   \              0x73 0x6F    
   \              0x63 0x2E    
   \              0x63 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x25 0x70          DC8 "%p>"
   \              0x3E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x7A 0x33          DC8 "z3_lite_timer_mg21_v660"
   \              0x5F 0x6C    
   \              0x69 0x74    
   \              0x65 0x5F    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x72 0x5F    
   \              0x6D 0x67    
   \              0x32 0x31    
   \              0x5F 0x76    
   \              0x36 0x36    
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x73 0x65          DC8 "send %x %2x"
   \              0x6E 0x64    
   \              0x20 0x25    
   \              0x78 0x20    
   \              0x25 0x32    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x64 0x6F          DC8 "done: %x."
   \              0x6E 0x65    
   \              0x3A 0x20    
   \              0x25 0x78    
   \              0x2E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x64 0x65          DC8 "delete binding: %x %x"
   \              0x6C 0x65    
   \              0x74 0x65    
   \              0x20 0x62    
   \              0x69 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x3A 0x20    
   \              0x25 0x78    
   \              0x20 0x25    
   \              0x78 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x25 0x70          DC8 "%pmsg too big (%d > %d)"
   \              0x6D 0x73    
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x6F 0x20    
   \              0x62 0x69    
   \              0x67 0x20    
   \              0x28 0x25    
   \              0x64 0x20    
   \              0x3E 0x20    
   \              0x25 0x64    
   \              0x29 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   emAfCliVersionCommand
        16   -> __aeabi_memcpy
        16   -> emAfParseAndPrintVersion
      16   emAfCopyMessageIntoRamBuffer
        16   -> emReallyCopyToLinkedBuffers
        16   -> emberAfPrintln
       0   emAfGetPacketBufferFreeCount
       0   emAfGetPacketBufferTotalCount
       0   emAfPrintEzspEndpointFlags
      32   emAfSend
        32   -> emReleaseMessageBuffer
        32   -> emberFillLinkedBuffers
        32   -> emberProxyBroadcast
        32   -> emberSendBroadcast
        32   -> emberSendMulticast
        32   -> emberSendMulticastWithAlias
        32   -> emberSendUnicast
      32   emberAfGetAddressIndex
        32   -> emberGetAddressTableRemoteEui64
        32   -> emberGetAddressTableRemoteNodeId
        32   -> emberGetSender
        32   -> emberGetSenderEui64
        32   -> halCommonMemCompare
       0   emberAfGetAddressTableSize
       0   emberAfGetBindingIndex
         0   -> emberGetBindingIndex
       0   emberAfGetBindingTableSize
       0   emberAfGetChildData
         0   -> emberGetChildData
       0   emberAfGetChildTableSize
       0   emberAfGetEui64
         0   -> halCommonMemMove
       0   emberAfGetKeyTableSize
       0   emberAfGetMfgString
         0   -> halInternalGetMfgTokenData
       0   emberAfGetNeighborTableSize
       8   emberAfGetNetworkParameters
         8   -> emberGetNetworkParameters
         0   -> emberGetNodeType
       0   emberAfGetNodeId
         0   -> emberGetNodeId
       0   emberAfGetNodeType
         0   -> emberGetNodeType
       0   emberAfGetPanId
         0   -> emberGetPanId
       0   emberAfGetRadioChannel
         0   -> emberGetRadioChannel
       0   emberAfGetRouteTableSize
       0   emberAfGetSecurityLevel
       0   emberAfGetSleepyMulticastConfig
       0   emberAfGetSourceRouteTableEntry
         0   -> emberGetSourceRouteTableEntry
       0   emberAfGetSourceRouteTableFilledSize
         0   -> emberGetSourceRouteTableFilledSize
       0   emberAfGetSourceRouteTableTotalSize
         0   -> emberGetSourceRouteTableTotalSize
       0   emberAfGetStackProfile
      16   emberAfMain
        16   -> emAfAssertNetworkIndexStackIsEmpty
        16   -> emAfGetCryptoStatus
        16   -> emAfInit
        16   -> emAfInitializeMessageSentCallbackArray
        16   -> emAfInitializeNetworkIndexStack
        16   -> emAfNetworkInit
        16   -> emAfTick
        16   -> emberAfEndpointConfigure
        16   -> emberAfMainStartCallback
        16   -> emberAfPrint
        16   -> emberAfPrintln
        16   -> emberAfRunEvents
        16   -> emberCommandReaderInit
        16   -> emberInit
        16   -> emberProcessCommandString
        16   -> emberSerialBufferTick
        16   -> emberSetTxPowerMode
        16   -> emberTick
        16   -> halInternalAssertFailed
        16   -> halInternalResetWatchDog
        16   -> securityAddressCacheInit
       8   emberAfMainInit
         8   -> CORE_AtomicEnableIrq
         8   -> emberAfPrintln
         8   -> emberSerialInit
         8   -> halGetExtendedResetInfo
         8   -> halGetExtendedResetString
         8   -> halGetResetInfo
         8   -> halGetResetString
         0   -> halPrintCrashData
         8   -> halPrintCrashDetails
         8   -> halPrintCrashSummary
       0   emberAfNetworkState
         0   -> emberNetworkState
       8   emberAfSendEndDeviceBind
         8   -> emberAfPopNetworkIndex
         8   -> emberAfPrintln
         8   -> emberAfPushEndpointNetworkIndex
         8   -> emberEndDeviceBindRequest
      16   emberEnergyScanResultHandler
        16   -> emberAfEnergyScanResultCallback
         0   -> emberAfPopNetworkIndex
        16   -> emberAfPushCallbackNetworkIndex
      24   emberGetEndpoint
        24   -> emberAfEndpointFromIndex
        24   -> emberAfEndpointIndexIsEnabled
        24   -> emberAfGetEndpointByIndexCallback
        24   -> emberGetCallbackNetwork
      24   emberGetEndpointCluster
        24   -> emberAfGetNthCluster
        24   -> emberAfIndexFromEndpoint
        24   -> emberGetCallbackNetwork
      16   emberGetEndpointDescription
        16   -> emberAfClusterCount
        16   -> emberAfGetEndpointDescriptionCallback
        16   -> emberAfIndexFromEndpoint
        16   -> emberGetCallbackNetwork
     112   emberIncomingMessageHandler
       112   -> emAfCopyMessageIntoRamBuffer
       112   -> emAfIncomingMessageHandler
       112   -> emberAfPopNetworkIndex
       112   -> emberAfPushCallbackNetworkIndex
       112   -> emberGetLastHopLqi
       112   -> emberGetLastHopRssi
     120   emberMessageSentHandler
       120   -> emAfCopyMessageIntoRamBuffer
       120   -> emAfMessageSentHandler
       120   -> emberAfPopNetworkIndex
       120   -> emberAfPushCallbackNetworkIndex
      16   emberNetworkFoundHandler
        16   -> emberAfNetworkFoundCallback
        16   -> emberAfPopNetworkIndex
        16   -> emberAfPushCallbackNetworkIndex
        16   -> emberGetLastHopLqi
        16   -> emberGetLastHopRssi
      16   emberRemoteDeleteBindingHandler
        16   -> emberAfPopNetworkIndex
        16   -> emberAfPrintln
        16   -> emberAfPushCallbackNetworkIndex
        16   -> emberAfRemoteDeleteBindingPermissionCallback
        16   -> emberDeleteBinding
      32   emberRemoteSetBindingHandler
        32   -> emberAfPartnerLinkKeyExchangeRequestCallback
        32   -> emberAfPopNetworkIndex
        32   -> emberAfPushCallbackNetworkIndex
        32   -> emberAfRemoteSetBindingPermissionCallback
        32   -> emberGetBinding
        32   -> emberGetNodeId
        32   -> emberSetBinding
      16   emberScanCompleteHandler
         0   -> emberAfPopNetworkIndex
        16   -> emberAfPushCallbackNetworkIndex
        16   -> emberAfScanCompleteCallback
       8   emberStackStatusHandler
         8   -> emAfStackStatusHandler
         0   -> emberAfPopNetworkIndex
         8   -> emberAfPushCallbackNetworkIndex
      16   emberUnusedPanIdFoundHandler
         0   -> emberAfPopNetworkIndex
        16   -> emberAfPushCallbackNetworkIndex
        16   -> emberAfUnusedPanIdFoundCallback
       0   emberZigbeeKeyEstablishmentHandler
         0   -> emAfZigbeeKeyEstablishment


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       8  ?Subroutine0
       8  ?Subroutine1
      24  ?_0
      32  ?_1
      24  ?_10
      20  ?_2
       8  ?_3
      16  ?_4
       4  ?_5
      24  ?_6
      12  ?_7
      12  ?_8
      24  ?_9
      22  emAfCliVersionCommand
      52  emAfCopyMessageIntoRamBuffer
       6  emAfGetPacketBufferFreeCount
       4  emAfGetPacketBufferTotalCount
       2  emAfPrintEzspEndpointFlags
     140  emAfSend
      88  emberAfGetAddressIndex
       4  emberAfGetAddressTableSize
       4  emberAfGetBindingIndex
       4  emberAfGetBindingTableSize
       4  emberAfGetChildData
       4  emberAfGetChildTableSize
       8  emberAfGetEui64
       4  emberAfGetKeyTableSize
      14  emberAfGetMfgString
       4  emberAfGetNeighborTableSize
      20  emberAfGetNetworkParameters
       4  emberAfGetNodeId
       4  emberAfGetNodeType
       4  emberAfGetPanId
       4  emberAfGetRadioChannel
       4  emberAfGetRouteTableSize
       4  emberAfGetSecurityLevel
       4  emberAfGetSleepyMulticastConfig
       4  emberAfGetSourceRouteTableEntry
       4  emberAfGetSourceRouteTableFilledSize
       4  emberAfGetSourceRouteTableTotalSize
       4  emberAfGetStackProfile
     182  emberAfMain
     110  emberAfMainInit
       4  emberAfNetworkState
      60  emberAfSendEndDeviceBind
      14  emberEnergyScanResultHandler
      60  emberGetEndpoint
      72  emberGetEndpointCluster
      80  emberGetEndpointDescription
      72  emberIncomingMessageHandler
      56  emberMessageSentHandler
      42  emberNetworkFoundHandler
      60  emberRemoteDeleteBindingHandler
     108  emberRemoteSetBindingHandler
      16  emberScanCompleteHandler
      22  emberStackStatusHandler
      16  emberUnusedPanIdFoundHandler
       4  emberZigbeeKeyEstablishmentHandler
       1  serialPort

 
     1 byte  in section .data
   200 bytes in section .rodata
 1 506 bytes in section .text
 
 1 506 bytes of CODE  memory
   200 bytes of CONST memory
     1 byte  of DATA  memory

Errors: none
Warnings: none
