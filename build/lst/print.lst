###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:35
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\print.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWFE44.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\print.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"print.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0 -D
#        LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D EMBER_AF_USE_HWCONF
#        -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\print.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\print.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\print.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Utilities and command line interface for printing, and enabling/disabling
      4           * printing to different areas.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include "app/framework/include/af.h"
     20          
     21          //------------------------------------------------------------------------------
     22          // Globals
     23          
     24          // Enable this if you want area names printed. It proved annoying
     25          // so we're disabling it here.
     26          //#define EMBER_AF_PRINT_AREA_NAME
     27          
     28          #ifdef EMBER_AF_PRINT_AREA_NAME
     29          static void reallyPrintAreaName(uint16_t area);
     30            #define printAreaName(area) reallyPrintAreaName(area)
     31          #else
     32            #define printAreaName(area)
     33          #endif //EMBER_AF_PRINT_AREA_NAME
     34          
     35          #ifdef EMBER_AF_PRINT_NAMES

   \                                 In section .data, align 4
     36          static const char * areaNames[] = EMBER_AF_PRINT_NAMES;
   \                     areaNames:
   \        0x0   0x....'....        DC32 ?_0, ?_1, ?_2, 0H
   \              0x....'....  
   \              0x....'....  
   \              0x0000'0000  
     37          #endif
     38          
     39          #ifdef EMBER_AF_PRINT_BITS

   \                                 In section .data, align 1
     40          static uint8_t enablementBytes[] = EMBER_AF_PRINT_BITS;
   \                     enablementBytes:
   \        0x0   0x07               DC8 7
     41          #endif
     42          

   \                                 In section .bss, align 2
     43          uint16_t emberAfPrintActiveArea = 0;
   \                     emberAfPrintActiveArea:
   \        0x0                      DS8 2
     44          
     45          //------------------------------------------------------------------------------
     46          
     47          // Returns true if the area print is enabled

   \                                 In section .text, align 2, keep-with-next
     48          bool emberAfPrintEnabled(uint16_t area)
     49          {
     50          #ifndef EMBER_AF_PRINT_BITS
     51            return false;
     52          #else
     53            uint8_t index = (uint8_t)(area >> 8);
     54            if ( area == 0xFFFF ) {
   \                     emberAfPrintEnabled: (+1)
   \        0x0   0xF64F 0x72FF      MOVW     R2,#+65535
   \        0x4   0x4601             MOV      R1,R0
   \        0x6   0x4290             CMP      R0,R2
   \        0x8   0xD008             BEQ.N    ??emberAfPrintEnabled_0
     55              return true;
     56            }
     57            if ( index >= sizeof(enablementBytes) ) {
   \        0xA   0x0A00             LSRS     R0,R0,#+8
   \        0xC   0xD001             BEQ.N    ??emberAfPrintEnabled_1
     58              return false;
   \        0xE   0x2000             MOVS     R0,#+0
   \       0x10   0x4770             BX       LR
     59            } else {
     60              uint8_t byte = enablementBytes[index];
     61              return ( (byte & (uint8_t)(area & 0xFF) ) != 0x00);
   \                     ??emberAfPrintEnabled_1: (+1)
   \       0x12   0x....             LDR.N    R0,??DataTable4_2
   \       0x14   0x7802             LDRB     R2,[R0, #+0]
   \       0x16   0xEA11 0x0002      ANDS     R0,R1,R2
   \       0x1A   0xD000             BEQ.N    ??emberAfPrintEnabled_2
   \                     ??emberAfPrintEnabled_0: (+1)
   \       0x1C   0x2001             MOVS     R0,#+1
   \                     ??emberAfPrintEnabled_2: (+1)
   \       0x1E   0x4770             BX       LR               ;; return
     62            }
     63          #endif // EMBER_AF_PRINT_BITS
     64          }
     65          

   \                                 In section .text, align 2, keep-with-next
     66          static void printEnable(uint16_t area, bool on)
     67          {
     68          #ifdef EMBER_AF_PRINT_BITS
     69            uint8_t index = (uint8_t)(area >> 8);
     70            if ( index < sizeof(enablementBytes) ) {
   \                     printEnable: (+1)
   \        0x0   0x0A02             LSRS     R2,R0,#+8
   \        0x2   0xD107             BNE.N    ??printEnable_0
     71              if ( on ) {
   \        0x4   0x....             LDR.N    R2,??DataTable4_2
   \        0x6   0x7813             LDRB     R3,[R2, #+0]
   \        0x8   0x2900             CMP      R1,#+0
   \        0xA   0xBF14             ITE      NE 
   \        0xC   0x4318             ORRNE    R0,R0,R3
   \        0xE   0xEA23 0x0000      BICEQ    R0,R3,R0
     72                enablementBytes[index] |= (uint8_t)(area & 0xFF);
     73              } else {
     74                enablementBytes[index] &= ~(uint8_t)(area & 0xFF);
   \       0x12   0x7010             STRB     R0,[R2, #+0]
     75              }
     76            }
     77          #endif // EMBER_AF_PRINT_BITS
     78          }
   \                     ??printEnable_0: (+1)
   \       0x14   0x4770             BX       LR               ;; return
     79          

   \                                 In section .text, align 2, keep-with-next
     80          static uint16_t convertUserNumberAreaToInternalArea(uint16_t userNumberedArea)
     81          {
   \                     convertUserNumberAreaToInternalArea: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     82            uint16_t index = userNumberedArea / 8;
     83            index = (uint16_t)(index << 8)
     84                    + (uint16_t)( ((uint16_t)0x0001) << (userNumberedArea % 8) );
     85            return index;
   \        0x2   0x0883             LSRS     R3,R0,#+2
   \        0x4   0xEB00 0x7453      ADD      R4,R0,R3, LSR #+29
   \        0x8   0x08C1             LSRS     R1,R0,#+3
   \        0xA   0x2201             MOVS     R2,#+1
   \        0xC   0x08E4             LSRS     R4,R4,#+3
   \        0xE   0xEBA0 0x00C4      SUB      R0,R0,R4, LSL #+3
   \       0x12   0xFA02 0xF000      LSL      R0,R2,R0
   \       0x16   0xEB00 0x2001      ADD      R0,R0,R1, LSL #+8
   \       0x1A   0xB280             UXTH     R0,R0
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return
     86          }
     87          
     88          #if defined EMBER_AF_PRINT_AREA_NAME
     89          static void reallyPrintAreaName(uint16_t area)
     90          {
     91          #ifdef EMBER_AF_PRINT_NAMES
     92            uint8_t hi, lo, count;
     93            uint16_t index;
     94          
     95            hi = (uint8_t)(area >> 8);
     96            lo = (uint8_t)(area & 0xFF);
     97            count = 0;
     98          
     99            if ( lo != 0 ) {
    100              while ( !(lo & 0x01) ) {
    101                lo >>= 1;
    102                count++;
    103              }
    104            }
    105            index = ((8 * hi) + count);
    106          
    107            if (area != 0xFFFF
    108                && index < EMBER_AF_PRINT_NAME_NUMBER) {
    109              emberSerialPrintf(EMBER_AF_PRINT_OUTPUT, "%p:", areaNames[index]);
    110            }
    111          #endif // EMBER_AF_PRINT_NAMES
    112          }
    113          #endif //EMBER_AF_PRINT_AREA_NAME
    114          
    115          // Prints the trace if trace is enabled

   \                                 In section .text, align 2, keep-with-next
    116          static void emAfPrintInternalVarArg(uint16_t area,
    117                                              bool newLine,
    118                                              const char * formatString,
    119                                              va_list ap)
    120          {
   \                     emAfPrintInternalVarArg: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460D             MOV      R5,R1
   \        0x6   0x4616             MOV      R6,R2
   \        0x8   0x461F             MOV      R7,R3
    121            if ( !emberAfPrintEnabled(area) ) {
   \        0xA   0x....'....        BL       emberAfPrintEnabled
   \        0xE   0xB158             CBZ.N    R0,??emAfPrintInternalVarArg_0
    122              return;
    123            }
    124            printAreaName(area);
    125          
    126            emberSerialPrintfVarArg(EMBER_AF_PRINT_OUTPUT, formatString, ap);
   \       0x10   0x463A             MOV      R2,R7
   \       0x12   0x4631             MOV      R1,R6
   \       0x14   0x2020             MOVS     R0,#+32
   \       0x16   0x....'....        BL       emberSerialPrintfVarArg
    127          
    128            if (newLine) {
   \       0x1A   0xB11D             CBZ.N    R5,??emAfPrintInternalVarArg_1
    129              emberSerialPrintf(EMBER_AF_PRINT_OUTPUT, "\r\n");
   \       0x1C   0x....             LDR.N    R1,??DataTable4_3
   \       0x1E   0x2020             MOVS     R0,#+32
   \       0x20   0x....'....        BL       emberSerialPrintf
    130            }
    131            emberAfPrintActiveArea = area;
   \                     ??emAfPrintInternalVarArg_1: (+1)
   \       0x24   0x....             LDR.N    R0,??DataTable4_4
   \       0x26   0x8004             STRH     R4,[R0, #+0]
    132          }
   \                     ??emAfPrintInternalVarArg_0: (+1)
   \       0x28   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void emberAfPrintln(uint16_t area, const char * formatString, ...)
    135          {
   \                     emberAfPrintln: (+1)
   \        0x0   0xB40C             PUSH     {R2,R3}
   \        0x2   0xB580             PUSH     {R7,LR}
   \        0x4   0x460A             MOV      R2,R1
    136            va_list ap = { 0 };
    137            va_start(ap, formatString);
   \        0x6   0xAB02             ADD      R3,SP,#+8
    138            emAfPrintInternalVarArg(area, true, formatString, ap);
   \        0x8   0x2101             MOVS     R1,#+1
   \        0xA   0x....             B.N      ?Subroutine0
    139            va_end(ap);
    140          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x....'....        BL       emAfPrintInternalVarArg
   \        0x4   0xBC01             POP      {R0}
   \        0x6   0xF85D 0xFB0C      LDR      PC,[SP], #+12    ;; return
    141          

   \                                 In section .text, align 2, keep-with-next
    142          void emberAfPrint(uint16_t area, const char * formatString, ...)
    143          {
   \                     emberAfPrint: (+1)
   \        0x0   0xB40C             PUSH     {R2,R3}
   \        0x2   0xB580             PUSH     {R7,LR}
   \        0x4   0x460A             MOV      R2,R1
    144            va_list ap = { 0 };
    145            va_start(ap, formatString);
   \        0x6   0xAB02             ADD      R3,SP,#+8
    146            emAfPrintInternalVarArg(area, false, formatString, ap);
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA                      REQUIRE ?Subroutine0
   \        0xA                      ;; // Fall through to label ?Subroutine0
    147            va_end(ap);
    148          }
    149          

   \                                 In section .text, align 2, keep-with-next
    150          void emberAfPrintStatus(void)
    151          {
   \                     emberAfPrintStatus: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
    152          #ifdef EMBER_AF_PRINT_NAMES
    153            uint8_t i;
    154            for (i = 0; i < EMBER_AF_PRINT_NAME_NUMBER; i++) {
   \        0x4   0x2400             MOVS     R4,#+0
   \        0x6   0x....             LDR.N    R5,??DataTable4_5
   \        0x8   0x....'....        LDR.W    R8,??DataTable4_6
   \        0xC   0x....             ADR.N    R7,??DataTable4  ;; 0x6E, 0x6F, 0x00, 0x00
   \        0xE   0x....             ADR.N    R6,??DataTable4_1  ;; "YES"
    155              emberSerialPrintfLine(EMBER_AF_PRINT_OUTPUT, "[%d] %p : %p",
    156                                    i,
    157                                    areaNames[i],
    158                                    (emberAfPrintEnabled(
    159                                       convertUserNumberAreaToInternalArea(i))
    160                                     ? "YES"
    161                                     : "no"));
   \                     ??emberAfPrintStatus_0: (+1)
   \       0x10   0xB2A0             UXTH     R0,R4
   \       0x12   0x....'....        BL       convertUserNumberAreaToInternalArea
   \       0x16   0x....'....        BL       emberAfPrintEnabled
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0x4622             MOV      R2,R4
   \       0x1E   0x4629             MOV      R1,R5
   \       0x20   0xBF14             ITE      NE 
   \       0x22   0x4630             MOVNE    R0,R6
   \       0x24   0x4638             MOVEQ    R0,R7
   \       0x26   0x9000             STR      R0,[SP, #+0]
   \       0x28   0xF858 0x3024      LDR      R3,[R8, R4, LSL #+2]
   \       0x2C   0x2020             MOVS     R0,#+32
   \       0x2E   0x1C64             ADDS     R4,R4,#+1
   \       0x30   0x....'....        BL       emberSerialPrintfLine
    162              emberSerialWaitSend(EMBER_AF_PRINT_OUTPUT);
   \       0x34   0x2020             MOVS     R0,#+32
   \       0x36   0x....'....        BL       emberSerialWaitSend
    163            }
   \       0x3A   0x2C03             CMP      R4,#+3
   \       0x3C   0xDBE8             BLT.N    ??emberAfPrintStatus_0
    164          #endif // EMBER_AF_PRINT_NAMES
    165          }
   \       0x3E   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
    166          

   \                                 In section .text, align 2, keep-with-next
    167          void emberAfPrintAllOn(void)
    168          {
    169          #ifdef EMBER_AF_PRINT_BITS
    170            MEMSET(enablementBytes, 0xFF, sizeof(enablementBytes));
   \                     emberAfPrintAllOn: (+1)
   \        0x0   0x2201             MOVS     R2,#+1
   \        0x2   0x21FF             MOVS     R1,#+255
   \        0x4   0x....             B.N      ?Subroutine1
    171          #endif
    172          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable4_2
   \        0x2   0x....'....        B.W      halCommonMemSet
    173          

   \                                 In section .text, align 2, keep-with-next
    174          void emberAfPrintAllOff(void)
    175          {
    176          #ifdef EMBER_AF_PRINT_BITS
    177            MEMSET(enablementBytes, 0x00, sizeof(enablementBytes));
   \                     emberAfPrintAllOff: (+1)
   \        0x0   0x2201             MOVS     R2,#+1
   \        0x2   0x2100             MOVS     R1,#+0
   \        0x4                      REQUIRE ?Subroutine1
   \        0x4                      ;; // Fall through to label ?Subroutine1
    178          #endif
    179          }
    180          
    181          // These are CLI functions where a user will supply a sequential numbered
    182          // area; as opposed to the bitmask area number that we keep track
    183          // of internally.
    184          

   \                                 In section .text, align 2, keep-with-next
    185          void emberAfPrintOn(uint16_t userArea)
    186          {
   \                     emberAfPrintOn: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    187            printEnable(convertUserNumberAreaToInternalArea(userArea),
    188                        true);   // enable?
   \        0x2   0x....'....        BL       convertUserNumberAreaToInternalArea
   \        0x6   0x2101             MOVS     R1,#+1
   \        0x8   0x....             B.N      ?Subroutine2
    189          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0xE8BD 0x4004      POP      {R2,LR}
   \        0x4   0x....             B.N      printEnable
    190          

   \                                 In section .text, align 2, keep-with-next
    191          void emberAfPrintOff(uint16_t userArea)
    192          {
   \                     emberAfPrintOff: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    193            printEnable(convertUserNumberAreaToInternalArea(userArea),
    194                        false);  // enable?
   \        0x2   0x....'....        BL       convertUserNumberAreaToInternalArea
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8                      REQUIRE ?Subroutine2
   \        0x8                      ;; // Fall through to label ?Subroutine2
    195          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x6E 0x6F          DC8      0x6E, 0x6F, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \        0x0   0x59 0x45          DC8      "YES"
   \              0x53 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \        0x0   0x....'....        DC32     enablementBytes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \        0x0   0x....'....        DC32     emberAfPrintActiveArea

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \        0x0   0x....'....        DC32     areaNames

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x43 0x6F          DC8 "Core"
   \              0x72 0x65    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x41 0x70          DC8 "Application"
   \              0x70 0x6C    
   \              0x69 0x63    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x5A 0x44          DC8 "ZDO (ZigBee Device Object)"
   \              0x4F 0x20    
   \              0x28 0x5A    
   \              0x69 0x67    
   \              0x42 0x65    
   \              0x65 0x20    
   \              0x44 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x4F    
   \              0x62 0x6A    
   \              0x65 0x63    
   \              0x74 0x29    
   \              0x00         
   \       0x1B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x5B 0x25          DC8 "[%d] %p : %p"
   \              0x64 0x5D    
   \              0x20 0x25    
   \              0x70 0x20    
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x59 0x45          DC8 "YES"
   \              0x53 0x00    

   \                                 In section .rodata, align 4
   \        0x0   0x6E 0x6F          DC8 "no"
   \              0x00         
   \        0x3   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   convertUserNumberAreaToInternalArea
      24   emAfPrintInternalVarArg
        24   -> emberAfPrintEnabled
        24   -> emberSerialPrintf
        24   -> emberSerialPrintfVarArg
      16   emberAfPrint
        16   -> emAfPrintInternalVarArg
       0   emberAfPrintAllOff
         0   -> halCommonMemSet
       0   emberAfPrintAllOn
         0   -> halCommonMemSet
       0   emberAfPrintEnabled
       8   emberAfPrintOff
         8   -> convertUserNumberAreaToInternalArea
         0   -> printEnable
       8   emberAfPrintOn
         8   -> convertUserNumberAreaToInternalArea
         0   -> printEnable
      32   emberAfPrintStatus
        32   -> convertUserNumberAreaToInternalArea
        32   -> emberAfPrintEnabled
        32   -> emberSerialPrintfLine
        32   -> emberSerialWaitSend
      16   emberAfPrintln
        16   -> emAfPrintInternalVarArg
       0   printEnable


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
      10  ?Subroutine0
       6  ?Subroutine1
       6  ?Subroutine2
       8  ?_0
      12  ?_1
      28  ?_2
       4  ?_3
      16  ?_4
       4  ?_5
       4  ?_6
      16  areaNames
      30  convertUserNumberAreaToInternalArea
      42  emAfPrintInternalVarArg
      10  emberAfPrint
       2  emberAfPrintActiveArea
       4  emberAfPrintAllOff
       6  emberAfPrintAllOn
      32  emberAfPrintEnabled
       8  emberAfPrintOff
      10  emberAfPrintOn
      66  emberAfPrintStatus
      12  emberAfPrintln
       1  enablementBytes
      22  printEnable

 
   2 bytes in section .bss
  17 bytes in section .data
  76 bytes in section .rodata
 292 bytes in section .text
 
 292 bytes of CODE  memory
  76 bytes of CONST memory
  19 bytes of DATA  memory

Errors: none
Warnings: none
