###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:45
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\diagnostic.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW3757.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\diagnostic.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"diagnostic.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\diagnostic.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\diagnostic.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\diagnostic.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief EM3XX-specific diagnostic HAL functions
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     10           * software is governed by the terms of Silicon Labs Master Software License
     11           * Agreement (MSLA) available at
     12           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     13           * software is distributed to you in Source Code format and is governed by the
     14           * sections of the MSLA applicable to Source Code.
     15           *
     16           ******************************************************************************/
     17          #include PLATFORM_HEADER
     18          #include "stack/include/ember.h"
     19          #include "hal/hal.h"
     20          #include "em_device.h"
     21          #include "em_gpio.h"
     22          #include "serial/com.h"
     23          #include "serial/serial.h"
     24          #include "hal/micro/cortexm3/diagnostic.h"
     25          #include "hal/micro/cortexm3/efm32/mpu.h"
     26          
     27          #ifdef RTOS
     28            #include "rtos/rtos.h"
     29            #define freeRTOS 1
     30          #else  // RTOS
     31            #define freeRTOS 0
     32          extern uint32_t* xTaskGetCurrentTaskStackTop(void);
     33          extern uint32_t* xTaskGetCurrentTaskStackBottom(void);
     34          
     35          #endif // RTOS
     36          
     37          //------------------------------------------------------------------------------
     38          // Preprocessor definitions
     39          
     40          // Reserved instruction executed after a failed assert to cause a usage fault
     41          #define ASSERT_USAGE_OPCODE 0xDE42
     42          
     43          // Codes for DMA channels in DMA_PROT_CH
     44          #define DMA_PROT_CH_SC1_RX    1
     45          #define DMA_PROT_CH_GP_ADC    3
     46          #define DMA_PROT_CH_MAC       4
     47          #define DMA_PROT_CH_SC2_RX    5
     48          
     49          //------------------------------------------------------------------------------
     50          // Local Variables
     51          

   \                                 In section .rodata, align 4
     52          static PGM_P PGM cfsrBits[] =
   \                     cfsrBits:
   \        0x0   0x....'....        DC32 ?_0, ?_1, ?_2, ?_3, ?_4, ?_2, ?_2, ?_5, ?_6, ?_7, ?_8, ?_9, ?_10
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x34   0x....'....        DC32 ?_2, ?_2, ?_11, ?_12, ?_13, ?_14, ?_15, ?_2, ?_2, ?_2, ?_2, ?_16
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x64   0x....'....        DC32 ?_17
     53          {
     54            // Memory management (MPU) faults
     55            "IACCVIOL: attempted instruction fetch from a no-execute address",  // B0
     56            "DACCVIOL: attempted load or store at an illegal address",          // B1
     57            "",                                                                 // B2
     58            "MUNSTKERR: unstack from exception return caused access violation", // B3
     59            "MSTKERR: stacking from exception caused access violation",         // B4
     60            "",                                                                 // B5
     61            "",                                                                 // B6
     62            "MMARVALID: MMAR contains valid fault address",                     // B7
     63          
     64            // Bus faults
     65            "IBUSERR: instruction prefetch caused bus fault",                   // B8
     66            "PRECISERR: precise data bus fault",                                // B9
     67            "IMPRECISERR: imprecise data bus fault",                            // B10
     68            "UNSTKERR: unstacking on exception return caused data bus fault",   // B11
     69            "STKERR: stacking on exception entry caused data bus fault",        // B12
     70            "",                                                                 // B13
     71            "",                                                                 // B14
     72            "BFARVALID: BFAR contains valid fault address",                     // B15
     73          
     74            // Usage faults
     75            "UNDEFINSTR: tried to execute an undefined instruction",            // B16
     76            "INVSTATE: invalid EPSR - e.g., tried to switch to ARM mode",       // B17
     77            "INVPC: exception return integrity checks failed",                  // B18
     78            "NOCP: attempted to execute a coprocessor instruction",             // B19
     79            "",                                                                 // B20
     80            "",                                                                 // B21
     81            "",                                                                 // B22
     82            "",                                                                 // B23
     83            "UNALIGNED: attempted an unaligned memory access",                  // B24
     84            "DIVBYZERO: attempted to execute SDIV or UDIV with divisor of 0"    // B25
     85          };
     86          

   \                                 In section .rodata, align 4
     87          static PGM_P PGM intActiveBits[] =
   \                     intActiveBits:
   \        0x0   0x....'....        DC32 ?_18, ?_19, ?_20, ?_21, ?_22, ?_23, ?_24, ?_25, ?_26, ?_27, ?_28
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x2C   0x....'....        DC32 ?_29, ?_30, ?_31, ?_32, ?_33, ?_34, ?_35, ?_36, ?_37, ?_38, ?_39
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x58   0x....'....        DC32 ?_40, ?_41, ?_42, ?_43, ?_44, ?_45, ?_46, ?_47, ?_48, ?_49, ?_50
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \       0x84   0x....'....        DC32 ?_51, ?_52, ?_53, ?_54, ?_55, ?_56, ?_57, ?_58
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
   \              0x....'....  
     88          {
     89          #if defined (_EFR_DEVICE)
     90            #if defined (_SILICON_LABS_32B_SERIES_1_CONFIG_1)
     91            "EMU_IRQn",         // B0
     92            "FRC_PRI_IRQn",     // B1
     93            "WDOG0_IRQn",       // B2
     94            "FRC_IRQn",         // B3
     95            "MODEM_IRQn",       // B4
     96            "RAC_SEQ_IRQn",     // B5
     97            "RAC_RSM_IRQn",     // B6
     98            "BUFC_IRQn",        // B7
     99            "LDMA_IRQn",        // B8
    100            "GPIO_EVEN_IRQn",   // B9
    101            "TIMER0_IRQn",      // B10
    102            "USART0_RX_IRQn",   // B11
    103            "USART0_TX_IRQn",   // B12
    104            "ACMP0_IRQn",       // B13
    105            "ADC0_IRQn",        // B14
    106            "IDAC0_IRQn",       // B15
    107            "I2C0_IRQn",        // B16
    108            "GPIO_ODD_IRQn",    // B17
    109            "TIMER1_IRQn",      // B18
    110            "USART1_RX_IRQn",   // B19
    111            "USART1_TX_IRQn",   // B20
    112            "LEUART0_IRQn",     // B21
    113            "PCNT0_IRQn",       // B22
    114            "CMU_IRQn",         // B23
    115            "MSC_IRQn",         // B24
    116            "CRYPTO_IRQn",      // B25
    117            "LETIMER0_IRQn",    // B26
    118            "AGC_IRQn",         // B27
    119            "PROTIMER_IRQn",    // B28
    120            "RTCC_IRQn",        // B29
    121            "SYNTH_IRQn",       // B30
    122            "CRYOTIMER_IRQn",   // B31
    123            "RFSENSE_IRQn",     // B32
    124            "FPUEH_IRQn",       // B33
    125            #elif defined (_SILICON_LABS_32B_SERIES_1_CONFIG_2)
    126            "EMU_IRQn",         // B0
    127            "FRC_PRI_IRQn",     // B1
    128            "WDOG0_IRQn",       // B2
    129            "WDOG1_IRQn",       // B3
    130            "FRC_IRQn",         // B4
    131            "MODEM_IRQn",       // B5
    132            "RAC_SEQ_IRQn",     // B6
    133            "RAC_RSM_IRQn",     // B7
    134            "BUFC_IRQn",        // B8
    135            "LDMA_IRQn",        // B9
    136            "GPIO_EVEN_IRQn",   // B10
    137            "TIMER0_IRQn",      // B11
    138            "USART0_RX_IRQn",   // B12
    139            "USART0_TX_IRQn",   // B13
    140            "ACMP0_IRQn",       // B14
    141            "ADC0_IRQn",        // B15
    142            "IDAC0_IRQn",       // B16
    143            "I2C0_IRQn",        // B17
    144            "GPIO_ODD_IRQn",    // B18
    145            "TIMER1_IRQn",      // B19
    146            "USART1_RX_IRQn",   // B20
    147            "USART1_TX_IRQn",   // B21
    148            "LEUART0_IRQn",     // B22
    149            "PCNT0_IRQn",       // B23
    150            "CMU_IRQn",         // B24
    151            "MSC_IRQn",         // B25
    152            "CRYPTO0_IRQn",     // B26
    153            "LETIMER0_IRQn",    // B27
    154            "AGC_IRQn",         // B28
    155            "PROTIMER_IRQn",    // B29
    156            "RTCC_IRQn",        // B30
    157            "SYNTH_IRQn",       // B31
    158            "CRYOTIMER_IRQn",   // B32
    159            "RFSENSE_IRQn",     // B33
    160            "FPUEH_IRQn",       // B34
    161            "SMU_IRQn",         // B35
    162            "WTIMER0_IRQn",     // B36
    163            "WTIMER1_IRQn",     // B37
    164            "PCNT1_IRQn",       // B38
    165            "PCNT2_IRQn",       // B39
    166            "USART2_RX_IRQn",   // B40
    167            "USART2_TX_IRQn",   // B41
    168            "I2C1_IRQn",        // B42
    169            "USART3_RX_IRQn",   // B43
    170            "USART3_TX_IRQn",   // B44
    171            "VDAC0_IRQn",       // B45
    172            "CSEN_IRQn",        // B46
    173            "LESENSE_IRQn",     // B47
    174            "CRYPTO1_IRQn",     // B48
    175            "TRNG0_IRQn",       // B49
    176            #elif defined (_SILICON_LABS_32B_SERIES_1_CONFIG_3)
    177            "EMU_IRQn",         // B0
    178            "FRC_PRI_IRQn",     // B1
    179            "WDOG0_IRQn",       // B2
    180            "WDOG1_IRQn",       // B3
    181            "FRC_IRQn",         // B4
    182            "MODEM_IRQn",       // B5
    183            "RAC_SEQ_IRQn",     // B6
    184            "RAC_RSM_IRQn",     // B7
    185            "BUFC_IRQn",        // B8
    186            "LDMA_IRQn",        // B9
    187            "GPIO_EVEN_IRQn",   // B10
    188            "TIMER0_IRQn",      // B11
    189            "USART0_RX_IRQn",   // B12
    190            "USART0_TX_IRQn",   // B13
    191            "ACMP0_IRQn",       // B14
    192            "ADC0_IRQn",        // B15
    193            "IDAC0_IRQn",       // B16
    194            "I2C0_IRQn",        // B17
    195            "GPIO_ODD_IRQn",    // B18
    196            "TIMER1_IRQn",      // B19
    197            "USART1_RX_IRQn",   // B20
    198            "USART1_TX_IRQn",   // B21
    199            "LEUART0_IRQn",     // B22
    200            "PCNT0_IRQn",       // B23
    201            "CMU_IRQn",         // B24
    202            "MSC_IRQn",         // B25
    203            "CRYPTO0_IRQn",     // B26
    204            "LETIMER0_IRQn",    // B27
    205            "AGC_IRQn",         // B28
    206            "PROTIMER_IRQn",    // B29
    207            "PRORTC_IRQn",      // B30
    208            "RTCC_IRQn",        // B31
    209            "SYNTH_IRQn",       // B32
    210            "CRYOTIMER_IRQn",   // B33
    211            "RFSENSE_IRQn",     // B34
    212            "FPUEH_IRQn",       // B35
    213            "SMU_IRQn",         // B36
    214            "WTIMER0_IRQn",     // B37
    215            "USART2_RX_IRQn",   // B38
    216            "USART2_TX_IRQn",   // B39
    217            "I2C1_IRQn",        // B40
    218            "VDAC0_IRQn",       // B41
    219            "CSEN_IRQn",        // B42
    220            "LESENSE_IRQn",     // B43
    221            "CRYPTO1_IRQn",     // B44
    222            "TRNG0_IRQn"        // B45
    223            #elif defined (_SILICON_LABS_32B_SERIES_1_CONFIG_4)
    224            "EMU_IRQn",         // B0
    225            "FRC_PRI_IRQn",     // B1
    226            "WDOG0_IRQn",       // B2
    227            "WDOG1_IRQn",       // B3
    228            "FRC_IRQn",         // B4
    229            "MODEM_IRQn",       // B5
    230            "RAC_SEQ_IRQn",     // B6
    231            "RAC_RSM_IRQn",     // B7
    232            "BUFC_IRQn",        // B8
    233            "LDMA_IRQn",        // B9
    234            "GPIO_EVEN_IRQn",   // B10
    235            "TIMER0_IRQn",      // B11
    236            "USART0_RX_IRQn",   // B12
    237            "USART0_TX_IRQn",   // B13
    238            "ACMP0_IRQn",       // B14
    239            "ADC0_IRQn",        // B15
    240            "IDAC0_IRQn",       // B16
    241            "I2C0_IRQn",        // B17
    242            "GPIO_ODD_IRQn",    // B18
    243            "TIMER1_IRQn",      // B19
    244            "USART1_RX_IRQn",   // B20
    245            "USART1_TX_IRQn",   // B21
    246            "LEUART0_IRQn",     // B22
    247            "PCNT0_IRQn",       // B23
    248            "CMU_IRQn",         // B24
    249            "MSC_IRQn",         // B25
    250            "CRYPTO0_IRQn",     // B26
    251            "LETIMER0_IRQn",    // B27
    252            "AGC_IRQn",         // B28
    253            "PROTIMER_IRQn",    // B29
    254            "PRORTC_IRQn",      // B30
    255            "RTCC_IRQn",        // B31
    256            "SYNTH_IRQn",       // B32
    257            "CRYOTIMER_IRQn",   // B33
    258            "RFSENSE_IRQn",     // B34
    259            "FPUEH_IRQn",       // B35
    260            "SMU_IRQn",         // B36
    261            "WTIMER0_IRQn",     // B37
    262            "VDAC0_IRQn",       // B38
    263            "LESENSE_IRQn",     // B39
    264            "TRNG0_IRQn"        // B40
    265            "SYSCFG_IRQn"       // B41
    266            #elif defined (_SILICON_LABS_32B_SERIES_2_CONFIG_1)
    267          // for defined (_SILICON_LABS_32B_SERIES_2_CONFIG_1), hack in the series 2, config 1
    268            "EMU_IRQn",         // B0
    269            "FRC_PRI_IRQn",     // B1
    270            "WDOG0_IRQn",       // B2
    271            "WDOG1_IRQn",       // B3
    272            "FRC_IRQn",         // B4
    273            "MODEM_IRQn",       // B5
    274            "RAC_SEQ_IRQn",     // B6
    275            "RAC_RSM_IRQn",     // B7
    276            "BUFC_IRQn",        // B8
    277            "LDMA_IRQn",        // B9
    278            "GPIO_EVEN_IRQn",   // B10
    279            "TIMER0_IRQn",      // B11
    280            "USART0_RX_IRQn",   // B12
    281            "USART0_TX_IRQn",   // B13
    282            "ACMP0_IRQn",       // B14
    283            "ADC0_IRQn",        // B15
    284            "IDAC0_IRQn",       // B16
    285            "I2C0_IRQn",        // B17
    286            "GPIO_ODD_IRQn",    // B18
    287            "TIMER1_IRQn",      // B19
    288            "USART1_RX_IRQn",   // B20
    289            "USART1_TX_IRQn",   // B21
    290            "LEUART0_IRQn",     // B22
    291            "PCNT0_IRQn",       // B23
    292            "CMU_IRQn",         // B24
    293            "MSC_IRQn",         // B25
    294            "CRYPTO0_IRQn",     // B26
    295            "LETIMER0_IRQn",    // B27
    296            "AGC_IRQn",         // B28
    297            "PROTIMER_IRQn",    // B29
    298            "PRORTC_IRQn",      // B30
    299            "RTCC_IRQn",        // B31
    300            "SYNTH_IRQn",       // B32
    301            "CRYOTIMER_IRQn",   // B33
    302            "RFSENSE_IRQn",     // B34
    303            "FPUEH_IRQn",       // B35
    304            "SMU_IRQn",         // B36
    305            "WTIMER0_IRQn",     // B37
    306            "VDAC0_IRQn",       // B38
    307            "LESENSE_IRQn",     // B39
    308            "TRNG0_IRQn"        // B40
    309            "SYSCFG_IRQn"       // B41
    310            #endif
    311          #elif defined (CORTEXM3_EFM32_MICRO)
    312            "DMA",            // B0
    313            "GPIO_EVEN",      // B1
    314            "TIMER0",         // B2
    315            "USART0_RX",      // B3
    316            "USART0_TX",      // B4
    317            "USB",            // B5
    318            "ACMP0",          // B6
    319            "ADC0",           // B7
    320            "DAC0",           // B8
    321            "I2C0",           // B9
    322            "I2C1",           // B10
    323            "GPIO_ODD",       // B11
    324            "TIMER1",         // B12
    325            "TIMER2",         // B13
    326            "TIMER3",         // B14
    327            "USART1_RX",      // B15
    328            "USART1_TX",      // B16
    329            "LESENSE",        // B17
    330            "USART2_RX",      // B18
    331            "USART2_TX",      // B19
    332            "UART0_RX",       // B20
    333            "UART0_TX",       // B21
    334            "UART1_RX",       // B22
    335            "UART1_TX",       // B23
    336            "LEUART0",        // B24
    337            "LEUART1",        // B25
    338            "LETIMER0",       // B26
    339            "PCNT0",          // B27
    340            "PCNT1",          // B28
    341            "PCNT2",          // B29
    342            "RTC",            // B30
    343            "BURTC",          // B31
    344            "CMU",            // B32
    345            "VCMP",           // B33
    346            "LCD",            // B34
    347            "MSC",            // B35
    348            "AES",            // B36
    349            "EBI",            // B37
    350            "EMU",            // B38
    351          #else
    352            "Timer1",       // B0
    353            "Timer2",       // B1
    354            "Management",   // B2
    355            "Baseband",     // B3
    356            "Sleep_Timer",  // B4
    357            "SC1",          // B5
    358            "SC2",          // B6
    359            "Security",     // B7
    360            "MAC_Timer",    // B8
    361            "MAC_TX",       // B9
    362            "MAC_RX",       // B10
    363            "ADC",          // B11
    364            "IRQ_A",        // B12
    365            "IRQ_B",        // B13
    366            "IRQ_C",        // B14
    367            "IRQ_D",        // B15
    368            "Debug"         // B16
    369          #endif
    370          };
    371          
    372          // Names of raw crash data items - each name is null terminated, and the
    373          // end of the array is flagged by two null bytes in a row.
    374          // NOTE: the order of these names must match HalCrashInfoType members.

   \                                 In section .rodata, align 4
    375          static const char nameStrings[] = "R0\0R1\0R2\0R3\0"
   \                     nameStrings:
   \        0x0   0x52 0x30          DC8 52H, 30H, 0, 52H, 31H, 0, 52H, 32H
   \              0x00 0x52    
   \              0x31 0x00    
   \              0x52 0x32    
   \        0x8   0x00 0x52          DC8 0, 52H, 33H, 0, 52H, 34H, 0, 52H
   \              0x33 0x00    
   \              0x52 0x34    
   \              0x00 0x52    
   \       0x10   0x35 0x00          DC8 35H, 0, 52H, 36H, 0, 52H, 37H, 0
   \              0x52 0x36    
   \              0x00 0x52    
   \              0x37 0x00    
   \       0x18   0x52 0x38          DC8 52H, 38H, 0, 52H, 39H, 0, 52H, 31H
   \              0x00 0x52    
   \              0x39 0x00    
   \              0x52 0x31    
   \       0x20   0x30 0x00          DC8 30H, 0, 52H, 31H, 31H, 0, 52H, 31H
   \              0x52 0x31    
   \              0x31 0x00    
   \              0x52 0x31    
   \       0x28   0x32 0x00          DC8 32H, 0, 52H, 31H, 33H, 28H, 4CH, 52H
   \              0x52 0x31    
   \              0x33 0x28    
   \              0x4C 0x52    
   \       0x30   0x29 0x00          DC8 29H, 0, 4DH, 53H, 50H, 0, 50H, 53H
   \              0x4D 0x53    
   \              0x50 0x00    
   \              0x50 0x53    
   \       0x38   0x50 0x00          DC8 50H, 0, 50H, 43H, 0, 78H, 50H, 53H
   \              0x50 0x43    
   \              0x00 0x78    
   \              0x50 0x53    
   \       0x40   0x52 0x00          DC8 52H, 0, 4DH, 53H, 50H, 20H, 75H, 73H
   \              0x4D 0x53    
   \              0x50 0x20    
   \              0x75 0x73    
   \       0x48   0x65 0x64          DC8 65H, 64H, 0, 50H, 53H, 50H, 20H, 75H
   \              0x00 0x50    
   \              0x53 0x50    
   \              0x20 0x75    
   \       0x50   0x73 0x65          DC8 73H, 65H, 64H, 0, 43H, 53H, 54H, 41H
   \              0x64 0x00    
   \              0x43 0x53    
   \              0x54 0x41    
   \       0x58   0x43 0x4B          DC8 43H, 4BH, 20H, 62H, 6FH, 74H, 74H, 6FH
   \              0x20 0x62    
   \              0x6F 0x74    
   \              0x74 0x6F    
   \       0x60   0x6D 0x00          DC8 6DH, 0, 49H, 43H, 53H, 52H, 0, 53H
   \              0x49 0x43    
   \              0x53 0x52    
   \              0x00 0x53    
   \       0x68   0x48 0x43          DC8 48H, 43H, 53H, 52H, 0, 49H, 4EH, 54H
   \              0x53 0x52    
   \              0x00 0x49    
   \              0x4E 0x54    
   \       0x70   0x5F 0x41          DC8 5FH, 41H, 43H, 54H, 49H, 56H, 45H, 30H
   \              0x43 0x54    
   \              0x49 0x56    
   \              0x45 0x30    
   \       0x78   0x00 0x49          DC8 0, 49H, 4EH, 54H, 5FH, 41H, 43H, 54H
   \              0x4E 0x54    
   \              0x5F 0x41    
   \              0x43 0x54    
   \       0x80   0x49 0x56          DC8 49H, 56H, 45H, 31H, 0, 43H, 46H, 53H
   \              0x45 0x31    
   \              0x00 0x43    
   \              0x46 0x53    
   \       0x88   0x52 0x00          DC8 52H, 0, 48H, 46H, 53H, 52H, 0, 44H
   \              0x48 0x46    
   \              0x53 0x52    
   \              0x00 0x44    
   \       0x90   0x46 0x53          DC8 46H, 53H, 52H, 0, 4DH, 4DH, 41H, 52H
   \              0x52 0x00    
   \              0x4D 0x4D    
   \              0x41 0x52    
   \       0x98   0x2F 0x42          DC8 2FH, 42H, 46H, 41H, 52H, 0, 41H, 46H
   \              0x46 0x41    
   \              0x52 0x00    
   \              0x41 0x46    
   \       0xA0   0x53 0x52          DC8 53H, 52H, 0, 52H, 65H, 74H, 30H, 0
   \              0x00 0x52    
   \              0x65 0x74    
   \              0x30 0x00    
   \       0xA8   0x52 0x65          DC8 52H, 65H, 74H, 31H, 0, 52H, 65H, 74H
   \              0x74 0x31    
   \              0x00 0x52    
   \              0x65 0x74    
   \       0xB0   0x32 0x00          DC8 32H, 0, 52H, 65H, 74H, 33H, 0, 52H
   \              0x52 0x65    
   \              0x74 0x33    
   \              0x00 0x52    
   \       0xB8   0x65 0x74          DC8 65H, 74H, 34H, 0, 52H, 65H, 74H, 35H
   \              0x34 0x00    
   \              0x52 0x65    
   \              0x74 0x35    
   \       0xC0   0x00 0x44          DC8 0, 44H, 61H, 74H, 30H, 0, 44H, 61H
   \              0x61 0x74    
   \              0x30 0x00    
   \              0x44 0x61    
   \       0xC8   0x74 0x31          DC8 74H, 31H, 0, 0
   \              0x00 0x00    
    376                                            "R4\0R5\0R6\0R7\0"
    377                                            "R8\0R9\0R10\0R11\0"
    378                                            "R12\0R13(LR)\0MSP\0PSP\0"
    379                                            "PC\0xPSR\0MSP used\0PSP used\0"
    380                                            "CSTACK bottom\0ICSR\0SHCSR\0INT_ACTIVE0\0"
    381                                            "INT_ACTIVE1\0"
    382                                            "CFSR\0HFSR\0DFSR\0MMAR/BFAR\0AFSR\0"
    383                                            "Ret0\0Ret1\0Ret2\0Ret3\0"
    384                                            "Ret4\0Ret5\0Dat0\0Dat1\0";
    385          
    386          //------------------------------------------------------------------------------
    387          // Forward Declarations
    388          
    389          //------------------------------------------------------------------------------
    390          // Functions
    391          
    392          // Stub for the EnergyMicro assert handler

   \                                 In section .text, align 2, keep-with-next
    393          void assertEFM(const char *file, int line)
    394          {
    395            halInternalAssertFailed(file, line);
   \                     assertEFM: (+1)
   \        0x0   0x....'....        B.W      halInternalAssertFailed
    396          }
    397          

   \                                 In section .text, align 2, keep-with-next
    398          void halPrintCrashSummary(uint8_t port)
    399          {
   \                     halPrintCrashSummary: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    400            HalCrashInfoType *c = &halResetInfo.crash;
    401            uint32_t sp, stackBegin, stackEnd, size, used;
    402            uint16_t pct;
    403            uint8_t *mode;
    404            const char *stack;
    405            uint8_t bit;
    406          
    407            if (c->LR & 4) {
   \        0x4   0x....'....        LDR.W    R5,??DataTable3_2
   \        0x8   0x6BA9             LDR      R1,[R5, #+56]
   \        0xA   0xB084             SUB      SP,SP,#+16
   \        0xC   0x074A             LSLS     R2,R1,#+29
   \        0xE   0xD507             BPL.N    ??halPrintCrashSummary_0
    408              stack = "process";
    409              sp = c->processSP;
    410              used = c->processSPUsed;
    411              stackBegin = 0;
   \       0x10   0xF04F 0x0900      MOV      R9,#+0
   \       0x14   0x....'....        LDR.W    R8,??DataTable3_3
   \       0x18   0x6C2F             LDR      R7,[R5, #+64]
   \       0x1A   0x6D2E             LDR      R6,[R5, #+80]
    412              stackEnd = 0;
   \       0x1C   0x46CA             MOV      R10,R9
   \       0x1E   0xE007             B.N      ??halPrintCrashSummary_1
    413            } else {
    414              stack = "main";
   \                     ??halPrintCrashSummary_0: (+1)
   \       0x20   0x....'....        LDR.W    R8,??DataTable3_4
    415              sp = c->mainSP;
   \       0x24   0x6BEF             LDR      R7,[R5, #+60]
    416              used = c->mainSPUsed;
   \       0x26   0x6CEE             LDR      R6,[R5, #+76]
    417              stackBegin = (uint32_t)c->mainStackBottom;
   \       0x28   0xF8D5 0x9054      LDR      R9,[R5, #+84]
    418              stackEnd = (uint32_t)(uint8_t *)_CSTACK_SEGMENT_END;
   \       0x2C   0x....'....        LDR.W    R10,??DataTable3_5
    419            }
    420          
    421            mode = (uint8_t *)((c->LR & 8) ? "Thread" : "Handler");
   \                     ??halPrintCrashSummary_1: (+1)
   \       0x30   0x0709             LSLS     R1,R1,#+28
   \       0x32   0xBF4C             ITE      MI 
   \       0x34   0x....'....        LDRMI.W  R2,??DataTable3_6
   \       0x38   0x....'....        LDRPL.W  R2,??DataTable3_7
    422            size = stackEnd - stackBegin;
   \       0x3C   0xEBBA 0x0409      SUBS     R4,R10,R9
    423            pct = size ? (uint16_t)(((100 * used) + (size / 2)) / size) : 0;
   \       0x40   0xD006             BEQ.N    ??halPrintCrashSummary_2
   \       0x42   0x2364             MOVS     R3,#+100
   \       0x44   0x0861             LSRS     R1,R4,#+1
   \       0x46   0xFB03 0x1306      MLA      R3,R3,R6,R1
   \       0x4A   0xFBB3 0xFBF4      UDIV     R11,R3,R4
   \       0x4E   0xE001             B.N      ??halPrintCrashSummary_3
   \                     ??halPrintCrashSummary_2: (+1)
   \       0x50   0xF04F 0x0B00      MOV      R11,#+0
   \                     ??halPrintCrashSummary_3: (+1)
   \       0x54   0xF88D 0x000C      STRB     R0,[SP, #+12]
    424            emberSerialPrintfLine(port, "%p mode using %p stack (%4x to %4x), SP = %4x",
    425                                  mode, stack, stackBegin, stackEnd, sp);
   \       0x58   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x5C   0x9702             STR      R7,[SP, #+8]
   \       0x5E   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \       0x62   0xF8CD 0x9000      STR      R9,[SP, #+0]
   \       0x66   0x4643             MOV      R3,R8
   \       0x68   0x....             LDR.N    R1,??DataTable3_8
   \       0x6A   0x....'....        BL       emberSerialPrintfLine
    426            emberSerialPrintfLine(port, "%u bytes used (%u%%) in %p stack"
    427                                        " (out of %u bytes total)",
    428                                  (uint16_t)used, pct, stack, (uint16_t)size);
   \       0x6E   0xB2A0             UXTH     R0,R4
   \       0x70   0x9001             STR      R0,[SP, #+4]
   \       0x72   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x76   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x7A   0xFA1F 0xF38B      UXTH     R3,R11
   \       0x7E   0xB2B2             UXTH     R2,R6
   \       0x80   0x....             LDR.N    R1,??DataTable3_9
   \       0x82   0x....'....        BL       emberSerialPrintfLine
    429            if ( !(c->LR & 4) && (used == size - 4 * RESETINFO_WORDS)
    430                 && (c->mainStackBottom < (uint32_t)(uint8_t *)_RESETINFO_SEGMENT_END)) {
   \       0x86   0xF895 0x0038      LDRB     R0,[R5, #+56]
   \       0x8A   0x0741             LSLS     R1,R0,#+29
   \       0x8C   0xD40B             BMI.N    ??halPrintCrashSummary_4
   \       0x8E   0x3C9C             SUBS     R4,R4,#+156
   \       0x90   0x42A6             CMP      R6,R4
   \       0x92   0xD108             BNE.N    ??halPrintCrashSummary_4
   \       0x94   0x6D68             LDR      R0,[R5, #+84]
   \       0x96   0x....             LDR.N    R1,??DataTable3_10
   \       0x98   0x4288             CMP      R0,R1
   \       0x9A   0xD204             BCS.N    ??halPrintCrashSummary_4
    431              // Here the stack overlaps the RESETINFO region and when we checked
    432              // stack usage we avoided checking that region because we'd already
    433              // started using it -- so if we found the stack almost full to that
    434              // point, warn that it might actually have been completely full.
    435              emberSerialPrintfLine(port, "Stack _may_ have used up to 100%% of total.");
   \       0x9C   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0xA0   0x....             LDR.N    R1,??DataTable3_11
   \       0xA2   0x....'....        BL       emberSerialPrintfLine
    436            }
    437            // Valid SP range is [stackBegin, stackEnd] inclusive, but contents
    438            // of stack only go into [stackBegin, stackend).
    439            if ((sp > stackEnd) || (sp < stackBegin)) {
   \                     ??halPrintCrashSummary_4: (+1)
   \       0xA6   0x45BA             CMP      R10,R7
   \       0xA8   0xBF28             IT       CS 
   \       0xAA   0x454F             CMPCS    R7,R9
   \       0xAC   0xD205             BCS.N    ??halPrintCrashSummary_5
    440              emberSerialPrintfLine(port, "SP is outside %p stack range!", stack);
   \       0xAE   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0xB2   0x4642             MOV      R2,R8
   \       0xB4   0x....             LDR.N    R1,??DataTable3_12
   \       0xB6   0x....'....        BL       emberSerialPrintfLine
    441            }
    442            emberSerialWaitSend(port);
   \                     ??halPrintCrashSummary_5: (+1)
   \       0xBA   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0xBE   0x....'....        BL       emberSerialWaitSend
    443          
    444          #if defined(CORTEXM3_EFM32_MICRO) || defined (_EFR_DEVICE)
    445            if (c->intActive.word[0] || c->intActive.word[1]) {
   \       0xC2   0x6E28             LDR      R0,[R5, #+96]
   \       0xC4   0x2800             CMP      R0,#+0
   \       0xC6   0xBF04             ITT      EQ 
   \       0xC8   0x6E68             LDREQ    R0,[R5, #+100]
   \       0xCA   0x2800             CMPEQ    R0,#+0
   \       0xCC   0xD031             BEQ.N    ??halPrintCrashSummary_6
    446              emberSerialPrintf(port, "Interrupts active (or pre-empted and stacked):");
   \       0xCE   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0xD2   0x....             LDR.N    R1,??DataTable3_13
   \       0xD4   0x2600             MOVS     R6,#+0
   \       0xD6   0x....'....        BL       emberSerialPrintf
    447              for (bit = 0; bit < 32; bit++) {
   \       0xDA   0x....'....        LDR.W    R8,??DataTable3_14
   \       0xDE   0x....             LDR.N    R7,??DataTable3_15
   \       0xE0   0xF89D 0x400C      LDRB     R4,[SP, #+12]
    448                if ((c->intActive.word[0] & (1 << bit)) && (*intActiveBits[bit] != '\0')) {
   \                     ??halPrintCrashSummary_7: (+1)
   \       0xE4   0x6E28             LDR      R0,[R5, #+96]
   \       0xE6   0x40F0             LSRS     R0,R0,R6
   \       0xE8   0x07C1             LSLS     R1,R0,#+31
   \       0xEA   0xD507             BPL.N    ??halPrintCrashSummary_8
   \       0xEC   0xF857 0x2026      LDR      R2,[R7, R6, LSL #+2]
   \       0xF0   0x7810             LDRB     R0,[R2, #+0]
   \       0xF2   0xB118             CBZ.N    R0,??halPrintCrashSummary_8
    449                  emberSerialPrintf(port, " %p", intActiveBits[bit]);
   \       0xF4   0x4641             MOV      R1,R8
   \       0xF6   0x4620             MOV      R0,R4
   \       0xF8   0x....'....        BL       emberSerialPrintf
    450                }
    451              }
   \                     ??halPrintCrashSummary_8: (+1)
   \       0xFC   0x1C76             ADDS     R6,R6,#+1
   \       0xFE   0x2E20             CMP      R6,#+32
   \      0x100   0xDBF0             BLT.N    ??halPrintCrashSummary_7
    452              for (bit = 0; bit < (sizeof(intActiveBits) / sizeof(intActiveBits[0])) - 32; bit++) {
   \      0x102   0x2600             MOVS     R6,#+0
    453                if ((c->intActive.word[1] & (1 << bit)) && (*intActiveBits[bit + 32] != '\0')) {
   \                     ??halPrintCrashSummary_9: (+1)
   \      0x104   0x6E68             LDR      R0,[R5, #+100]
   \      0x106   0x40F0             LSRS     R0,R0,R6
   \      0x108   0x07C1             LSLS     R1,R0,#+31
   \      0x10A   0xD509             BPL.N    ??halPrintCrashSummary_10
   \      0x10C   0xEB07 0x0286      ADD      R2,R7,R6, LSL #+2
   \      0x110   0xF8D2 0x2080      LDR      R2,[R2, #+128]
   \      0x114   0x7810             LDRB     R0,[R2, #+0]
   \      0x116   0xB118             CBZ.N    R0,??halPrintCrashSummary_10
    454                  emberSerialPrintf(port, " %p", intActiveBits[bit + 32]);
   \      0x118   0x4641             MOV      R1,R8
   \      0x11A   0x4620             MOV      R0,R4
   \      0x11C   0x....'....        BL       emberSerialPrintf
    455                }
    456              }
   \                     ??halPrintCrashSummary_10: (+1)
   \      0x120   0x1C76             ADDS     R6,R6,#+1
   \      0x122   0x2E08             CMP      R6,#+8
   \      0x124   0xD9EE             BLS.N    ??halPrintCrashSummary_9
    457              emberSerialPrintCarriageReturn(port);
   \      0x126   0x4620             MOV      R0,R4
   \      0x128   0xB005             ADD      SP,SP,#+20
   \      0x12A   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \      0x12E   0x....'....        B.W      emberSerialPrintCarriageReturn
    458            }
    459          #else
    460            if (c->intActive.word) {
    461              emberSerialPrintf(port, "Interrupts active (or pre-empted and stacked):");
    462              for (bit = INT_TIM1_BIT; bit <= INT_DEBUG_BIT; bit++) {
    463                if ((c->intActive.word & (1 << bit)) && *intActiveBits[bit] ) {
    464                  emberSerialPrintf(port, " %p", intActiveBits[bit]);
    465                }
    466              }
    467              emberSerialPrintCarriageReturn(port);
    468            }
    469          #endif
    470            else {
    471              emberSerialPrintfLine(port, "No interrupts active");
   \                     ??halPrintCrashSummary_6: (+1)
   \      0x132   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \      0x136   0xB005             ADD      SP,SP,#+20
   \      0x138   0x....             LDR.N    R1,??DataTable3_16
   \      0x13A   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \      0x13E   0x....'....        B.W      emberSerialPrintfLine
    472            }
    473          }
    474          

   \                                 In section .text, align 2, keep-with-next
    475          void halPrintCrashDetails(uint8_t port)
    476          {
   \                     halPrintCrashDetails: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x4680             MOV      R8,R0
    477            HalCrashInfoType *c = &halResetInfo.crash;
    478            uint16_t reason = halGetExtendedResetInfo();
    479            uint8_t bit;
    480            const uint8_t numFaults = sizeof(cfsrBits) / sizeof(cfsrBits[0]);
    481          
    482            switch (reason) {
   \        0x6   0x....'....        BL       halGetExtendedResetInfo
   \        0xA   0xF240 0x5101      MOVW     R1,#+1281
   \        0xE   0x....             LDR.N    R7,??DataTable3_17
   \       0x10   0x....             LDR.N    R4,??DataTable3_18
   \       0x12   0x....             LDR.N    R5,??DataTable3_19
   \       0x14   0x....'....        LDR.W    R9,??DataTable3_20
   \       0x18   0x....             LDR.N    R6,??DataTable3_2
   \       0x1A   0x1A40             SUBS     R0,R0,R1
   \       0x1C   0xD013             BEQ.N    ??halPrintCrashDetails_0
   \       0x1E   0x1E40             SUBS     R0,R0,#+1
   \       0x20   0xD01B             BEQ.N    ??halPrintCrashDetails_1
   \       0x22   0xF240 0x11FF      MOVW     R1,#+511
   \       0x26   0x1A40             SUBS     R0,R0,R1
   \       0x28   0xD01D             BEQ.N    ??halPrintCrashDetails_2
   \       0x2A   0xF44F 0x7140      MOV      R1,#+768
   \       0x2E   0x1A40             SUBS     R0,R0,R1
   \       0x30   0xD022             BEQ.N    ??halPrintCrashDetails_3
   \       0x32   0x1E40             SUBS     R0,R0,#+1
   \       0x34   0xD036             BEQ.N    ??halPrintCrashDetails_4
   \       0x36   0x1E40             SUBS     R0,R0,#+1
   \       0x38   0xD056             BEQ.N    ??halPrintCrashDetails_5
   \       0x3A   0x1E40             SUBS     R0,R0,#+1
   \       0x3C   0xD07D             BEQ.N    ??halPrintCrashDetails_6
   \       0x3E   0x1E40             SUBS     R0,R0,#+1
   \       0x40   0xF000 0x8093      BEQ.W    ??halPrintCrashDetails_7
   \       0x44   0xE007             B.N      ??halPrintCrashDetails_8
    483              case RESET_WATCHDOG_EXPIRED:
    484                emberSerialPrintfLine(port, "Reset cause: Watchdog expired, no reliable extra information");
   \                     ??halPrintCrashDetails_0: (+1)
   \       0x46   0x....             LDR.N    R1,??DataTable3_21
   \                     ??halPrintCrashDetails_9: (+1)
   \       0x48   0x....'....        BL       ?Subroutine1
    485                emberSerialWaitSend(port);
    486                break;
    487              case RESET_WATCHDOG_CAUGHT:
    488                emberSerialPrintfLine(port, "Reset cause: Watchdog caught with enhanced info");
    489                emberSerialPrintfLine(port, "Instruction address: %4x", c->PC);
    490                emberSerialWaitSend(port);
    491                break;
    492          
    493              case RESET_CRASH_ASSERT:
    494                emberSerialPrintfLine(port, "Reset cause: Assert %p:%d",
    495                                      c->data.assertInfo.file, c->data.assertInfo.line);
    496                emberSerialWaitSend(port);
    497                break;
    498          
    499              case RESET_FAULT_HARD:
    500                emberSerialPrintfLine(port, "Reset cause: Hard Fault");
    501                if (c->hfsr.bits.VECTTBL) {
    502                  emberSerialPrintfLine(port,
    503                                        "HFSR.VECTTBL: error reading vector table for an exception");
    504                }
    505                if (c->hfsr.bits.FORCED) {
    506                  emberSerialPrintfLine(port,
    507                                        "HFSR.FORCED: configurable fault could not activate");
    508                }
    509                if (c->hfsr.bits.DEBUGEVT) {
    510                  emberSerialPrintfLine(port,
    511                                        "HFSR.DEBUGEVT: fault related to debug - e.g., executed BKPT");
    512                }
    513                emberSerialWaitSend(port);
    514                break;
    515          
    516          #if (__CORTEX_M >= 0x03)
    517              // The following faults don't exist on Cortex-M0+
    518              case RESET_FAULT_MEM:
    519                emberSerialPrintfLine(port, "Reset cause: Memory Management Fault");
    520                if (c->cfsr.bits.DACCVIOL || c->cfsr.bits.IACCVIOL) {
    521                  emberSerialPrintfLine(port, "Instruction address: %4x", c->PC);
    522                }
    523                if (c->cfsr.bits.MMARVALID) {
    524                  emberSerialPrintfLine(port, "Illegal access address: %4x", c->faultAddress);
    525                }
    526                for (bit = SCB_CFSR_MEMFAULTSR_Pos; bit < (SCB_CFSR_MEMFAULTSR_Pos + 8); bit++) {
    527                  if ((c->cfsr.word & (1 << bit)) && (*cfsrBits[bit] != '\0')) {
    528                    emberSerialPrintfLine(port, "CFSR.%p", cfsrBits[bit]);
    529                  }
    530                }
    531                emberSerialWaitSend(port);
    532                break;
    533          
    534              case RESET_FAULT_BUS:
    535                emberSerialPrintfLine(port, "Reset cause: Bus Fault");
    536                emberSerialPrintfLine(port, "Instruction address: %4x", c->PC);
    537                if (c->cfsr.bits.IMPRECISERR) {
    538                  emberSerialPrintfLine(port,
    539                                        "Address is of an instruction after bus fault occurred, not the cause.");
    540                }
    541                if (c->cfsr.bits.BFARVALID) {
    542                  emberSerialPrintfLine(port, "Illegal access address: %4x",
    543                                        c->faultAddress);
    544                }
    545                for (bit = SCB_CFSR_BUSFAULTSR_Pos; bit < SCB_CFSR_USGFAULTSR_Pos; bit++) {
    546                  if (((c->cfsr.word >> bit) & 1U) && (*cfsrBits[bit] != '\0')) {
    547                    emberSerialPrintfLine(port, "CFSR.%p", cfsrBits[bit]);
    548                  }
    549                }
    550                if ((c->cfsr.word & 0xFF) == 0) {
    551                  emberSerialPrintfLine(port, "CFSR.(none) load or store at an illegal address");
    552                }
    553                emberSerialWaitSend(port);
    554                break;
    555          
    556              case RESET_FAULT_USAGE:
    557                emberSerialPrintfLine(port, "Reset cause: Usage Fault");
    558                emberSerialPrintfLine(port, "Instruction address: %4x", c->PC);
    559                for (bit = SCB_CFSR_USGFAULTSR_Pos;
    560                     (bit < numFaults) && (bit < (sizeof(c->cfsr.word) * 8));
    561                     bit++) {
    562                  if (((c->cfsr.word >> bit) & 1U) && (*cfsrBits[bit] != '\0')) {
    563                    emberSerialPrintfLine(port, "CFSR.%p", cfsrBits[bit]);
    564                  }
    565                }
    566                emberSerialWaitSend(port);
   \                     ??CrossCallReturnLabel_17: (+1)
   \       0x4C   0x4640             MOV      R0,R8
   \       0x4E   0xE8BD 0x43F2      POP      {R1,R4-R9,LR}
   \       0x52   0x....'....        B.W      emberSerialWaitSend
    567                break;
    568          #endif // (__CORTEX_M >= 0x03)
    569          
    570              case RESET_FAULT_DBGMON:
    571                emberSerialPrintfLine(port, "Reset cause: Debug Monitor Fault");
    572                emberSerialPrintfLine(port, "Instruction address: %4x", c->PC);
    573                emberSerialWaitSend(port);
    574                break;
    575          
    576              default:
    577                break;
    578            }
    579          }
   \                     ??halPrintCrashDetails_8: (+1)
   \       0x56   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   \                     ??halPrintCrashDetails_1: (+1)
   \       0x5A   0x....             LDR.N    R1,??DataTable3_22
   \                     ??halPrintCrashDetails_10: (+1)
   \       0x5C   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_16: (+1)
   \       0x60   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_8: (+1)
   \       0x64   0xE7F2             B.N      ??CrossCallReturnLabel_17
   \                     ??halPrintCrashDetails_2: (+1)
   \       0x66   0xF106 0x0094      ADD      R0,R6,#+148
   \       0x6A   0x6843             LDR      R3,[R0, #+4]
   \       0x6C   0x6802             LDR      R2,[R0, #+0]
   \       0x6E   0x....             LDR.N    R1,??DataTable3_23
   \       0x70   0x4640             MOV      R0,R8
   \       0x72   0x....'....        BL       emberSerialPrintfLine
   \       0x76   0xE7E9             B.N      ??CrossCallReturnLabel_17
   \                     ??halPrintCrashDetails_3: (+1)
   \       0x78   0x....             LDR.N    R1,??DataTable3_24
   \       0x7A   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_15: (+1)
   \       0x7E   0x6EF0             LDR      R0,[R6, #+108]
   \       0x80   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \       0x84   0xB110             CBZ.N    R0,??CrossCallReturnLabel_14
   \       0x86   0x....             LDR.N    R1,??DataTable3_25
   \       0x88   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_14: (+1)
   \       0x8C   0x6EF0             LDR      R0,[R6, #+108]
   \       0x8E   0xF3C0 0x7080      UBFX     R0,R0,#+30,#+1
   \       0x92   0xB110             CBZ.N    R0,??CrossCallReturnLabel_13
   \       0x94   0x....             LDR.N    R1,??DataTable3_26
   \       0x96   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x9A   0x6EF0             LDR      R0,[R6, #+108]
   \       0x9C   0x0FC0             LSRS     R0,R0,#+31
   \       0x9E   0xD0D5             BEQ.N    ??CrossCallReturnLabel_17
   \       0xA0   0x....             LDR.N    R1,??DataTable3_27
   \       0xA2   0xE7D1             B.N      ??halPrintCrashDetails_9
   \                     ??halPrintCrashDetails_4: (+1)
   \       0xA4   0x....             LDR.N    R1,??DataTable3_28
   \       0xA6   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_12: (+1)
   \       0xAA   0xF896 0x0068      LDRB     R0,[R6, #+104]
   \       0xAE   0xF010 0x0F03      TST      R0,#0x3
   \       0xB2   0xD001             BEQ.N    ??CrossCallReturnLabel_7
   \       0xB4   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_7: (+1)
   \       0xB8   0x6EB0             LDR      R0,[R6, #+104]
   \       0xBA   0xF3C0 0x10C0      UBFX     R0,R0,#+7,#+1
   \       0xBE   0xB118             CBZ.N    R0,??CrossCallReturnLabel_4
   \       0xC0   0x6F72             LDR      R2,[R6, #+116]
   \       0xC2   0x4639             MOV      R1,R7
   \       0xC4   0x....'....        BL       ??Subroutine0_0
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0xC8   0x2700             MOVS     R7,#+0
   \                     ??halPrintCrashDetails_11: (+1)
   \       0xCA   0x6EB0             LDR      R0,[R6, #+104]
   \       0xCC   0x40F8             LSRS     R0,R0,R7
   \       0xCE   0x07C1             LSLS     R1,R0,#+31
   \       0xD0   0xD506             BPL.N    ??CrossCallReturnLabel_3
   \       0xD2   0xF855 0x2027      LDR      R2,[R5, R7, LSL #+2]
   \       0xD6   0x7810             LDRB     R0,[R2, #+0]
   \       0xD8   0xB110             CBZ.N    R0,??CrossCallReturnLabel_3
   \       0xDA   0x4621             MOV      R1,R4
   \       0xDC   0x....'....        BL       ??Subroutine0_0
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0xE0   0x1C7F             ADDS     R7,R7,#+1
   \       0xE2   0x2F08             CMP      R7,#+8
   \       0xE4   0xD3F1             BCC.N    ??halPrintCrashDetails_11
   \       0xE6   0xE7B1             B.N      ??CrossCallReturnLabel_17
   \                     ??halPrintCrashDetails_5: (+1)
   \       0xE8   0x....             LDR.N    R1,??DataTable3_29
   \       0xEA   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_11: (+1)
   \       0xEE   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0xF2   0x6EB0             LDR      R0,[R6, #+104]
   \       0xF4   0xF3C0 0x2080      UBFX     R0,R0,#+10,#+1
   \       0xF8   0xB110             CBZ.N    R0,??CrossCallReturnLabel_10
   \       0xFA   0x....             LDR.N    R1,??DataTable3_30
   \       0xFC   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_10: (+1)
   \      0x100   0x6EB0             LDR      R0,[R6, #+104]
   \      0x102   0xF3C0 0x30C0      UBFX     R0,R0,#+15,#+1
   \      0x106   0xB118             CBZ.N    R0,??CrossCallReturnLabel_2
   \      0x108   0x6F72             LDR      R2,[R6, #+116]
   \      0x10A   0x4639             MOV      R1,R7
   \      0x10C   0x....'....        BL       ??Subroutine0_0
   \                     ??CrossCallReturnLabel_2: (+1)
   \      0x110   0x2708             MOVS     R7,#+8
   \                     ??halPrintCrashDetails_12: (+1)
   \      0x112   0x6EB0             LDR      R0,[R6, #+104]
   \      0x114   0x40F8             LSRS     R0,R0,R7
   \      0x116   0x07C1             LSLS     R1,R0,#+31
   \      0x118   0xD506             BPL.N    ??CrossCallReturnLabel_1
   \      0x11A   0xF855 0x2027      LDR      R2,[R5, R7, LSL #+2]
   \      0x11E   0x7810             LDRB     R0,[R2, #+0]
   \      0x120   0xB110             CBZ.N    R0,??CrossCallReturnLabel_1
   \      0x122   0x4621             MOV      R1,R4
   \      0x124   0x....'....        BL       ??Subroutine0_0
   \                     ??CrossCallReturnLabel_1: (+1)
   \      0x128   0x1C7F             ADDS     R7,R7,#+1
   \      0x12A   0x2F10             CMP      R7,#+16
   \      0x12C   0xD3F1             BCC.N    ??halPrintCrashDetails_12
   \      0x12E   0xF896 0x0068      LDRB     R0,[R6, #+104]
   \      0x132   0x0601             LSLS     R1,R0,#+24
   \      0x134   0xD18A             BNE.N    ??CrossCallReturnLabel_17
   \      0x136   0x....             LDR.N    R1,??DataTable3_31
   \      0x138   0xE786             B.N      ??halPrintCrashDetails_9
   \                     ??halPrintCrashDetails_6: (+1)
   \      0x13A   0x....             LDR.N    R1,??DataTable3_32
   \      0x13C   0x....'....        BL       ?Subroutine1
   \                     ??CrossCallReturnLabel_9: (+1)
   \      0x140   0x....'....        BL       ?Subroutine0
   \                     ??CrossCallReturnLabel_5: (+1)
   \      0x144   0x2710             MOVS     R7,#+16
   \                     ??halPrintCrashDetails_13: (+1)
   \      0x146   0x6EB0             LDR      R0,[R6, #+104]
   \      0x148   0x40F8             LSRS     R0,R0,R7
   \      0x14A   0x07C1             LSLS     R1,R0,#+31
   \      0x14C   0xD506             BPL.N    ??CrossCallReturnLabel_0
   \      0x14E   0xF855 0x2027      LDR      R2,[R5, R7, LSL #+2]
   \      0x152   0x7810             LDRB     R0,[R2, #+0]
   \      0x154   0xB110             CBZ.N    R0,??CrossCallReturnLabel_0
   \      0x156   0x4621             MOV      R1,R4
   \      0x158   0x....'....        BL       ??Subroutine0_0
   \                     ??CrossCallReturnLabel_0: (+1)
   \      0x15C   0x1C7F             ADDS     R7,R7,#+1
   \      0x15E   0xB2FF             UXTB     R7,R7
   \      0x160   0x2F1A             CMP      R7,#+26
   \      0x162   0xDA01             BGE.N    ??halPrintCrashDetails_14
   \      0x164   0x2F20             CMP      R7,#+32
   \      0x166   0xD3EE             BCC.N    ??halPrintCrashDetails_13
   \                     ??halPrintCrashDetails_14: (+1)
   \      0x168   0xE770             B.N      ??CrossCallReturnLabel_17
   \                     ??halPrintCrashDetails_7: (+1)
   \      0x16A   0x....             LDR.N    R1,??DataTable3_33
   \      0x16C   0xE776             B.N      ??halPrintCrashDetails_10

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x4640             MOV      R0,R8
   \        0x2   0x....'....        B.W      emberSerialPrintfLine

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x6C72             LDR      R2,[R6, #+68]
   \        0x2   0x4649             MOV      R1,R9
   \                     ??Subroutine0_0: (+1)
   \        0x4   0x4640             MOV      R0,R8
   \        0x6   0x....'....        B.W      emberSerialPrintfLine
    580          
    581          // Output an array of 32 bit values, 4 per line, each preceded by its name.

   \                                 In section .text, align 2, keep-with-next
    582          void halPrintCrashData(uint8_t port)
    583          {
   \                     halPrintCrashData: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0x4681             MOV      R9,R0
    584            uint32_t *data = (uint32_t *)&halResetInfo.crash.R0;
   \        0x6   0x....'....        LDR.W    R10,??DataTable3_34
    585            char const *name = nameStrings;
   \        0xA   0x....             LDR.N    R4,??DataTable3_35
    586            char const *separator;
    587            uint8_t i = 0;
   \        0xC   0x2500             MOVS     R5,#+0
   \        0xE   0x....             ADR.N    R6,??DataTable3  ;; 0x0D, 0x0A, 0x00, 0x00
   \       0x10   0x....             ADR.N    R7,??DataTable3_1  ;; 0x2C, 0x20, 0x00, 0x00
   \       0x12   0x....'....        LDR.W    R8,??DataTable3_36
   \       0x16   0xE015             B.N      ??halPrintCrashData_0
    588          
    589            while (*name != '\0') {
    590              emberSerialPrintf(port, "%p = %4x", name, *data++);
    591              // increment pointer to end of name
    592              while (*name != '\0') {
    593                name++;
   \                     ??halPrintCrashData_1: (+1)
   \       0x18   0x1C64             ADDS     R4,R4,#+1
    594              }
   \                     ??halPrintCrashData_2: (+1)
   \       0x1A   0x7820             LDRB     R0,[R4, #+0]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD1FB             BNE.N    ??halPrintCrashData_1
    595              // increment past null pointer for next name
    596              name++;
    597          
    598              /*lint -save -e448 */
    599              separator = ((*name != '\0') && ((i & 3) != 3)) ? ", " : "\r\n";
   \       0x20   0xF814 0x0F01      LDRB     R0,[R4, #+1]!
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xBF1E             ITTT     NE 
   \       0x28   0xB2E8             UXTBNE   R0,R5
   \       0x2A   0xF000 0x0003      ANDNE    R0,R0,#0x3
   \       0x2E   0x2803             CMPNE    R0,#+3
    600          
    601              /*lint -restore */
    602              emberSerialPrintf(port, separator);
   \       0x30   0x4648             MOV      R0,R9
   \       0x32   0xBF0C             ITE      EQ 
   \       0x34   0x4631             MOVEQ    R1,R6
   \       0x36   0x4639             MOVNE    R1,R7
   \       0x38   0x....'....        BL       emberSerialPrintf
    603              emberSerialWaitSend(port);
   \       0x3C   0x4648             MOV      R0,R9
   \       0x3E   0x....'....        BL       emberSerialWaitSend
    604              i++;
   \       0x42   0x1C6D             ADDS     R5,R5,#+1
   \                     ??halPrintCrashData_0: (+1)
   \       0x44   0x7820             LDRB     R0,[R4, #+0]
   \       0x46   0xB138             CBZ.N    R0,??halPrintCrashData_3
   \       0x48   0xF85A 0x3B04      LDR      R3,[R10], #+4
   \       0x4C   0x4622             MOV      R2,R4
   \       0x4E   0x4641             MOV      R1,R8
   \       0x50   0x4648             MOV      R0,R9
   \       0x52   0x....'....        BL       emberSerialPrintf
   \       0x56   0xE7E0             B.N      ??halPrintCrashData_2
    605            }
    606          }
   \                     ??halPrintCrashData_3: (+1)
   \       0x58   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    607          

   \                                 In section .text, align 2, keep-with-next
    608          uint16_t halGetPCDiagnostics(void)
    609          {
    610            return 0;
   \                     halGetPCDiagnostics: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR               ;; return
    611          }
    612          

   \                                 In section .text, align 2, keep-with-next
    613          void halStartPCDiagnostics(void)
    614          {
    615          }
   \                     halStartPCDiagnostics: (+1)
   \        0x0   0x4770             BX       LR               ;; return
    616          

   \                                 In section .text, align 2, keep-with-next
    617          void halStopPCDiagnostics(void)
    618          {
    619          }
   \                     halStopPCDiagnostics: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x0D 0x0A          DC8      0x0D, 0x0A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x2C 0x20          DC8      0x2C, 0x20, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0x....'....        DC32     halResetInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x....'....        DC32     ?_59

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x....'....        DC32     ?_60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x....'....        DC32     SFE(CSTACK)

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x....'....        DC32     ?_61

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \        0x0   0x....'....        DC32     ?_62

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \        0x0   0x....'....        DC32     ?_63

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \        0x0   0x....'....        DC32     ?_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \        0x0   0x....'....        DC32     SFE(RESETINFO)

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \        0x0   0x....'....        DC32     ?_65

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \        0x0   0x....'....        DC32     ?_66

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \        0x0   0x....'....        DC32     ?_67

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \        0x0   0x....'....        DC32     ?_68

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \        0x0   0x....'....        DC32     intActiveBits

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \        0x0   0x....'....        DC32     ?_69

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \        0x0   0x....'....        DC32     ?_79

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \        0x0   0x....'....        DC32     ?_80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \        0x0   0x....'....        DC32     cfsrBits

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \        0x0   0x....'....        DC32     ?_72

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \        0x0   0x....'....        DC32     ?_70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \        0x0   0x....'....        DC32     ?_71

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \        0x0   0x....'....        DC32     ?_73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \        0x0   0x....'....        DC32     ?_74

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \        0x0   0x....'....        DC32     ?_75

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \        0x0   0x....'....        DC32     ?_76

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \        0x0   0x....'....        DC32     ?_77

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \        0x0   0x....'....        DC32     ?_78

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \        0x0   0x....'....        DC32     ?_81

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \        0x0   0x....'....        DC32     ?_82

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \        0x0   0x....'....        DC32     ?_83

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \        0x0   0x....'....        DC32     ?_84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \        0x0   0x....'....        DC32     ?_85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \        0x0   0x....'....        DC32     halResetInfo+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \        0x0   0x....'....        DC32     nameStrings

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_36:
   \        0x0   0x....'....        DC32     ?_86

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x49 0x41          DC8 49H, 41H, 43H, 43H, 56H, 49H, 4FH, 4CH
   \              0x43 0x43    
   \              0x56 0x49    
   \              0x4F 0x4C    
   \        0x8   0x3A 0x20          DC8 3AH, 20H, 61H, 74H, 74H, 65H, 6DH, 70H
   \              0x61 0x74    
   \              0x74 0x65    
   \              0x6D 0x70    
   \       0x10   0x74 0x65          DC8 74H, 65H, 64H, 20H, 69H, 6EH, 73H, 74H
   \              0x64 0x20    
   \              0x69 0x6E    
   \              0x73 0x74    
   \       0x18   0x72 0x75          DC8 72H, 75H, 63H, 74H, 69H, 6FH, 6EH, 20H
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \       0x20   0x66 0x65          DC8 66H, 65H, 74H, 63H, 68H, 20H, 66H, 72H
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x66 0x72    
   \       0x28   0x6F 0x6D          DC8 6FH, 6DH, 20H, 61H, 20H, 6EH, 6FH, 2DH
   \              0x20 0x61    
   \              0x20 0x6E    
   \              0x6F 0x2D    
   \       0x30   0x65 0x78          DC8 65H, 78H, 65H, 63H, 75H, 74H, 65H, 20H
   \              0x65 0x63    
   \              0x75 0x74    
   \              0x65 0x20    
   \       0x38   0x61 0x64          DC8 61H, 64H, 64H, 72H, 65H, 73H, 73H, 0
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x44 0x41          DC8 44H, 41H, 43H, 43H, 56H, 49H, 4FH, 4CH
   \              0x43 0x43    
   \              0x56 0x49    
   \              0x4F 0x4C    
   \        0x8   0x3A 0x20          DC8 3AH, 20H, 61H, 74H, 74H, 65H, 6DH, 70H
   \              0x61 0x74    
   \              0x74 0x65    
   \              0x6D 0x70    
   \       0x10   0x74 0x65          DC8 74H, 65H, 64H, 20H, 6CH, 6FH, 61H, 64H
   \              0x64 0x20    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \       0x18   0x20 0x6F          DC8 20H, 6FH, 72H, 20H, 73H, 74H, 6FH, 72H
   \              0x72 0x20    
   \              0x73 0x74    
   \              0x6F 0x72    
   \       0x20   0x65 0x20          DC8 65H, 20H, 61H, 74H, 20H, 61H, 6EH, 20H
   \              0x61 0x74    
   \              0x20 0x61    
   \              0x6E 0x20    
   \       0x28   0x69 0x6C          DC8 69H, 6CH, 6CH, 65H, 67H, 61H, 6CH, 20H
   \              0x6C 0x65    
   \              0x67 0x61    
   \              0x6C 0x20    
   \       0x30   0x61 0x64          DC8 61H, 64H, 64H, 72H, 65H, 73H, 73H, 0
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 1
   \                     ?_2:
   \        0x0   0x00               DC8 ""

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x4D 0x55          DC8 4DH, 55H, 4EH, 53H, 54H, 4BH, 45H, 52H
   \              0x4E 0x53    
   \              0x54 0x4B    
   \              0x45 0x52    
   \        0x8   0x52 0x3A          DC8 52H, 3AH, 20H, 75H, 6EH, 73H, 74H, 61H
   \              0x20 0x75    
   \              0x6E 0x73    
   \              0x74 0x61    
   \       0x10   0x63 0x6B          DC8 63H, 6BH, 20H, 66H, 72H, 6FH, 6DH, 20H
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \       0x18   0x65 0x78          DC8 65H, 78H, 63H, 65H, 70H, 74H, 69H, 6FH
   \              0x63 0x65    
   \              0x70 0x74    
   \              0x69 0x6F    
   \       0x20   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 74H, 75H, 72H, 6EH
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \       0x28   0x20 0x63          DC8 20H, 63H, 61H, 75H, 73H, 65H, 64H, 20H
   \              0x61 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \       0x30   0x61 0x63          DC8 61H, 63H, 63H, 65H, 73H, 73H, 20H, 76H
   \              0x63 0x65    
   \              0x73 0x73    
   \              0x20 0x76    
   \       0x38   0x69 0x6F          DC8 69H, 6FH, 6CH, 61H, 74H, 69H, 6FH, 6EH
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \       0x40   0x00               DC8 0
   \       0x41   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x4D 0x53          DC8 4DH, 53H, 54H, 4BH, 45H, 52H, 52H, 3AH
   \              0x54 0x4B    
   \              0x45 0x52    
   \              0x52 0x3A    
   \        0x8   0x20 0x73          DC8 20H, 73H, 74H, 61H, 63H, 6BH, 69H, 6EH
   \              0x74 0x61    
   \              0x63 0x6B    
   \              0x69 0x6E    
   \       0x10   0x67 0x20          DC8 67H, 20H, 66H, 72H, 6FH, 6DH, 20H, 65H
   \              0x66 0x72    
   \              0x6F 0x6D    
   \              0x20 0x65    
   \       0x18   0x78 0x63          DC8 78H, 63H, 65H, 70H, 74H, 69H, 6FH, 6EH
   \              0x65 0x70    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \       0x20   0x20 0x63          DC8 20H, 63H, 61H, 75H, 73H, 65H, 64H, 20H
   \              0x61 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \       0x28   0x61 0x63          DC8 61H, 63H, 63H, 65H, 73H, 73H, 20H, 76H
   \              0x63 0x65    
   \              0x73 0x73    
   \              0x20 0x76    
   \       0x30   0x69 0x6F          DC8 69H, 6FH, 6CH, 61H, 74H, 69H, 6FH, 6EH
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \       0x38   0x00               DC8 0
   \       0x39   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x4D 0x4D          DC8 "MMARVALID: MMAR contains valid fault address"
   \              0x41 0x52    
   \              0x56 0x41    
   \              0x4C 0x49    
   \              0x44 0x3A    
   \              0x20 0x4D    
   \              0x4D 0x41    
   \              0x52 0x20    
   \              0x63 0x6F    
   \              0x6E 0x74    
   \              0x61 0x69    
   \              0x6E 0x73    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00         
   \       0x2D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x49 0x42          DC8 "IBUSERR: instruction prefetch caused bus fault"
   \              0x55 0x53    
   \              0x45 0x52    
   \              0x52 0x3A    
   \              0x20 0x69    
   \              0x6E 0x73    
   \              0x74 0x72    
   \              0x75 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x66 0x65    
   \              0x74 0x63    
   \              0x68 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x64    
   \              0x20 0x62    
   \              0x75 0x73    
   \              0x20 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x2F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x50 0x52          DC8 "PRECISERR: precise data bus fault"
   \              0x45 0x43    
   \              0x49 0x53    
   \              0x45 0x52    
   \              0x52 0x3A    
   \              0x20 0x70    
   \              0x72 0x65    
   \              0x63 0x69    
   \              0x73 0x65    
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x62 0x75    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x00    
   \       0x22   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x49 0x4D          DC8 "IMPRECISERR: imprecise data bus fault"
   \              0x50 0x52    
   \              0x45 0x43    
   \              0x49 0x53    
   \              0x45 0x52    
   \              0x52 0x3A    
   \              0x20 0x69    
   \              0x6D 0x70    
   \              0x72 0x65    
   \              0x63 0x69    
   \              0x73 0x65    
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x62 0x75    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x00    
   \       0x26   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x55 0x4E          DC8 55H, 4EH, 53H, 54H, 4BH, 45H, 52H, 52H
   \              0x53 0x54    
   \              0x4B 0x45    
   \              0x52 0x52    
   \        0x8   0x3A 0x20          DC8 3AH, 20H, 75H, 6EH, 73H, 74H, 61H, 63H
   \              0x75 0x6E    
   \              0x73 0x74    
   \              0x61 0x63    
   \       0x10   0x6B 0x69          DC8 6BH, 69H, 6EH, 67H, 20H, 6FH, 6EH, 20H
   \              0x6E 0x67    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \       0x18   0x65 0x78          DC8 65H, 78H, 63H, 65H, 70H, 74H, 69H, 6FH
   \              0x63 0x65    
   \              0x70 0x74    
   \              0x69 0x6F    
   \       0x20   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 74H, 75H, 72H, 6EH
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \       0x28   0x20 0x63          DC8 20H, 63H, 61H, 75H, 73H, 65H, 64H, 20H
   \              0x61 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \       0x30   0x64 0x61          DC8 64H, 61H, 74H, 61H, 20H, 62H, 75H, 73H
   \              0x74 0x61    
   \              0x20 0x62    
   \              0x75 0x73    
   \       0x38   0x20 0x66          DC8 20H, 66H, 61H, 75H, 6CH, 74H, 0
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x3F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x53 0x54          DC8 53H, 54H, 4BH, 45H, 52H, 52H, 3AH, 20H
   \              0x4B 0x45    
   \              0x52 0x52    
   \              0x3A 0x20    
   \        0x8   0x73 0x74          DC8 73H, 74H, 61H, 63H, 6BH, 69H, 6EH, 67H
   \              0x61 0x63    
   \              0x6B 0x69    
   \              0x6E 0x67    
   \       0x10   0x20 0x6F          DC8 20H, 6FH, 6EH, 20H, 65H, 78H, 63H, 65H
   \              0x6E 0x20    
   \              0x65 0x78    
   \              0x63 0x65    
   \       0x18   0x70 0x74          DC8 70H, 74H, 69H, 6FH, 6EH, 20H, 65H, 6EH
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x65 0x6E    
   \       0x20   0x74 0x72          DC8 74H, 72H, 79H, 20H, 63H, 61H, 75H, 73H
   \              0x79 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \       0x28   0x65 0x64          DC8 65H, 64H, 20H, 64H, 61H, 74H, 61H, 20H
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \       0x30   0x62 0x75          DC8 62H, 75H, 73H, 20H, 66H, 61H, 75H, 6CH
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x75 0x6C    
   \       0x38   0x74 0x00          DC8 74H, 0
   \       0x3A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x42 0x46          DC8 "BFARVALID: BFAR contains valid fault address"
   \              0x41 0x52    
   \              0x56 0x41    
   \              0x4C 0x49    
   \              0x44 0x3A    
   \              0x20 0x42    
   \              0x46 0x41    
   \              0x52 0x20    
   \              0x63 0x6F    
   \              0x6E 0x74    
   \              0x61 0x69    
   \              0x6E 0x73    
   \              0x20 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x66    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x00         
   \       0x2D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x55 0x4E          DC8 55H, 4EH, 44H, 45H, 46H, 49H, 4EH, 53H
   \              0x44 0x45    
   \              0x46 0x49    
   \              0x4E 0x53    
   \        0x8   0x54 0x52          DC8 54H, 52H, 3AH, 20H, 74H, 72H, 69H, 65H
   \              0x3A 0x20    
   \              0x74 0x72    
   \              0x69 0x65    
   \       0x10   0x64 0x20          DC8 64H, 20H, 74H, 6FH, 20H, 65H, 78H, 65H
   \              0x74 0x6F    
   \              0x20 0x65    
   \              0x78 0x65    
   \       0x18   0x63 0x75          DC8 63H, 75H, 74H, 65H, 20H, 61H, 6EH, 20H
   \              0x74 0x65    
   \              0x20 0x61    
   \              0x6E 0x20    
   \       0x20   0x75 0x6E          DC8 75H, 6EH, 64H, 65H, 66H, 69H, 6EH, 65H
   \              0x64 0x65    
   \              0x66 0x69    
   \              0x6E 0x65    
   \       0x28   0x64 0x20          DC8 64H, 20H, 69H, 6EH, 73H, 74H, 72H, 75H
   \              0x69 0x6E    
   \              0x73 0x74    
   \              0x72 0x75    
   \       0x30   0x63 0x74          DC8 63H, 74H, 69H, 6FH, 6EH, 0
   \              0x69 0x6F    
   \              0x6E 0x00    
   \       0x36   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x49 0x4E          DC8 49H, 4EH, 56H, 53H, 54H, 41H, 54H, 45H
   \              0x56 0x53    
   \              0x54 0x41    
   \              0x54 0x45    
   \        0x8   0x3A 0x20          DC8 3AH, 20H, 69H, 6EH, 76H, 61H, 6CH, 69H
   \              0x69 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \       0x10   0x64 0x20          DC8 64H, 20H, 45H, 50H, 53H, 52H, 20H, 2DH
   \              0x45 0x50    
   \              0x53 0x52    
   \              0x20 0x2D    
   \       0x18   0x20 0x65          DC8 20H, 65H, 2EH, 67H, 2EH, 2CH, 20H, 74H
   \              0x2E 0x67    
   \              0x2E 0x2C    
   \              0x20 0x74    
   \       0x20   0x72 0x69          DC8 72H, 69H, 65H, 64H, 20H, 74H, 6FH, 20H
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \       0x28   0x73 0x77          DC8 73H, 77H, 69H, 74H, 63H, 68H, 20H, 74H
   \              0x69 0x74    
   \              0x63 0x68    
   \              0x20 0x74    
   \       0x30   0x6F 0x20          DC8 6FH, 20H, 41H, 52H, 4DH, 20H, 6DH, 6FH
   \              0x41 0x52    
   \              0x4D 0x20    
   \              0x6D 0x6F    
   \       0x38   0x64 0x65          DC8 64H, 65H, 0
   \              0x00         
   \       0x3B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x49 0x4E          DC8 "INVPC: exception return integrity checks failed"
   \              0x56 0x50    
   \              0x43 0x3A    
   \              0x20 0x65    
   \              0x78 0x63    
   \              0x65 0x70    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x72    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x20    
   \              0x69 0x6E    
   \              0x74 0x65    
   \              0x67 0x72    
   \              0x69 0x74    
   \              0x79 0x20    
   \              0x63 0x68    
   \              0x65 0x63    
   \              0x6B 0x73    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \        0x0   0x4E 0x4F          DC8 4EH, 4FH, 43H, 50H, 3AH, 20H, 61H, 74H
   \              0x43 0x50    
   \              0x3A 0x20    
   \              0x61 0x74    
   \        0x8   0x74 0x65          DC8 74H, 65H, 6DH, 70H, 74H, 65H, 64H, 20H
   \              0x6D 0x70    
   \              0x74 0x65    
   \              0x64 0x20    
   \       0x10   0x74 0x6F          DC8 74H, 6FH, 20H, 65H, 78H, 65H, 63H, 75H
   \              0x20 0x65    
   \              0x78 0x65    
   \              0x63 0x75    
   \       0x18   0x74 0x65          DC8 74H, 65H, 20H, 61H, 20H, 63H, 6FH, 70H
   \              0x20 0x61    
   \              0x20 0x63    
   \              0x6F 0x70    
   \       0x20   0x72 0x6F          DC8 72H, 6FH, 63H, 65H, 73H, 73H, 6FH, 72H
   \              0x63 0x65    
   \              0x73 0x73    
   \              0x6F 0x72    
   \       0x28   0x20 0x69          DC8 20H, 69H, 6EH, 73H, 74H, 72H, 75H, 63H
   \              0x6E 0x73    
   \              0x74 0x72    
   \              0x75 0x63    
   \       0x30   0x74 0x69          DC8 74H, 69H, 6FH, 6EH, 0
   \              0x6F 0x6E    
   \              0x00         
   \       0x35   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_16:
   \        0x0   0x55 0x4E          DC8 "UNALIGNED: attempted an unaligned memory access"
   \              0x41 0x4C    
   \              0x49 0x47    
   \              0x4E 0x45    
   \              0x44 0x3A    
   \              0x20 0x61    
   \              0x74 0x74    
   \              0x65 0x6D    
   \              0x70 0x74    
   \              0x65 0x64    
   \              0x20 0x61    
   \              0x6E 0x20    
   \              0x75 0x6E    
   \              0x61 0x6C    
   \              0x69 0x67    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x6D 0x65    
   \              0x6D 0x6F    
   \              0x72 0x79    
   \              0x20 0x61    
   \              0x63 0x63    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_17:
   \        0x0   0x44 0x49          DC8 44H, 49H, 56H, 42H, 59H, 5AH, 45H, 52H
   \              0x56 0x42    
   \              0x59 0x5A    
   \              0x45 0x52    
   \        0x8   0x4F 0x3A          DC8 4FH, 3AH, 20H, 61H, 74H, 74H, 65H, 6DH
   \              0x20 0x61    
   \              0x74 0x74    
   \              0x65 0x6D    
   \       0x10   0x70 0x74          DC8 70H, 74H, 65H, 64H, 20H, 74H, 6FH, 20H
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \       0x18   0x65 0x78          DC8 65H, 78H, 65H, 63H, 75H, 74H, 65H, 20H
   \              0x65 0x63    
   \              0x75 0x74    
   \              0x65 0x20    
   \       0x20   0x53 0x44          DC8 53H, 44H, 49H, 56H, 20H, 6FH, 72H, 20H
   \              0x49 0x56    
   \              0x20 0x6F    
   \              0x72 0x20    
   \       0x28   0x55 0x44          DC8 55H, 44H, 49H, 56H, 20H, 77H, 69H, 74H
   \              0x49 0x56    
   \              0x20 0x77    
   \              0x69 0x74    
   \       0x30   0x68 0x20          DC8 68H, 20H, 64H, 69H, 76H, 69H, 73H, 6FH
   \              0x64 0x69    
   \              0x76 0x69    
   \              0x73 0x6F    
   \       0x38   0x72 0x20          DC8 72H, 20H, 6FH, 66H, 20H, 30H, 0
   \              0x6F 0x66    
   \              0x20 0x30    
   \              0x00         
   \       0x3F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \        0x0   0x45 0x4D          DC8 "EMU_IRQn"
   \              0x55 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \        0x0   0x46 0x52          DC8 "FRC_PRI_IRQn"
   \              0x43 0x5F    
   \              0x50 0x52    
   \              0x49 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \        0x0   0x57 0x44          DC8 "WDOG0_IRQn"
   \              0x4F 0x47    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_21:
   \        0x0   0x57 0x44          DC8 "WDOG1_IRQn"
   \              0x4F 0x47    
   \              0x31 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \        0x0   0x46 0x52          DC8 "FRC_IRQn"
   \              0x43 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \        0x0   0x4D 0x4F          DC8 "MODEM_IRQn"
   \              0x44 0x45    
   \              0x4D 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \        0x0   0x52 0x41          DC8 "RAC_SEQ_IRQn"
   \              0x43 0x5F    
   \              0x53 0x45    
   \              0x51 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_25:
   \        0x0   0x52 0x41          DC8 "RAC_RSM_IRQn"
   \              0x43 0x5F    
   \              0x52 0x53    
   \              0x4D 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_26:
   \        0x0   0x42 0x55          DC8 "BUFC_IRQn"
   \              0x46 0x43    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \        0x0   0x4C 0x44          DC8 "LDMA_IRQn"
   \              0x4D 0x41    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_28:
   \        0x0   0x47 0x50          DC8 "GPIO_EVEN_IRQn"
   \              0x49 0x4F    
   \              0x5F 0x45    
   \              0x56 0x45    
   \              0x4E 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_29:
   \        0x0   0x54 0x49          DC8 "TIMER0_IRQn"
   \              0x4D 0x45    
   \              0x52 0x30    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_30:
   \        0x0   0x55 0x53          DC8 "USART0_RX_IRQn"
   \              0x41 0x52    
   \              0x54 0x30    
   \              0x5F 0x52    
   \              0x58 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \        0x0   0x55 0x53          DC8 "USART0_TX_IRQn"
   \              0x41 0x52    
   \              0x54 0x30    
   \              0x5F 0x54    
   \              0x58 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_32:
   \        0x0   0x41 0x43          DC8 "ACMP0_IRQn"
   \              0x4D 0x50    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \        0x0   0x41 0x44          DC8 "ADC0_IRQn"
   \              0x43 0x30    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \        0x0   0x49 0x44          DC8 "IDAC0_IRQn"
   \              0x41 0x43    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \        0x0   0x49 0x32          DC8 "I2C0_IRQn"
   \              0x43 0x30    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \        0x0   0x47 0x50          DC8 "GPIO_ODD_IRQn"
   \              0x49 0x4F    
   \              0x5F 0x4F    
   \              0x44 0x44    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_37:
   \        0x0   0x54 0x49          DC8 "TIMER1_IRQn"
   \              0x4D 0x45    
   \              0x52 0x31    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_38:
   \        0x0   0x55 0x53          DC8 "USART1_RX_IRQn"
   \              0x41 0x52    
   \              0x54 0x31    
   \              0x5F 0x52    
   \              0x58 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_39:
   \        0x0   0x55 0x53          DC8 "USART1_TX_IRQn"
   \              0x41 0x52    
   \              0x54 0x31    
   \              0x5F 0x54    
   \              0x58 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \        0x0   0x4C 0x45          DC8 "LEUART0_IRQn"
   \              0x55 0x41    
   \              0x52 0x54    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_41:
   \        0x0   0x50 0x43          DC8 "PCNT0_IRQn"
   \              0x4E 0x54    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_42:
   \        0x0   0x43 0x4D          DC8 "CMU_IRQn"
   \              0x55 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_43:
   \        0x0   0x4D 0x53          DC8 "MSC_IRQn"
   \              0x43 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_44:
   \        0x0   0x43 0x52          DC8 "CRYPTO0_IRQn"
   \              0x59 0x50    
   \              0x54 0x4F    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_45:
   \        0x0   0x4C 0x45          DC8 "LETIMER0_IRQn"
   \              0x54 0x49    
   \              0x4D 0x45    
   \              0x52 0x30    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_46:
   \        0x0   0x41 0x47          DC8 "AGC_IRQn"
   \              0x43 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_47:
   \        0x0   0x50 0x52          DC8 "PROTIMER_IRQn"
   \              0x4F 0x54    
   \              0x49 0x4D    
   \              0x45 0x52    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xE   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_48:
   \        0x0   0x50 0x52          DC8 "PRORTC_IRQn"
   \              0x4F 0x52    
   \              0x54 0x43    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_49:
   \        0x0   0x52 0x54          DC8 "RTCC_IRQn"
   \              0x43 0x43    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \        0xA   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_50:
   \        0x0   0x53 0x59          DC8 "SYNTH_IRQn"
   \              0x4E 0x54    
   \              0x48 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_51:
   \        0x0   0x43 0x52          DC8 "CRYOTIMER_IRQn"
   \              0x59 0x4F    
   \              0x54 0x49    
   \              0x4D 0x45    
   \              0x52 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xF   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_52:
   \        0x0   0x52 0x46          DC8 "RFSENSE_IRQn"
   \              0x53 0x45    
   \              0x4E 0x53    
   \              0x45 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_53:
   \        0x0   0x46 0x50          DC8 "FPUEH_IRQn"
   \              0x55 0x45    
   \              0x48 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_54:
   \        0x0   0x53 0x4D          DC8 "SMU_IRQn"
   \              0x55 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_55:
   \        0x0   0x57 0x54          DC8 "WTIMER0_IRQn"
   \              0x49 0x4D    
   \              0x45 0x52    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_56:
   \        0x0   0x56 0x44          DC8 "VDAC0_IRQn"
   \              0x41 0x43    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xB   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_57:
   \        0x0   0x4C 0x45          DC8 "LESENSE_IRQn"
   \              0x53 0x45    
   \              0x4E 0x53    
   \              0x45 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x00         
   \        0xD   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_58:
   \        0x0   0x54 0x52          DC8 "TRNG0_IRQnSYSCFG_IRQn"
   \              0x4E 0x47    
   \              0x30 0x5F    
   \              0x49 0x52    
   \              0x51 0x6E    
   \              0x53 0x59    
   \              0x53 0x43    
   \              0x46 0x47    
   \              0x5F 0x49    
   \              0x52 0x51    
   \              0x6E 0x00    
   \       0x16   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_59:
   \        0x0   0x70 0x72          DC8 "process"
   \              0x6F 0x63    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_60:
   \        0x0   0x6D 0x61          DC8 "main"
   \              0x69 0x6E    
   \              0x00         
   \        0x5   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_61:
   \        0x0   0x54 0x68          DC8 "Thread"
   \              0x72 0x65    
   \              0x61 0x64    
   \              0x00         
   \        0x7   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_62:
   \        0x0   0x48 0x61          DC8 "Handler"
   \              0x6E 0x64    
   \              0x6C 0x65    
   \              0x72 0x00    

   \                                 In section .rodata, align 4
   \                     ?_63:
   \        0x0   0x25 0x70          DC8 "%p mode using %p stack (%4x to %4x), SP = %4x"
   \              0x20 0x6D    
   \              0x6F 0x64    
   \              0x65 0x20    
   \              0x75 0x73    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x70    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x63 0x6B    
   \              0x20 0x28    
   \              0x25 0x34    
   \              0x78 0x20    
   \              0x74 0x6F    
   \              0x20 0x25    
   \              0x34 0x78    
   \              0x29 0x2C    
   \              0x20 0x53    
   \              0x50 0x20    
   \              0x3D 0x20    
   \              0x25 0x34    
   \              0x78 0x00    
   \       0x2E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_64:
   \        0x0   0x25 0x75          DC8 25H, 75H, 20H, 62H, 79H, 74H, 65H, 73H
   \              0x20 0x62    
   \              0x79 0x74    
   \              0x65 0x73    
   \        0x8   0x20 0x75          DC8 20H, 75H, 73H, 65H, 64H, 20H, 28H, 25H
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x28 0x25    
   \       0x10   0x75 0x25          DC8 75H, 25H, 25H, 29H, 20H, 69H, 6EH, 20H
   \              0x25 0x29    
   \              0x20 0x69    
   \              0x6E 0x20    
   \       0x18   0x25 0x70          DC8 25H, 70H, 20H, 73H, 74H, 61H, 63H, 6BH
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x63 0x6B    
   \       0x20   0x20 0x28          DC8 20H, 28H, 6FH, 75H, 74H, 20H, 6FH, 66H
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x6F 0x66    
   \       0x28   0x20 0x25          DC8 20H, 25H, 75H, 20H, 62H, 79H, 74H, 65H
   \              0x75 0x20    
   \              0x62 0x79    
   \              0x74 0x65    
   \       0x30   0x73 0x20          DC8 73H, 20H, 74H, 6FH, 74H, 61H, 6CH, 29H
   \              0x74 0x6F    
   \              0x74 0x61    
   \              0x6C 0x29    
   \       0x38   0x00               DC8 0
   \       0x39   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_65:
   \        0x0   0x53 0x74          DC8 "Stack _may_ have used up to 100%% of total."
   \              0x61 0x63    
   \              0x6B 0x20    
   \              0x5F 0x6D    
   \              0x61 0x79    
   \              0x5F 0x20    
   \              0x68 0x61    
   \              0x76 0x65    
   \              0x20 0x75    
   \              0x73 0x65    
   \              0x64 0x20    
   \              0x75 0x70    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x31 0x30    
   \              0x30 0x25    
   \              0x25 0x20    
   \              0x6F 0x66    
   \              0x20 0x74    
   \              0x6F 0x74    
   \              0x61 0x6C    
   \              0x2E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_66:
   \        0x0   0x53 0x50          DC8 "SP is outside %p stack range!"
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x6F 0x75    
   \              0x74 0x73    
   \              0x69 0x64    
   \              0x65 0x20    
   \              0x25 0x70    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x63 0x6B    
   \              0x20 0x72    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x21 0x00    
   \       0x1E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_67:
   \        0x0   0x49 0x6E          DC8 "Interrupts active (or pre-empted and stacked):"
   \              0x74 0x65    
   \              0x72 0x72    
   \              0x75 0x70    
   \              0x74 0x73    
   \              0x20 0x61    
   \              0x63 0x74    
   \              0x69 0x76    
   \              0x65 0x20    
   \              0x28 0x6F    
   \              0x72 0x20    
   \              0x70 0x72    
   \              0x65 0x2D    
   \              0x65 0x6D    
   \              0x70 0x74    
   \              0x65 0x64    
   \              0x20 0x61    
   \              0x6E 0x64    
   \              0x20 0x73    
   \              0x74 0x61    
   \              0x63 0x6B    
   \              0x65 0x64    
   \              0x29 0x3A    
   \              0x00         
   \       0x2F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_68:
   \        0x0   0x20 0x25          DC8 " %p"
   \              0x70 0x00    

   \                                 In section .rodata, align 4
   \                     ?_69:
   \        0x0   0x4E 0x6F          DC8 "No interrupts active"
   \              0x20 0x69    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x73 0x20    
   \              0x61 0x63    
   \              0x74 0x69    
   \              0x76 0x65    
   \              0x00         
   \       0x15   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_70:
   \        0x0   0x52 0x65          DC8 52H, 65H, 73H, 65H, 74H, 20H, 63H, 61H
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \        0x8   0x75 0x73          DC8 75H, 73H, 65H, 3AH, 20H, 57H, 61H, 74H
   \              0x65 0x3A    
   \              0x20 0x57    
   \              0x61 0x74    
   \       0x10   0x63 0x68          DC8 63H, 68H, 64H, 6FH, 67H, 20H, 65H, 78H
   \              0x64 0x6F    
   \              0x67 0x20    
   \              0x65 0x78    
   \       0x18   0x70 0x69          DC8 70H, 69H, 72H, 65H, 64H, 2CH, 20H, 6EH
   \              0x72 0x65    
   \              0x64 0x2C    
   \              0x20 0x6E    
   \       0x20   0x6F 0x20          DC8 6FH, 20H, 72H, 65H, 6CH, 69H, 61H, 62H
   \              0x72 0x65    
   \              0x6C 0x69    
   \              0x61 0x62    
   \       0x28   0x6C 0x65          DC8 6CH, 65H, 20H, 65H, 78H, 74H, 72H, 61H
   \              0x20 0x65    
   \              0x78 0x74    
   \              0x72 0x61    
   \       0x30   0x20 0x69          DC8 20H, 69H, 6EH, 66H, 6FH, 72H, 6DH, 61H
   \              0x6E 0x66    
   \              0x6F 0x72    
   \              0x6D 0x61    
   \       0x38   0x74 0x69          DC8 74H, 69H, 6FH, 6EH, 0
   \              0x6F 0x6E    
   \              0x00         
   \       0x3D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_71:
   \        0x0   0x52 0x65          DC8 "Reset cause: Watchdog caught with enhanced info"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x57    
   \              0x61 0x74    
   \              0x63 0x68    
   \              0x64 0x6F    
   \              0x67 0x20    
   \              0x63 0x61    
   \              0x75 0x67    
   \              0x68 0x74    
   \              0x20 0x77    
   \              0x69 0x74    
   \              0x68 0x20    
   \              0x65 0x6E    
   \              0x68 0x61    
   \              0x6E 0x63    
   \              0x65 0x64    
   \              0x20 0x69    
   \              0x6E 0x66    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     ?_72:
   \        0x0   0x49 0x6E          DC8 "Instruction address: %4x"
   \              0x73 0x74    
   \              0x72 0x75    
   \              0x63 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x61 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x3A    
   \              0x20 0x25    
   \              0x34 0x78    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_73:
   \        0x0   0x52 0x65          DC8 "Reset cause: Assert %p:%d"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x41    
   \              0x73 0x73    
   \              0x65 0x72    
   \              0x74 0x20    
   \              0x25 0x70    
   \              0x3A 0x25    
   \              0x64 0x00    
   \       0x1A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_74:
   \        0x0   0x52 0x65          DC8 "Reset cause: Hard Fault"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x48    
   \              0x61 0x72    
   \              0x64 0x20    
   \              0x46 0x61    
   \              0x75 0x6C    
   \              0x74 0x00    

   \                                 In section .rodata, align 4
   \                     ?_75:
   \        0x0   0x48 0x46          DC8 48H, 46H, 53H, 52H, 2EH, 56H, 45H, 43H
   \              0x53 0x52    
   \              0x2E 0x56    
   \              0x45 0x43    
   \        0x8   0x54 0x54          DC8 54H, 54H, 42H, 4CH, 3AH, 20H, 65H, 72H
   \              0x42 0x4C    
   \              0x3A 0x20    
   \              0x65 0x72    
   \       0x10   0x72 0x6F          DC8 72H, 6FH, 72H, 20H, 72H, 65H, 61H, 64H
   \              0x72 0x20    
   \              0x72 0x65    
   \              0x61 0x64    
   \       0x18   0x69 0x6E          DC8 69H, 6EH, 67H, 20H, 76H, 65H, 63H, 74H
   \              0x67 0x20    
   \              0x76 0x65    
   \              0x63 0x74    
   \       0x20   0x6F 0x72          DC8 6FH, 72H, 20H, 74H, 61H, 62H, 6CH, 65H
   \              0x20 0x74    
   \              0x61 0x62    
   \              0x6C 0x65    
   \       0x28   0x20 0x66          DC8 20H, 66H, 6FH, 72H, 20H, 61H, 6EH, 20H
   \              0x6F 0x72    
   \              0x20 0x61    
   \              0x6E 0x20    
   \       0x30   0x65 0x78          DC8 65H, 78H, 63H, 65H, 70H, 74H, 69H, 6FH
   \              0x63 0x65    
   \              0x70 0x74    
   \              0x69 0x6F    
   \       0x38   0x6E 0x00          DC8 6EH, 0
   \       0x3A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_76:
   \        0x0   0x48 0x46          DC8 48H, 46H, 53H, 52H, 2EH, 46H, 4FH, 52H
   \              0x53 0x52    
   \              0x2E 0x46    
   \              0x4F 0x52    
   \        0x8   0x43 0x45          DC8 43H, 45H, 44H, 3AH, 20H, 63H, 6FH, 6EH
   \              0x44 0x3A    
   \              0x20 0x63    
   \              0x6F 0x6E    
   \       0x10   0x66 0x69          DC8 66H, 69H, 67H, 75H, 72H, 61H, 62H, 6CH
   \              0x67 0x75    
   \              0x72 0x61    
   \              0x62 0x6C    
   \       0x18   0x65 0x20          DC8 65H, 20H, 66H, 61H, 75H, 6CH, 74H, 20H
   \              0x66 0x61    
   \              0x75 0x6C    
   \              0x74 0x20    
   \       0x20   0x63 0x6F          DC8 63H, 6FH, 75H, 6CH, 64H, 20H, 6EH, 6FH
   \              0x75 0x6C    
   \              0x64 0x20    
   \              0x6E 0x6F    
   \       0x28   0x74 0x20          DC8 74H, 20H, 61H, 63H, 74H, 69H, 76H, 61H
   \              0x61 0x63    
   \              0x74 0x69    
   \              0x76 0x61    
   \       0x30   0x74 0x65          DC8 74H, 65H, 0
   \              0x00         
   \       0x33   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_77:
   \        0x0   0x48 0x46          DC8 48H, 46H, 53H, 52H, 2EH, 44H, 45H, 42H
   \              0x53 0x52    
   \              0x2E 0x44    
   \              0x45 0x42    
   \        0x8   0x55 0x47          DC8 55H, 47H, 45H, 56H, 54H, 3AH, 20H, 66H
   \              0x45 0x56    
   \              0x54 0x3A    
   \              0x20 0x66    
   \       0x10   0x61 0x75          DC8 61H, 75H, 6CH, 74H, 20H, 72H, 65H, 6CH
   \              0x6C 0x74    
   \              0x20 0x72    
   \              0x65 0x6C    
   \       0x18   0x61 0x74          DC8 61H, 74H, 65H, 64H, 20H, 74H, 6FH, 20H
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \       0x20   0x64 0x65          DC8 64H, 65H, 62H, 75H, 67H, 20H, 2DH, 20H
   \              0x62 0x75    
   \              0x67 0x20    
   \              0x2D 0x20    
   \       0x28   0x65 0x2E          DC8 65H, 2EH, 67H, 2EH, 2CH, 20H, 65H, 78H
   \              0x67 0x2E    
   \              0x2C 0x20    
   \              0x65 0x78    
   \       0x30   0x65 0x63          DC8 65H, 63H, 75H, 74H, 65H, 64H, 20H, 42H
   \              0x75 0x74    
   \              0x65 0x64    
   \              0x20 0x42    
   \       0x38   0x4B 0x50          DC8 4BH, 50H, 54H, 0
   \              0x54 0x00    

   \                                 In section .rodata, align 4
   \                     ?_78:
   \        0x0   0x52 0x65          DC8 "Reset cause: Memory Management Fault"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x4D    
   \              0x65 0x6D    
   \              0x6F 0x72    
   \              0x79 0x20    
   \              0x4D 0x61    
   \              0x6E 0x61    
   \              0x67 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x46    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x25   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_79:
   \        0x0   0x49 0x6C          DC8 "Illegal access address: %4x"
   \              0x6C 0x65    
   \              0x67 0x61    
   \              0x6C 0x20    
   \              0x61 0x63    
   \              0x63 0x65    
   \              0x73 0x73    
   \              0x20 0x61    
   \              0x64 0x64    
   \              0x72 0x65    
   \              0x73 0x73    
   \              0x3A 0x20    
   \              0x25 0x34    
   \              0x78 0x00    

   \                                 In section .rodata, align 4
   \                     ?_80:
   \        0x0   0x43 0x46          DC8 "CFSR.%p"
   \              0x53 0x52    
   \              0x2E 0x25    
   \              0x70 0x00    

   \                                 In section .rodata, align 4
   \                     ?_81:
   \        0x0   0x52 0x65          DC8 "Reset cause: Bus Fault"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x42    
   \              0x75 0x73    
   \              0x20 0x46    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x17   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_82:
   \        0x0   0x41 0x64          DC8 41H, 64H, 64H, 72H, 65H, 73H, 73H, 20H
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x20    
   \        0x8   0x69 0x73          DC8 69H, 73H, 20H, 6FH, 66H, 20H, 61H, 6EH
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x61 0x6E    
   \       0x10   0x20 0x69          DC8 20H, 69H, 6EH, 73H, 74H, 72H, 75H, 63H
   \              0x6E 0x73    
   \              0x74 0x72    
   \              0x75 0x63    
   \       0x18   0x74 0x69          DC8 74H, 69H, 6FH, 6EH, 20H, 61H, 66H, 74H
   \              0x6F 0x6E    
   \              0x20 0x61    
   \              0x66 0x74    
   \       0x20   0x65 0x72          DC8 65H, 72H, 20H, 62H, 75H, 73H, 20H, 66H
   \              0x20 0x62    
   \              0x75 0x73    
   \              0x20 0x66    
   \       0x28   0x61 0x75          DC8 61H, 75H, 6CH, 74H, 20H, 6FH, 63H, 63H
   \              0x6C 0x74    
   \              0x20 0x6F    
   \              0x63 0x63    
   \       0x30   0x75 0x72          DC8 75H, 72H, 72H, 65H, 64H, 2CH, 20H, 6EH
   \              0x72 0x65    
   \              0x64 0x2C    
   \              0x20 0x6E    
   \       0x38   0x6F 0x74          DC8 6FH, 74H, 20H, 74H, 68H, 65H, 20H, 63H
   \              0x20 0x74    
   \              0x68 0x65    
   \              0x20 0x63    
   \       0x40   0x61 0x75          DC8 61H, 75H, 73H, 65H, 2EH, 0
   \              0x73 0x65    
   \              0x2E 0x00    
   \       0x46   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_83:
   \        0x0   0x43 0x46          DC8 "CFSR.(none) load or store at an illegal address"
   \              0x53 0x52    
   \              0x2E 0x28    
   \              0x6E 0x6F    
   \              0x6E 0x65    
   \              0x29 0x20    
   \              0x6C 0x6F    
   \              0x61 0x64    
   \              0x20 0x6F    
   \              0x72 0x20    
   \              0x73 0x74    
   \              0x6F 0x72    
   \              0x65 0x20    
   \              0x61 0x74    
   \              0x20 0x61    
   \              0x6E 0x20    
   \              0x69 0x6C    
   \              0x6C 0x65    
   \              0x67 0x61    
   \              0x6C 0x20    
   \              0x61 0x64    
   \              0x64 0x72    
   \              0x65 0x73    
   \              0x73 0x00    

   \                                 In section .rodata, align 4
   \                     ?_84:
   \        0x0   0x52 0x65          DC8 "Reset cause: Usage Fault"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x55    
   \              0x73 0x61    
   \              0x67 0x65    
   \              0x20 0x46    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x19   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_85:
   \        0x0   0x52 0x65          DC8 "Reset cause: Debug Monitor Fault"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x63 0x61    
   \              0x75 0x73    
   \              0x65 0x3A    
   \              0x20 0x44    
   \              0x65 0x62    
   \              0x75 0x67    
   \              0x20 0x4D    
   \              0x6F 0x6E    
   \              0x69 0x74    
   \              0x6F 0x72    
   \              0x20 0x46    
   \              0x61 0x75    
   \              0x6C 0x74    
   \              0x00         
   \       0x21   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_86:
   \        0x0   0x25 0x70          DC8 "%p = %4x"
   \              0x20 0x3D    
   \              0x20 0x25    
   \              0x34 0x78    
   \              0x00         
   \        0x9   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \        0x0   0x2C 0x20          DC8 ", "
   \              0x00         
   \        0x3   0x00               DC8 0

   \                                 In section .rodata, align 4
   \        0x0   0x0D 0x0A          DC8 "\015\012"
   \              0x00         
   \        0x3   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   assertEFM
         0   -> halInternalAssertFailed
       0   halGetPCDiagnostics
      32   halPrintCrashData
        32   -> emberSerialPrintf
        32   -> emberSerialWaitSend
      32   halPrintCrashDetails
        32   -> emberSerialPrintfLine
         0   -> emberSerialWaitSend
        32   -> halGetExtendedResetInfo
      56   halPrintCrashSummary
         0   -> emberSerialPrintCarriageReturn
        56   -> emberSerialPrintf
         0   -> emberSerialPrintfLine
        56   -> emberSerialPrintfLine
        56   -> emberSerialWaitSend
       0   halStartPCDiagnostics
       0   halStopPCDiagnostics


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_36
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      10  ?Subroutine0
       6  ?Subroutine1
      64  ?_0
      56  ?_1
      60  ?_10
      48  ?_11
      56  ?_12
      60  ?_13
      48  ?_14
      56  ?_15
      48  ?_16
      64  ?_17
      12  ?_18
      16  ?_19
       1  ?_2
      12  ?_20
      12  ?_21
      12  ?_22
      12  ?_23
      16  ?_24
      16  ?_25
      12  ?_26
      12  ?_27
      16  ?_28
      12  ?_29
      68  ?_3
      16  ?_30
      16  ?_31
      12  ?_32
      12  ?_33
      12  ?_34
      12  ?_35
      16  ?_36
      12  ?_37
      16  ?_38
      16  ?_39
      60  ?_4
      16  ?_40
      12  ?_41
      12  ?_42
      12  ?_43
      16  ?_44
      16  ?_45
      12  ?_46
      16  ?_47
      12  ?_48
      12  ?_49
      48  ?_5
      12  ?_50
      16  ?_51
      16  ?_52
      12  ?_53
      12  ?_54
      16  ?_55
      12  ?_56
      16  ?_57
      24  ?_58
       8  ?_59
      48  ?_6
       8  ?_60
       8  ?_61
       8  ?_62
      48  ?_63
      60  ?_64
      44  ?_65
      32  ?_66
      48  ?_67
       4  ?_68
      24  ?_69
      36  ?_7
      64  ?_70
      48  ?_71
      28  ?_72
      28  ?_73
      24  ?_74
      60  ?_75
      52  ?_76
      60  ?_77
      40  ?_78
      28  ?_79
      40  ?_8
       8  ?_80
      24  ?_81
      72  ?_82
      48  ?_83
      28  ?_84
      36  ?_85
      12  ?_86
       4  ?_87
       4  ?_88
      64  ?_9
       4  assertEFM
     104  cfsrBits
       4  halGetPCDiagnostics
      92  halPrintCrashData
     366  halPrintCrashDetails
     322  halPrintCrashSummary
       2  halStartPCDiagnostics
       2  halStopPCDiagnostics
     164  intActiveBits
     204  nameStrings

 
 2 929 bytes in section .rodata
   956 bytes in section .text
 
   956 bytes of CODE  memory
 2 929 bytes of CONST memory

Errors: none
Warnings: none
