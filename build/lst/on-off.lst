###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:30
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\on-off\on-off.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWE87C.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\on-off\on-off.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"on-off.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0 -D
#        LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D EMBER_AF_USE_HWCONF
#        -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\on-off\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\on-off.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\on-off.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\plugin\on-off\on-off.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Routines for the On-Off plugin, which implements the On-Off server
      4           *        cluster.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          
     19          #include "af.h"
     20          
     21          #ifdef EMBER_AF_PLUGIN_REPORTING
     22            #include "app/framework/plugin/reporting/reporting.h"
     23          #endif
     24          
     25          #ifdef EMBER_AF_PLUGIN_SCENES
     26            #include "../scenes/scenes.h"
     27          #endif //EMBER_AF_PLUGIN_SCENES
     28          
     29          #ifdef EMBER_AF_PLUGIN_ZLL_ON_OFF_SERVER
     30            #include "../zll-on-off-server/zll-on-off-server.h"
     31          #endif
     32          
     33          #ifdef EMBER_AF_PLUGIN_ZLL_LEVEL_CONTROL_SERVER
     34            #include "../zll-level-control-server/zll-level-control-server.h"
     35          #endif
     36          
     37          #ifdef ZCL_USING_ON_OFF_CLUSTER_START_UP_ON_OFF_ATTRIBUTE
     38          static bool areStartUpOnOffServerAttributesTokenized(uint8_t endpoint);
     39          #endif
     40          

   \                                 In section .text, align 2, keep-with-next
     41          EmberAfStatus emberAfOnOffClusterSetValueCallback(uint8_t endpoint,
     42                                                            uint8_t command,
     43                                                            bool initiatedByLevelChange)
     44          {
   \                     emberAfOnOffClusterSetValueCallback: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4604             MOV      R4,R0
   \        0x4   0x460E             MOV      R6,R1
   \        0x6   0xB084             SUB      SP,SP,#+16
     45            EmberAfStatus status;
     46            bool currentValue, newValue;
     47          
     48            emberAfOnOffClusterPrintln("On/Off set value: %x %x", endpoint, command);
     49          
     50            // read current on/off value
     51            status = emberAfReadAttribute(endpoint,
     52                                          ZCL_ON_OFF_CLUSTER_ID,
     53                                          ZCL_ON_OFF_ATTRIBUTE_ID,
     54                                          CLUSTER_MASK_SERVER,
     55                                          (uint8_t *)&currentValue,
     56                                          sizeof(currentValue),
     57                                          NULL); // data type
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x2101             MOVS     R1,#+1
   \        0xC   0x4615             MOV      R5,R2
   \        0xE   0x9002             STR      R0,[SP, #+8]
   \       0x10   0x9101             STR      R1,[SP, #+4]
   \       0x12   0xF10D 0x070D      ADD      R7,SP,#+13
   \       0x16   0x9700             STR      R7,[SP, #+0]
   \       0x18   0x....'....        BL       ?Subroutine2
     58            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0x1C   0x0001             MOVS     R1,R0
   \       0x1E   0xD133             BNE.N    ??emberAfOnOffClusterSetValueCallback_0
     59              emberAfOnOffClusterPrintln("ERR: reading on/off %x", status);
     60              return status;
     61            }
     62          
     63            // if the value is already what we want to set it to then do nothing
     64            if ((!currentValue && command == ZCL_OFF_COMMAND_ID)
     65                || (currentValue && command == ZCL_ON_COMMAND_ID)) {
   \       0x20   0xF89D 0x000D      LDRB     R0,[SP, #+13]
   \       0x24   0xB9A0             CBNZ.N   R0,??emberAfOnOffClusterSetValueCallback_1
   \       0x26   0x2E00             CMP      R6,#+0
   \       0x28   0xD02D             BEQ.N    ??emberAfOnOffClusterSetValueCallback_2
     66              emberAfOnOffClusterPrintln("On/off already set to new value");
     67              return EMBER_ZCL_STATUS_SUCCESS;
     68            }
     69          
     70            // we either got a toggle, or an on when off, or an off when on,
     71            // so we need to swap the value
     72            newValue = !currentValue;
   \       0x2A   0x2001             MOVS     R0,#+1
     73            emberAfOnOffClusterPrintln("Toggle on/off from %x to %x", currentValue, newValue);
     74          
     75            // the sequence of updating on/off attribute and kick off level change effect should
     76            // be depend on whether we are turning on or off. If we are turning on the light, we
     77            // should update the on/off attribute before kicking off level change, if we are
     78            // turning off the light, we should do the opposite, that is kick off level change
     79            // before updating the on/off attribute.
     80            if (newValue) {
     81              // write the new on/off value
     82              status = emberAfWriteAttribute(endpoint,
     83                                             ZCL_ON_OFF_CLUSTER_ID,
     84                                             ZCL_ON_OFF_ATTRIBUTE_ID,
     85                                             CLUSTER_MASK_SERVER,
     86                                             (uint8_t *)&newValue,
     87                                             ZCL_BOOLEAN_ATTRIBUTE_TYPE);
   \       0x2C   0x2110             MOVS     R1,#+16
   \       0x2E   0xAA03             ADD      R2,SP,#+12
   \       0x30   0xF88D 0x000C      STRB     R0,[SP, #+12]
   \       0x34   0x9101             STR      R1,[SP, #+4]
   \       0x36   0x9200             STR      R2,[SP, #+0]
   \       0x38   0x....'....        BL       ??Subroutine8_0
     88              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_15: (+1)
   \       0x3C   0x0001             MOVS     R1,R0
   \       0x3E   0xD123             BNE.N    ??emberAfOnOffClusterSetValueCallback_0
     89                emberAfOnOffClusterPrintln("ERR: writing on/off %x", status);
     90                return status;
     91              }
     92          
     93              // If initiatedByLevelChange is false, then we assume that the level change
     94              // ZCL stuff has not happened and we do it here
     95              if (!initiatedByLevelChange
     96                  && emberAfContainsServer(endpoint, ZCL_LEVEL_CONTROL_CLUSTER_ID)) {
   \       0x40   0x0028             MOVS     R0,R5
   \       0x42   0xD115             BNE.N    ??emberAfOnOffClusterSetValueCallback_3
   \       0x44   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_6: (+1)
   \       0x48   0xB1B0             CBZ.N    R0,??emberAfOnOffClusterSetValueCallback_4
     97                emberAfOnOffClusterLevelControlEffectCallback(endpoint,
     98                                                              newValue);
   \       0x4A   0x....'....        BL       ?Subroutine3
     99              }
    100            } else {
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0x4E   0xE013             B.N      ??emberAfOnOffClusterSetValueCallback_4
   \                     ??emberAfOnOffClusterSetValueCallback_1: (+1)
   \       0x50   0x2E01             CMP      R6,#+1
   \       0x52   0xD018             BEQ.N    ??emberAfOnOffClusterSetValueCallback_2
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0xF88D 0x000C      STRB     R0,[SP, #+12]
    101              // If initiatedByLevelChange is false, then we assume that the level change
    102              // ZCL stuff has not happened and we do it here
    103              if (!initiatedByLevelChange
    104                  && emberAfContainsServer(endpoint, ZCL_LEVEL_CONTROL_CLUSTER_ID)) {
   \       0x5A   0x0029             MOVS     R1,R5
   \       0x5C   0xD104             BNE.N    ??CrossCallReturnLabel_2
   \       0x5E   0x....'....        BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_5: (+1)
   \       0x62   0xB108             CBZ.N    R0,??CrossCallReturnLabel_2
    105                emberAfOnOffClusterLevelControlEffectCallback(endpoint,
    106                                                              newValue);
   \       0x64   0x....'....        BL       ?Subroutine3
    107              }
    108          
    109              // write the new on/off value
    110              status = emberAfWriteAttribute(endpoint,
    111                                             ZCL_ON_OFF_CLUSTER_ID,
    112                                             ZCL_ON_OFF_ATTRIBUTE_ID,
    113                                             CLUSTER_MASK_SERVER,
    114                                             (uint8_t *)&newValue,
    115                                             ZCL_BOOLEAN_ATTRIBUTE_TYPE);
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0x68   0x....'....        BL       ?Subroutine1
    116              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \                     ??CrossCallReturnLabel_17: (+1)
   \       0x6C   0x0001             MOVS     R1,R0
   \       0x6E   0xD10B             BNE.N    ??emberAfOnOffClusterSetValueCallback_0
    117                emberAfOnOffClusterPrintln("ERR: writing on/off %x", status);
    118                return status;
    119              }
    120            }
    121          
    122          #ifdef EMBER_AF_PLUGIN_ZLL_ON_OFF_SERVER
    123            if (initiatedByLevelChange) {
   \                     ??emberAfOnOffClusterSetValueCallback_3: (+1)
   \       0x70   0xB115             CBZ.N    R5,??emberAfOnOffClusterSetValueCallback_4
    124              emberAfPluginZllOnOffServerLevelControlZllExtensions(endpoint);
   \       0x72   0x4620             MOV      R0,R4
   \       0x74   0x....'....        BL       emberAfPluginZllOnOffServerLevelControlZllExtensions
    125            }
    126          #endif
    127          
    128            // the scene has been changed (the value of on/off has changed) so
    129            // the current scene as descibed in the attribute table is invalid,
    130            // so mark it as invalid (just writes the valid/invalid attribute)
    131            if (emberAfContainsServer(endpoint, ZCL_SCENES_CLUSTER_ID)) {
   \                     ??emberAfOnOffClusterSetValueCallback_4: (+1)
   \       0x78   0x2105             MOVS     R1,#+5
   \       0x7A   0x....'....        BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_4: (+1)
   \       0x7E   0xB110             CBZ.N    R0,??emberAfOnOffClusterSetValueCallback_2
    132              emberAfScenesClusterMakeInvalidCallback(endpoint);
   \       0x80   0x4620             MOV      R0,R4
   \       0x82   0x....'....        BL       emberAfScenesClusterMakeInvalidCallback
    133            }
    134          
    135            // The returned status is based solely on the On/Off cluster.  Errors in the
    136            // Level Control and/or Scenes cluster are ignored.
    137            return EMBER_ZCL_STATUS_SUCCESS;
   \                     ??emberAfOnOffClusterSetValueCallback_2: (+1)
   \       0x86   0x2000             MOVS     R0,#+0
   \                     ??emberAfOnOffClusterSetValueCallback_0: (+1)
   \       0x88   0xB005             ADD      SP,SP,#+20
   \       0x8A   0xBDF0             POP      {R4-R7,PC}       ;; return
    138          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0x2108             MOVS     R1,#+8
   \                     ??Subroutine4_0: (+1)
   \        0x2   0x4620             MOV      R0,R4
   \        0x4   0x....'....        B.W      emberAfContainsServer

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0xF89D 0x100C      LDRB     R1,[SP, #+12]
   \        0x4   0x4620             MOV      R0,R4
   \        0x6   0x....'....        B.W      emberAfOnOffClusterLevelControlEffectCallback

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x2340             MOVS     R3,#+64
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x2106             MOVS     R1,#+6
   \        0x6   0x4620             MOV      R0,R4
   \        0x8   0x....'....        B.W      emberAfReadAttribute

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x2010             MOVS     R0,#+16
   \        0x2   0xA903             ADD      R1,SP,#+12
   \        0x4   0x9001             STR      R0,[SP, #+4]
   \        0x6   0x9100             STR      R1,[SP, #+0]
   \        0x8                      REQUIRE ??Subroutine8_0
   \        0x8                      ;; // Fall through to label ??Subroutine8_0

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine8_0: (+1)
   \        0x0   0x2340             MOVS     R3,#+64
   \        0x2   0x2200             MOVS     R2,#+0
   \        0x4   0x2106             MOVS     R1,#+6
   \        0x6   0x4620             MOV      R0,R4
   \        0x8   0x....'....        B.W      emberAfWriteAttribute
    139          

   \                                 In section .text, align 2, keep-with-next
    140          bool emberAfOnOffClusterOffCallback(void)
    141          {
   \                     emberAfOnOffClusterOffCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    142            EmberAfStatus status = emberAfOnOffClusterSetValueCallback(emberAfCurrentEndpoint(),
    143                                                                       ZCL_OFF_COMMAND_ID,
    144                                                                       false);
   \        0x2   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_10: (+1)
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_9: (+1)
   \        0xC   0x0005             MOVS     R5,R0
    145          #ifdef EMBER_AF_PLUGIN_ZLL_ON_OFF_SERVER
    146            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \        0xE   0xBF04             ITT      EQ 
    147              emberAfPluginZllOnOffServerOffZllExtensions(emberAfCurrentCommand());
   \       0x10   0x6820             LDREQ    R0,[R4, #+0]
   \       0x12   0x....'....        BLEQ     emberAfPluginZllOnOffServerOffZllExtensions
    148            }
    149          #endif
    150            emberAfSendImmediateDefaultResponse(status);
   \       0x16   0x....             B.N      ?Subroutine0
    151            return true;
    152          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x4628             MOV      R0,R5
   \        0x2   0x....'....        BL       emberAfSendImmediateDefaultResponse
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x....             LDR.N    R4,??DataTable1
   \        0x2   0x6823             LDR      R3,[R4, #+0]
   \        0x4   0x2200             MOVS     R2,#+0
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x681D             LDR      R5,[R3, #+0]
   \        0x2   0x7968             LDRB     R0,[R5, #+5]
   \        0x4   0x....             B.N      emberAfOnOffClusterSetValueCallback
    153          

   \                                 In section .text, align 2, keep-with-next
    154          bool emberAfOnOffClusterOnCallback(void)
    155          {
   \                     emberAfOnOffClusterOnCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    156            EmberAfStatus status = emberAfOnOffClusterSetValueCallback(emberAfCurrentEndpoint(),
    157                                                                       ZCL_ON_COMMAND_ID,
    158                                                                       false);
   \        0x2   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_11: (+1)
   \        0x6   0x2101             MOVS     R1,#+1
   \        0x8   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_8: (+1)
   \        0xC   0x0005             MOVS     R5,R0
    159          #ifdef EMBER_AF_PLUGIN_ZLL_ON_OFF_SERVER
    160            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \        0xE   0xBF04             ITT      EQ 
    161              emberAfPluginZllOnOffServerOnZllExtensions(emberAfCurrentCommand());
   \       0x10   0x6820             LDREQ    R0,[R4, #+0]
   \       0x12   0x....'....        BLEQ     emberAfPluginZllOnOffServerOnZllExtensions
    162            }
    163          #endif
    164            emberAfSendImmediateDefaultResponse(status);
   \       0x16                      REQUIRE ?Subroutine0
   \       0x16                      ;; // Fall through to label ?Subroutine0
    165            return true;
    166          }
    167          

   \                                 In section .text, align 2, keep-with-next
    168          bool emberAfOnOffClusterToggleCallback(void)
    169          {
   \                     emberAfOnOffClusterToggleCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    170            EmberAfStatus status = emberAfOnOffClusterSetValueCallback(emberAfCurrentEndpoint(),
    171                                                                       ZCL_TOGGLE_COMMAND_ID,
    172                                                                       false);
   \        0x2   0x....'....        BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_12: (+1)
   \        0x6   0x2102             MOVS     R1,#+2
   \        0x8   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_7: (+1)
   \        0xC   0x0005             MOVS     R5,R0
    173          #ifdef EMBER_AF_PLUGIN_ZLL_ON_OFF_SERVER
    174            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \        0xE   0xBF04             ITT      EQ 
    175              emberAfPluginZllOnOffServerToggleZllExtensions(emberAfCurrentCommand());
   \       0x10   0x6820             LDREQ    R0,[R4, #+0]
   \       0x12   0x....'....        BLEQ     emberAfPluginZllOnOffServerToggleZllExtensions
    176            }
    177          #endif
    178            emberAfSendImmediateDefaultResponse(status);
   \       0x16   0x....             B.N      ?Subroutine0
    179            return true;
    180          }
    181          

   \                                 In section .text, align 2, keep-with-next
    182          void emberAfOnOffClusterServerInitCallback(uint8_t endpoint)
    183          {
   \                     emberAfOnOffClusterServerInitCallback: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
    184          #ifdef ZCL_USING_ON_OFF_CLUSTER_START_UP_ON_OFF_ATTRIBUTE
    185            // StartUp behavior relies on OnOff and StartUpOnOff attributes being tokenized.
    186            if (areStartUpOnOffServerAttributesTokenized(endpoint)) {
   \        0x4   0x2500             MOVS     R5,#+0
   \        0x6   0x4604             MOV      R4,R0
   \        0x8   0x9500             STR      R5,[SP, #+0]
   \        0xA   0x2340             MOVS     R3,#+64
   \        0xC   0x2200             MOVS     R2,#+0
   \        0xE   0x2106             MOVS     R1,#+6
   \       0x10   0x....'....        BL       emberAfLocateAttributeMetadata
   \       0x14   0x7900             LDRB     R0,[R0, #+4]
   \       0x16   0x0781             LSLS     R1,R0,#+30
   \       0x18   0xD538             BPL.N    ??CrossCallReturnLabel_16
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xF244 0x0503      MOVW     R5,#+16387
   \       0x20   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_13: (+1)
   \       0x24   0x....'....        BL       emberAfLocateAttributeMetadata
   \       0x28   0x7900             LDRB     R0,[R0, #+4]
   \       0x2A   0x0781             LSLS     R1,R0,#+30
   \       0x2C   0xD52E             BPL.N    ??CrossCallReturnLabel_16
    187              // Read the StartUpOnOff attribute and set the OnOff attribute as per
    188              // following from zcl 7 14-0127-20i-zcl-ch-3-general.doc.
    189              // 3.8.2.2.5	StartUpOnOff Attribute
    190              // The StartUpOnOff attribute SHALL define the desired startup behavior of a
    191              // lamp device when it is supplied with power and this state SHALL be
    192              // reflected in the OnOff attribute.  The values of the StartUpOnOff
    193              // attribute are listed below.
    194              // Table 3 46. Values of the StartUpOnOff Attribute
    195              // Value      Action on power up
    196              // 0x00       Set the OnOff attribute to 0 (off).
    197              // 0x01       Set the OnOff attribute to 1 (on).
    198              // 0x02       If the previous value of the OnOff attribute is equal to 0,
    199              //            set the OnOff attribute to 1.If the previous value of the OnOff
    200              //            attribute is equal to 1, set the OnOff attribute to 0 (toggle).
    201              // 0x03-0xfe  These values are reserved.  No action.
    202              // 0xff       Set the OnOff attribute to its previous value.
    203          
    204              // Initialize startUpOnOff to No action value 0xFE
    205              uint8_t startUpOnOff = 0xFE;
   \       0x2E   0x20FE             MOVS     R0,#+254
   \       0x30   0xF88D 0x000D      STRB     R0,[SP, #+13]
    206              EmberAfStatus status = emberAfReadAttribute(endpoint,
    207                                                          ZCL_ON_OFF_CLUSTER_ID,
    208                                                          ZCL_START_UP_ON_OFF_ATTRIBUTE_ID,
    209                                                          CLUSTER_MASK_SERVER,
    210                                                          (uint8_t *)&startUpOnOff,
    211                                                          sizeof(startUpOnOff),
    212                                                          NULL);
    213              if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x2201             MOVS     R2,#+1
   \       0x38   0xF10D 0x000D      ADD      R0,SP,#+13
   \       0x3C   0x9102             STR      R1,[SP, #+8]
   \       0x3E   0x9201             STR      R2,[SP, #+4]
   \       0x40   0x....'....        BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_14: (+1)
   \       0x44   0x....'....        BL       emberAfReadAttribute
   \       0x48   0xBB00             CBNZ.N   R0,??CrossCallReturnLabel_16
    214                // Initialise updated value to 0
    215                bool updatedOnOff = 0;
   \       0x4A   0xF88D 0x000C      STRB     R0,[SP, #+12]
    216                status = emberAfReadAttribute(endpoint,
    217                                              ZCL_ON_OFF_CLUSTER_ID,
    218                                              ZCL_ON_OFF_ATTRIBUTE_ID,
    219                                              CLUSTER_MASK_SERVER,
    220                                              (uint8_t *)&updatedOnOff,
    221                                              sizeof(updatedOnOff),
    222                                              NULL);
    223                if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x4E   0x2100             MOVS     R1,#+0
   \       0x50   0x2201             MOVS     R2,#+1
   \       0x52   0xA803             ADD      R0,SP,#+12
   \       0x54   0x9102             STR      R1,[SP, #+8]
   \       0x56   0x9201             STR      R2,[SP, #+4]
   \       0x58   0x9000             STR      R0,[SP, #+0]
   \       0x5A   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \       0x5E   0xB9A8             CBNZ.N   R0,??CrossCallReturnLabel_16
    224                  switch (startUpOnOff) {
   \       0x60   0xF89D 0x100D      LDRB     R1,[SP, #+13]
   \       0x64   0xB119             CBZ.N    R1,??emberAfOnOffClusterServerInitCallback_0
   \       0x66   0x2902             CMP      R1,#+2
   \       0x68   0xD007             BEQ.N    ??emberAfOnOffClusterServerInitCallback_1
   \       0x6A   0xD304             BCC.N    ??emberAfOnOffClusterServerInitCallback_2
   \       0x6C   0xE00C             B.N      ??emberAfOnOffClusterServerInitCallback_3
    225                    case EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_OFF:
    226                      updatedOnOff = 0; // Off
   \                     ??emberAfOnOffClusterServerInitCallback_0: (+1)
   \       0x6E   0x2200             MOVS     R2,#+0
   \       0x70   0xF88D 0x200C      STRB     R2,[SP, #+12]
    227                      break;
   \       0x74   0xE008             B.N      ??emberAfOnOffClusterServerInitCallback_3
    228                    case EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_ON:
    229                      updatedOnOff = 1; //On
   \                     ??emberAfOnOffClusterServerInitCallback_2: (+1)
   \       0x76   0x2101             MOVS     R1,#+1
   \       0x78   0xE004             B.N      ??emberAfOnOffClusterServerInitCallback_4
    230                      break;
    231                    case EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_TOGGLE:
    232                      updatedOnOff = !updatedOnOff;
   \                     ??emberAfOnOffClusterServerInitCallback_1: (+1)
   \       0x7A   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x7E   0x1E41             SUBS     R1,R0,#+1
   \       0x80   0x4189             SBCS     R1,R1,R1
   \       0x82   0x0FC9             LSRS     R1,R1,#+31
   \                     ??emberAfOnOffClusterServerInitCallback_4: (+1)
   \       0x84   0xF88D 0x100C      STRB     R1,[SP, #+12]
    233                      break;
    234                    case EMBER_ZCL_START_UP_ON_OFF_VALUE_SET_TO_PREVIOUS:
    235                    default:
    236                      // All other values 0x03- 0xFE are reserved - no action.
    237                      // When value is 0xFF - update with last value - that is as good as
    238                      // no action.
    239                      break;
    240                  }
    241                  status = emberAfWriteAttribute(endpoint,
    242                                                 ZCL_ON_OFF_CLUSTER_ID,
    243                                                 ZCL_ON_OFF_ATTRIBUTE_ID,
    244                                                 CLUSTER_MASK_SERVER,
    245                                                 (uint8_t *)&updatedOnOff,
    246                                                 ZCL_BOOLEAN_ATTRIBUTE_TYPE);
   \                     ??emberAfOnOffClusterServerInitCallback_3: (+1)
   \       0x88   0x....'....        BL       ?Subroutine1
    247                }
    248              }
    249            }
    250          #endif
    251            emberAfPluginOnOffClusterServerPostInitCallback(endpoint);
   \                     ??CrossCallReturnLabel_16: (+1)
   \       0x8C   0x4620             MOV      R0,R4
   \       0x8E   0x....'....        BL       emberAfPluginOnOffClusterServerPostInitCallback
    252          }
   \       0x92   0xB005             ADD      SP,SP,#+20
   \       0x94   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x9000             STR      R0,[SP, #+0]
   \        0x2   0x2340             MOVS     R3,#+64
   \        0x4   0x462A             MOV      R2,R5
   \        0x6   0x2106             MOVS     R1,#+6
   \        0x8   0x4620             MOV      R0,R4
   \        0xA   0x4770             BX       LR

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     emAfCurrentCommand
    253          
    254          #ifdef ZCL_USING_ON_OFF_CLUSTER_START_UP_ON_OFF_ATTRIBUTE
    255          static bool areStartUpOnOffServerAttributesTokenized(uint8_t endpoint)
    256          {
    257            EmberAfAttributeMetadata *metadata;
    258          
    259            metadata = emberAfLocateAttributeMetadata(endpoint,
    260                                                      ZCL_ON_OFF_CLUSTER_ID,
    261                                                      ZCL_ON_OFF_ATTRIBUTE_ID,
    262                                                      CLUSTER_MASK_SERVER,
    263                                                      EMBER_AF_NULL_MANUFACTURER_CODE);
    264            if (!emberAfAttributeIsTokenized(metadata)) {
    265              return false;
    266            }
    267          
    268            metadata = emberAfLocateAttributeMetadata(endpoint,
    269                                                      ZCL_ON_OFF_CLUSTER_ID,
    270                                                      ZCL_START_UP_ON_OFF_ATTRIBUTE_ID,
    271                                                      CLUSTER_MASK_SERVER,
    272                                                      EMBER_AF_NULL_MANUFACTURER_CODE);
    273            if (!emberAfAttributeIsTokenized(metadata)) {
    274              return false;
    275            }
    276          
    277            return true;
    278          }
    279          #endif

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   emberAfOnOffClusterOffCallback
        16   -> emberAfOnOffClusterSetValueCallback
        16   -> emberAfPluginZllOnOffServerOffZllExtensions
        16   -> emberAfSendImmediateDefaultResponse
      16   emberAfOnOffClusterOnCallback
        16   -> emberAfOnOffClusterSetValueCallback
        16   -> emberAfPluginZllOnOffServerOnZllExtensions
        16   -> emberAfSendImmediateDefaultResponse
      32   emberAfOnOffClusterServerInitCallback
        32   -> emberAfLocateAttributeMetadata
        32   -> emberAfPluginOnOffClusterServerPostInitCallback
        32   -> emberAfReadAttribute
        32   -> emberAfWriteAttribute
      40   emberAfOnOffClusterSetValueCallback
        40   -> emberAfContainsServer
        40   -> emberAfOnOffClusterLevelControlEffectCallback
        40   -> emberAfPluginZllOnOffServerLevelControlZllExtensions
        40   -> emberAfReadAttribute
        40   -> emberAfScenesClusterMakeInvalidCallback
        40   -> emberAfWriteAttribute
      16   emberAfOnOffClusterToggleCallback
        16   -> emberAfOnOffClusterSetValueCallback
        16   -> emberAfPluginZllOnOffServerToggleZllExtensions
        16   -> emberAfSendImmediateDefaultResponse


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      12  ??Subroutine8_0
      10  ?Subroutine0
       8  ?Subroutine1
      12  ?Subroutine2
      10  ?Subroutine3
       8  ?Subroutine4
       6  ?Subroutine5
       8  ?Subroutine6
      12  ?Subroutine7
      24  emberAfOnOffClusterOffCallback
      22  emberAfOnOffClusterOnCallback
     150  emberAfOnOffClusterServerInitCallback
     140  emberAfOnOffClusterSetValueCallback
      24  emberAfOnOffClusterToggleCallback

 
 450 bytes in section .text
 
 450 bytes of CODE memory

Errors: none
Warnings: none
