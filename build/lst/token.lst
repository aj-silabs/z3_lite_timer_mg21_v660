###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:19:59
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\token.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EW5BBC.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\token.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"token.c\"" -D PSSTORE_SIZE=0 -D LONGTOKEN_SIZE=0 -D
#        LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D EMBER_AF_USE_HWCONF
#        -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\token.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\token.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\platform\base\hal\micro\cortexm3\efm32\token.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Token implementation.
      4           * See token.h for details.
      5           *******************************************************************************
      6           * # License
      7           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      8           *******************************************************************************
      9           *
     10           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     11           * software is governed by the terms of Silicon Labs Master Software License
     12           * Agreement (MSLA) available at
     13           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     14           * software is distributed to you in Source Code format and is governed by the
     15           * sections of the MSLA applicable to Source Code.
     16           *
     17           ******************************************************************************/
     18          #include PLATFORM_HEADER
     19          #include "stack/include/ember.h"
     20          #include "stack/include/error.h"
     21          #include "hal/hal.h"
     22          #include "serial/serial.h"
     23          
     24          #ifndef SER232
     25            #define SER232 1
     26          #endif
     27          
     28          //prints debug data from the token access functions
     29          #define TOKENDBG(x)
     30          //#define TOKENDBG(x) x
     31          
     32          #ifdef USE_NVM3
     33          #include "hal/plugin/nvm3/nvm3-token.h"
     34          
     35          #if defined(NVM3_EXTFLASH)
     36          bool emRadioGetRandomNumbers(uint16_t *rn, uint8_t count);
     37          #define NVM3_CRYPTO_KEY_BYTES 16
     38          
     39          #if !defined(NVM3_TEST)
     40          #include "em_wdog.h"
     41          #define NVM3_CRYPTO_KEY_ADDRESS (LOCKBITS_BASE + (TOKEN_MFG_NVM3_CRYPTO_KEY & 0x0FFFU));
     42          #endif // NVM3_TEST
     43          
     44          // Function passed ot NVM3 to provide random numbers
     45          static uint32_t getRandomNumber(void)
     46          {
     47            uint32_t res;
     48          
     49            emRadioGetRandomNumbers((uint16_t *) &res, sizeof(res) / sizeof(uint16_t));
     50          
     51            return res;
     52          }
     53          
     54          #endif // NVM3_EXFLASH
     55          
     56          // Global variable used by library code to know number of tokens
     57          #ifdef SIMEE2_TO_NVM3_UPGRADE
     58          uint8_t tokenCount = TOKEN_COUNT;
     59          #endif
     60          
     61          EmberStatus halSimEeToNvm3Upgrade(void);
     62          

   \                                 In section .bss, align 1
     63          static bool tokensActive = false;
   \                     tokensActive:
   \        0x0                      DS8 1
     64          

   \                                 In section .text, align 2, keep-with-next
     65          EmberStatus halStackInitTokens(void)
     66          {
   \                     halStackInitTokens: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB086             SUB      SP,SP,#+24
     67            uint8_t i;
     68            uint8_t arrayIndex;
     69            size_t size;
     70            uint32_t objectType;
     71            Ecode_t ecode, status;
     72            EmberStatus ret;
     73            nvm3_HalInfo_t halInfo;
     74          
     75          #if defined (NVM3_EXTFLASH)
     76            // Disable watchdog and reconfigure it to a longer timout period to allow
     77            // nvm3_open to finish as this takes a long time with external flash
     78          #if !defined (NVM3_TEST) && defined(HAL_WDOG_ENABLE)
     79            halInternalDisableWatchDog(MICRO_DISABLE_WATCH_DOG_KEY);
     80            WDOG_Init_TypeDef wdogInit = WDOG_INIT_DEFAULT;
     81            wdogInit.enable = true;
     82            wdogInit.perSel = wdogPeriod_128k;
     83            wdogInit.warnSel = wdogWarnTime75pct;
     84          
     85            WDOGn_Init(DEFAULT_WDOG, &wdogInit);
     86          #endif
     87          
     88            bool cryptoKeyExists = false;
     89            uint16_t nvm3CryptoKey[NVM3_CRYPTO_KEY_BYTES / 2];
     90          
     91            // Read existing crypto key from manufacturing token
     92            halInternalGetMfgTokenData((uint8_t *) nvm3CryptoKey,
     93                                       TOKEN_MFG_NVM3_CRYPTO_KEY,
     94                                       0,
     95                                       NVM3_CRYPTO_KEY_BYTES);
     96          
     97            // If the existing crypto key is all FFs we assume it
     98            // has not been written yet
     99            for (i = 0; i < NVM3_CRYPTO_KEY_BYTES / 2; i++) {
    100              cryptoKeyExists |= (nvm3CryptoKey[i] != 0xFFFFU);
    101            }
    102          
    103            // If no NVM3 crypto key exists we generate a new one and
    104            // write it as a manufacturing token
    105            if (!cryptoKeyExists) {
    106              emRadioGetRandomNumbers(nvm3CryptoKey, NVM3_CRYPTO_KEY_BYTES / sizeof(nvm3CryptoKey[0]));
    107              halInternalSetMfgTokenData(TOKEN_MFG_NVM3_CRYPTO_KEY,
    108                                         (uint8_t *) nvm3CryptoKey,
    109                                         NVM3_CRYPTO_KEY_BYTES);
    110            }
    111          
    112            nvm3_defaultInit->getRndNumber = getRandomNumber;
    113            nvm3_defaultInit->cryptoKey = (uint8_t *) NVM3_CRYPTO_KEY_ADDRESS;
    114          
    115          #else // defined (NVM3_EXTFLASH)
    116            // Updrade is only supported when using NVM3 in internal flash
    117            if (halSimEeToNvm3Upgrade()) {
   \        0x6   0x....'....        BL       halSimEeToNvm3Upgrade
   \        0xA   0xB108             CBZ.N    R0,??halStackInitTokens_0
    118              return (EmberStatus) EMBER_NVM3_ERR_UPGRADE;
   \        0xC   0x20C6             MOVS     R0,#+198
   \        0xE   0xE0BC             B.N      ??halStackInitTokens_1
    119            }
    120          #endif
    121          
    122            ecode = nvm3_open(nvm3_defaultHandle, nvm3_defaultInit);
   \                     ??halStackInitTokens_0: (+1)
   \       0x10   0x....'....        LDR.W    R5,??DataTable5
   \       0x14   0x....'....        LDR.W    R6,??DataTable5_1
   \       0x18   0x6831             LDR      R1,[R6, #+0]
   \       0x1A   0x6828             LDR      R0,[R5, #+0]
   \       0x1C   0x....'....        BL       nvm3_open
   \       0x20   0x0004             MOVS     R4,R0
    123            TOKENDBG(emberSerialPrintf(SER232,
    124                                       "halStackInitTokens nvm3_open status: 0x%x\r\n",
    125                                       ecode); )
    126            if (ecode != ECODE_NVM3_OK) {
   \       0x22   0xD02C             BEQ.N    ??halStackInitTokens_2
    127              nvm3_halOpen(nvm3_defaultInit->halHandle, nvm3_defaultInit->nvmAdr, nvm3_defaultInit->nvmSize);
   \       0x24   0x6832             LDR      R2,[R6, #+0]
   \       0x26   0x6851             LDR      R1,[R2, #+4]
   \       0x28   0x2400             MOVS     R4,#+0
   \       0x2A   0x6810             LDR      R0,[R2, #+0]
   \       0x2C   0x6992             LDR      R2,[R2, #+24]
   \       0x2E   0x6813             LDR      R3,[R2, #+0]
   \       0x30   0x4798             BLX      R3
    128              nvm3_halGetInfo(nvm3_defaultInit->halHandle, &halInfo);
   \       0x32   0x6831             LDR      R1,[R6, #+0]
   \       0x34   0xA802             ADD      R0,SP,#+8
   \       0x36   0x698A             LDR      R2,[R1, #+24]
   \       0x38   0x6891             LDR      R1,[R2, #+8]
   \       0x3A   0x4788             BLX      R1
    129              nvm3_halNvmAccess(nvm3_defaultInit->halHandle, NVM3_HAL_NVM_ACCESS_RDWR);
   \       0x3C   0x6832             LDR      R2,[R6, #+0]
   \       0x3E   0x2002             MOVS     R0,#+2
   \       0x40   0x6991             LDR      R1,[R2, #+24]
   \       0x42   0x68CA             LDR      R2,[R1, #+12]
   \       0x44   0x4790             BLX      R2
    130              for (i = 0; i < nvm3_defaultInit->nvmSize / halInfo.pageSize; i++) {
   \       0x46   0xE006             B.N      ??halStackInitTokens_3
    131                ecode = nvm3_halPageErase(nvm3_defaultInit->halHandle,
    132                                          (nvm3_HalPtr_t)((size_t) nvm3_defaultInit->nvmAdr + i * halInfo.pageSize));
   \                     ??halStackInitTokens_4: (+1)
   \       0x48   0x6809             LDR      R1,[R1, #+0]
   \       0x4A   0x6912             LDR      R2,[R2, #+16]
   \       0x4C   0xFB00 0x1004      MLA      R0,R0,R4,R1
   \       0x50   0x1C64             ADDS     R4,R4,#+1
   \       0x52   0xB2E4             UXTB     R4,R4
   \       0x54   0x4790             BLX      R2
    133                TOKENDBG(emberSerialPrintf(SER232,
    134                                           "nvm3_halPageErase %d status: 0x%x\r\n",
    135                                           i,
    136                                           ecode); )
    137              }
   \                     ??halStackInitTokens_3: (+1)
   \       0x56   0x9803             LDR      R0,[SP, #+12]
   \       0x58   0x6831             LDR      R1,[R6, #+0]
   \       0x5A   0x684B             LDR      R3,[R1, #+4]
   \       0x5C   0xFBB3 0xF3F0      UDIV     R3,R3,R0
   \       0x60   0x698A             LDR      R2,[R1, #+24]
   \       0x62   0x429C             CMP      R4,R3
   \       0x64   0xD3F0             BCC.N    ??halStackInitTokens_4
    138              nvm3_halNvmAccess(nvm3_defaultInit->halHandle, NVM3_HAL_NVM_ACCESS_NONE);
   \       0x66   0x68D1             LDR      R1,[R2, #+12]
   \       0x68   0x2000             MOVS     R0,#+0
   \       0x6A   0x4788             BLX      R1
    139              nvm3_halClose(nvm3_defaultInit->halHandle);
   \       0x6C   0x6830             LDR      R0,[R6, #+0]
   \       0x6E   0x6981             LDR      R1,[R0, #+24]
   \       0x70   0x6848             LDR      R0,[R1, #+4]
   \       0x72   0x4780             BLX      R0
    140          
    141              ecode = nvm3_open(nvm3_defaultHandle, nvm3_defaultInit);
   \       0x74   0x6831             LDR      R1,[R6, #+0]
   \       0x76   0x6828             LDR      R0,[R5, #+0]
   \       0x78   0x....'....        BL       nvm3_open
   \       0x7C   0x4604             MOV      R4,R0
    142              TOKENDBG(emberSerialPrintf(SER232,
    143                                         "halStackInitTokens second nvm3_open status: 0x%x\r\n",
    144                                         ecode); )
    145            }
    146          
    147            for (i = 0; i < (uint8_t) TOKEN_COUNT; i++) {
   \                     ??halStackInitTokens_2: (+1)
   \       0x7E   0x2700             MOVS     R7,#+0
   \       0x80   0x....'....        LDR.W    R6,??DataTable6
   \       0x84   0x....'....        LDR.W    R9,??DataTable6_1  ;; 0xf000e00b
   \       0x88   0x....'....        LDR.W    R8,??DataTable6_2
    148              if (ecode == ECODE_NVM3_OK) {
   \                     ??halStackInitTokens_5: (+1)
   \       0x8C   0xB9FC             CBNZ.N   R4,??halStackInitTokens_6
    149                TOKENDBG(emberSerialPrintf(SER232,
    150                                           "Token[%d]: Key=0x%4x Array size =%d \r\n",
    151                                           i,
    152                                           tokenNvm3Keys[i],
    153                                           tokenArraySize[i]); )
    154          
    155                if (tokenIsCnt[i]) { // Counter token
   \       0x8E   0x....'....        LDR.W    R1,??DataTable6_3
   \       0x92   0x5DC8             LDRB     R0,[R1, R7]
   \       0x94   0xB330             CBZ.N    R0,??halStackInitTokens_7
    156                  status = nvm3_getObjectInfo(nvm3_defaultHandle,
    157                                              tokenNvm3Keys[i],
    158                                              &objectType,
    159                                              &size);
   \       0x96   0xF858 0xA027      LDR      R10,[R8, R7, LSL #+2]
   \       0x9A   0x6828             LDR      R0,[R5, #+0]
   \       0x9C   0xAB01             ADD      R3,SP,#+4
   \       0x9E   0x466A             MOV      R2,SP
   \       0xA0   0x4651             MOV      R1,R10
   \       0xA2   0x....'....        BL       nvm3_getObjectInfo
    160          
    161                  // Create NVM3 objects for tokens if they don't exist already
    162                  // or if type or size doesn't match
    163                  if ((status == ECODE_NVM3_ERR_KEY_NOT_FOUND)
    164                      || ((status == ECODE_NVM3_OK)
    165                          && (objectType != NVM3_OBJECTTYPE_COUNTER))) {
   \       0xA6   0x4548             CMP      R0,R9
   \       0xA8   0xD007             BEQ.N    ??halStackInitTokens_8
   \       0xAA   0xB980             CBNZ.N   R0,??halStackInitTokens_6
   \       0xAC   0x9800             LDR      R0,[SP, #+0]
   \       0xAE   0x2801             CMP      R0,#+1
   \       0xB0   0xD00D             BEQ.N    ??halStackInitTokens_6
    166                    TOKENDBG(emberSerialPrintf(SER232, "Creating counter token from default value\r\n"); )
    167          
    168                    // If object type is wrong we need to delete it before creating the
    169                    // new one with the correct type.
    170                    if (status == ECODE_NVM3_OK) {
    171                      (void) nvm3_deleteObject(nvm3_defaultHandle, tokenNvm3Keys[i]);
   \       0xB2   0x6828             LDR      R0,[R5, #+0]
   \       0xB4   0x4651             MOV      R1,R10
   \       0xB6   0x....'....        BL       nvm3_deleteObject
    172                      TOKENDBG(emberSerialPrintf(SER232, "Deleting object of wrong type\r\n"); )
    173                    }
    174          
    175                    ecode = nvm3_writeCounter(nvm3_defaultHandle,
    176                                              tokenNvm3Keys[i],
    177                                              *(const uint32_t *) tokenDefaults[i]);
   \                     ??halStackInitTokens_8: (+1)
   \       0xBA   0x....'....        LDR.W    R0,??DataTable6_4
   \       0xBE   0xF850 0x1027      LDR      R1,[R0, R7, LSL #+2]
   \       0xC2   0x6828             LDR      R0,[R5, #+0]
   \       0xC4   0x680A             LDR      R2,[R1, #+0]
   \       0xC6   0x4651             MOV      R1,R10
   \       0xC8   0x....'....        BL       nvm3_writeCounter
   \       0xCC   0x4604             MOV      R4,R0
    178                    TOKENDBG(emberSerialPrintf(SER232,
    179                                               "halStackInitTokens nvm3_writeCounter value: 0x%4x status: 0x%x\r\n",
    180                                               *(uint32_t *) tokenDefaults[i],
    181                                               ecode); )
    182                  }
    183                } else { // Basic or indexed token
   \                     ??halStackInitTokens_6: (+1)
   \       0xCE   0x1C7F             ADDS     R7,R7,#+1
   \       0xD0   0x2F2E             CMP      R7,#+46
   \       0xD2   0xDBDB             BLT.N    ??halStackInitTokens_5
    184                  // For indexed tokens we need to create every index in the indexed
    185                  // token key domain if it doesn't exist already or if size or type doesn't match
    186                  for (arrayIndex = 0; arrayIndex < tokenArraySize[i]; arrayIndex++) {
    187                    status = nvm3_getObjectInfo(nvm3_defaultHandle,
    188                                                tokenNvm3Keys[i] + arrayIndex,
    189                                                &objectType,
    190                                                &size);
    191          
    192                    if ((status == ECODE_NVM3_ERR_KEY_NOT_FOUND)
    193                        || ((status == ECODE_NVM3_OK)
    194                            && ((objectType != NVM3_OBJECTTYPE_DATA)
    195                                || (size != tokenSize[i])))) {
    196                      TOKENDBG(emberSerialPrintf(SER232, "Creating basic/index token (index: %x) from default value\r\n", arrayIndex); )
    197          
    198                      // If the object type is wrong we need to delete it before creating the
    199                      // new one with the correct type.
    200                      // Wrong size will be corrected by the data write itself
    201                      if (((status == ECODE_NVM3_OK)
    202                           && ((objectType != NVM3_OBJECTTYPE_DATA)))) {
    203                        (void) nvm3_deleteObject(nvm3_defaultHandle, tokenNvm3Keys[i] + arrayIndex);
    204                        TOKENDBG(emberSerialPrintf(SER232, "Deleting object of wrong type\r\n"); )
    205                      }
    206          
    207                      ecode = nvm3_writeData(nvm3_defaultHandle,
    208                                             tokenNvm3Keys[i] + arrayIndex,
    209                                             (const void *) tokenDefaults[i],
    210                                             tokenSize[i]);
    211                      TOKENDBG(emberSerialPrintf(SER232,
    212                                                 "halStackInitTokens nvm3_writeData length: %d  status: 0x%x\r\n",
    213                                                 tokenSize[i],
    214                                                 ecode); )
    215                      if (ecode != ECODE_NVM3_OK) {
    216                        break;
    217                      }
    218                    }
    219                  }
    220          
    221                  if (tokenIsIdx[i]) {
    222                    // We need to delete objects for any indexes that are no longer used.
    223                    for (arrayIndex = tokenArraySize[i]; arrayIndex < 0x7FU; arrayIndex++) {
    224                      status = nvm3_getObjectInfo(nvm3_defaultHandle,
    225                                                  tokenNvm3Keys[i] + arrayIndex,
    226                                                  &objectType,
    227                                                  &size);
    228          
    229                      if (status == ECODE_NVM3_ERR_KEY_NOT_FOUND) {
    230                        // If we don't find an object we assume there are no objects at higher indexes
    231                        // and stop looking.
    232                        break;
    233                      } else {
    234                        ecode = nvm3_deleteObject(nvm3_defaultHandle, tokenNvm3Keys[i] + arrayIndex);
    235                        TOKENDBG(emberSerialPrintf(SER232,
    236                                                   "halStackInitTokens Erased unused index %d of token with key 0x%4x\r\n",
    237                                                   arrayIndex,
    238                                                   tokenNvm3Keys[i]); )
    239                        if (ecode != ECODE_NVM3_OK) {
    240                          break;
    241                        }
    242                      }
    243                    }
    244                  }
    245                }
    246              }
    247            }
    248          
    249            tokensActive = ecode == ECODE_NVM3_OK;
   \       0xD4   0x....'....        LDR.W    R0,??DataTable6_5
   \       0xD8   0x2C00             CMP      R4,#+0
   \       0xDA   0xD136             BNE.N    ??halStackInitTokens_9
   \       0xDC   0x2101             MOVS     R1,#+1
   \       0xDE   0x7001             STRB     R1,[R0, #+0]
    250          
    251          // Map NVM3 error codes to EmberStatus codes
    252            switch (ecode) {
    253              case ECODE_NVM3_ERR_OPENED_WITH_OTHER_PARAMETERS:
    254                ret = (EmberStatus) EMBER_NVM3_ERR_OPENED_WITH_OTHER_PARAMETERS;
    255                break;
    256              case ECODE_NVM3_ERR_ALIGNMENT_INVALID:
    257                ret = (EmberStatus) EMBER_NVM3_ERR_ALIGNMENT_INVALID;
    258                break;
    259              case ECODE_NVM3_ERR_SIZE_TOO_SMALL:
    260                ret = (EmberStatus) EMBER_NVM3_ERR_SIZE_TOO_SMALL;
    261                break;
    262              case ECODE_NVM3_ERR_PAGE_SIZE_NOT_SUPPORTED:
    263                ret = (EmberStatus) EMBER_NVM3_ERR_PAGE_SIZE_NOT_SUPPORTED;
    264                break;
    265              case ECODE_NVM3_OK:
    266                ret = (EmberStatus) EMBER_SUCCESS;
   \                     ??halStackInitTokens_10: (+1)
   \       0xE0   0x2400             MOVS     R4,#+0
    267                break;
   \       0xE2   0xE048             B.N      ??halStackInitTokens_11
   \                     ??halStackInitTokens_7: (+1)
   \       0xE4   0xF04F 0x0A00      MOV      R10,#+0
   \                     ??halStackInitTokens_12: (+1)
   \       0xE8   0x....'....        LDR.W    R0,??DataTable6_6
   \       0xEC   0x5DC1             LDRB     R1,[R0, R7]
   \       0xEE   0x458A             CMP      R10,R1
   \       0xF0   0xDA4E             BGE.N    ??halStackInitTokens_13
   \       0xF2   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_1: (+1)
   \       0xF6   0x4548             CMP      R0,R9
   \       0xF8   0xD00B             BEQ.N    ??halStackInitTokens_14
   \       0xFA   0xB9A8             CBNZ.N   R0,??halStackInitTokens_15
   \       0xFC   0x9800             LDR      R0,[SP, #+0]
   \       0xFE   0xB920             CBNZ.N   R0,??halStackInitTokens_16
   \      0x100   0x9801             LDR      R0,[SP, #+4]
   \      0x102   0x5DF1             LDRB     R1,[R6, R7]
   \      0x104   0x4288             CMP      R0,R1
   \      0x106   0xD104             BNE.N    ??halStackInitTokens_14
   \      0x108   0xE00E             B.N      ??halStackInitTokens_15
   \                     ??halStackInitTokens_16: (+1)
   \      0x10A   0x6828             LDR      R0,[R5, #+0]
   \      0x10C   0x4659             MOV      R1,R11
   \      0x10E   0x....'....        BL       nvm3_deleteObject
   \                     ??halStackInitTokens_14: (+1)
   \      0x112   0x....'....        LDR.W    R0,??DataTable6_4
   \      0x116   0xF850 0x2027      LDR      R2,[R0, R7, LSL #+2]
   \      0x11A   0x5DF3             LDRB     R3,[R6, R7]
   \      0x11C   0x6828             LDR      R0,[R5, #+0]
   \      0x11E   0x4659             MOV      R1,R11
   \      0x120   0x....'....        BL       nvm3_writeData
   \      0x124   0x0004             MOVS     R4,R0
   \      0x126   0xD133             BNE.N    ??halStackInitTokens_13
   \                     ??halStackInitTokens_15: (+1)
   \      0x128   0xF10A 0x0A01      ADD      R10,R10,#+1
   \      0x12C   0xE7DC             B.N      ??halStackInitTokens_12
   \                     ??halStackInitTokens_17: (+1)
   \      0x12E   0x....'....        BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \      0x132   0x4548             CMP      R0,R9
   \      0x134   0xD0CB             BEQ.N    ??halStackInitTokens_6
   \      0x136   0x6828             LDR      R0,[R5, #+0]
   \      0x138   0x4659             MOV      R1,R11
   \      0x13A   0x....'....        BL       nvm3_deleteObject
   \      0x13E   0x0004             MOVS     R4,R0
   \      0x140   0xBF08             IT       EQ 
   \      0x142   0xF10A 0x0A01      ADDEQ    R10,R10,#+1
   \      0x146   0xD02C             BEQ.N    ??halStackInitTokens_18
   \      0x148   0xE7C1             B.N      ??halStackInitTokens_6
   \                     ??halStackInitTokens_9: (+1)
   \      0x14A   0x2100             MOVS     R1,#+0
   \      0x14C   0x7001             STRB     R1,[R0, #+0]
   \      0x14E   0x2C00             CMP      R4,#+0
   \      0x150   0xD0C6             BEQ.N    ??halStackInitTokens_10
   \      0x152   0x....'....        LDR.W    R0,??DataTable6_7  ;; 0xf000e001
   \      0x156   0x1A24             SUBS     R4,R4,R0
   \      0x158   0xD008             BEQ.N    ??halStackInitTokens_19
   \      0x15A   0x1E64             SUBS     R4,R4,#+1
   \      0x15C   0xD008             BEQ.N    ??halStackInitTokens_20
   \      0x15E   0x1EA4             SUBS     R4,R4,#+2
   \      0x160   0xD008             BEQ.N    ??halStackInitTokens_21
   \      0x162   0x1F24             SUBS     R4,R4,#+4
   \      0x164   0xBF0C             ITE      EQ 
   \      0x166   0x24C1             MOVEQ    R4,#+193
   \      0x168   0x24C5             MOVNE    R4,#+197
    268              default:
    269                ret = (EmberStatus) EMBER_NVM3_ERR_TOKEN_INIT;
   \      0x16A   0xE004             B.N      ??halStackInitTokens_11
   \                     ??halStackInitTokens_19: (+1)
   \      0x16C   0x24C2             MOVS     R4,#+194
   \      0x16E   0xE002             B.N      ??halStackInitTokens_11
   \                     ??halStackInitTokens_20: (+1)
   \      0x170   0x24C3             MOVS     R4,#+195
   \      0x172   0xE000             B.N      ??halStackInitTokens_11
   \                     ??halStackInitTokens_21: (+1)
   \      0x174   0x24C4             MOVS     R4,#+196
    270                break;
    271            }
    272          
    273            // If the NVM3 cache overflows it is too small to index all live and deleted NVM3 objects
    274            assert(!nvm3_defaultHandle->cache.overflow);
   \                     ??halStackInitTokens_11: (+1)
   \      0x176   0x6829             LDR      R1,[R5, #+0]
   \      0x178   0x7C08             LDRB     R0,[R1, #+16]
   \      0x17A   0xB128             CBZ.N    R0,??halStackInitTokens_22
   \      0x17C   0xF44F 0x7189      MOV      R1,#+274
   \      0x180   0x....'....        LDR.W    R0,??DataTable6_8
   \      0x184   0x....'....        BL       halInternalAssertFailed
    275          
    276            // Disable watchdog and reconfigure it to restore original watchdog period.
    277          #if defined (NVM3_EXTFLASH) && defined(HAL_WDOG_ENABLE)
    278            halInternalDisableWatchDog(MICRO_DISABLE_WATCH_DOG_KEY);
    279            halInternalEnableWatchDog();
    280          #endif
    281            return ret;
   \                     ??halStackInitTokens_22: (+1)
   \      0x188   0x4620             MOV      R0,R4
   \                     ??halStackInitTokens_1: (+1)
   \      0x18A   0xB007             ADD      SP,SP,#+28
   \      0x18C   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??halStackInitTokens_13: (+1)
   \      0x190   0x....'....        LDR.W    R1,??DataTable6_9
   \      0x194   0x5DC8             LDRB     R0,[R1, R7]
   \      0x196   0x2800             CMP      R0,#+0
   \      0x198   0xD099             BEQ.N    ??halStackInitTokens_6
   \      0x19A   0x....'....        LDR.W    R1,??DataTable6_6
   \      0x19E   0xF811 0xA007      LDRB     R10,[R1, R7]
   \                     ??halStackInitTokens_18: (+1)
   \      0x1A2   0xF1BA 0x0F7F      CMP      R10,#+127
   \      0x1A6   0xD3C2             BCC.N    ??halStackInitTokens_17
   \      0x1A8   0xE791             B.N      ??halStackInitTokens_6
    282          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0xF858 0xB027      LDR      R11,[R8, R7, LSL #+2]
   \        0x4   0x6828             LDR      R0,[R5, #+0]
   \        0x6   0xAB01             ADD      R3,SP,#+4
   \        0x8   0x44D3             ADD      R11,R10,R11
   \        0xA   0x466A             MOV      R2,SP
   \        0xC   0x4659             MOV      R1,R11
   \        0xE   0x....'....        B.W      nvm3_getObjectInfo
    283          

   \                                 In section .text, align 2, keep-with-next
    284          void halInternalGetTokenData(void *data, uint16_t token, uint8_t index, uint8_t len)
    285          {
   \                     halInternalGetTokenData: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4615             MOV      R5,R2
    286            uint8_t offset;
    287            Ecode_t ecode = ECODE_NVM3_OK;
    288          
    289            if ( token < 256U) {
   \        0x4   0xF5B1 0x7F80      CMP      R1,#+256
   \        0x8   0xD220             BCS.N    ??halInternalGetTokenData_0
    290              if (tokensActive) {
   \        0xA   0x....'....        LDR.W    R4,??DataTable6_5
   \        0xE   0x7822             LDRB     R2,[R4, #+0]
   \       0x10   0xB182             CBZ.N    R2,??halInternalGetTokenData_1
    291                TOKENDBG(emberSerialPrintf(SER232,
    292                                           "Get token[%d]: Key=0x%4x Index= 0x%d\r\n",
    293                                           token,
    294                                           tokenNvm3Keys[token],
    295                                           index); )
    296                if (tokenIsCnt[token]) {
   \       0x12   0x....'....        LDR.W    R7,??DataTable6_3
   \       0x16   0x5C7A             LDRB     R2,[R7, R1]
   \       0x18   0x....'....        LDR.W    R4,??DataTable5
   \       0x1C   0x6824             LDR      R4,[R4, #+0]
   \       0x1E   0x....'....        LDR.W    R6,??DataTable6_2
   \       0x22   0xB142             CBZ.N    R2,??halInternalGetTokenData_2
    297                  ecode = nvm3_readCounter(nvm3_defaultHandle,
    298                                           tokenNvm3Keys[token],
    299                                           data);
   \       0x24   0xF856 0x1021      LDR      R1,[R6, R1, LSL #+2]
   \       0x28   0x4602             MOV      R2,R0
   \       0x2A   0x4620             MOV      R0,R4
   \       0x2C   0x....'....        BL       nvm3_readCounter
    300                  TOKENDBG(emberSerialPrintf(SER232,
    301                                             "halInternalGetTokenData nvm3_readCounter value: 0x%4x status: 0x%x\r\n",
    302                                             *(uint32_t *) data,
    303                                             ecode); )
    304                } else { // Basic/indexed token
    305                  offset = index == 0x7FU ? 0U : index;
    306                  ecode = nvm3_readData(nvm3_defaultHandle,
    307                                        tokenNvm3Keys[token] + offset,
    308                                        data,
    309                                        len);
    310                  TOKENDBG(emberSerialPrintf(SER232,
    311                                             "halInternalGetTokenData nvm3_readData length: %d status: 0x%x\r\n",
    312                                             len,
    313                                             ecode); )
    314                }
    315              } else {
    316                TOKENDBG(emberSerialPrintf(SER232, "halInternalGetTokenData supressed\r\n"); )
    317              }
    318            } else {
    319              #ifdef EMBER_TEST
    320              assert(false);
    321              #else //EMBER_TEST
    322              halInternalGetMfgTokenData(data, token, index, len);
    323              #endif // EMBER_TEST
    324            }
    325          
    326            if (ecode != ECODE_NVM3_OK) {
   \                     ??halInternalGetTokenData_3: (+1)
   \       0x30   0xB100             CBZ.N    R0,??halInternalGetTokenData_1
    327              halNvm3Callback(ecode);
   \       0x32   0x....             B.N      ?Subroutine0
    328            }
    329          }
   \                     ??halInternalGetTokenData_1: (+1)
   \       0x34   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   \                     ??halInternalGetTokenData_2: (+1)
   \       0x36   0x2D7F             CMP      R5,#+127
   \       0x38   0x4602             MOV      R2,R0
   \       0x3A   0xF856 0x0021      LDR      R0,[R6, R1, LSL #+2]
   \       0x3E   0xBF08             IT       EQ 
   \       0x40   0x2500             MOVEQ    R5,#+0
   \       0x42   0x1829             ADDS     R1,R5,R0
   \       0x44   0x4620             MOV      R0,R4
   \       0x46   0x....'....        BL       nvm3_readData
   \       0x4A   0xE7F1             B.N      ??halInternalGetTokenData_3
   \                     ??halInternalGetTokenData_0: (+1)
   \       0x4C   0xB001             ADD      SP,SP,#+4
   \       0x4E   0xE8BD 0x40F0      POP      {R4-R7,LR}
   \       0x52   0x....'....        B.W      halInternalGetMfgTokenData

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0xE8BD 0x40F2      POP      {R1,R4-R7,LR}
   \        0x4   0x....'....        B.W      halNvm3Callback
    330          

   \                                 In section .text, align 2, keep-with-next
    331          void halInternalSetTokenData(uint16_t token, uint8_t index, void *data, uint8_t len)
    332          {
   \                     halInternalSetTokenData: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x4616             MOV      R6,R2
    333            uint8_t offset;
    334            Ecode_t ecode = ECODE_NVM3_OK;
    335          
    336            if ( token < 256U) {
   \        0x4   0xF5B0 0x7F80      CMP      R0,#+256
   \        0x8   0xD21F             BCS.N    ??halInternalSetTokenData_0
    337              if (tokensActive) {
   \        0xA   0x....'....        LDR.W    R4,??DataTable6_5
   \        0xE   0x7822             LDRB     R2,[R4, #+0]
   \       0x10   0xB17A             CBZ.N    R2,??halInternalSetTokenData_1
    338                TOKENDBG(emberSerialPrintf(SER232,
    339                                           "Set token[%d]: Key=0x%4x Index= 0x%d\r\n",
    340                                           token,
    341                                           tokenNvm3Keys[token],
    342                                           index); )
    343          
    344                if (tokenIsCnt[token]) {
   \       0x12   0x....'....        LDR.W    R2,??DataTable6_3
   \       0x16   0x5C15             LDRB     R5,[R2, R0]
   \       0x18   0x....             LDR.N    R4,??DataTable5
   \       0x1A   0x6824             LDR      R4,[R4, #+0]
   \       0x1C   0x....'....        LDR.W    R7,??DataTable6_2
   \       0x20   0xB145             CBZ.N    R5,??halInternalSetTokenData_2
    345                  ecode = nvm3_writeCounter(nvm3_defaultHandle,
    346                                            tokenNvm3Keys[token],
    347                                            *(uint32_t *) data);
   \       0x22   0x6832             LDR      R2,[R6, #+0]
   \       0x24   0xF857 0x1020      LDR      R1,[R7, R0, LSL #+2]
   \       0x28   0x4620             MOV      R0,R4
   \       0x2A   0x....'....        BL       nvm3_writeCounter
    348                  TOKENDBG(emberSerialPrintf(SER232,
    349                                             "halInternalSetTokenData nvm3_writeCounter value: 0x%4x status: 0x%x\r\n",
    350                                             *(uint32_t *) data,
    351                                             ecode); )
    352                } else { //Basic/indexed token
    353                  offset = index == 0x7FU ? 0U : index;
    354                  ecode = nvm3_writeData(nvm3_defaultHandle,
    355                                         tokenNvm3Keys[token] + offset,
    356                                         data,
    357                                         len);
    358                  TOKENDBG(emberSerialPrintf(SER232,
    359                                             "halInternalSetTokenData nvm3_writeData length: %d status: 0x%x\r\n",
    360                                             len,
    361                                             ecode); )
    362                }
    363              } else {
    364                TOKENDBG(emberSerialPrintf(SER232,
    365                                           "halInternalSetTokenData supressed\r\n"); )
    366              }
    367            } else {
    368              #ifdef EMBER_TEST
    369              assert(false);
    370              #else //EMBER_TEST
    371              halInternalSetMfgTokenData(token, data, len);
    372              #endif //EMBER_TEST
    373            }
    374            if (ecode != ECODE_NVM3_OK) {
   \                     ??halInternalSetTokenData_3: (+1)
   \       0x2E   0xB100             CBZ.N    R0,??halInternalSetTokenData_1
    375              halNvm3Callback(ecode);
   \       0x30   0x....             B.N      ?Subroutine0
    376            }
    377          }
   \                     ??halInternalSetTokenData_1: (+1)
   \       0x32   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   \                     ??halInternalSetTokenData_2: (+1)
   \       0x34   0x297F             CMP      R1,#+127
   \       0x36   0xF857 0x0020      LDR      R0,[R7, R0, LSL #+2]
   \       0x3A   0x4632             MOV      R2,R6
   \       0x3C   0xBF08             IT       EQ 
   \       0x3E   0x2100             MOVEQ    R1,#+0
   \       0x40   0x1809             ADDS     R1,R1,R0
   \       0x42   0x4620             MOV      R0,R4
   \       0x44   0x....'....        BL       nvm3_writeData
   \       0x48   0xE7F1             B.N      ??halInternalSetTokenData_3
   \                     ??halInternalSetTokenData_0: (+1)
   \       0x4A   0x461A             MOV      R2,R3
   \       0x4C   0x4631             MOV      R1,R6
   \       0x4E   0xE8BD 0x40F8      POP      {R3-R7,LR}
   \       0x52   0x....'....        B.W      halInternalSetMfgTokenData
    378          

   \                                 In section .text, align 2, keep-with-next
    379          void halInternalIncrementCounterToken(uint8_t token)
    380          {
   \                     halInternalIncrementCounterToken: (+1)
   \        0x0   0x....'....        LDR.W    R2,??DataTable6_5
   \        0x4   0x7811             LDRB     R1,[R2, #+0]
   \        0x6   0x2900             CMP      R1,#+0
   \        0x8   0xD100             BNE.N    ??halInternalIncrementCounterToken_0
   \        0xA   0x4770             BX       LR
   \                     ??halInternalIncrementCounterToken_0: (+1)
   \        0xC   0xB510             PUSH     {R4,LR}
    381            Ecode_t ecode = ECODE_NVM3_OK;
    382            if (tokensActive) {
    383              TOKENDBG(emberSerialPrintf(SER232,
    384                                         "Increment token[%d]: Key=0x%4x\r\n",
    385                                         token,
    386                                         tokenNvm3Keys[token]); )
    387              ecode = nvm3_incrementCounter(nvm3_defaultHandle, tokenNvm3Keys[token], NULL);
   \        0xE   0x....'....        LDR.W    R3,??DataTable6_2
   \       0x12   0xF853 0x1020      LDR      R1,[R3, R0, LSL #+2]
   \       0x16   0x....             LDR.N    R4,??DataTable5
   \       0x18   0x6820             LDR      R0,[R4, #+0]
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x....'....        BL       nvm3_incrementCounter
    388              TOKENDBG(emberSerialPrintf(SER232,
    389                                         "halInternalIncrementCounterToken nvm3_incrementCounter status: 0x%x\r\n",
    390                                         ecode); )
    391            } else {
    392              TOKENDBG(emberSerialPrintf(SER232,
    393                                         "halInternalIncrementCounterToken supressed\r\n"); )
    394            }
    395            if (ecode != ECODE_NVM3_OK) {
   \       0x20   0xB118             CBZ.N    R0,??halInternalIncrementCounterToken_1
    396              halNvm3Callback(ecode);
   \       0x22   0xE8BD 0x4010      POP      {R4,LR}
   \       0x26   0x....'....        B.W      halNvm3Callback
    397            }
    398          }
   \                     ??halInternalIncrementCounterToken_1: (+1)
   \       0x2A   0xBD10             POP      {R4,PC}          ;; return
    399          
    400          #else //USE_NVM3
    401          
    402          #include "hal/plugin/sim-eeprom/sim-eeprom.h"
    403          
    404          bool tokensActive = false;
    405          
    406          EmberStatus halStackInitTokens(void)
    407          {
    408            tokensActive = true;
    409            if (halInternalSimEeInit() != EMBER_SUCCESS) {
    410              TOKENDBG(emberSerialPrintf(SER232, "halInternalSimEeInit Attempt 1 fail\r\n"); )
    411              if (halInternalSimEeInit() != EMBER_SUCCESS) {
    412                TOKENDBG(emberSerialPrintf(SER232, "halInternalSimEeInit Attempt 2 fail\r\n"); )
    413                tokensActive = false;
    414                return EMBER_SIM_EEPROM_INIT_2_FAILED;
    415              }
    416            }
    417          
    418            TOKENDBG(emberSerialPrintf(SER232, "halInternalSimEeInit Successful\r\n"); )
    419          
    420            #if !defined(BOOTLOADER) && !defined(EMBER_TEST)
    421            {
    422              tokTypeStackNvdataVersion tokStack;
    423              halCommonGetToken(&tokStack, TOKEN_STACK_NVDATA_VERSION);
    424          
    425              if (CURRENT_STACK_TOKEN_VERSION != tokStack) {
    426                #if defined(DEBUG)
    427                //Debug images with a bad stack token version should attempt to
    428                //fix the SimEE before continuing on.
    429                TOKENDBG(emberSerialPrintf(SER232, "Stack Version mismatch, reloading\r\n"); )
    430                halInternalSimEeRepair(true);
    431                if (halInternalSimEeInit() != EMBER_SUCCESS) {
    432                  TOKENDBG(emberSerialPrintf(SER232, "halInternalSimEeInit Attempt 3 fail\r\n"); )
    433                  tokensActive = false;
    434                  return EMBER_SIM_EEPROM_INIT_3_FAILED;
    435                }
    436                #else //  node release image
    437                TOKENDBG(emberSerialPrintf(SER232, "EEPROM_x_VERSION_MISMATCH (%d)\r\n",
    438                                           EMBER_EEPROM_STACK_VERSION_MISMATCH); )
    439                tokensActive = false;
    440                  #if defined(PLATFORMTEST) || defined(LEVEL_ONE_TEST)
    441                tokensActive = true;      //Keep tokens active for test code.
    442                  #endif //defined(PLATFORMTEST)
    443                return EMBER_EEPROM_STACK_VERSION_MISMATCH;
    444                #endif
    445              }
    446            }
    447            #endif //!defined(BOOTLOADER) && !defined(EMBER_TEST)
    448          
    449            TOKENDBG(emberSerialPrintf(SER232, "TOKENS ACTIVE\r\n"); )
    450            return EMBER_SUCCESS;
    451          }
    452          
    453          void halInternalGetTokenData(void *data, uint16_t token, uint8_t index, uint8_t len)
    454          {
    455            if (token < 256) {
    456              //the token ID is within the SimEEPROM's range, route to the SimEEPROM
    457              if (tokensActive) {
    458                halInternalSimEeGetData(data, token, index, len);
    459              } else {
    460                TOKENDBG(emberSerialPrintf(SER232, "getIdxToken supressed.\r\n"); )
    461              }
    462            } else {
    463              #ifdef EMBER_TEST
    464              assert(false);
    465              #else //EMBER_TEST
    466              halInternalGetMfgTokenData(data, token, index, len);
    467              #endif //EMBER_TEST
    468            }
    469          }
    470          
    471          bool simEeSetDataActiveSemaphore = false;
    472          void halInternalSetTokenData(uint16_t token, uint8_t index, void *data, uint8_t len)
    473          {
    474            if (token < 256) {
    475              //the token ID is within the SimEEPROM's range, route to the SimEEPROM
    476              if (tokensActive) {
    477                //You cannot interrupt SetData with another SetData!
    478                assert(!simEeSetDataActiveSemaphore);
    479                simEeSetDataActiveSemaphore = true;
    480                halInternalSimEeSetData(token, data, index, len);
    481                simEeSetDataActiveSemaphore = false;
    482              } else {
    483                TOKENDBG(emberSerialPrintf(SER232, "setIdxToken supressed.\r\n"); )
    484              }
    485            } else {
    486              //Something is making a set token call on a manufacturing token,
    487              //on efm32 we permit this if the token is otherwise unprogrammed
    488              halInternalSetMfgTokenData(token, data, len);
    489            }
    490          }
    491          
    492          void halInternalIncrementCounterToken(uint8_t token)
    493          {
    494            if (tokensActive) {
    495              halInternalSimEeIncrementCounter(token);
    496            } else {
    497              TOKENDBG(emberSerialPrintf(SER232, "IncrementCounter supressed.\r\n"); )
    498            }
    499          }
    500          
    501          #endif //USE_NVM3
    502          

   \                                 In section .text, align 2, keep-with-next
    503          void halInternalGetIdxTokenPtrOrData(void *ptr, uint16_t token, uint8_t index, uint8_t len)
    504          {
   \                     halInternalGetIdxTokenPtrOrData: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x4604             MOV      R4,R0
    505            if (token < 256) {
   \        0x4   0x4608             MOV      R0,R1
   \        0x6   0xF5B0 0x7F80      CMP      R0,#+256
   \        0xA   0xDA08             BGE.N    ??halInternalGetIdxTokenPtrOrData_0
    506              // The token is within the SimEEPROM/NVM3's range, route to the SimEEPROM/NVM3
    507              if (tokensActive) {
   \        0xC   0x....'....        LDR.W    R5,??DataTable6_5
   \       0x10   0x7828             LDRB     R0,[R5, #+0]
   \       0x12   0xB320             CBZ.N    R0,??halInternalGetIdxTokenPtrOrData_1
    508          #ifdef USE_NVM3
    509                // NVM3 doesn't support pointers to data in the NVM storage so we instead copy the data
    510                // to the location provided through the pointer.
    511                halInternalGetTokenData(*(void **) ptr, token, index, len);
   \       0x14   0x6820             LDR      R0,[R4, #+0]
   \       0x16   0xB001             ADD      SP,SP,#+4
   \       0x18   0xE8BD 0x4030      POP      {R4,R5,LR}
   \       0x1C   0x....             B.N      halInternalGetTokenData
    512          #else
    513                halInternalSimEeGetPtr(ptr, token, index, len);
    514          #endif
    515              } else {
    516                TOKENDBG(emberSerialPrintf(SER232, "getIdxToken supressed.\r\n"); )
    517              }
    518            } else {
    519              #ifdef EMBER_TEST
    520              assert(false);
    521              #else //EMBER_TEST
    522              uint32_t *ptrOut = (uint32_t *)ptr;
    523              uint32_t realAddress = 0;
   \                     ??halInternalGetIdxTokenPtrOrData_0: (+1)
   \       0x1E   0x2500             MOVS     R5,#+0
    524          
    525              //0x7F is a non-indexed token.  Remap to 0 for the address calculation
    526              index = (index == 0x7F) ? 0 : index;
   \       0x20   0x2A7F             CMP      R2,#+127
    527          
    528              if ((token & 0xF000) == (USERDATA_TOKENS & 0xF000)) {
   \       0x22   0xF3C0 0x010B      UBFX     R1,R0,#+0,#+12
   \       0x26   0xBF08             IT       EQ 
   \       0x28   0x2200             MOVEQ    R2,#+0
   \       0x2A   0x435A             MULS     R2,R2,R3
   \       0x2C   0xF400 0x4370      AND      R3,R0,#0xF000
   \       0x30   0xF5B3 0x5F80      CMP      R3,#+4096
   \       0x34   0xBF08             IT       EQ 
   \       0x36   0xF041 0x617E      ORREQ    R1,R1,#0xFE00000
    529                realAddress = ((USERDATA_BASE | (token & 0x0FFF)) + (len * index));
   \       0x3A   0xD007             BEQ.N    ??halInternalGetIdxTokenPtrOrData_2
    530              } else if ((token & 0xF000) == (LOCKBITSDATA_TOKENS & 0xF000)) {
   \       0x3C   0xF400 0x4070      AND      R0,R0,#0xF000
   \       0x40   0xF5B0 0x5F40      CMP      R0,#+12288
   \       0x44   0xD104             BNE.N    ??halInternalGetIdxTokenPtrOrData_3
    531                realAddress = ((LOCKBITS_BASE | (token & 0x0FFF)) + (len * index));
   \       0x46   0x....'....        LDR.W    R0,??DataTable6_10
   \       0x4A   0x4301             ORRS     R1,R1,R0
   \                     ??halInternalGetIdxTokenPtrOrData_2: (+1)
   \       0x4C   0x1855             ADDS     R5,R2,R1
   \       0x4E   0xE005             B.N      ??halInternalGetIdxTokenPtrOrData_4
    532              } else {
    533                //This function must only ever be called from token code that passes
    534                //a proper "token" parameter.  A valid 16bit token must pass the
    535                //above check to find the 32bit realAddress.
    536                assert(0);
   \                     ??halInternalGetIdxTokenPtrOrData_3: (+1)
   \       0x50   0xF44F 0x7106      MOV      R1,#+536
   \       0x54   0x....'....        LDR.W    R0,??DataTable6_8
   \       0x58   0x....'....        BL       halInternalAssertFailed
    537              }
    538          
    539              *ptrOut = realAddress;
   \                     ??halInternalGetIdxTokenPtrOrData_4: (+1)
   \       0x5C   0x6025             STR      R5,[R4, #+0]
    540              #endif //EMBER_TEST
    541            }
    542          }
   \                     ??halInternalGetIdxTokenPtrOrData_1: (+1)
   \       0x5E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    543          
    544          #ifndef EMBER_TEST
    545          
    546          // The following interfaces are admittedly code space hogs but serve
    547          // as glue interfaces to link creator codes to tokens for test code.
    548          

   \                                 In section .text, align 2, keep-with-next
    549          uint16_t getTokenAddress(uint16_t creator)
    550          {
    551            uint16_t tokenAddress;
    552          
    553            #define DEFINETOKENS
    554            switch (creator) {
   \                     getTokenAddress: (+1)
   \        0x0   0xF24B 0x6134      MOVW     R1,#+46644
   \        0x4   0x1A40             SUBS     R0,R0,R1
   \        0x6   0xF000 0x80E6      BEQ.W    ??getTokenAddress_0
   \        0xA   0xF640 0x310F      MOVW     R1,#+2831
   \        0xE   0x1A40             SUBS     R0,R0,R1
   \       0x10   0xF000 0x8086      BEQ.W    ??getTokenAddress_1
   \       0x14   0xF44F 0x7184      MOV      R1,#+264
   \       0x18   0x1A40             SUBS     R0,R0,R1
   \       0x1A   0xF000 0x80C0      BEQ.W    ??getTokenAddress_2
   \       0x1E   0x1EC0             SUBS     R0,R0,#+3
   \       0x20   0xD075             BEQ.N    ??getTokenAddress_3
   \       0x22   0x38F4             SUBS     R0,R0,#+244
   \       0x24   0xF000 0x80AC      BEQ.W    ??getTokenAddress_4
   \       0x28   0x1E40             SUBS     R0,R0,#+1
   \       0x2A   0xF000 0x807F      BEQ.W    ??getTokenAddress_5
   \       0x2E   0x1E80             SUBS     R0,R0,#+2
   \       0x30   0xF000 0x80B2      BEQ.W    ??getTokenAddress_6
   \       0x34   0x380F             SUBS     R0,R0,#+15
   \       0x36   0xF000 0x8091      BEQ.W    ??getTokenAddress_7
   \       0x3A   0x1E80             SUBS     R0,R0,#+2
   \       0x3C   0xD061             BEQ.N    ??getTokenAddress_8
   \       0x3E   0x1E40             SUBS     R0,R0,#+1
   \       0x40   0xF000 0x8092      BEQ.W    ??getTokenAddress_9
   \       0x44   0xF44F 0x7180      MOV      R1,#+256
   \       0x48   0x1A40             SUBS     R0,R0,R1
   \       0x4A   0xF000 0x8096      BEQ.W    ??getTokenAddress_10
   \       0x4E   0xF240 0x41EC      MOVW     R1,#+1260
   \       0x52   0x1A40             SUBS     R0,R0,R1
   \       0x54   0xF000 0x809A      BEQ.W    ??getTokenAddress_11
   \       0x58   0x1E40             SUBS     R0,R0,#+1
   \       0x5A   0xD05B             BEQ.N    ??getTokenAddress_12
   \       0x5C   0xF240 0x1107      MOVW     R1,#+263
   \       0x60   0x1A40             SUBS     R0,R0,R1
   \       0x62   0xF000 0x80A5      BEQ.W    ??getTokenAddress_13
   \       0x66   0xF240 0x2109      MOVW     R1,#+521
   \       0x6A   0x1A40             SUBS     R0,R0,R1
   \       0x6C   0xD073             BEQ.N    ??getTokenAddress_14
   \       0x6E   0x38FF             SUBS     R0,R0,#+255
   \       0x70   0xD05F             BEQ.N    ??getTokenAddress_15
   \       0x72   0x1F00             SUBS     R0,R0,#+4
   \       0x74   0xD07B             BEQ.N    ??getTokenAddress_16
   \       0x76   0x38F4             SUBS     R0,R0,#+244
   \       0x78   0xF000 0x809D      BEQ.W    ??getTokenAddress_17
   \       0x7C   0xF44F 0x71FC      MOV      R1,#+504
   \       0x80   0x1A40             SUBS     R0,R0,R1
   \       0x82   0xD04A             BEQ.N    ??getTokenAddress_18
   \       0x84   0x3814             SUBS     R0,R0,#+20
   \       0x86   0xD06C             BEQ.N    ??getTokenAddress_19
   \       0x88   0xF240 0x21EB      MOVW     R1,#+747
   \       0x8C   0x1A40             SUBS     R0,R0,R1
   \       0x8E   0xF000 0x8080      BEQ.W    ??getTokenAddress_20
   \       0x92   0x1E40             SUBS     R0,R0,#+1
   \       0x94   0xD077             BEQ.N    ??getTokenAddress_21
   \       0x96   0x1EC0             SUBS     R0,R0,#+3
   \       0x98   0xD045             BEQ.N    ??getTokenAddress_22
   \       0x9A   0x3808             SUBS     R0,R0,#+8
   \       0x9C   0xD058             BEQ.N    ??getTokenAddress_23
   \       0x9E   0x380A             SUBS     R0,R0,#+10
   \       0xA0   0xF000 0x8080      BEQ.W    ??getTokenAddress_24
   \       0xA4   0x1E40             SUBS     R0,R0,#+1
   \       0xA6   0xF000 0x8080      BEQ.W    ??getTokenAddress_25
   \       0xAA   0xF44F 0x71FF      MOV      R1,#+510
   \       0xAE   0x1A40             SUBS     R0,R0,R1
   \       0xB0   0xD060             BEQ.N    ??getTokenAddress_26
   \       0xB2   0xF240 0x21FD      MOVW     R1,#+765
   \       0xB6   0x1A40             SUBS     R0,R0,R1
   \       0xB8   0xD03E             BEQ.N    ??getTokenAddress_27
   \       0xBA   0xF240 0x11EF      MOVW     R1,#+495
   \       0xBE   0x1A40             SUBS     R0,R0,R1
   \       0xC0   0xD03D             BEQ.N    ??getTokenAddress_28
   \       0xC2   0x1F40             SUBS     R0,R0,#+5
   \       0xC4   0xD03E             BEQ.N    ??getTokenAddress_29
   \       0xC6   0x1E40             SUBS     R0,R0,#+1
   \       0xC8   0xF000 0x8081      BEQ.W    ??getTokenAddress_30
   \       0xCC   0x1FC0             SUBS     R0,R0,#+7
   \       0xCE   0xD075             BEQ.N    ??getTokenAddress_31
   \       0xD0   0x1E40             SUBS     R0,R0,#+1
   \       0xD2   0xD079             BEQ.N    ??getTokenAddress_32
   \       0xD4   0x1E40             SUBS     R0,R0,#+1
   \       0xD6   0xD038             BEQ.N    ??getTokenAddress_33
   \       0xD8   0x1EC0             SUBS     R0,R0,#+3
   \       0xDA   0xD072             BEQ.N    ??getTokenAddress_34
   \       0xDC   0xF44F 0x610F      MOV      R1,#+2288
   \       0xE0   0x1A40             SUBS     R0,R0,R1
   \       0xE2   0xD00B             BEQ.N    ??getTokenAddress_35
   \       0xE4   0xF44F 0x7100      MOV      R1,#+512
   \       0xE8   0x1A40             SUBS     R0,R0,R1
   \       0xEA   0xD004             BEQ.N    ??getTokenAddress_36
   \       0xEC   0xF640 0x012E      MOVW     R1,#+2094
   \       0xF0   0x1A40             SUBS     R0,R0,R1
   \       0xF2   0xD009             BEQ.N    ??getTokenAddress_37
   \       0xF4   0xE073             B.N      ??getTokenAddress_38
    555              #define TOKEN_MFG TOKEN_DEF
    556              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    557            case creator:                                                          \
    558              tokenAddress = TOKEN_##name;                                         \
    559              break;
    560              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    561              //cstat !MISRAC2012-Dir-4.10
    562              #include "hal/micro/cortexm3/efm32/token-manufacturing.h"
   \                     ??getTokenAddress_36: (+1)
   \       0xF6   0x....'....        LDR.W    R0,??DataTable6_11
   \       0xFA   0xE06A             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_35: (+1)
   \       0xFC   0x....'....        LDR.W    R1,??DataTable6_12
   \      0x100   0xE06B             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_8: (+1)
   \      0x102   0x....'....        LDR.W    R0,??DataTable6_13
   \      0x106   0xE064             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_37: (+1)
   \      0x108   0x....'....        LDR.W    R1,??DataTable6_14
   \      0x10C   0xE065             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_3: (+1)
   \      0x10E   0x....'....        LDR.W    R0,??DataTable6_15
   \      0x112   0xE05E             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_12: (+1)
   \      0x114   0x....'....        LDR.W    R1,??DataTable6_16
   \      0x118   0xE05F             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_18: (+1)
   \      0x11A   0x....'....        LDR.W    R0,??DataTable6_17
   \      0x11E   0xE058             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_1: (+1)
   \      0x120   0x....'....        LDR.W    R1,??DataTable6_18
   \      0x124   0xE059             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_22: (+1)
   \      0x126   0x....'....        LDR.W    R0,??DataTable6_19
   \      0x12A   0xE052             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_5: (+1)
   \      0x12C   0x....'....        LDR.W    R1,??DataTable6_20
   \      0x130   0xE053             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_15: (+1)
   \      0x132   0x....'....        LDR.W    R0,??DataTable6_21
   \      0x136   0xE04C             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_27: (+1)
   \      0x138   0x....'....        LDR.W    R1,??DataTable6_22
   \      0x13C   0xE04D             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_28: (+1)
   \      0x13E   0x....'....        LDR.W    R0,??DataTable6_23
   \      0x142   0xE046             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_29: (+1)
   \      0x144   0x....'....        LDR.W    R1,??DataTable6_24
   \      0x148   0xE047             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_33: (+1)
   \      0x14A   0x....'....        LDR.W    R0,??DataTable6_25
   \      0x14E   0xE040             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_23: (+1)
   \      0x150   0x....'....        LDR.W    R1,??DataTable6_26
   \      0x154   0xE041             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_14: (+1)
   \      0x156   0x....'....        LDR.W    R0,??DataTable6_27
   \      0x15A   0xE03A             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_7: (+1)
   \      0x15C   0x....'....        LDR.W    R1,??DataTable6_28
   \      0x160   0xE03B             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_19: (+1)
   \      0x162   0x....'....        LDR.W    R0,??DataTable6_29
   \      0x166   0xE034             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_9: (+1)
   \      0x168   0x....'....        LDR.W    R1,??DataTable6_30
   \      0x16C   0xE035             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_16: (+1)
   \      0x16E   0x....'....        LDR.W    R0,??DataTable6_31
   \      0x172   0xE02E             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_26: (+1)
   \      0x174   0x....'....        LDR.W    R1,??DataTable6_32
   \      0x178   0xE02F             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_10: (+1)
   \      0x17A   0x....'....        LDR.W    R0,??DataTable6_33
   \      0x17E   0xE028             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_4: (+1)
   \      0x180   0x....'....        LDR.W    R1,??DataTable6_34
   \      0x184   0xE029             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_21: (+1)
   \      0x186   0x....'....        LDR.W    R0,??DataTable6_35
   \      0x18A   0xE022             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_11: (+1)
   \      0x18C   0x....'....        LDR.W    R1,??DataTable6_36
   \      0x190   0xE023             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_20: (+1)
   \      0x192   0x....'....        LDR.W    R0,??DataTable6_37
   \      0x196   0xE01C             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_6: (+1)
   \      0x198   0x....'....        LDR.W    R1,??DataTable6_38
   \      0x19C   0xE01D             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_2: (+1)
   \      0x19E   0x....'....        LDR.W    R0,??DataTable6_39
   \      0x1A2   0xE016             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_24: (+1)
   \      0x1A4   0x....'....        LDR.W    R1,??DataTable6_40
   \      0x1A8   0xE017             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_25: (+1)
   \      0x1AA   0x....'....        LDR.W    R0,??DataTable6_41
   \      0x1AE   0xE010             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_13: (+1)
   \      0x1B0   0x....'....        LDR.W    R1,??DataTable6_42
   \      0x1B4   0xE011             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_17: (+1)
   \      0x1B6   0x....'....        LDR.W    R0,??DataTable6_43
   \      0x1BA   0xE00A             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_31: (+1)
   \      0x1BC   0x....'....        LDR.W    R1,??DataTable6_44
   \      0x1C0   0xE00B             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_34: (+1)
   \      0x1C2   0x....'....        LDR.W    R0,??DataTable6_45
   \      0x1C6   0xE004             B.N      ??getTokenAddress_39
   \                     ??getTokenAddress_32: (+1)
   \      0x1C8   0x....'....        LDR.W    R1,??DataTable6_46
   \      0x1CC   0xE005             B.N      ??getTokenAddress_40
   \                     ??getTokenAddress_30: (+1)
   \      0x1CE   0x....'....        LDR.W    R0,??DataTable6_47
   \                     ??getTokenAddress_39: (+1)
   \      0x1D2   0x8800             LDRH     R0,[R0, #+0]
   \      0x1D4   0x4770             BX       LR
   \                     ??getTokenAddress_0: (+1)
   \      0x1D6   0x....'....        LDR.W    R1,??DataTable6_48
   \                     ??getTokenAddress_40: (+1)
   \      0x1DA   0x8808             LDRH     R0,[R1, #+0]
   \      0x1DC   0x4770             BX       LR
    563              // Creator codes are only guaranteed to be defined for tokens when SimEE plugins are included
    564          #if !defined (USE_NVM3) || defined (SIMEE2_TO_NVM3_UPGRADE)
    565              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    566              //cstat !MISRAC2012-Dir-4.10
    567              #include "stack/config/token-stack.h"
    568          #endif
    569              #undef TOKEN_MFG
    570              #undef TOKEN_DEF
    571              default:
    572                tokenAddress = INVALID_EE_ADDRESS;
   \                     ??getTokenAddress_38: (+1)
   \      0x1DE   0x....             B.N      ?Subroutine1
    573                break;
    574            }
    575            #undef DEFINETOKENS
    576            return tokenAddress;
    577          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0xF64F 0x70FF      MOVW     R0,#+65535
   \        0x4   0x4770             BX       LR               ;; return
    578          

   \                                 In section .text, align 2, keep-with-next
    579          uint8_t getTokenSize(uint16_t creator)
    580          {
    581            uint8_t tokenSize;
    582          
    583            #define DEFINETOKENS
    584            switch (creator) {
   \                     getTokenSize: (+1)
   \        0x0   0xF24B 0x6134      MOVW     R1,#+46644
   \        0x4   0x1A40             SUBS     R0,R0,R1
   \        0x6   0xD078             BEQ.N    ??getTokenSize_0
   \        0x8   0xF640 0x310F      MOVW     R1,#+2831
   \        0xC   0x1A40             SUBS     R0,R0,R1
   \        0xE   0xD064             BEQ.N    ??getTokenSize_1
   \       0x10   0xF44F 0x7184      MOV      R1,#+264
   \       0x14   0x1A40             SUBS     R0,R0,R1
   \       0x16   0xD068             BEQ.N    ??getTokenSize_2
   \       0x18   0x1EC0             SUBS     R0,R0,#+3
   \       0x1A   0xD066             BEQ.N    ??getTokenSize_2
   \       0x1C   0x38F4             SUBS     R0,R0,#+244
   \       0x1E   0xD05A             BEQ.N    ??getTokenSize_3
   \       0x20   0x1E40             SUBS     R0,R0,#+1
   \       0x22   0xD05A             BEQ.N    ??getTokenSize_1
   \       0x24   0x1E80             SUBS     R0,R0,#+2
   \       0x26   0xD05C             BEQ.N    ??getTokenSize_4
   \       0x28   0x380F             SUBS     R0,R0,#+15
   \       0x2A   0xD056             BEQ.N    ??getTokenSize_1
   \       0x2C   0x1E80             SUBS     R0,R0,#+2
   \       0x2E   0xD054             BEQ.N    ??getTokenSize_1
   \       0x30   0x1E40             SUBS     R0,R0,#+1
   \       0x32   0xD04E             BEQ.N    ??getTokenSize_5
   \       0x34   0xF44F 0x7180      MOV      R1,#+256
   \       0x38   0x1A40             SUBS     R0,R0,R1
   \       0x3A   0xD04A             BEQ.N    ??getTokenSize_5
   \       0x3C   0xF240 0x41EC      MOVW     R1,#+1260
   \       0x40   0x1A40             SUBS     R0,R0,R1
   \       0x42   0xD04C             BEQ.N    ??getTokenSize_6
   \       0x44   0x1E40             SUBS     R0,R0,#+1
   \       0x46   0xD048             BEQ.N    ??getTokenSize_1
   \       0x48   0xF240 0x1107      MOVW     R1,#+263
   \       0x4C   0x1A40             SUBS     R0,R0,R1
   \       0x4E   0xD04A             BEQ.N    ??getTokenSize_7
   \       0x50   0xF240 0x2109      MOVW     R1,#+521
   \       0x54   0x1A40             SUBS     R0,R0,R1
   \       0x56   0xD04E             BEQ.N    ??getTokenSize_8
   \       0x58   0x38FF             SUBS     R0,R0,#+255
   \       0x5A   0xD04E             BEQ.N    ??getTokenSize_0
   \       0x5C   0x1F00             SUBS     R0,R0,#+4
   \       0x5E   0xD038             BEQ.N    ??getTokenSize_5
   \       0x60   0x38F4             SUBS     R0,R0,#+244
   \       0x62   0xD042             BEQ.N    ??getTokenSize_2
   \       0x64   0xF44F 0x71FC      MOV      R1,#+504
   \       0x68   0x1A40             SUBS     R0,R0,R1
   \       0x6A   0xD036             BEQ.N    ??getTokenSize_1
   \       0x6C   0x3814             SUBS     R0,R0,#+20
   \       0x6E   0xD03C             BEQ.N    ??getTokenSize_2
   \       0x70   0xF240 0x21EB      MOVW     R1,#+747
   \       0x74   0x1A40             SUBS     R0,R0,R1
   \       0x76   0xD038             BEQ.N    ??getTokenSize_2
   \       0x78   0x1E40             SUBS     R0,R0,#+1
   \       0x7A   0xD02E             BEQ.N    ??getTokenSize_1
   \       0x7C   0x1EC0             SUBS     R0,R0,#+3
   \       0x7E   0xD02C             BEQ.N    ??getTokenSize_1
   \       0x80   0x3808             SUBS     R0,R0,#+8
   \       0x82   0xD032             BEQ.N    ??getTokenSize_2
   \       0x84   0x380A             SUBS     R0,R0,#+10
   \       0x86   0x2801             CMP      R0,#+1
   \       0x88   0xD931             BLS.N    ??getTokenSize_9
   \       0x8A   0xF240 0x11FF      MOVW     R1,#+511
   \       0x8E   0x1A40             SUBS     R0,R0,R1
   \       0x90   0xD01F             BEQ.N    ??getTokenSize_5
   \       0x92   0xF240 0x21FD      MOVW     R1,#+765
   \       0x96   0x1A40             SUBS     R0,R0,R1
   \       0x98   0xD01F             BEQ.N    ??getTokenSize_1
   \       0x9A   0xF240 0x11EF      MOVW     R1,#+495
   \       0x9E   0x1A40             SUBS     R0,R0,R1
   \       0xA0   0xD029             BEQ.N    ??getTokenSize_8
   \       0xA2   0x1F40             SUBS     R0,R0,#+5
   \       0xA4   0x2801             CMP      R0,#+1
   \       0xA6   0xD926             BLS.N    ??getTokenSize_8
   \       0xA8   0x3808             SUBS     R0,R0,#+8
   \       0xAA   0xD020             BEQ.N    ??getTokenSize_9
   \       0xAC   0x1E40             SUBS     R0,R0,#+1
   \       0xAE   0xD020             BEQ.N    ??getTokenSize_10
   \       0xB0   0x1E40             SUBS     R0,R0,#+1
   \       0xB2   0xD01A             BEQ.N    ??getTokenSize_2
   \       0xB4   0x1EC0             SUBS     R0,R0,#+3
   \       0xB6   0xD01A             BEQ.N    ??getTokenSize_9
   \       0xB8   0xF44F 0x610F      MOV      R1,#+2288
   \       0xBC   0x1A40             SUBS     R0,R0,R1
   \       0xBE   0xD01C             BEQ.N    ??getTokenSize_0
   \       0xC0   0xF44F 0x7100      MOV      R1,#+512
   \       0xC4   0x1A40             SUBS     R0,R0,R1
   \       0xC6   0xD018             BEQ.N    ??getTokenSize_0
   \       0xC8   0xF640 0x012E      MOVW     R1,#+2094
   \       0xCC   0x1A40             SUBS     R0,R0,R1
   \       0xCE   0xD00C             BEQ.N    ??getTokenSize_2
   \       0xD0   0xE015             B.N      ??getTokenSize_11
    585              #define TOKEN_MFG TOKEN_DEF
    586              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    587            case creator:                                                          \
    588              tokenSize = sizeof(type);                                            \
    589              break;
    590              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    591              //cstat !MISRAC2012-Dir-4.10
    592              #include "hal/micro/cortexm3/efm32/token-manufacturing.h"
   \                     ??getTokenSize_5: (+1)
   \       0xD2   0x2004             MOVS     R0,#+4
   \       0xD4   0x4770             BX       LR
   \                     ??getTokenSize_3: (+1)
   \       0xD6   0x205C             MOVS     R0,#+92
   \       0xD8   0x4770             BX       LR
   \                     ??getTokenSize_1: (+1)
   \       0xDA   0x2002             MOVS     R0,#+2
   \       0xDC   0x4770             BX       LR
   \                     ??getTokenSize_6: (+1)
   \       0xDE   0x2014             MOVS     R0,#+20
   \       0xE0   0x4770             BX       LR
   \                     ??getTokenSize_4: (+1)
   \       0xE2   0x2094             MOVS     R0,#+148
   \       0xE4   0x4770             BX       LR
   \                     ??getTokenSize_7: (+1)
   \       0xE6   0x2022             MOVS     R0,#+34
   \       0xE8   0x4770             BX       LR
   \                     ??getTokenSize_2: (+1)
   \       0xEA   0x2010             MOVS     R0,#+16
   \       0xEC   0x4770             BX       LR
   \                     ??getTokenSize_9: (+1)
   \       0xEE   0x2020             MOVS     R0,#+32
   \       0xF0   0x4770             BX       LR
   \                     ??getTokenSize_10: (+1)
   \       0xF2   0x205A             MOVS     R0,#+90
   \       0xF4   0x4770             BX       LR
   \                     ??getTokenSize_8: (+1)
   \       0xF6   0x2001             MOVS     R0,#+1
   \       0xF8   0x4770             BX       LR
   \                     ??getTokenSize_0: (+1)
   \       0xFA   0x2008             MOVS     R0,#+8
   \       0xFC   0x4770             BX       LR
    593              // Creator codes are only guaranteed to be defined for tokens when SimEE plugins are included
    594          #if !defined (USE_NVM3) || defined (SIMEE2_TO_NVM3_UPGRADE)
    595              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    596              //cstat !MISRAC2012-Dir-4.10
    597              #include "stack/config/token-stack.h"
    598          #endif
    599              #undef TOKEN_MFG
    600              #undef TOKEN_DEF
    601              default:
    602                tokenSize = 0U;
   \                     ??getTokenSize_11: (+1)
   \       0xFE   0x2000             MOVS     R0,#+0
    603                break;
    604            }
    605            #undef DEFINETOKENS
    606            return tokenSize;
   \      0x100   0x4770             BX       LR               ;; return
    607          }
    608          

   \                                 In section .text, align 2, keep-with-next
    609          uint8_t getTokenArraySize(uint16_t creator)
    610          {
    611            uint8_t tokenArraySize;
    612          
    613            #define DEFINETOKENS
    614            switch (creator) {
   \                     getTokenArraySize: (+1)
   \        0x0   0xF24B 0x6134      MOVW     R1,#+46644
   \        0x4   0x1A40             SUBS     R0,R0,R1
   \        0x6   0xD05F             BEQ.N    ??getTokenArraySize_0
   \        0x8   0xF640 0x310F      MOVW     R1,#+2831
   \        0xC   0x1A40             SUBS     R0,R0,R1
   \        0xE   0xD059             BEQ.N    ??getTokenArraySize_1
   \       0x10   0xF44F 0x7184      MOV      R1,#+264
   \       0x14   0x1A40             SUBS     R0,R0,R1
   \       0x16   0xD057             BEQ.N    ??getTokenArraySize_0
   \       0x18   0x1EC0             SUBS     R0,R0,#+3
   \       0x1A   0xD055             BEQ.N    ??getTokenArraySize_0
   \       0x1C   0x38F4             SUBS     R0,R0,#+244
   \       0x1E   0x2801             CMP      R0,#+1
   \       0x20   0xD952             BLS.N    ??getTokenArraySize_0
   \       0x22   0x1EC0             SUBS     R0,R0,#+3
   \       0x24   0xD050             BEQ.N    ??getTokenArraySize_0
   \       0x26   0x380F             SUBS     R0,R0,#+15
   \       0x28   0xD04E             BEQ.N    ??getTokenArraySize_0
   \       0x2A   0x1E80             SUBS     R0,R0,#+2
   \       0x2C   0x2801             CMP      R0,#+1
   \       0x2E   0xD94B             BLS.N    ??getTokenArraySize_0
   \       0x30   0xF240 0x1101      MOVW     R1,#+257
   \       0x34   0x1A40             SUBS     R0,R0,R1
   \       0x36   0xD047             BEQ.N    ??getTokenArraySize_0
   \       0x38   0xF240 0x41EC      MOVW     R1,#+1260
   \       0x3C   0x1A40             SUBS     R0,R0,R1
   \       0x3E   0x2801             CMP      R0,#+1
   \       0x40   0xD942             BLS.N    ??getTokenArraySize_0
   \       0x42   0xF44F 0x7184      MOV      R1,#+264
   \       0x46   0x1A40             SUBS     R0,R0,R1
   \       0x48   0xD03E             BEQ.N    ??getTokenArraySize_0
   \       0x4A   0xF240 0x2109      MOVW     R1,#+521
   \       0x4E   0x1A40             SUBS     R0,R0,R1
   \       0x50   0xD03A             BEQ.N    ??getTokenArraySize_0
   \       0x52   0x38FF             SUBS     R0,R0,#+255
   \       0x54   0xD038             BEQ.N    ??getTokenArraySize_0
   \       0x56   0x1F00             SUBS     R0,R0,#+4
   \       0x58   0xD036             BEQ.N    ??getTokenArraySize_0
   \       0x5A   0x38F4             SUBS     R0,R0,#+244
   \       0x5C   0xD034             BEQ.N    ??getTokenArraySize_0
   \       0x5E   0xF44F 0x71FC      MOV      R1,#+504
   \       0x62   0x1A40             SUBS     R0,R0,R1
   \       0x64   0xD030             BEQ.N    ??getTokenArraySize_0
   \       0x66   0x3814             SUBS     R0,R0,#+20
   \       0x68   0xD02E             BEQ.N    ??getTokenArraySize_0
   \       0x6A   0xF240 0x21EB      MOVW     R1,#+747
   \       0x6E   0x1A40             SUBS     R0,R0,R1
   \       0x70   0x2801             CMP      R0,#+1
   \       0x72   0xD929             BLS.N    ??getTokenArraySize_0
   \       0x74   0x1F00             SUBS     R0,R0,#+4
   \       0x76   0xD027             BEQ.N    ??getTokenArraySize_0
   \       0x78   0x3808             SUBS     R0,R0,#+8
   \       0x7A   0xD025             BEQ.N    ??getTokenArraySize_0
   \       0x7C   0x380A             SUBS     R0,R0,#+10
   \       0x7E   0x2801             CMP      R0,#+1
   \       0x80   0xD922             BLS.N    ??getTokenArraySize_0
   \       0x82   0xF240 0x11FF      MOVW     R1,#+511
   \       0x86   0x1A40             SUBS     R0,R0,R1
   \       0x88   0xD01E             BEQ.N    ??getTokenArraySize_0
   \       0x8A   0xF240 0x21FD      MOVW     R1,#+765
   \       0x8E   0x1A40             SUBS     R0,R0,R1
   \       0x90   0xD01A             BEQ.N    ??getTokenArraySize_0
   \       0x92   0xF240 0x11EF      MOVW     R1,#+495
   \       0x96   0x1A40             SUBS     R0,R0,R1
   \       0x98   0xD016             BEQ.N    ??getTokenArraySize_0
   \       0x9A   0x1F40             SUBS     R0,R0,#+5
   \       0x9C   0x2801             CMP      R0,#+1
   \       0x9E   0xBF84             ITT      HI 
   \       0xA0   0x3808             SUBHI    R0,R0,#+8
   \       0xA2   0x2802             CMPHI    R0,#+2
   \       0xA4   0xD910             BLS.N    ??getTokenArraySize_0
   \       0xA6   0x1F40             SUBS     R0,R0,#+5
   \       0xA8   0xD00E             BEQ.N    ??getTokenArraySize_0
   \       0xAA   0xF44F 0x610F      MOV      R1,#+2288
   \       0xAE   0x1A40             SUBS     R0,R0,R1
   \       0xB0   0xD00A             BEQ.N    ??getTokenArraySize_0
   \       0xB2   0xF44F 0x7100      MOV      R1,#+512
   \       0xB6   0x1A40             SUBS     R0,R0,R1
   \       0xB8   0xD006             BEQ.N    ??getTokenArraySize_0
   \       0xBA   0xF640 0x012E      MOVW     R1,#+2094
   \       0xBE   0x1A40             SUBS     R0,R0,R1
   \       0xC0   0xD002             BEQ.N    ??getTokenArraySize_0
   \       0xC2   0xE003             B.N      ??getTokenArraySize_2
    615              #define TOKEN_MFG TOKEN_DEF
    616              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    617            case creator:                                                          \
    618              tokenArraySize = arraysize;                                          \
    619              break;
    620              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    621              //cstat !MISRAC2012-Dir-4.10
    622              #include "hal/micro/cortexm3/efm32/token-manufacturing.h"
   \                     ??getTokenArraySize_1: (+1)
   \       0xC4   0x2014             MOVS     R0,#+20
   \       0xC6   0x4770             BX       LR
   \                     ??getTokenArraySize_0: (+1)
   \       0xC8   0x2001             MOVS     R0,#+1
   \       0xCA   0x4770             BX       LR
    623              // Creator codes are only guaranteed to be defined for tokens when SimEE plugins are included
    624          #if !defined (USE_NVM3) || defined (SIMEE2_TO_NVM3_UPGRADE)
    625              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    626              //cstat !MISRAC2012-Dir-4.10
    627              #include "stack/config/token-stack.h"
    628          #endif
    629              #undef TOKEN_MFG
    630              #undef TOKEN_DEF
    631              default:
    632                tokenArraySize = 0U;
   \                     ??getTokenArraySize_2: (+1)
   \       0xCC   0x2000             MOVS     R0,#+0
    633                break;
    634            }
    635            #undef DEFINETOKENS
    636            return tokenArraySize;
   \       0xCE   0x4770             BX       LR               ;; return
    637          }
    638          
    639          #if defined (USE_NVM3)

   \                                 In section .text, align 2, keep-with-next
    640          uint16_t getNvm3TokenAddress(uint32_t nvm3Key)
    641          {
    642            uint16_t tokenAddress;
    643          
    644            #define DEFINETOKENS
    645            switch (nvm3Key) {
   \                     getNvm3TokenAddress: (+1)
   \        0x0   0xF44F 0x3180      MOV      R1,#+65536
   \        0x4   0x1A40             SUBS     R0,R0,R1
   \        0x6   0xF000 0x80A0      BEQ.W    ??getNvm3TokenAddress_0
   \        0xA   0x3880             SUBS     R0,R0,#+128
   \        0xC   0xF000 0x809F      BEQ.W    ??getNvm3TokenAddress_1
   \       0x10   0x3880             SUBS     R0,R0,#+128
   \       0x12   0xF000 0x809E      BEQ.W    ??getNvm3TokenAddress_2
   \       0x16   0x3880             SUBS     R0,R0,#+128
   \       0x18   0xF000 0x809D      BEQ.W    ??getNvm3TokenAddress_3
   \       0x1C   0x3880             SUBS     R0,R0,#+128
   \       0x1E   0xF000 0x809C      BEQ.W    ??getNvm3TokenAddress_4
   \       0x22   0x3880             SUBS     R0,R0,#+128
   \       0x24   0xF000 0x809B      BEQ.W    ??getNvm3TokenAddress_5
   \       0x28   0x3880             SUBS     R0,R0,#+128
   \       0x2A   0xF000 0x809C      BEQ.W    ??getNvm3TokenAddress_6
   \       0x2E   0x3880             SUBS     R0,R0,#+128
   \       0x30   0xF000 0x80AB      BEQ.W    ??getNvm3TokenAddress_7
   \       0x34   0x3880             SUBS     R0,R0,#+128
   \       0x36   0xF000 0x80AA      BEQ.W    ??getNvm3TokenAddress_8
   \       0x3A   0x3880             SUBS     R0,R0,#+128
   \       0x3C   0xF000 0x80A9      BEQ.W    ??getNvm3TokenAddress_9
   \       0x40   0x3880             SUBS     R0,R0,#+128
   \       0x42   0xF000 0x8092      BEQ.W    ??getNvm3TokenAddress_10
   \       0x46   0x3880             SUBS     R0,R0,#+128
   \       0x48   0xF000 0x8091      BEQ.W    ??getNvm3TokenAddress_11
   \       0x4C   0x3880             SUBS     R0,R0,#+128
   \       0x4E   0xF000 0x8090      BEQ.W    ??getNvm3TokenAddress_12
   \       0x52   0x3880             SUBS     R0,R0,#+128
   \       0x54   0xF000 0x808F      BEQ.W    ??getNvm3TokenAddress_13
   \       0x58   0x3880             SUBS     R0,R0,#+128
   \       0x5A   0xF000 0x808E      BEQ.W    ??getNvm3TokenAddress_14
   \       0x5E   0xF44F 0x5164      MOV      R1,#+14592
   \       0x62   0x1A40             SUBS     R0,R0,R1
   \       0x64   0xF000 0x80AF      BEQ.W    ??getNvm3TokenAddress_15
   \       0x68   0x3880             SUBS     R0,R0,#+128
   \       0x6A   0xF000 0x80AA      BEQ.W    ??getNvm3TokenAddress_16
   \       0x6E   0xF244 0x61A3      MOVW     R1,#+18083
   \       0x72   0x1A40             SUBS     R0,R0,R1
   \       0x74   0xF000 0x80A3      BEQ.W    ??getNvm3TokenAddress_17
   \       0x78   0xF642 0x01DD      MOVW     R1,#+10461
   \       0x7C   0x1A40             SUBS     R0,R0,R1
   \       0x7E   0xF000 0x808A      BEQ.W    ??getNvm3TokenAddress_18
   \       0x82   0x1E40             SUBS     R0,R0,#+1
   \       0x84   0xF000 0x8089      BEQ.W    ??getNvm3TokenAddress_19
   \       0x88   0x1E40             SUBS     R0,R0,#+1
   \       0x8A   0xF000 0x8088      BEQ.W    ??getNvm3TokenAddress_20
   \       0x8E   0x1E40             SUBS     R0,R0,#+1
   \       0x90   0xF000 0x8087      BEQ.W    ??getNvm3TokenAddress_21
   \       0x94   0x1E40             SUBS     R0,R0,#+1
   \       0x96   0xF000 0x8086      BEQ.W    ??getNvm3TokenAddress_22
   \       0x9A   0x1E40             SUBS     R0,R0,#+1
   \       0x9C   0xF000 0x8085      BEQ.W    ??getNvm3TokenAddress_23
   \       0xA0   0x1E40             SUBS     R0,R0,#+1
   \       0xA2   0xF000 0x8084      BEQ.W    ??getNvm3TokenAddress_24
   \       0xA6   0x1E40             SUBS     R0,R0,#+1
   \       0xA8   0xF000 0x8083      BEQ.W    ??getNvm3TokenAddress_25
   \       0xAC   0x1E40             SUBS     R0,R0,#+1
   \       0xAE   0xF000 0x8082      BEQ.W    ??getNvm3TokenAddress_26
   \       0xB2   0x1E40             SUBS     R0,R0,#+1
   \       0xB4   0xF000 0x8081      BEQ.W    ??getNvm3TokenAddress_27
   \       0xB8   0xF243 0x111A      MOVW     R1,#+12570
   \       0xBC   0x1A40             SUBS     R0,R0,R1
   \       0xBE   0xD02A             BEQ.N    ??getNvm3TokenAddress_28
   \       0xC0   0x1E40             SUBS     R0,R0,#+1
   \       0xC2   0xD036             BEQ.N    ??getNvm3TokenAddress_29
   \       0xC4   0x1E40             SUBS     R0,R0,#+1
   \       0xC6   0xD036             BEQ.N    ??getNvm3TokenAddress_30
   \       0xC8   0x1E40             SUBS     R0,R0,#+1
   \       0xCA   0xD036             BEQ.N    ??getNvm3TokenAddress_31
   \       0xCC   0x1E40             SUBS     R0,R0,#+1
   \       0xCE   0xD036             BEQ.N    ??getNvm3TokenAddress_32
   \       0xD0   0x1E40             SUBS     R0,R0,#+1
   \       0xD2   0xD036             BEQ.N    ??getNvm3TokenAddress_33
   \       0xD4   0x1E40             SUBS     R0,R0,#+1
   \       0xD6   0xD036             BEQ.N    ??getNvm3TokenAddress_34
   \       0xD8   0x3839             SUBS     R0,R0,#+57
   \       0xDA   0xD024             BEQ.N    ??getNvm3TokenAddress_35
   \       0xDC   0x38BE             SUBS     R0,R0,#+190
   \       0xDE   0xD040             BEQ.N    ??getNvm3TokenAddress_36
   \       0xE0   0x3838             SUBS     R0,R0,#+56
   \       0xE2   0xD050             BEQ.N    ??getNvm3TokenAddress_37
   \       0xE4   0x380B             SUBS     R0,R0,#+11
   \       0xE6   0xD01A             BEQ.N    ??getNvm3TokenAddress_38
   \       0xE8   0xF240 0x2112      MOVW     R1,#+530
   \       0xEC   0x1A40             SUBS     R0,R0,R1
   \       0xEE   0xD014             BEQ.N    ??getNvm3TokenAddress_39
   \       0xF0   0x388C             SUBS     R0,R0,#+140
   \       0xF2   0xD044             BEQ.N    ??getNvm3TokenAddress_40
   \       0xF4   0x1E40             SUBS     R0,R0,#+1
   \       0xF6   0xD044             BEQ.N    ??getNvm3TokenAddress_41
   \       0xF8   0x3861             SUBS     R0,R0,#+97
   \       0xFA   0xD012             BEQ.N    ??getNvm3TokenAddress_42
   \       0xFC   0xF240 0x6116      MOVW     R1,#+1558
   \      0x100   0x1A40             SUBS     R0,R0,R1
   \      0x102   0xD012             BEQ.N    ??getNvm3TokenAddress_43
   \      0x104   0xF240 0x21EB      MOVW     R1,#+747
   \      0x108   0x1A40             SUBS     R0,R0,R1
   \      0x10A   0xD010             BEQ.N    ??getNvm3TokenAddress_44
   \      0x10C   0xF241 0x019D      MOVW     R1,#+4253
   \      0x110   0x1A40             SUBS     R0,R0,R1
   \      0x112   0xD15A             BNE.N    ??getNvm3TokenAddress_45
    646              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    647            case NVM3KEY_##name:                                                   \
    648              tokenAddress = TOKEN_##name;                                         \
    649              break;
    650              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    651              //cstat !MISRAC2012-Dir-4.10
    652              #include "stack/config/token-stack.h"
   \      0x114   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_28: (+1)
   \      0x116   0x2001             MOVS     R0,#+1
   \      0x118   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_39: (+1)
   \      0x11A   0x2002             MOVS     R0,#+2
   \      0x11C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_38: (+1)
   \      0x11E   0x2003             MOVS     R0,#+3
   \      0x120   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_42: (+1)
   \      0x122   0x2004             MOVS     R0,#+4
   \      0x124   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_35: (+1)
   \      0x126   0x2005             MOVS     R0,#+5
   \      0x128   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_43: (+1)
   \      0x12A   0x2006             MOVS     R0,#+6
   \      0x12C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_44: (+1)
   \      0x12E   0x2007             MOVS     R0,#+7
   \      0x130   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_29: (+1)
   \      0x132   0x2008             MOVS     R0,#+8
   \      0x134   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_30: (+1)
   \      0x136   0x2009             MOVS     R0,#+9
   \      0x138   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_31: (+1)
   \      0x13A   0x200A             MOVS     R0,#+10
   \      0x13C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_32: (+1)
   \      0x13E   0x200B             MOVS     R0,#+11
   \      0x140   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_33: (+1)
   \      0x142   0x200C             MOVS     R0,#+12
   \      0x144   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_34: (+1)
   \      0x146   0x200D             MOVS     R0,#+13
   \      0x148   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_0: (+1)
   \      0x14A   0x200E             MOVS     R0,#+14
   \      0x14C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_1: (+1)
   \      0x14E   0x200F             MOVS     R0,#+15
   \      0x150   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_2: (+1)
   \      0x152   0x2010             MOVS     R0,#+16
   \      0x154   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_3: (+1)
   \      0x156   0x2011             MOVS     R0,#+17
   \      0x158   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_4: (+1)
   \      0x15A   0x2012             MOVS     R0,#+18
   \      0x15C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_5: (+1)
   \      0x15E   0x2013             MOVS     R0,#+19
   \      0x160   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_36: (+1)
   \      0x162   0x2014             MOVS     R0,#+20
   \      0x164   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_6: (+1)
   \      0x166   0x2015             MOVS     R0,#+21
   \      0x168   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_10: (+1)
   \      0x16A   0x2016             MOVS     R0,#+22
   \      0x16C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_11: (+1)
   \      0x16E   0x2017             MOVS     R0,#+23
   \      0x170   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_12: (+1)
   \      0x172   0x2018             MOVS     R0,#+24
   \      0x174   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_13: (+1)
   \      0x176   0x2019             MOVS     R0,#+25
   \      0x178   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_14: (+1)
   \      0x17A   0x201A             MOVS     R0,#+26
   \      0x17C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_40: (+1)
   \      0x17E   0x201B             MOVS     R0,#+27
   \      0x180   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_41: (+1)
   \      0x182   0x201C             MOVS     R0,#+28
   \      0x184   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_37: (+1)
   \      0x186   0x201D             MOVS     R0,#+29
   \      0x188   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_7: (+1)
   \      0x18A   0x201E             MOVS     R0,#+30
   \      0x18C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_8: (+1)
   \      0x18E   0x201F             MOVS     R0,#+31
   \      0x190   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_9: (+1)
   \      0x192   0x2020             MOVS     R0,#+32
   \      0x194   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_18: (+1)
   \      0x196   0x2021             MOVS     R0,#+33
   \      0x198   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_19: (+1)
   \      0x19A   0x2022             MOVS     R0,#+34
   \      0x19C   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_20: (+1)
   \      0x19E   0x2023             MOVS     R0,#+35
   \      0x1A0   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_21: (+1)
   \      0x1A2   0x2024             MOVS     R0,#+36
   \      0x1A4   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_22: (+1)
   \      0x1A6   0x2025             MOVS     R0,#+37
   \      0x1A8   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_23: (+1)
   \      0x1AA   0x2026             MOVS     R0,#+38
   \      0x1AC   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_24: (+1)
   \      0x1AE   0x2027             MOVS     R0,#+39
   \      0x1B0   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_25: (+1)
   \      0x1B2   0x2028             MOVS     R0,#+40
   \      0x1B4   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_26: (+1)
   \      0x1B6   0x2029             MOVS     R0,#+41
   \      0x1B8   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_27: (+1)
   \      0x1BA   0x202A             MOVS     R0,#+42
   \      0x1BC   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_17: (+1)
   \      0x1BE   0x202B             MOVS     R0,#+43
   \      0x1C0   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_16: (+1)
   \      0x1C2   0x202C             MOVS     R0,#+44
   \      0x1C4   0x4770             BX       LR
   \                     ??getNvm3TokenAddress_15: (+1)
   \      0x1C6   0x202D             MOVS     R0,#+45
   \      0x1C8   0x4770             BX       LR
    653              #undef TOKEN_DEF
    654              default:
    655                tokenAddress = INVALID_EE_ADDRESS;
   \                     ??getNvm3TokenAddress_45: (+1)
   \      0x1CA                      REQUIRE ?Subroutine1
   \      0x1CA                      ;; // Fall through to label ?Subroutine1
    656                break;
    657            }
    658            #undef DEFINETOKENS
    659            return tokenAddress;
    660          }
    661          

   \                                 In section .text, align 2, keep-with-next
    662          uint8_t getNvm3TokenSize(uint32_t nvm3Key)
    663          {
    664            uint8_t tokenSize;
    665          
    666            #define DEFINETOKENS
    667            switch (nvm3Key) {
   \                     getNvm3TokenSize: (+1)
   \        0x0   0xF44F 0x3180      MOV      R1,#+65536
   \        0x4   0x1A40             SUBS     R0,R0,R1
   \        0x6   0xD05E             BEQ.N    ??getNvm3TokenSize_0
   \        0x8   0x3880             SUBS     R0,R0,#+128
   \        0xA   0xD06C             BEQ.N    ??getNvm3TokenSize_1
   \        0xC   0x3880             SUBS     R0,R0,#+128
   \        0xE   0xD05A             BEQ.N    ??getNvm3TokenSize_0
   \       0x10   0x3880             SUBS     R0,R0,#+128
   \       0x12   0xD05A             BEQ.N    ??getNvm3TokenSize_2
   \       0x14   0x3880             SUBS     R0,R0,#+128
   \       0x16   0xD05A             BEQ.N    ??getNvm3TokenSize_3
   \       0x18   0x3880             SUBS     R0,R0,#+128
   \       0x1A   0xD05A             BEQ.N    ??getNvm3TokenSize_4
   \       0x1C   0x3880             SUBS     R0,R0,#+128
   \       0x1E   0xD06E             BEQ.N    ??getNvm3TokenSize_5
   \       0x20   0x3880             SUBS     R0,R0,#+128
   \       0x22   0xD066             BEQ.N    ??getNvm3TokenSize_6
   \       0x24   0x3880             SUBS     R0,R0,#+128
   \       0x26   0xD066             BEQ.N    ??getNvm3TokenSize_7
   \       0x28   0x3880             SUBS     R0,R0,#+128
   \       0x2A   0xD066             BEQ.N    ??getNvm3TokenSize_8
   \       0x2C   0x3880             SUBS     R0,R0,#+128
   \       0x2E   0xD052             BEQ.N    ??getNvm3TokenSize_9
   \       0x30   0x3880             SUBS     R0,R0,#+128
   \       0x32   0xD052             BEQ.N    ??getNvm3TokenSize_10
   \       0x34   0x3880             SUBS     R0,R0,#+128
   \       0x36   0xD052             BEQ.N    ??getNvm3TokenSize_11
   \       0x38   0x3880             SUBS     R0,R0,#+128
   \       0x3A   0xD052             BEQ.N    ??getNvm3TokenSize_12
   \       0x3C   0x3880             SUBS     R0,R0,#+128
   \       0x3E   0xD060             BEQ.N    ??getNvm3TokenSize_13
   \       0x40   0xF44F 0x5164      MOV      R1,#+14592
   \       0x44   0x1A40             SUBS     R0,R0,R1
   \       0x46   0xD060             BEQ.N    ??getNvm3TokenSize_14
   \       0x48   0x3880             SUBS     R0,R0,#+128
   \       0x4A   0xD05C             BEQ.N    ??getNvm3TokenSize_15
   \       0x4C   0xF244 0x61A3      MOVW     R1,#+18083
   \       0x50   0x1A40             SUBS     R0,R0,R1
   \       0x52   0xD056             BEQ.N    ??getNvm3TokenSize_13
   \       0x54   0xF642 0x01DD      MOVW     R1,#+10461
   \       0x58   0x1A40             SUBS     R0,R0,R1
   \       0x5A   0x2807             CMP      R0,#+7
   \       0x5C   0xD951             BLS.N    ??getNvm3TokenSize_13
   \       0x5E   0x3808             SUBS     R0,R0,#+8
   \       0x60   0x2801             CMP      R0,#+1
   \       0x62   0xD94C             BLS.N    ??getNvm3TokenSize_5
   \       0x64   0xF243 0x111B      MOVW     R1,#+12571
   \       0x68   0x1A40             SUBS     R0,R0,R1
   \       0x6A   0xD046             BEQ.N    ??getNvm3TokenSize_8
   \       0x6C   0x1E40             SUBS     R0,R0,#+1
   \       0x6E   0xD02C             BEQ.N    ??getNvm3TokenSize_2
   \       0x70   0x1E40             SUBS     R0,R0,#+1
   \       0x72   0xD02C             BEQ.N    ??getNvm3TokenSize_3
   \       0x74   0x1E40             SUBS     R0,R0,#+1
   \       0x76   0xD02C             BEQ.N    ??getNvm3TokenSize_4
   \       0x78   0x1E40             SUBS     R0,R0,#+1
   \       0x7A   0xD040             BEQ.N    ??getNvm3TokenSize_5
   \       0x7C   0x1E40             SUBS     R0,R0,#+1
   \       0x7E   0xD020             BEQ.N    ??getNvm3TokenSize_16
   \       0x80   0x1E40             SUBS     R0,R0,#+1
   \       0x82   0xD03E             BEQ.N    ??getNvm3TokenSize_13
   \       0x84   0x3839             SUBS     R0,R0,#+57
   \       0x86   0xD03A             BEQ.N    ??getNvm3TokenSize_5
   \       0x88   0x38BE             SUBS     R0,R0,#+190
   \       0x8A   0xD036             BEQ.N    ??getNvm3TokenSize_8
   \       0x8C   0x3838             SUBS     R0,R0,#+56
   \       0x8E   0xD02E             BEQ.N    ??getNvm3TokenSize_17
   \       0x90   0x380B             SUBS     R0,R0,#+11
   \       0x92   0xD032             BEQ.N    ??getNvm3TokenSize_8
   \       0x94   0xF240 0x2112      MOVW     R1,#+530
   \       0x98   0x1A40             SUBS     R0,R0,R1
   \       0x9A   0xD014             BEQ.N    ??getNvm3TokenSize_0
   \       0x9C   0x388C             SUBS     R0,R0,#+140
   \       0x9E   0xD022             BEQ.N    ??getNvm3TokenSize_1
   \       0xA0   0x1E40             SUBS     R0,R0,#+1
   \       0xA2   0xD022             BEQ.N    ??getNvm3TokenSize_18
   \       0xA4   0x3861             SUBS     R0,R0,#+97
   \       0xA6   0xD028             BEQ.N    ??getNvm3TokenSize_8
   \       0xA8   0xF240 0x6116      MOVW     R1,#+1558
   \       0xAC   0x1A40             SUBS     R0,R0,R1
   \       0xAE   0xD00A             BEQ.N    ??getNvm3TokenSize_0
   \       0xB0   0xF240 0x21EB      MOVW     R1,#+747
   \       0xB4   0x1A40             SUBS     R0,R0,R1
   \       0xB6   0xD016             BEQ.N    ??getNvm3TokenSize_1
   \       0xB8   0xF241 0x019D      MOVW     R1,#+4253
   \       0xBC   0x1A40             SUBS     R0,R0,R1
   \       0xBE   0xD01E             BEQ.N    ??getNvm3TokenSize_5
   \       0xC0   0xE025             B.N      ??getNvm3TokenSize_19
    668              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    669            case NVM3KEY_##name:                                                   \
    670              tokenSize = sizeof(type);                                            \
    671              break;
    672              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    673              //cstat !MISRAC2012-Dir-4.10
    674              #include "stack/config/token-stack.h"
   \                     ??getNvm3TokenSize_16: (+1)
   \       0xC2   0x2018             MOVS     R0,#+24
   \       0xC4   0x4770             BX       LR
   \                     ??getNvm3TokenSize_0: (+1)
   \       0xC6   0x2011             MOVS     R0,#+17
   \       0xC8   0x4770             BX       LR
   \                     ??getNvm3TokenSize_2: (+1)
   \       0xCA   0x201A             MOVS     R0,#+26
   \       0xCC   0x4770             BX       LR
   \                     ??getNvm3TokenSize_3: (+1)
   \       0xCE   0x2008             MOVS     R0,#+8
   \       0xD0   0x4770             BX       LR
   \                     ??getNvm3TokenSize_4: (+1)
   \       0xD2   0x200A             MOVS     R0,#+10
   \       0xD4   0x4770             BX       LR
   \                     ??getNvm3TokenSize_9: (+1)
   \       0xD6   0x200D             MOVS     R0,#+13
   \       0xD8   0x4770             BX       LR
   \                     ??getNvm3TokenSize_10: (+1)
   \       0xDA   0x200B             MOVS     R0,#+11
   \       0xDC   0x4770             BX       LR
   \                     ??getNvm3TokenSize_11: (+1)
   \       0xDE   0x2019             MOVS     R0,#+25
   \       0xE0   0x4770             BX       LR
   \                     ??getNvm3TokenSize_12: (+1)
   \       0xE2   0x205C             MOVS     R0,#+92
   \       0xE4   0x4770             BX       LR
   \                     ??getNvm3TokenSize_1: (+1)
   \       0xE6   0x2010             MOVS     R0,#+16
   \       0xE8   0x4770             BX       LR
   \                     ??getNvm3TokenSize_18: (+1)
   \       0xEA   0x2028             MOVS     R0,#+40
   \       0xEC   0x4770             BX       LR
   \                     ??getNvm3TokenSize_17: (+1)
   \       0xEE   0x2012             MOVS     R0,#+18
   \       0xF0   0x4770             BX       LR
   \                     ??getNvm3TokenSize_6: (+1)
   \       0xF2   0x2034             MOVS     R0,#+52
   \       0xF4   0x4770             BX       LR
   \                     ??getNvm3TokenSize_7: (+1)
   \       0xF6   0x2030             MOVS     R0,#+48
   \       0xF8   0x4770             BX       LR
   \                     ??getNvm3TokenSize_8: (+1)
   \       0xFA   0x2004             MOVS     R0,#+4
   \       0xFC   0x4770             BX       LR
   \                     ??getNvm3TokenSize_5: (+1)
   \       0xFE   0x2002             MOVS     R0,#+2
   \      0x100   0x4770             BX       LR
   \                     ??getNvm3TokenSize_13: (+1)
   \      0x102   0x2001             MOVS     R0,#+1
   \      0x104   0x4770             BX       LR
   \                     ??getNvm3TokenSize_15: (+1)
   \      0x106   0x2026             MOVS     R0,#+38
   \      0x108   0x4770             BX       LR
   \                     ??getNvm3TokenSize_14: (+1)
   \      0x10A   0x2014             MOVS     R0,#+20
   \      0x10C   0x4770             BX       LR
    675              #undef TOKEN_DEF
    676              default:
    677                tokenSize = 0U;
   \                     ??getNvm3TokenSize_19: (+1)
   \      0x10E   0x2000             MOVS     R0,#+0
    678                break;
    679            }
    680            #undef DEFINETOKENS
    681            return tokenSize;
   \      0x110   0x4770             BX       LR               ;; return
    682          }
    683          

   \                                 In section .text, align 2, keep-with-next
    684          uint8_t getNvm3TokenArraySize(uint32_t nvm3Key)
    685          {
    686            uint8_t tokenArraySize;
    687          
    688            #define DEFINETOKENS
    689            switch (nvm3Key) {
   \                     getNvm3TokenArraySize: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable6_49  ;; 0x10380
   \        0x2   0x1A40             SUBS     R0,R0,R1
   \        0x4   0xD03B             BEQ.N    ??getNvm3TokenArraySize_0
   \        0x6   0xF44F 0x71C0      MOV      R1,#+384
   \        0xA   0x1A40             SUBS     R0,R0,R1
   \        0xC   0xD03B             BEQ.N    ??getNvm3TokenArraySize_1
   \        0xE   0x3880             SUBS     R0,R0,#+128
   \       0x10   0xD033             BEQ.N    ??getNvm3TokenArraySize_2
   \       0x12   0x1A40             SUBS     R0,R0,R1
   \       0x14   0xD031             BEQ.N    ??getNvm3TokenArraySize_2
   \       0x16   0xF44F 0x5164      MOV      R1,#+14592
   \       0x1A   0x1A40             SUBS     R0,R0,R1
   \       0x1C   0xD035             BEQ.N    ??getNvm3TokenArraySize_3
   \       0x1E   0x3880             SUBS     R0,R0,#+128
   \       0x20   0xD031             BEQ.N    ??getNvm3TokenArraySize_1
   \       0x22   0xF244 0x61A3      MOVW     R1,#+18083
   \       0x26   0x1A40             SUBS     R0,R0,R1
   \       0x28   0xD02B             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x2A   0xF642 0x01DD      MOVW     R1,#+10461
   \       0x2E   0x1A40             SUBS     R0,R0,R1
   \       0x30   0x2809             CMP      R0,#+9
   \       0x32   0xBF82             ITTT     HI 
   \       0x34   0xF243 0x1123      MOVWHI   R1,#+12579
   \       0x38   0x1A40             SUBHI    R0,R0,R1
   \       0x3A   0x2806             CMPHI    R0,#+6
   \       0x3C   0xD921             BLS.N    ??getNvm3TokenArraySize_4
   \       0x3E   0x383F             SUBS     R0,R0,#+63
   \       0x40   0xD01F             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x42   0x38BE             SUBS     R0,R0,#+190
   \       0x44   0xD01D             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x46   0x3838             SUBS     R0,R0,#+56
   \       0x48   0xD01B             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x4A   0x380B             SUBS     R0,R0,#+11
   \       0x4C   0xD019             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x4E   0xF240 0x2112      MOVW     R1,#+530
   \       0x52   0x1A40             SUBS     R0,R0,R1
   \       0x54   0xD015             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x56   0x388C             SUBS     R0,R0,#+140
   \       0x58   0x2801             CMP      R0,#+1
   \       0x5A   0xD912             BLS.N    ??getNvm3TokenArraySize_4
   \       0x5C   0x3862             SUBS     R0,R0,#+98
   \       0x5E   0xD010             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x60   0xF240 0x6116      MOVW     R1,#+1558
   \       0x64   0x1A40             SUBS     R0,R0,R1
   \       0x66   0xD00C             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x68   0xF240 0x21EB      MOVW     R1,#+747
   \       0x6C   0x1A40             SUBS     R0,R0,R1
   \       0x6E   0xD008             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x70   0xF241 0x019D      MOVW     R1,#+4253
   \       0x74   0x1A40             SUBS     R0,R0,R1
   \       0x76   0xD004             BEQ.N    ??getNvm3TokenArraySize_4
   \       0x78   0xE009             B.N      ??getNvm3TokenArraySize_5
    690              #define TOKEN_DEF(name, creator, iscnt, isidx, type, arraysize, ...) \
    691            case NVM3KEY_##name:                                                   \
    692              tokenArraySize = arraysize;                                          \
    693              break;
    694              // Multiple inclusion of unguarded token-related header files is by design; suppress violation.
    695              //cstat !MISRAC2012-Dir-4.10
    696              #include "stack/config/token-stack.h"
   \                     ??getNvm3TokenArraySize_2: (+1)
   \       0x7A   0x2006             MOVS     R0,#+6
   \       0x7C   0x4770             BX       LR
   \                     ??getNvm3TokenArraySize_0: (+1)
   \       0x7E   0x2005             MOVS     R0,#+5
   \       0x80   0x4770             BX       LR
   \                     ??getNvm3TokenArraySize_4: (+1)
   \       0x82   0x2001             MOVS     R0,#+1
   \       0x84   0x4770             BX       LR
   \                     ??getNvm3TokenArraySize_1: (+1)
   \       0x86   0x2003             MOVS     R0,#+3
   \       0x88   0x4770             BX       LR
   \                     ??getNvm3TokenArraySize_3: (+1)
   \       0x8A   0x200E             MOVS     R0,#+14
   \       0x8C   0x4770             BX       LR
    697              #undef TOKEN_DEF
    698              default:
    699                tokenArraySize = 0U;
   \                     ??getNvm3TokenArraySize_5: (+1)
   \       0x8E   0x2000             MOVS     R0,#+0
    700                break;
    701            }
    702            #undef DEFINETOKENS
    703            return tokenArraySize;
   \       0x90   0x4770             BX       LR               ;; return
    704          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x....'....        DC32     nvm3_defaultHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x....'....        DC32     nvm3_defaultInit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \        0x0   0x....'....        DC32     tokenSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \        0x0   0xF000'E00B        DC32     0xf000e00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \        0x0   0x....'....        DC32     tokenNvm3Keys

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \        0x0   0x....'....        DC32     tokenIsCnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \        0x0   0x....'....        DC32     tokenDefaults

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \        0x0   0x....'....        DC32     tokensActive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \        0x0   0x....'....        DC32     tokenArraySize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \        0x0   0xF000'E001        DC32     0xf000e001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \        0x0   0x....'....        DC32     tokenIsIdx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \        0x0   0x....'....        DC32     lockBitsInMainFlashSpace

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \        0x0   0x....'....        DC32     TOKEN_MFG_EMBER_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CUSTOM_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CUSTOM_VERSION

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \        0x0   0x....'....        DC32     TOKEN_MFG_STRING

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \        0x0   0x....'....        DC32     TOKEN_MFG_BOARD_NAME

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \        0x0   0x....'....        DC32     TOKEN_MFG_MANUF_ID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \        0x0   0x....'....        DC32     TOKEN_MFG_PHY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ASH_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SYNTH_FREQ_OFFSET

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CCA_THRESHOLD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \        0x0   0x....'....        DC32     TOKEN_MFG_EZSP_STORAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \        0x0   0x....'....        DC32     TOKEN_MFG_XO_TUNE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZWAVE_COUNTRY_FREQ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZWAVE_HW_VERSION

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZWAVE_PSEUDO_RANDOM_NUMBER

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SERIAL_NUMBER

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LFXO_TUNE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CTUNE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LOCKBITS_PLW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_30:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LOCKBITS_CLW0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_31:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LOCKBITS_MLW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_32:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LOCKBITS_ULW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_33:
   \        0x0   0x....'....        DC32     TOKEN_MFG_LOCKBITS_DLW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_34:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CBKE_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_35:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SECURITY_CONFIG

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_36:
   \        0x0   0x....'....        DC32     TOKEN_MFG_INSTALLATION_CODE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_37:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SECURE_BOOTLOADER_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_38:
   \        0x0   0x....'....        DC32     TOKEN_MFG_CBKE_283K1_DATA

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_39:
   \        0x0   0x....'....        DC32     TOKEN_MFG_BOOTLOAD_AES_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_40:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SIGNED_BOOTLOADER_KEY_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_41:
   \        0x0   0x....'....        DC32     TOKEN_MFG_SIGNED_BOOTLOADER_KEY_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_42:
   \        0x0   0x....'....        DC32     TOKEN_MFG_THREAD_JOIN_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_43:
   \        0x0   0x....'....        DC32     TOKEN_MFG_NVM3_CRYPTO_KEY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_44:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZW_PRK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_45:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZW_PUK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_46:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZW_QR_CODE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_47:
   \        0x0   0x....'....        DC32     TOKEN_MFG_ZW_INITIALIZED

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_48:
   \        0x0   0x....'....        DC32     TOKEN_MFG_EUI_64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_49:
   \        0x0   0x0001'0380        DC32     0x10380

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x74 0x6F          DC8 "token.c"
   \              0x6B 0x65    
   \              0x6E 0x2E    
   \              0x63 0x00    
    705          #endif //defined (USE_NVM3)
    706          
    707          #endif //EMBER_TEST

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   getNvm3TokenAddress
       0   getNvm3TokenArraySize
       0   getNvm3TokenSize
       0   getTokenAddress
       0   getTokenArraySize
       0   getTokenSize
      16   halInternalGetIdxTokenPtrOrData
        16   -> halInternalAssertFailed
         0   -> halInternalGetTokenData
      24   halInternalGetTokenData
         0   -> halInternalGetMfgTokenData
         0   -> halNvm3Callback
        24   -> nvm3_readCounter
        24   -> nvm3_readData
       8   halInternalIncrementCounterToken
         0   -> halNvm3Callback
         8   -> nvm3_incrementCounter
      24   halInternalSetTokenData
         0   -> halInternalSetMfgTokenData
         0   -> halNvm3Callback
        24   -> nvm3_writeCounter
        24   -> nvm3_writeData
      64   halStackInitTokens
        64   -- Indirect call
        64   -> halInternalAssertFailed
        64   -> halSimEeToNvm3Upgrade
        64   -> nvm3_deleteObject
        64   -> nvm3_getObjectInfo
        64   -> nvm3_open
        64   -> nvm3_writeCounter
        64   -> nvm3_writeData


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_30
       4  ??DataTable6_31
       4  ??DataTable6_32
       4  ??DataTable6_33
       4  ??DataTable6_34
       4  ??DataTable6_35
       4  ??DataTable6_36
       4  ??DataTable6_37
       4  ??DataTable6_38
       4  ??DataTable6_39
       4  ??DataTable6_4
       4  ??DataTable6_40
       4  ??DataTable6_41
       4  ??DataTable6_42
       4  ??DataTable6_43
       4  ??DataTable6_44
       4  ??DataTable6_45
       4  ??DataTable6_46
       4  ??DataTable6_47
       4  ??DataTable6_48
       4  ??DataTable6_49
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       8  ?Subroutine0
       6  ?Subroutine1
      18  ?Subroutine2
       8  ?_0
     458  getNvm3TokenAddress
     146  getNvm3TokenArraySize
     274  getNvm3TokenSize
     480  getTokenAddress
     208  getTokenArraySize
     258  getTokenSize
      96  halInternalGetIdxTokenPtrOrData
      86  halInternalGetTokenData
      44  halInternalIncrementCounterToken
      86  halInternalSetTokenData
     426  halStackInitTokens
       1  tokensActive

 
     1 byte  in section .bss
     8 bytes in section .rodata
 2 802 bytes in section .text
 
 2 802 bytes of CODE  memory
     8 bytes of CONST memory
     1 byte  of DATA  memory

Errors: none
Warnings: none
