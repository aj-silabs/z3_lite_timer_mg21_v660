###############################################################################
#
# IAR ANSI C/C++ Compiler V8.32.2.178/W32 for ARM         14/Jun/2019  13:18:13
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\attribute-table.c
#    Command line =  
#        -f C:\Users\alji\AppData\Local\Temp\EWBA53.tmp
#        (C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\attribute-table.c
#        -D LOCAL_STORAGE_BTL -D CORTEXM3 -D CORTEXM3_EFR32 -D
#        CORTEXM3_EFR32_MICRO -D CORTEXM3_EFM32_MICRO -D
#        EFR32_SERIES2_CONFIG1_MICRO -D EFR32MG21 -D EFR32MG21A010F1024IM32 -D
#        "ATTRIBUTE_STORAGE_CONFIGURATION=\"z3_lite_timer_mg21_v660_endpoint_config.h\""
#        -D "CONFIGURATION_HEADER=\"app/framework/util/config.h\"" -D
#        "GENERATED_TOKEN_HEADER=\"z3_lite_timer_mg21_v660_tokens.h\"" -D
#        "PLATFORM_HEADER=\"platform/base/hal/micro/cortexm3/compiler/iar.h\""
#        -D "ZA_GENERATED_HEADER=\"z3_lite_timer_mg21_v660.h\"" -D
#        "__SOURCEFILE__=\"attribute-table.c\"" -D PSSTORE_SIZE=0 -D
#        LONGTOKEN_SIZE=0 -D LOCKBITS_IN_MAINFLASH_SIZE=8192 -D HAL_CONFIG=1 -D
#        EMBER_AF_USE_HWCONF -D LED_BLINK_PERIOD_MS=1000 -D NO_LED=1 -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        "EMBER_AF_API_DEBUG_PRINT=\"app/framework/util/print.h\"" -D
#        "EMBER_AF_API_AF_HEADER=\"app/framework/include/af.h\"" -D
#        "EMBER_AF_API_AF_SECURITY_HEADER=\"app/framework/security/af-security.h\""
#        -D EMBER_STACK_ZIGBEE -D
#        "MBEDTLS_CONFIG_FILE=\"mbedtls-config-generated.h\"" -D USE_NVM3 -D
#        NVM3_DEFAULT_NVM_SIZE=NVM3_FLASH_PAGES*FLASH_PAGE_SIZE -D
#        EMLIB_USER_CONFIG -D HAL_BULBPWM_ENABLE=1 -D
#        HAL_BULBPWM_FREQUENCY=1000 -D
#        "APPLICATION_TOKEN_HEADER=\"znet-token.h\"" -D
#        "APPLICATION_MFG_TOKEN_HEADER=\"znet-mfg-token.h\"" -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_FILE=\"configs/config-device-acceleration.h\""
#        -D
#        "MBEDTLS_DEVICE_ACCELERATION_CONFIG_APP_FILE=\"config-device-acceleration-app.h\""
#        -D NVM3_FLASH_PAGES=4 -D NVM3_DEFAULT_CACHE_SIZE=200 -D
#        NVM3_MAX_OBJECT_SIZE=254 -D NVM3_DEFAULT_REPACK_HEADROOM=0 -D
#        PHY_RAIL=1 -lC
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj
#        --no_unroll --no_clustering --debug --endian=little
#        --cpu=Cortex-M33.no_dsp --cmse --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\..\stack\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\..\util\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\protocol\zigbee\app\framework\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\micro\cortexm3\efm32\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\CMSIS\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\Device\SiliconLabs\efr32mg21\Include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\common\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\dmadrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\gpiointerrupt\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\rtcdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\sleep\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\spidrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\tempdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\uartdrv\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emdrv\ustimer\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\emlib\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\middleware\glib\glib\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\plugin\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\common\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\base\hal\..\..\radio\rail_lib\chip\efr32\rf\rfprotocol\ieee802154\cortex\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\halconfig\inc\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\module\config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\halconfig\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\hardware\kit\common\bsp\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\hal-config\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\bootloader\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\emdrv\nvm3\inc\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\common\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\hal\efr32\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\plugin\coexistence\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ble\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\platform\radio\rail_lib\protocol\zwave\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\plugin\plugin-common\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\include\mbedtls\
#        -I
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\..\..\v2.6\util\third_party\mbedtls\sl_crypto\include\
#        -Ohz --use_c++_inline)
#    Locale       =  C
#    List file    =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\lst\attribute-table.lst
#    Object file  =  
#        C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.5\z3_lite_timer_mg21_v660\build\obj\attribute-table.o
#
###############################################################################

C:\SiliconLabs\SimplicityStudio\v4\developer\sdks\gecko_sdk_suite\v2.6\protocol\zigbee\app\framework\util\attribute-table.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief This file contains the code to manipulate the Smart Energy attribute
      4           * table.  This handles external calls to read/write the table, as
      5           * well as internal ones.
      6           *******************************************************************************
      7           * # License
      8           * <b>Copyright 2018 Silicon Laboratories Inc. www.silabs.com</b>
      9           *******************************************************************************
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc. Your use of this
     12           * software is governed by the terms of Silicon Labs Master Software License
     13           * Agreement (MSLA) available at
     14           * www.silabs.com/about-us/legal/master-software-license-agreement. This
     15           * software is distributed to you in Source Code format and is governed by the
     16           * sections of the MSLA applicable to Source Code.
     17           *
     18           ******************************************************************************/
     19          
     20          // this file contains all the common includes for clusters in the zcl-util
     21          #include "common.h"
     22          
     23          #include "attribute-storage.h"
     24          
     25          // for pulling in defines dealing with EITHER server or client
     26          #include "af-main.h"
     27          
     28          #include "enums.h"
     29          
     30          //------------------------------------------------------------------------------
     31          
     32          //------------------------------------------------------------------------------
     33          // External Declarations
     34          
     35          //------------------------------------------------------------------------------
     36          // Forward Declarations
     37          
     38          //------------------------------------------------------------------------------
     39          // Globals
     40          

   \                                 In section .text, align 2, keep-with-next
     41          EmberAfStatus emberAfWriteAttributeExternal(uint8_t endpoint,
     42                                                      EmberAfClusterId cluster,
     43                                                      EmberAfAttributeId attributeID,
     44                                                      uint8_t mask,
     45                                                      uint16_t manufacturerCode,
     46                                                      uint8_t* dataPtr,
     47                                                      EmberAfAttributeType dataType)
     48          {
   \                     emberAfWriteAttributeExternal: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x9D10             LDR      R5,[SP, #+64]
   \        0x8   0x9F0F             LDR      R7,[SP, #+60]
   \        0xA   0x9C0E             LDR      R4,[SP, #+56]
     49            EmberAfAttributeWritePermission extWritePermission
     50              = emberAfAllowNetworkWriteAttributeCallback(endpoint,
     51                                                          cluster,
     52                                                          attributeID,
     53                                                          mask,
     54                                                          manufacturerCode,
     55                                                          dataPtr,
     56                                                          dataType);
   \        0xC   0x9502             STR      R5,[SP, #+8]
   \        0xE   0x9701             STR      R7,[SP, #+4]
   \       0x10   0x4606             MOV      R6,R0
   \       0x12   0x468A             MOV      R10,R1
   \       0x14   0x4690             MOV      R8,R2
   \       0x16   0x4699             MOV      R9,R3
   \       0x18   0x9400             STR      R4,[SP, #+0]
   \       0x1A   0x....'....        BL       emberAfAllowNetworkWriteAttributeCallback
     57            switch (extWritePermission) {
   \       0x1E   0x0001             MOVS     R1,R0
   \       0x20   0xD003             BEQ.N    ??emberAfWriteAttributeExternal_0
   \       0x22   0x2802             CMP      R0,#+2
   \       0x24   0xD003             BEQ.N    ??emberAfWriteAttributeExternal_1
   \       0x26   0xD302             BCC.N    ??emberAfWriteAttributeExternal_1
   \       0x28   0xE010             B.N      ??emberAfWriteAttributeExternal_2
     58              case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_DENY_WRITE:
     59                return EMBER_ZCL_STATUS_FAILURE;
   \                     ??emberAfWriteAttributeExternal_0: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0xE00E             B.N      ??emberAfWriteAttributeExternal_2
     60              case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_NORMAL:
     61              case EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY:
     62                return emAfWriteAttribute(endpoint,
     63                                          cluster,
     64                                          attributeID,
     65                                          mask,
     66                                          manufacturerCode,
     67                                          dataPtr,
     68                                          dataType,
     69                                          (extWritePermission
     70                                           == EMBER_ZCL_ATTRIBUTE_WRITE_PERMISSION_ALLOW_WRITE_OF_READ_ONLY),
     71                                          false);
   \                     ??emberAfWriteAttributeExternal_1: (+1)
   \       0x2E   0xBF0C             ITE      EQ 
   \       0x30   0x2001             MOVEQ    R0,#+1
   \       0x32   0x2000             MOVNE    R0,#+0
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x9104             STR      R1,[SP, #+16]
   \       0x38   0x9003             STR      R0,[SP, #+12]
   \       0x3A   0x9502             STR      R5,[SP, #+8]
   \       0x3C   0x9701             STR      R7,[SP, #+4]
   \       0x3E   0x9400             STR      R4,[SP, #+0]
   \       0x40   0x464B             MOV      R3,R9
   \       0x42   0x4642             MOV      R2,R8
   \       0x44   0x4651             MOV      R1,R10
   \       0x46   0x4630             MOV      R0,R6
   \       0x48   0x....'....        BL       emAfWriteAttribute
     72              default:
     73                return (EmberAfStatus)extWritePermission;
   \                     ??emberAfWriteAttributeExternal_2: (+1)
   \       0x4C   0xB006             ADD      SP,SP,#+24
   \       0x4E   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
     74            }
     75          }
     76          
     77          //@deprecated use emberAfWriteServerAttribute or emberAfWriteClientAttribute

   \                                 In section .text, align 2, keep-with-next
     78          EmberAfStatus emberAfWriteAttribute(uint8_t endpoint,
     79                                              EmberAfClusterId cluster,
     80                                              EmberAfAttributeId attributeID,
     81                                              uint8_t mask,
     82                                              uint8_t* dataPtr,
     83                                              EmberAfAttributeType dataType)
     84          {
   \                     emberAfWriteAttribute: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x9D0A             LDR      R5,[SP, #+40]
   \        0x6   0x9C0B             LDR      R4,[SP, #+44]
     85            return emAfWriteAttribute(endpoint,
     86                                      cluster,
     87                                      attributeID,
     88                                      mask,
     89                                      EMBER_AF_NULL_MANUFACTURER_CODE,
     90                                      dataPtr,
     91                                      dataType,
     92                                      true,   // override read-only?
     93                                      false); // just test?
   \        0x8   0x2600             MOVS     R6,#+0
   \        0xA   0x2701             MOVS     R7,#+1
   \        0xC   0x9604             STR      R6,[SP, #+16]
   \        0xE   0x9703             STR      R7,[SP, #+12]
   \       0x10   0x9402             STR      R4,[SP, #+8]
   \       0x12   0x9501             STR      R5,[SP, #+4]
   \       0x14   0x9600             STR      R6,[SP, #+0]
   \       0x16   0x....             B.N      ?Subroutine0
     94          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \        0x0   0x....'....        BL       emAfWriteAttribute
   \        0x4   0xB005             ADD      SP,SP,#+20
   \        0x6   0xBDF0             POP      {R4-R7,PC}       ;; return
     95          

   \                                 In section .text, align 2, keep-with-next
     96          EmberAfStatus emberAfWriteClientAttribute(uint8_t endpoint,
     97                                                    EmberAfClusterId cluster,
     98                                                    EmberAfAttributeId attributeID,
     99                                                    uint8_t* dataPtr,
    100                                                    EmberAfAttributeType dataType)
    101          {
   \                     emberAfWriteClientAttribute: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x....'....        BL       ?Subroutine7
    102            return emAfWriteAttribute(endpoint,
    103                                      cluster,
    104                                      attributeID,
    105                                      CLUSTER_MASK_CLIENT,
    106                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    107                                      dataPtr,
    108                                      dataType,
    109                                      true,   // override read-only?
    110                                      false); // just test?
   \                     ??CrossCallReturnLabel_7: (+1)
   \        0x8   0x2380             MOVS     R3,#+128
   \        0xA   0x....             B.N      ?Subroutine1

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \        0x0   0x....'....        BL       emAfWriteAttribute
   \        0x4   0xB006             ADD      SP,SP,#+24
   \        0x6   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \        0x0   0x9C0A             LDR      R4,[SP, #+40]
   \        0x2   0x2500             MOVS     R5,#+0
   \        0x4   0x2601             MOVS     R6,#+1
   \        0x6   0x9301             STR      R3,[SP, #+4]
   \        0x8   0x9504             STR      R5,[SP, #+16]
   \        0xA   0x9603             STR      R6,[SP, #+12]
   \        0xC   0x9402             STR      R4,[SP, #+8]
   \        0xE   0x9500             STR      R5,[SP, #+0]
   \       0x10   0x4770             BX       LR
    111          }
    112          

   \                                 In section .text, align 2, keep-with-next
    113          EmberAfStatus emberAfWriteServerAttribute(uint8_t endpoint,
    114                                                    EmberAfClusterId cluster,
    115                                                    EmberAfAttributeId attributeID,
    116                                                    uint8_t* dataPtr,
    117                                                    EmberAfAttributeType dataType)
    118          {
   \                     emberAfWriteServerAttribute: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x....'....        BL       ?Subroutine7
    119            return emAfWriteAttribute(endpoint,
    120                                      cluster,
    121                                      attributeID,
    122                                      CLUSTER_MASK_SERVER,
    123                                      EMBER_AF_NULL_MANUFACTURER_CODE,
    124                                      dataPtr,
    125                                      dataType,
    126                                      true,   // override read-only?
    127                                      false); // just test?
   \                     ??CrossCallReturnLabel_8: (+1)
   \        0x8   0x2340             MOVS     R3,#+64
   \        0xA                      REQUIRE ?Subroutine1
   \        0xA                      ;; // Fall through to label ?Subroutine1
    128          }
    129          

   \                                 In section .text, align 2, keep-with-next
    130          EmberAfStatus emberAfWriteManufacturerSpecificClientAttribute(uint8_t endpoint,
    131                                                                        EmberAfClusterId cluster,
    132                                                                        EmberAfAttributeId attributeID,
    133                                                                        uint16_t manufacturerCode,
    134                                                                        uint8_t* dataPtr,
    135                                                                        EmberAfAttributeType dataType)
    136          {
   \                     emberAfWriteManufacturerSpecificClientAttribute: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x....'....        BL       ?Subroutine4
    137            return emAfWriteAttribute(endpoint,
    138                                      cluster,
    139                                      attributeID,
    140                                      CLUSTER_MASK_CLIENT,
    141                                      manufacturerCode,
    142                                      dataPtr,
    143                                      dataType,
    144                                      true,   // override read-only?
    145                                      false); // just test?
   \                     ??CrossCallReturnLabel_0: (+1)
   \        0x8   0x2380             MOVS     R3,#+128
   \        0xA                      REQUIRE ?Subroutine0
   \        0xA                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \        0x0   0x9D0A             LDR      R5,[SP, #+40]
   \        0x2   0x9C0B             LDR      R4,[SP, #+44]
   \        0x4   0x2600             MOVS     R6,#+0
   \        0x6   0x2701             MOVS     R7,#+1
   \        0x8   0x9300             STR      R3,[SP, #+0]
   \        0xA   0x9604             STR      R6,[SP, #+16]
   \        0xC   0x9703             STR      R7,[SP, #+12]
   \        0xE   0x9402             STR      R4,[SP, #+8]
   \       0x10   0x9501             STR      R5,[SP, #+4]
   \       0x12   0x4770             BX       LR
    146          }
    147          

   \                                 In section .text, align 2, keep-with-next
    148          EmberAfStatus emberAfWriteManufacturerSpecificServerAttribute(uint8_t endpoint,
    149                                                                        EmberAfClusterId cluster,
    150                                                                        EmberAfAttributeId attributeID,
    151                                                                        uint16_t manufacturerCode,
    152                                                                        uint8_t* dataPtr,
    153                                                                        EmberAfAttributeType dataType)
    154          {
   \                     emberAfWriteManufacturerSpecificServerAttribute: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x....'....        BL       ?Subroutine4
    155            return emAfWriteAttribute(endpoint,
    156                                      cluster,
    157                                      attributeID,
    158                                      CLUSTER_MASK_SERVER,
    159                                      manufacturerCode,
    160                                      dataPtr,
    161                                      dataType,
    162                                      true,   // override read-only?
    163                                      false); // just test?
   \                     ??CrossCallReturnLabel_1: (+1)
   \        0x8   0x2340             MOVS     R3,#+64
   \        0xA   0x....             B.N      ?Subroutine0
    164          }
    165          

   \                                 In section .text, align 2, keep-with-next
    166          EmberAfStatus emberAfVerifyAttributeWrite(uint8_t endpoint,
    167                                                    EmberAfClusterId cluster,
    168                                                    EmberAfAttributeId attributeID,
    169                                                    uint8_t mask,
    170                                                    uint16_t manufacturerCode,
    171                                                    uint8_t* dataPtr,
    172                                                    EmberAfAttributeType dataType)
    173          {
   \                     emberAfVerifyAttributeWrite: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
    174            return emAfWriteAttribute(endpoint,
    175                                      cluster,
    176                                      attributeID,
    177                                      mask,
    178                                      manufacturerCode,
    179                                      dataPtr,
    180                                      dataType,
    181                                      false, // override read-only?
    182                                      true); // just test?
   \        0x2   0x2701             MOVS     R7,#+1
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x9704             STR      R7,[SP, #+16]
   \        0x8   0x9D0A             LDR      R5,[SP, #+40]
   \        0xA   0x9E0B             LDR      R6,[SP, #+44]
   \        0xC   0x9C0C             LDR      R4,[SP, #+48]
   \        0xE   0x2700             MOVS     R7,#+0
   \       0x10   0x9703             STR      R7,[SP, #+12]
   \       0x12   0x9402             STR      R4,[SP, #+8]
   \       0x14   0x9601             STR      R6,[SP, #+4]
   \       0x16   0x9500             STR      R5,[SP, #+0]
   \       0x18   0x....             B.N      ?Subroutine0
    183          }
    184          

   \                                 In section .text, align 2, keep-with-next
    185          EmberAfStatus emberAfReadAttribute(uint8_t endpoint,
    186                                             EmberAfClusterId cluster,
    187                                             EmberAfAttributeId attributeID,
    188                                             uint8_t mask,
    189                                             uint8_t *dataPtr,
    190                                             uint8_t readLength,
    191                                             EmberAfAttributeType *dataType)
    192          {
   \                     emberAfReadAttribute: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x9C09             LDR      R4,[SP, #+36]
   \        0x4   0x9D08             LDR      R5,[SP, #+32]
   \        0x6   0x9E0A             LDR      R6,[SP, #+40]
    193            return emAfReadAttribute(endpoint,
    194                                     cluster,
    195                                     attributeID,
    196                                     mask,
    197                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    198                                     dataPtr,
    199                                     readLength,
    200                                     dataType);
   \        0x8   0x9402             STR      R4,[SP, #+8]
   \        0xA   0x2400             MOVS     R4,#+0
   \        0xC   0x9603             STR      R6,[SP, #+12]
   \        0xE   0x9501             STR      R5,[SP, #+4]
   \       0x10   0x9400             STR      R4,[SP, #+0]
   \       0x12   0x....             B.N      ?Subroutine2
    201          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \        0x0   0x....'....        BL       emAfReadAttribute
   \        0x4   0xB004             ADD      SP,SP,#+16
   \        0x6   0xBD70             POP      {R4-R6,PC}       ;; return
    202          

   \                                 In section .text, align 2, keep-with-next
    203          EmberAfStatus emberAfReadServerAttribute(uint8_t endpoint,
    204                                                   EmberAfClusterId cluster,
    205                                                   EmberAfAttributeId attributeID,
    206                                                   uint8_t* dataPtr,
    207                                                   uint8_t readLength)
    208          {
   \                     emberAfReadServerAttribute: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x....'....        BL       ?Subroutine8
    209            return emAfReadAttribute(endpoint,
    210                                     cluster,
    211                                     attributeID,
    212                                     CLUSTER_MASK_SERVER,
    213                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    214                                     dataPtr,
    215                                     readLength,
    216                                     NULL);
   \                     ??CrossCallReturnLabel_9: (+1)
   \        0x8   0x2340             MOVS     R3,#+64
   \        0xA   0x....             B.N      ?Subroutine3

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \        0x0   0x....'....        BL       emAfReadAttribute
   \        0x4   0xB005             ADD      SP,SP,#+20
   \        0x6   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \        0x0   0x9C08             LDR      R4,[SP, #+32]
   \        0x2   0x2500             MOVS     R5,#+0
   \        0x4   0x9301             STR      R3,[SP, #+4]
   \        0x6   0x9503             STR      R5,[SP, #+12]
   \        0x8   0x9402             STR      R4,[SP, #+8]
   \        0xA   0x9500             STR      R5,[SP, #+0]
   \        0xC   0x4770             BX       LR
    217          }
    218          

   \                                 In section .text, align 2, keep-with-next
    219          EmberAfStatus emberAfReadClientAttribute(uint8_t endpoint,
    220                                                   EmberAfClusterId cluster,
    221                                                   EmberAfAttributeId attributeID,
    222                                                   uint8_t* dataPtr,
    223                                                   uint8_t readLength)
    224          {
   \                     emberAfReadClientAttribute: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB084             SUB      SP,SP,#+16
   \        0x4   0x....'....        BL       ?Subroutine8
    225            return emAfReadAttribute(endpoint,
    226                                     cluster,
    227                                     attributeID,
    228                                     CLUSTER_MASK_CLIENT,
    229                                     EMBER_AF_NULL_MANUFACTURER_CODE,
    230                                     dataPtr,
    231                                     readLength,
    232                                     NULL);
   \                     ??CrossCallReturnLabel_10: (+1)
   \        0x8   0x2380             MOVS     R3,#+128
   \        0xA                      REQUIRE ?Subroutine3
   \        0xA                      ;; // Fall through to label ?Subroutine3
    233          }
    234          

   \                                 In section .text, align 2, keep-with-next
    235          EmberAfStatus emberAfReadManufacturerSpecificServerAttribute(uint8_t endpoint,
    236                                                                       EmberAfClusterId cluster,
    237                                                                       EmberAfAttributeId attributeID,
    238                                                                       uint16_t manufacturerCode,
    239                                                                       uint8_t* dataPtr,
    240                                                                       uint8_t readLength)
    241          {
   \                     emberAfReadManufacturerSpecificServerAttribute: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x....'....        BL       ?Subroutine6
    242            return emAfReadAttribute(endpoint,
    243                                     cluster,
    244                                     attributeID,
    245                                     CLUSTER_MASK_SERVER,
    246                                     manufacturerCode,
    247                                     dataPtr,
    248                                     readLength,
    249                                     NULL);
   \                     ??CrossCallReturnLabel_5: (+1)
   \        0x6   0x2340             MOVS     R3,#+64
   \        0x8                      REQUIRE ?Subroutine2
   \        0x8                      ;; // Fall through to label ?Subroutine2

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \        0x0   0x9D08             LDR      R5,[SP, #+32]
   \        0x2   0x9C09             LDR      R4,[SP, #+36]
   \        0x4   0x2600             MOVS     R6,#+0
   \        0x6   0x9300             STR      R3,[SP, #+0]
   \        0x8   0x9603             STR      R6,[SP, #+12]
   \        0xA   0x9402             STR      R4,[SP, #+8]
   \        0xC   0x9501             STR      R5,[SP, #+4]
   \        0xE   0x4770             BX       LR
    250          }
    251          

   \                                 In section .text, align 2, keep-with-next
    252          EmberAfStatus emberAfReadManufacturerSpecificClientAttribute(uint8_t endpoint,
    253                                                                       EmberAfClusterId cluster,
    254                                                                       EmberAfAttributeId attributeID,
    255                                                                       uint16_t manufacturerCode,
    256                                                                       uint8_t* dataPtr,
    257                                                                       uint8_t readLength)
    258          {
   \                     emberAfReadManufacturerSpecificClientAttribute: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x....'....        BL       ?Subroutine6
    259            return emAfReadAttribute(endpoint,
    260                                     cluster,
    261                                     attributeID,
    262                                     CLUSTER_MASK_CLIENT,
    263                                     manufacturerCode,
    264                                     dataPtr,
    265                                     readLength,
    266                                     NULL);
   \                     ??CrossCallReturnLabel_6: (+1)
   \        0x6   0x2380             MOVS     R3,#+128
   \        0x8   0x....             B.N      ?Subroutine2
    267          }
    268          

   \                                 In section .text, align 2, keep-with-next
    269          bool emberAfReadSequentialAttributesAddToResponse(uint8_t endpoint,
    270                                                            EmberAfClusterId clusterId,
    271                                                            EmberAfAttributeId startAttributeId,
    272                                                            uint8_t mask,
    273                                                            uint16_t manufacturerCode,
    274                                                            uint8_t maxAttributeIds,
    275                                                            bool includeAccessControl)
    276          {
   \                     emberAfReadSequentialAttributesAddToResponse: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0xF8DD 0x9038      LDR      R9,[SP, #+56]
   \        0xA   0x4690             MOV      R8,R2
   \        0xC   0x461C             MOV      R4,R3
   \        0xE   0x4605             MOV      R5,R0
   \       0x10   0x468A             MOV      R10,R1
    277            uint16_t i;
    278            uint16_t discovered = 0;
    279            uint16_t skipped = 0;
    280            uint16_t total = 0;
    281          
    282            EmberAfCluster *cluster = emberAfFindClusterWithMfgCode(endpoint,
    283                                                                    clusterId,
    284                                                                    mask,
    285                                                                    manufacturerCode);
   \       0x12   0x464B             MOV      R3,R9
   \       0x14   0x4622             MOV      R2,R4
   \       0x16   0x2600             MOVS     R6,#+0
   \       0x18   0xF8AD 0x6000      STRH     R6,[SP, #+0]
   \       0x1C   0x....'....        BL       emberAfFindClusterWithMfgCode
   \       0x20   0x46B3             MOV      R11,R6
   \       0x22   0x0007             MOVS     R7,R0
    286          
    287            EmberAfAttributeSearchRecord record;
    288            record.endpoint = endpoint;
   \       0x24   0xF88D 0x5004      STRB     R5,[SP, #+4]
    289            record.clusterId = clusterId;
   \       0x28   0xF8AD 0xA006      STRH     R10,[SP, #+6]
    290            record.clusterMask = mask;
   \       0x2C   0xF88D 0x4008      STRB     R4,[SP, #+8]
    291            record.attributeId = startAttributeId;
   \       0x30   0xF8AD 0x800A      STRH     R8,[SP, #+10]
    292            record.manufacturerCode = manufacturerCode;
   \       0x34   0xF8AD 0x900C      STRH     R9,[SP, #+12]
    293          
    294            // If we don't have the cluster or it doesn't match the search, we're done.
    295            if (cluster == NULL || !emAfMatchCluster(cluster, &record)) {
   \       0x38   0xD04F             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
   \       0x3A   0xA901             ADD      R1,SP,#+4
   \       0x3C   0x....'....        BL       emAfMatchCluster
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD04A             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_0
    296              return true;
    297            }
    298          
    299            for (i = 0; i < cluster->attributeCount; i++) {
   \       0x44   0xF8AD 0x8002      STRH     R8,[SP, #+2]
   \       0x48   0x2400             MOVS     R4,#+0
   \       0x4A   0xF8DD 0x903C      LDR      R9,[SP, #+60]
   \       0x4E   0xF8DD 0xA040      LDR      R10,[SP, #+64]
   \       0x52   0xF8BD 0x8000      LDRH     R8,[SP, #+0]
   \       0x56   0xE015             B.N      ??emberAfReadSequentialAttributesAddToResponse_1
    300              EmberAfAttributeMetadata *metadata = &cluster->attributes[i];
    301          
    302              // If the cluster is not manufacturer-specific, an attribute is considered
    303              // only if its manufacturer code matches that of the command (which may be
    304              // unset).
    305              if (!emberAfClusterIsManufacturerSpecific(cluster)) {
    306                record.attributeId = metadata->attributeId;
    307                if (!emAfMatchAttribute(cluster, metadata, &record)) {
    308                  continue;
    309                }
    310              }
    311          
    312              if (metadata->attributeId < startAttributeId) {
    313                skipped++;
    314              } else if (discovered < maxAttributeIds) {
   \                     ??emberAfReadSequentialAttributesAddToResponse_2: (+1)
   \       0x58   0xB2B1             UXTH     R1,R6
   \       0x5A   0x4549             CMP      R1,R9
   \       0x5C   0xD20F             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_3
    315                emberAfPutInt16uInResp(metadata->attributeId);
   \       0x5E   0x....'....        BL       emberAfPutInt16uInResp
    316                emberAfPutInt8uInResp(metadata->attributeType);
   \       0x62   0x78A8             LDRB     R0,[R5, #+2]
   \       0x64   0x....'....        BL       emberAfPutInt8uInResp
    317                if (includeAccessControl) {
   \       0x68   0xEA5F 0x000A      MOVS     R0,R10
   \       0x6C   0xD006             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_4
    318                  // bit 0 : Readable <-- All our attributes are readable
    319                  // bit 1 : Writable <-- The only thing we track in the attribute metadata mask
    320                  // bit 2 : Reportable <-- All our attributes are reportable
    321                  emberAfPutInt8uInResp((metadata->mask & ATTRIBUTE_MASK_WRITABLE)
    322                                        ? 0x07
    323                                        : 0x05);
   \       0x6E   0x7928             LDRB     R0,[R5, #+4]
   \       0x70   0x07C1             LSLS     R1,R0,#+31
   \       0x72   0xBF54             ITE      PL 
   \       0x74   0x2005             MOVPL    R0,#+5
   \       0x76   0x2007             MOVMI    R0,#+7
   \       0x78   0x....'....        BL       emberAfPutInt8uInResp
    324                }
    325                discovered++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_4: (+1)
   \       0x7C   0x1C76             ADDS     R6,R6,#+1
    326              } else {
    327                // MISRA requires ..else if.. to have terminating else.
    328              }
    329              total++;
   \                     ??emberAfReadSequentialAttributesAddToResponse_3: (+1)
   \       0x7E   0xF108 0x0801      ADD      R8,R8,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_5: (+1)
   \       0x82   0x1C64             ADDS     R4,R4,#+1
   \                     ??emberAfReadSequentialAttributesAddToResponse_1: (+1)
   \       0x84   0x8939             LDRH     R1,[R7, #+8]
   \       0x86   0xB2A0             UXTH     R0,R4
   \       0x88   0x4288             CMP      R0,R1
   \       0x8A   0xD21E             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_6
   \       0x8C   0xB2A2             UXTH     R2,R4
   \       0x8E   0x210C             MOVS     R1,#+12
   \       0x90   0x6878             LDR      R0,[R7, #+4]
   \       0x92   0x434A             MULS     R2,R1,R2
   \       0x94   0x883B             LDRH     R3,[R7, #+0]
   \       0x96   0x1885             ADDS     R5,R0,R2
   \       0x98   0xF5B3 0x4F7C      CMP      R3,#+64512
   \       0x9C   0xDA09             BGE.N    ??emberAfReadSequentialAttributesAddToResponse_7
   \       0x9E   0x8828             LDRH     R0,[R5, #+0]
   \       0xA0   0xAA01             ADD      R2,SP,#+4
   \       0xA2   0x4629             MOV      R1,R5
   \       0xA4   0xF8AD 0x000A      STRH     R0,[SP, #+10]
   \       0xA8   0x4638             MOV      R0,R7
   \       0xAA   0x....'....        BL       emAfMatchAttribute
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD0E7             BEQ.N    ??emberAfReadSequentialAttributesAddToResponse_5
   \                     ??emberAfReadSequentialAttributesAddToResponse_7: (+1)
   \       0xB2   0x8828             LDRH     R0,[R5, #+0]
   \       0xB4   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \       0xB8   0x4288             CMP      R0,R1
   \       0xBA   0xD2CD             BCS.N    ??emberAfReadSequentialAttributesAddToResponse_2
   \       0xBC   0xF10B 0x0B01      ADD      R11,R11,#+1
   \       0xC0   0xE7DD             B.N      ??emberAfReadSequentialAttributesAddToResponse_3
    330            }
    331          
    332            // We are finished if there are no more attributes to find, which means the
    333            // number of attributes discovered plus the number skipped equals the total
    334            // attributes in the cluster.  For manufacturer-specific clusters, the total
    335            // includes all attributes in the cluster.  For standard ZCL clusters, if the
    336            // the manufacturer code is set, the total is the number of attributes that
    337            // match the manufacturer code.  Otherwise, the total is the number of
    338            // standard ZCL attributes in the cluster.
    339            return (discovered + skipped == total);
   \                     ??emberAfReadSequentialAttributesAddToResponse_8: (+1)
   \       0xC2   0x2000             MOVS     R0,#+0
   \                     ??emberAfReadSequentialAttributesAddToResponse_9: (+1)
   \       0xC4   0xB005             ADD      SP,SP,#+20
   \       0xC6   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   \                     ??emberAfReadSequentialAttributesAddToResponse_6: (+1)
   \       0xCA   0xB2B6             UXTH     R6,R6
   \       0xCC   0xFA1F 0xF08B      UXTH     R0,R11
   \       0xD0   0x4406             ADD      R6,R0,R6
   \       0xD2   0xFA1F 0xF088      UXTH     R0,R8
   \       0xD6   0x4286             CMP      R6,R0
   \       0xD8   0xD1F3             BNE.N    ??emberAfReadSequentialAttributesAddToResponse_8
   \                     ??emberAfReadSequentialAttributesAddToResponse_0: (+1)
   \       0xDA   0x2001             MOVS     R0,#+1
   \       0xDC   0xE7F2             B.N      ??emberAfReadSequentialAttributesAddToResponse_9
    340          }
    341          
    342          static void emberAfAttributeDecodeAndPrintCluster(EmberAfClusterId cluster, uint16_t mfgCode)
    343          {
    344          #if defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    345            uint16_t index = emberAfFindClusterNameIndexWithMfgCode(cluster, mfgCode);
    346            if (index != 0xFFFF) {
    347              emberAfAttributesPrintln("(%p)", zclClusterNames[index].name);
    348            }
    349            emberAfAttributesFlush();
    350          #endif //defined(EMBER_AF_PRINT_ENABLE) && defined(EMBER_AF_PRINT_ATTRIBUTES)
    351          }
    352          

   \                                 In section .text, align 2, keep-with-next
    353          void emberAfPrintAttributeTable(void)
    354          {
   \                     emberAfPrintAttributeTable: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB095             SUB      SP,SP,#+84
    355            uint8_t data[ATTRIBUTE_LARGEST];
    356            uint8_t endpointIndex, clusterIndex;
    357            uint16_t attributeIndex;
    358            EmberAfStatus status;
    359            uint16_t mfgCode;
    360            for (endpointIndex = 0;
   \        0x6   0xF04F 0x0900      MOV      R9,#+0
   \        0xA   0x....'....        LDR.W    R10,??DataTable2
   \        0xE   0xE001             B.N      ??emberAfPrintAttributeTable_0
    361                 endpointIndex < emberAfEndpointCount();
    362                 endpointIndex++) {
   \                     ??emberAfPrintAttributeTable_1: (+1)
   \       0x10   0xF109 0x0901      ADD      R9,R9,#+1
   \                     ??emberAfPrintAttributeTable_0: (+1)
   \       0x14   0x....'....        BL       emberAfEndpointCount
   \       0x18   0xFA5F 0xF189      UXTB     R1,R9
   \       0x1C   0x4281             CMP      R1,R0
   \       0x1E   0xD236             BCS.N    ??emberAfPrintAttributeTable_2
    363              EmberAfDefinedEndpoint *ep = &(emAfEndpoints[endpointIndex]);
    364              emberAfAttributesPrintln("ENDPOINT %x", ep->endpoint);
    365              emberAfAttributesPrintln("clus / side / attr / mfg  /type(len)/ rw / storage / data (raw)");
    366              emberAfAttributesFlush();
    367              for (clusterIndex = 0;
   \       0x20   0x2700             MOVS     R7,#+0
   \       0x22   0xE038             B.N      ??emberAfPrintAttributeTable_3
    368                   clusterIndex < ep->endpointType->clusterCount;
    369                   clusterIndex++) {
    370                EmberAfCluster *cluster = &(ep->endpointType->cluster[clusterIndex]);
    371          
    372                for (attributeIndex = 0;
    373                     attributeIndex < cluster->attributeCount;
    374                     attributeIndex++) {
    375                  EmberAfAttributeMetadata *metaData = &(cluster->attributes[attributeIndex]);
    376          
    377                  // Depending on user config, this loop can take a very long time to
    378                  // run and watchdog reset will  kick in. As a workaround, we'll
    379                  // manually reset the watchdog.
    380                  halResetWatchdog();
    381          
    382                  emberAfAttributesPrint("%2x / %p / %2x / ",
    383                                         cluster->clusterId,
    384                                         (emberAfAttributeIsClient(metaData) ? "clnt" : "srvr"),
    385                                         metaData->attributeId);
    386                  mfgCode = emAfGetManufacturerCodeForAttribute(cluster, metaData);
    387                  if (mfgCode == EMBER_AF_NULL_MANUFACTURER_CODE) {
    388                    emberAfAttributesPrint("----");
    389                  } else {
    390                    emberAfAttributesPrint("%2x", mfgCode);
    391                  }
    392                  emberAfAttributesPrint(" / %x (%x) / %p / %p / ",
    393                                         metaData->attributeType,
    394                                         emberAfAttributeSize(metaData),
    395                                         (emberAfAttributeIsReadOnly(metaData) ? "RO" : "RW"),
    396                                         (emberAfAttributeIsTokenized(metaData)
    397                                          ? " token "
    398                                          : (emberAfAttributeIsExternal(metaData)
    399                                             ? "extern "
    400                                             : "  RAM  ")));
    401                  emberAfAttributesFlush();
    402                  status = emAfReadAttribute(ep->endpoint,
    403                                             cluster->clusterId,
    404                                             metaData->attributeId,
    405                                             (emberAfAttributeIsClient(metaData)
    406                                              ? CLUSTER_MASK_CLIENT
    407                                              : CLUSTER_MASK_SERVER),
    408                                             mfgCode,
    409                                             data,
    410                                             ATTRIBUTE_LARGEST,
    411                                             NULL);
    412                  if (status == EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE) {
    413                    emberAfAttributesPrintln("Unsupported");
    414                  } else {
    415                    uint16_t length;
    416                    if (emberAfIsStringAttributeType(metaData->attributeType)) {
    417                      length = emberAfStringLength(data) + 1;
    418                    } else if (emberAfIsLongStringAttributeType(metaData->attributeType)) {
   \                     ??emberAfPrintAttributeTable_4: (+1)
   \       0x24   0x78A0             LDRB     R0,[R4, #+2]
   \       0x26   0x....'....        BL       emberAfIsLongStringAttributeType
   \       0x2A   0xB1D0             CBZ.N    R0,??emberAfPrintAttributeTable_5
    419                      length = emberAfLongStringLength(data) + 2;
   \       0x2C   0xA804             ADD      R0,SP,#+16
   \       0x2E   0x....'....        BL       emberAfLongStringLength
   \       0x32   0xE016             B.N      ??emberAfPrintAttributeTable_5
    420                    } else {
   \                     ??emberAfPrintAttributeTable_6: (+1)
   \       0x34   0x2100             MOVS     R1,#+0
   \       0x36   0x9103             STR      R1,[SP, #+12]
   \       0x38   0x2241             MOVS     R2,#+65
   \       0x3A   0x9202             STR      R2,[SP, #+8]
   \       0x3C   0xA904             ADD      R1,SP,#+16
   \       0x3E   0x9101             STR      R1,[SP, #+4]
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0x8822             LDRH     R2,[R4, #+0]
   \       0x44   0x8829             LDRH     R1,[R5, #+0]
   \       0x46   0xF81A 0x0008      LDRB     R0,[R10, R8]
   \       0x4A   0x....'....        BL       emAfReadAttribute
   \       0x4E   0x2886             CMP      R0,#+134
   \       0x50   0xD007             BEQ.N    ??emberAfPrintAttributeTable_5
   \       0x52   0x78A0             LDRB     R0,[R4, #+2]
   \       0x54   0x....'....        BL       emberAfIsStringAttributeType
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD0E3             BEQ.N    ??emberAfPrintAttributeTable_4
   \       0x5C   0xA804             ADD      R0,SP,#+16
   \       0x5E   0x....'....        BL       emberAfStringLength
    421                      length = emberAfAttributeSize(metaData);
    422                    }
    423                    UNUSED_VAR(length);
    424                    emberAfAttributesPrintBuffer(data, length, true);
    425                    emberAfAttributesFlush();
    426                    emberAfAttributeDecodeAndPrintCluster(cluster->clusterId, mfgCode);
    427                  }
   \                     ??emberAfPrintAttributeTable_5: (+1)
   \       0x62   0x1C76             ADDS     R6,R6,#+1
   \                     ??emberAfPrintAttributeTable_7: (+1)
   \       0x64   0x8929             LDRH     R1,[R5, #+8]
   \       0x66   0xB2B0             UXTH     R0,R6
   \       0x68   0x4288             CMP      R0,R1
   \       0x6A   0xD213             BCS.N    ??emberAfPrintAttributeTable_8
   \       0x6C   0xB2B2             UXTH     R2,R6
   \       0x6E   0x210C             MOVS     R1,#+12
   \       0x70   0x6868             LDR      R0,[R5, #+4]
   \       0x72   0x434A             MULS     R2,R1,R2
   \       0x74   0x1884             ADDS     R4,R0,R2
   \       0x76   0x....'....        BL       halInternalResetWatchDog
   \       0x7A   0x4621             MOV      R1,R4
   \       0x7C   0x4628             MOV      R0,R5
   \       0x7E   0x....'....        BL       emAfGetManufacturerCodeForAttribute
   \       0x82   0x7921             LDRB     R1,[R4, #+4]
   \       0x84   0x064A             LSLS     R2,R1,#+25
   \       0x86   0xBF4C             ITE      MI 
   \       0x88   0x2380             MOVMI    R3,#+128
   \       0x8A   0x2340             MOVPL    R3,#+64
   \       0x8C   0xE7D2             B.N      ??emberAfPrintAttributeTable_6
    428                }
    429              }
    430              emberAfAttributesFlush();
    431            }
    432          }
   \                     ??emberAfPrintAttributeTable_2: (+1)
   \       0x8E   0xB016             ADD      SP,SP,#+88
   \       0x90   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   \                     ??emberAfPrintAttributeTable_8: (+1)
   \       0x94   0x1C7F             ADDS     R7,R7,#+1
   \                     ??emberAfPrintAttributeTable_3: (+1)
   \       0x96   0xEA4F 0x6009      LSL      R0,R9,#+24
   \       0x9A   0xEA4F 0x5810      LSR      R8,R0,#+20
   \       0x9E   0xF10A 0x0008      ADD      R0,R10,#+8
   \       0xA2   0xF850 0x0008      LDR      R0,[R0, R8]
   \       0xA6   0xB2F9             UXTB     R1,R7
   \       0xA8   0x7902             LDRB     R2,[R0, #+4]
   \       0xAA   0x4291             CMP      R1,R2
   \       0xAC   0xD2B0             BCS.N    ??emberAfPrintAttributeTable_1
   \       0xAE   0x6801             LDR      R1,[R0, #+0]
   \       0xB0   0xB2FB             UXTB     R3,R7
   \       0xB2   0x2014             MOVS     R0,#+20
   \       0xB4   0x4343             MULS     R3,R0,R3
   \       0xB6   0x2600             MOVS     R6,#+0
   \       0xB8   0x18CD             ADDS     R5,R1,R3
   \       0xBA   0xE7D3             B.N      ??emberAfPrintAttributeTable_7
    433          
    434          // given a clusterId and an attribute to read, this crafts the response
    435          // and places it in the response buffer. Response is one of two items:
    436          // 1) unsupported: [attrId:2] [status:1]
    437          // 2) supported:   [attrId:2] [status:1] [type:1] [data:n]
    438          //

   \                                 In section .text, align 2, keep-with-next
    439          void emberAfRetrieveAttributeAndCraftResponse(uint8_t endpoint,
    440                                                        EmberAfClusterId clusterId,
    441                                                        EmberAfAttributeId attrId,
    442                                                        uint8_t mask,
    443                                                        uint16_t manufacturerCode,
    444                                                        uint16_t readLength)
    445          {
   \                     emberAfRetrieveAttributeAndCraftResponse: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB096             SUB      SP,SP,#+88
   \        0x4   0x9C1D             LDR      R4,[SP, #+116]
   \        0x6   0x4615             MOV      R5,R2
    446            EmberAfStatus status;
    447            uint8_t data[ATTRIBUTE_LARGEST];
    448            uint8_t dataType;
    449            uint8_t dataLen;
    450          
    451            // account for at least one byte of data
    452            if (readLength < 5) {
   \        0x8   0x2C04             CMP      R4,#+4
   \        0xA   0xDD3F             BLE.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    453              return;
    454            }
    455          
    456            emberAfAttributesPrintln("OTA READ: ep:%x cid:%2x attid:%2x msk:%x mfcode:%2x",
    457                                     endpoint,
    458                                     clusterId, attrId, mask, manufacturerCode);
    459          
    460            // lookup the attribute in our table
    461            status = emAfReadAttribute(endpoint,
    462                                       clusterId,
    463                                       attrId,
    464                                       mask,
    465                                       manufacturerCode,
    466                                       data,
    467                                       ATTRIBUTE_LARGEST,
    468                                       &dataType);
   \        0xC   0xAE04             ADD      R6,SP,#+16
   \        0xE   0x9603             STR      R6,[SP, #+12]
   \       0x10   0x2741             MOVS     R7,#+65
   \       0x12   0x9A1C             LDR      R2,[SP, #+112]
   \       0x14   0x9702             STR      R7,[SP, #+8]
   \       0x16   0xAE05             ADD      R6,SP,#+20
   \       0x18   0x9601             STR      R6,[SP, #+4]
   \       0x1A   0x9200             STR      R2,[SP, #+0]
   \       0x1C   0x462A             MOV      R2,R5
   \       0x1E   0x....'....        BL       emAfReadAttribute
   \       0x22   0x0006             MOVS     R6,R0
    469            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x24   0xD134             BNE.N    ??emberAfRetrieveAttributeAndCraftResponse_1
    470              dataLen = ((dataType == ZCL_OCTET_STRING_ATTRIBUTE_TYPE
    471                          || dataType == ZCL_CHAR_STRING_ATTRIBUTE_TYPE)
    472                         ? emberAfStringLength(data) + 1
    473                         : ((dataType == ZCL_LONG_OCTET_STRING_ATTRIBUTE_TYPE
    474                             || dataType == ZCL_LONG_CHAR_STRING_ATTRIBUTE_TYPE)
    475                            ? emberAfLongStringLength(data) + 2
    476                            : emberAfGetDataSize(dataType)));
   \       0x26   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \       0x2A   0x2841             CMP      R0,#+65
   \       0x2C   0xBF18             IT       NE 
   \       0x2E   0x2842             CMPNE    R0,#+66
   \       0x30   0xD104             BNE.N    ??emberAfRetrieveAttributeAndCraftResponse_2
   \       0x32   0xA805             ADD      R0,SP,#+20
   \       0x34   0x....'....        BL       emberAfStringLength
   \       0x38   0x1C46             ADDS     R6,R0,#+1
   \       0x3A   0xE00B             B.N      ??emberAfRetrieveAttributeAndCraftResponse_3
   \                     ??emberAfRetrieveAttributeAndCraftResponse_2: (+1)
   \       0x3C   0x2843             CMP      R0,#+67
   \       0x3E   0xBF18             IT       NE 
   \       0x40   0x2844             CMPNE    R0,#+68
   \       0x42   0xD104             BNE.N    ??emberAfRetrieveAttributeAndCraftResponse_4
   \       0x44   0xA805             ADD      R0,SP,#+20
   \       0x46   0x....'....        BL       emberAfLongStringLength
   \       0x4A   0x1C86             ADDS     R6,R0,#+2
   \       0x4C   0xE002             B.N      ??emberAfRetrieveAttributeAndCraftResponse_3
   \                     ??emberAfRetrieveAttributeAndCraftResponse_4: (+1)
   \       0x4E   0x....'....        BL       emberAfGetDataSize
   \       0x52   0x4606             MOV      R6,R0
   \                     ??emberAfRetrieveAttributeAndCraftResponse_3: (+1)
   \       0x54   0xB2F6             UXTB     R6,R6
    477              if (readLength < (4 + dataLen)) { // Not enough space for attribute.
   \       0x56   0x1D30             ADDS     R0,R6,#+4
   \       0x58   0x4284             CMP      R4,R0
   \       0x5A   0xDB17             BLT.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    478                return;
    479              }
    480            } else {
    481              emberAfPutInt16uInResp(attrId);
    482              emberAfPutInt8uInResp(status);
    483              emberAfAttributesPrintln("READ: clus %2x, attr %2x failed %x",
    484                                       clusterId,
    485                                       attrId,
    486                                       status);
    487              emberAfAttributesFlush();
    488              return;
    489            }
    490          
    491            // put attribute in least sig byte first
    492            emberAfPutInt16uInResp(attrId);
   \       0x5C   0x4628             MOV      R0,R5
   \       0x5E   0x....'....        BL       emberAfPutInt16uInResp
    493          
    494            // attribute is found, so copy in the status and the data type
    495            emberAfPutInt8uInResp(EMBER_ZCL_STATUS_SUCCESS);
   \       0x62   0x2000             MOVS     R0,#+0
   \       0x64   0x....'....        BL       emberAfPutInt8uInResp
    496            emberAfPutInt8uInResp(dataType);
   \       0x68   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \       0x6C   0x....             LDR.N    R4,??DataTable2_1
   \       0x6E   0x....'....        BL       emberAfPutInt8uInResp
    497          
    498            if ((appResponseLength + dataLen) < EMBER_AF_RESPONSE_BUFFER_LEN) {
   \       0x72   0x8820             LDRH     R0,[R4, #+0]
   \       0x74   0x1831             ADDS     R1,R6,R0
   \       0x76   0x2952             CMP      R1,#+82
   \       0x78   0xDA08             BGE.N    ??emberAfRetrieveAttributeAndCraftResponse_0
    499          #if (BIGENDIAN_CPU)
    500              // strings go over the air as length byte and then in human
    501              // readable format. These should not be flipped. Other attributes
    502              // need to be flipped so they go little endian OTA
    503              if (isThisDataTypeSentLittleEndianOTA(dataType)) {
    504                uint8_t i;
    505                for (i = 0; i < dataLen; i++) {
    506                  appResponseData[appResponseLength + i] = data[dataLen - i - 1];
    507                }
    508              } else {
    509                MEMMOVE(&(appResponseData[appResponseLength]), data, dataLen);
    510              }
    511          #else //(BIGENDIAN_CPU)
    512              MEMMOVE(&(appResponseData[appResponseLength]), data, dataLen);
   \       0x7A   0x....             LDR.N    R3,??DataTable2_2
   \       0x7C   0x4632             MOV      R2,R6
   \       0x7E   0xA905             ADD      R1,SP,#+20
   \       0x80   0x4418             ADD      R0,R3,R0
   \       0x82   0x....'....        BL       halCommonMemMove
    513          #endif //(BIGENDIAN_CPU)
    514              appResponseLength += dataLen;
   \       0x86   0x8820             LDRH     R0,[R4, #+0]
   \       0x88   0x1836             ADDS     R6,R6,R0
   \       0x8A   0x8026             STRH     R6,[R4, #+0]
    515            }
    516          
    517            emberAfAttributesPrintln("READ: clus %2x, attr %2x, dataLen: %x, OK",
    518                                     clusterId,
    519                                     attrId,
    520                                     dataLen);
    521            emberAfAttributesFlush();
    522          }
   \                     ??emberAfRetrieveAttributeAndCraftResponse_0: (+1)
   \       0x8C   0xB017             ADD      SP,SP,#+92
   \       0x8E   0xBDF0             POP      {R4-R7,PC}       ;; return
   \                     ??emberAfRetrieveAttributeAndCraftResponse_1: (+1)
   \       0x90   0x4628             MOV      R0,R5
   \       0x92   0x....'....        BL       emberAfPutInt16uInResp
   \       0x96   0x4630             MOV      R0,R6
   \       0x98   0x....'....        BL       emberAfPutInt8uInResp
   \       0x9C   0xE7F6             B.N      ??emberAfRetrieveAttributeAndCraftResponse_0
    523          
    524          // This function appends the attribute report fields for the given endpoint,
    525          // cluster, and attribute to the buffer starting at the index.  If there is
    526          // insufficient space in the buffer or an error occurs, buffer and bufIndex will
    527          // remain unchanged.  Otherwise, bufIndex will be incremented appropriately and
    528          // the fields will be written to the buffer.

   \                                 In section .text, align 2, keep-with-next
    529          EmberAfStatus emberAfAppendAttributeReportFields(uint8_t endpoint,
    530                                                           EmberAfClusterId clusterId,
    531                                                           EmberAfAttributeId attributeId,
    532                                                           uint8_t mask,
    533                                                           uint8_t *buffer,
    534                                                           uint8_t bufLen,
    535                                                           uint8_t *bufIndex)
    536          {
   \                     emberAfAppendAttributeReportFields: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0x4614             MOV      R4,R2
   \        0x4   0xB095             SUB      SP,SP,#+84
    537            EmberAfStatus status;
    538            EmberAfAttributeType type;
    539            uint8_t size;
    540            uint8_t data[ATTRIBUTE_LARGEST];
    541          
    542            status = emberAfReadAttribute(endpoint,
    543                                          clusterId,
    544                                          attributeId,
    545                                          mask,
    546                                          data,
    547                                          sizeof(data),
    548                                          &type);
   \        0x6   0xAA04             ADD      R2,SP,#+16
   \        0x8   0xAD03             ADD      R5,SP,#+12
   \        0xA   0x2641             MOVS     R6,#+65
   \        0xC   0x9200             STR      R2,[SP, #+0]
   \        0xE   0x9502             STR      R5,[SP, #+8]
   \       0x10   0x9601             STR      R6,[SP, #+4]
   \       0x12   0x4622             MOV      R2,R4
   \       0x14   0x....'....        BL       emberAfReadAttribute
   \       0x18   0x0005             MOVS     R5,R0
    549            if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0x1A   0xD12E             BNE.N    ??emberAfAppendAttributeReportFields_0
    550              goto kickout;
    551            }
    552          
    553            size = (emberAfIsThisDataTypeAStringType(type)
    554                    ? emberAfStringLength(data) + 1
    555                    : emberAfGetDataSize(type));
   \       0x1C   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x20   0x....'....        BL       emberAfIsThisDataTypeAStringType
   \       0x24   0xB120             CBZ.N    R0,??emberAfAppendAttributeReportFields_1
   \       0x26   0xA804             ADD      R0,SP,#+16
   \       0x28   0x....'....        BL       emberAfStringLength
   \       0x2C   0x1C47             ADDS     R7,R0,#+1
   \       0x2E   0xE004             B.N      ??emberAfAppendAttributeReportFields_2
   \                     ??emberAfAppendAttributeReportFields_1: (+1)
   \       0x30   0xF89D 0x000C      LDRB     R0,[SP, #+12]
   \       0x34   0x....'....        BL       emberAfGetDataSize
   \       0x38   0x4607             MOV      R7,R0
   \                     ??emberAfAppendAttributeReportFields_2: (+1)
   \       0x3A   0x9E1C             LDR      R6,[SP, #+112]
   \       0x3C   0x981B             LDR      R0,[SP, #+108]
   \       0x3E   0xB2FF             UXTB     R7,R7
    556            if (bufLen < *bufIndex + size + 3) {
   \       0x40   0x7831             LDRB     R1,[R6, #+0]
   \       0x42   0x187B             ADDS     R3,R7,R1
   \       0x44   0x1CDB             ADDS     R3,R3,#+3
   \       0x46   0x4298             CMP      R0,R3
   \       0x48   0xBFB8             IT       LT 
   \       0x4A   0x2589             MOVLT    R5,#+137
    557              status = EMBER_ZCL_STATUS_INSUFFICIENT_SPACE;
    558              goto kickout;
   \       0x4C   0xDB15             BLT.N    ??emberAfAppendAttributeReportFields_0
   \       0x4E   0x981A             LDR      R0,[SP, #+104]
    559            }
    560          
    561            buffer[(*bufIndex)++] = LOW_BYTE(attributeId);
   \       0x50   0x5444             STRB     R4,[R0, R1]
    562            buffer[(*bufIndex)++] = HIGH_BYTE(attributeId);
   \       0x52   0x1C49             ADDS     R1,R1,#+1
   \       0x54   0x0A24             LSRS     R4,R4,#+8
   \       0x56   0xB2CA             UXTB     R2,R1
    563            buffer[(*bufIndex)++] = type;
   \       0x58   0x1C49             ADDS     R1,R1,#+1
   \       0x5A   0x5484             STRB     R4,[R0, R2]
   \       0x5C   0x1C4B             ADDS     R3,R1,#+1
   \       0x5E   0x7033             STRB     R3,[R6, #+0]
   \       0x60   0xF89D 0x200C      LDRB     R2,[SP, #+12]
   \       0x64   0xB2C9             UXTB     R1,R1
    564          #if (BIGENDIAN_CPU)
    565            if (isThisDataTypeSentLittleEndianOTA(type)) {
    566              emberReverseMemCopy(buffer + *bufIndex, data, size);
    567            } else {
    568              MEMMOVE(buffer + *bufIndex, data, size);
    569            }
    570          #else
    571            MEMMOVE(buffer + *bufIndex, data, size);
   \       0x66   0xB2DB             UXTB     R3,R3
   \       0x68   0x5442             STRB     R2,[R0, R1]
   \       0x6A   0x463A             MOV      R2,R7
   \       0x6C   0xA904             ADD      R1,SP,#+16
   \       0x6E   0x4418             ADD      R0,R0,R3
   \       0x70   0x....'....        BL       halCommonMemMove
    572          #endif
    573            *bufIndex += size;
   \       0x74   0x7830             LDRB     R0,[R6, #+0]
   \       0x76   0x183F             ADDS     R7,R7,R0
   \       0x78   0x7037             STRB     R7,[R6, #+0]
    574          
    575            kickout:
    576            emberAfAttributesPrintln("REPORT: clus 0x%2x, attr 0x%2x: 0x%x",
    577                                     clusterId,
    578                                     attributeId,
    579                                     status);
    580            emberAfAttributesFlush();
    581          
    582            return status;
   \                     ??emberAfAppendAttributeReportFields_0: (+1)
   \       0x7A   0x4628             MOV      R0,R5
   \       0x7C   0xB015             ADD      SP,SP,#+84
   \       0x7E   0xBDF0             POP      {R4-R7,PC}       ;; return
    583          }
    584          
    585          //------------------------------------------------------------------------------
    586          // Internal Functions
    587          
    588          // writes an attribute (identified by clusterID and attrID to the given value.
    589          // this returns:
    590          // - EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE: if attribute isnt supported by the device (the
    591          //           device is not found in the attribute table)
    592          // - EMBER_ZCL_STATUS_INVALID_DATA_TYPE: if the data type passed in doesnt match the type
    593          //           stored in the attribute table
    594          // - EMBER_ZCL_STATUS_READ_ONLY: if the attribute isnt writable
    595          // - EMBER_ZCL_STATUS_INVALID_VALUE: if the value is set out of the allowable range for
    596          //           the attribute
    597          // - EMBER_ZCL_STATUS_SUCCESS: if the attribute was found and successfully written
    598          //
    599          // if true is passed in for overrideReadOnlyAndDataType then the data type is
    600          // not checked and the read-only flag is ignored. This mode is meant for
    601          // testing or setting the initial value of the attribute on the device.
    602          //
    603          // if true is passed for justTest, then the type is not written but all
    604          // checks are done to see if the type could be written
    605          // reads the attribute specified, returns false if the attribute is not in
    606          // the table or the data is too large, returns true and writes to dataPtr
    607          // if the attribute is supported and the readLength specified is less than
    608          // the length of the data.

   \                                 In section .text, align 2, keep-with-next
    609          EmberAfStatus emAfWriteAttribute(uint8_t endpoint,
    610                                           EmberAfClusterId cluster,
    611                                           EmberAfAttributeId attributeID,
    612                                           uint8_t mask,
    613                                           uint16_t manufacturerCode,
    614                                           uint8_t *data,
    615                                           EmberAfAttributeType dataType,
    616                                           bool overrideReadOnlyAndDataType,
    617                                           bool justTest)
    618          {
   \                     emAfWriteAttribute: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB088             SUB      SP,SP,#+32
   \        0x6   0x9C12             LDR      R4,[SP, #+72]
   \        0x8   0x4605             MOV      R5,R0
   \        0xA   0x4689             MOV      R9,R1
   \        0xC   0x4692             MOV      R10,R2
   \        0xE   0x4698             MOV      R8,R3
    619            EmberAfAttributeMetadata *metadata = NULL;
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x9004             STR      R0,[SP, #+16]
    620            EmberAfAttributeSearchRecord record;
    621            record.endpoint = endpoint;
   \       0x14   0xF88D 0x5014      STRB     R5,[SP, #+20]
    622            record.clusterId = cluster;
   \       0x18   0xF8AD 0x9016      STRH     R9,[SP, #+22]
    623            record.clusterMask = mask;
   \       0x1C   0xF88D 0x8018      STRB     R8,[SP, #+24]
    624            record.attributeId = attributeID;
   \       0x20   0xF8AD 0xA01A      STRH     R10,[SP, #+26]
    625            record.manufacturerCode = manufacturerCode;
   \       0x24   0xF8AD 0x401C      STRH     R4,[SP, #+28]
    626            emAfReadOrWriteAttribute(&record,
    627                                     &metadata,
    628                                     NULL,   // buffer
    629                                     0,      // buffer size
    630                                     false); // write?
   \       0x28   0x9000             STR      R0,[SP, #+0]
   \       0x2A   0x2300             MOVS     R3,#+0
   \       0x2C   0x2200             MOVS     R2,#+0
   \       0x2E   0xA904             ADD      R1,SP,#+16
   \       0x30   0xA805             ADD      R0,SP,#+20
   \       0x32   0x....'....        BL       emAfReadOrWriteAttribute
    631          
    632            // if we dont support that attribute
    633            if (metadata == NULL) {
   \       0x36   0x9804             LDR      R0,[SP, #+16]
   \       0x38   0xB908             CBNZ.N   R0,??emAfWriteAttribute_0
    634              emberAfAttributesPrintln("%pep %x clus %2x attr %2x not supported",
    635                                       "WRITE ERR: ",
    636                                       endpoint,
    637                                       cluster,
    638                                       attributeID);
    639              emberAfAttributesFlush();
    640              return EMBER_ZCL_STATUS_UNSUPPORTED_ATTRIBUTE;
   \       0x3A   0x2086             MOVS     R0,#+134
   \       0x3C   0xE082             B.N      ??emAfWriteAttribute_1
    641            }
   \                     ??emAfWriteAttribute_0: (+1)
   \       0x3E   0x9815             LDR      R0,[SP, #+84]
    642          
    643            // if the data type specified by the caller is incorrect
    644            if (!(overrideReadOnlyAndDataType)) {
   \       0x40   0xB960             CBNZ.N   R0,??emAfWriteAttribute_2
    645              if (dataType != metadata->attributeType) {
   \       0x42   0x9904             LDR      R1,[SP, #+16]
   \       0x44   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \       0x48   0x788A             LDRB     R2,[R1, #+2]
   \       0x4A   0x4290             CMP      R0,R2
   \       0x4C   0xBF18             IT       NE 
   \       0x4E   0x208D             MOVNE    R0,#+141
    646                emberAfAttributesPrintln("%pinvalid data type", "WRITE ERR: ");
    647                emberAfAttributesFlush();
    648                return EMBER_ZCL_STATUS_INVALID_DATA_TYPE;
   \       0x50   0xD178             BNE.N    ??emAfWriteAttribute_1
    649              }
    650          
    651              if (emberAfAttributeIsReadOnly(metadata)) {
   \       0x52   0x7909             LDRB     R1,[R1, #+4]
   \       0x54   0x07C8             LSLS     R0,R1,#+31
   \       0x56   0xBF58             IT       PL 
   \       0x58   0x2088             MOVPL    R0,#+136
    652                emberAfAttributesPrintln("%pattr not writable", "WRITE ERR: ");
    653                emberAfAttributesFlush();
    654                return EMBER_ZCL_STATUS_READ_ONLY;
   \       0x5A   0xD573             BPL.N    ??emAfWriteAttribute_1
    655              }
    656            }
    657          
    658            // if the value the attribute is being set to is out of range
    659            // return EMBER_ZCL_STATUS_INVALID_VALUE
    660            if ((metadata->mask & ATTRIBUTE_MASK_MIN_MAX) != 0U) {
   \                     ??emAfWriteAttribute_2: (+1)
   \       0x5C   0x9804             LDR      R0,[SP, #+16]
   \       0x5E   0x9E13             LDR      R6,[SP, #+76]
   \       0x60   0x7901             LDRB     R1,[R0, #+4]
   \       0x62   0x0748             LSLS     R0,R1,#+29
   \       0x64   0xD526             BPL.N    ??emAfWriteAttribute_3
    661              EmberAfDefaultAttributeValue minv = metadata->defaultValue.ptrToMinMaxValue->minValue;
   \       0x66   0x9904             LDR      R1,[SP, #+16]
   \       0x68   0x6888             LDR      R0,[R1, #+8]
   \       0x6A   0x6841             LDR      R1,[R0, #+4]
    662              EmberAfDefaultAttributeValue maxv = metadata->defaultValue.ptrToMinMaxValue->maxValue;
   \       0x6C   0x9804             LDR      R0,[SP, #+16]
   \       0x6E   0x9102             STR      R1,[SP, #+8]
   \       0x70   0x6881             LDR      R1,[R0, #+8]
   \       0x72   0x6888             LDR      R0,[R1, #+8]
    663              bool isAttributeSigned = emberAfIsTypeSigned(metadata->attributeType);
   \       0x74   0x9904             LDR      R1,[SP, #+16]
   \       0x76   0x9001             STR      R0,[SP, #+4]
   \       0x78   0x7888             LDRB     R0,[R1, #+2]
   \       0x7A   0x....'....        BL       emberAfIsTypeSigned
   \       0x7E   0x4683             MOV      R11,R0
    664              uint8_t dataLen = emberAfAttributeSize(metadata);
   \       0x80   0x9804             LDR      R0,[SP, #+16]
    665              if (dataLen <= 2) {
   \       0x82   0x465B             MOV      R3,R11
   \       0x84   0x78C1             LDRB     R1,[R0, #+3]
   \       0x86   0xF88D 0x1000      STRB     R1,[SP, #+0]
   \       0x8A   0x2903             CMP      R1,#+3
   \       0x8C   0x460A             MOV      R2,R1
   \       0x8E   0x4631             MOV      R1,R6
   \       0x90   0xDA2A             BGE.N    ??emAfWriteAttribute_4
    666                int8_t minR, maxR;
    667                uint8_t* minI = (uint8_t*)&(minv.defaultValue);
    668                uint8_t* maxI = (uint8_t*)&(maxv.defaultValue);
    669                //On big endian cpu with length 1 only the second byte counts
    670                #if (BIGENDIAN_CPU)
    671                if (dataLen == 1) {
    672                  minI++;
    673                  maxI++;
    674                }
    675                #endif //BIGENDIAN_CPU
    676                minR = emberAfCompareValues(minI, data, dataLen, isAttributeSigned);
   \       0x92   0xA802             ADD      R0,SP,#+8
   \       0x94   0x....'....        BL       emberAfCompareValues
    677                maxR = emberAfCompareValues(maxI, data, dataLen, isAttributeSigned);
   \       0x98   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0x9C   0x4607             MOV      R7,R0
   \       0x9E   0x465B             MOV      R3,R11
   \       0xA0   0x4631             MOV      R1,R6
   \       0xA2   0xA801             ADD      R0,SP,#+4
   \       0xA4   0x....'....        BL       emberAfCompareValues
    678                if ((minR == 1) || (maxR == -1)) {
   \       0xA8   0x2F01             CMP      R7,#+1
   \       0xAA   0xBF1C             ITT      NE 
   \       0xAC   0xF04F 0x31FF      MOVNE    R1,#-1
   \       0xB0   0x4288             CMPNE    R0,R1
   \       0xB2   0xD028             BEQ.N    ??emAfWriteAttribute_5
   \                     ??emAfWriteAttribute_3: (+1)
   \       0xB4   0x9816             LDR      R0,[SP, #+88]
    679                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    680                }
    681              } else {
    682                if ((emberAfCompareValues(minv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == 1)
    683                    || (emberAfCompareValues(maxv.ptrToDefaultValue, data, dataLen, isAttributeSigned) == -1)) {
    684                  return EMBER_ZCL_STATUS_INVALID_VALUE;
    685                }
    686              }
    687            }
    688          
    689            // write the data unless this is only a test
    690            if (!justTest) {
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xD143             BNE.N    ??emAfWriteAttribute_6
    691              // Pre write attribute callback for all attribute changes,
    692              // regardless of cluster.
    693              EmberAfStatus status
    694                = emberAfPreAttributeChangeCallback(endpoint,
    695                                                    cluster,
    696                                                    attributeID,
    697                                                    mask,
    698                                                    manufacturerCode,
    699                                                    dataType,
    700                                                    emberAfAttributeSize(metadata),
    701                                                    data);
   \       0xBA   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_2: (+1)
   \       0xBE   0x....'....        BL       emberAfPreAttributeChangeCallback
    702              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xC2   0x0001             MOVS     R1,R0
   \       0xC4   0xD13E             BNE.N    ??emAfWriteAttribute_1
    703                return status;
    704              }
    705          
    706              // Pre-write attribute callback specific
    707              // to the cluster that the attribute lives in.
    708              status = emAfClusterPreAttributeChangedCallback(endpoint,
    709                                                              cluster,
    710                                                              attributeID,
    711                                                              mask,
    712                                                              manufacturerCode,
    713                                                              dataType,
    714                                                              emberAfAttributeSize(metadata),
    715                                                              data);
   \       0xC6   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_3: (+1)
   \       0xCA   0x....'....        BL       emAfClusterPreAttributeChangedCallback
    716              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xCE   0x0001             MOVS     R1,R0
   \       0xD0   0xD138             BNE.N    ??emAfWriteAttribute_1
    717                return status;
    718              }
    719          
    720              // write the attribute
    721              status = emAfReadOrWriteAttribute(&record,
    722                                                NULL,    // metadata
    723                                                data,
    724                                                0,       // buffer size - unused
    725                                                true);   // write?
   \       0xD2   0x2001             MOVS     R0,#+1
   \       0xD4   0x9000             STR      R0,[SP, #+0]
   \       0xD6   0x2300             MOVS     R3,#+0
   \       0xD8   0x4632             MOV      R2,R6
   \       0xDA   0x2100             MOVS     R1,#+0
   \       0xDC   0xA805             ADD      R0,SP,#+20
   \       0xDE   0x....'....        BL       emAfReadOrWriteAttribute
    726          
    727              if (status != EMBER_ZCL_STATUS_SUCCESS) {
   \       0xE2   0x0001             MOVS     R1,R0
   \       0xE4   0xD011             BEQ.N    ??emAfWriteAttribute_7
    728                return status;
   \       0xE6   0xE02D             B.N      ??emAfWriteAttribute_1
    729              }
   \                     ??emAfWriteAttribute_4: (+1)
   \       0xE8   0x9802             LDR      R0,[SP, #+8]
   \       0xEA   0x....'....        BL       emberAfCompareValues
   \       0xEE   0x2801             CMP      R0,#+1
   \       0xF0   0xD009             BEQ.N    ??emAfWriteAttribute_5
   \       0xF2   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \       0xF6   0x9801             LDR      R0,[SP, #+4]
   \       0xF8   0x465B             MOV      R3,R11
   \       0xFA   0x4631             MOV      R1,R6
   \       0xFC   0x....'....        BL       emberAfCompareValues
   \      0x100   0xF110 0x0F01      CMN      R0,#+1
   \      0x104   0xD1D6             BNE.N    ??emAfWriteAttribute_3
   \                     ??emAfWriteAttribute_5: (+1)
   \      0x106   0x2087             MOVS     R0,#+135
   \      0x108   0xE01C             B.N      ??emAfWriteAttribute_1
    730          
    731              // Save the attribute to token if needed
    732              // Function itself will weed out tokens that are not tokenized.
    733              emAfSaveAttributeToToken(data, endpoint, cluster, metadata);
   \                     ??emAfWriteAttribute_7: (+1)
   \      0x10A   0x9B04             LDR      R3,[SP, #+16]
   \      0x10C   0x464A             MOV      R2,R9
   \      0x10E   0x4629             MOV      R1,R5
   \      0x110   0x4630             MOV      R0,R6
   \      0x112   0x....'....        BL       emAfSaveAttributeToToken
    734          
    735              emberAfReportingAttributeChangeCallback(endpoint,
    736                                                      cluster,
    737                                                      attributeID,
    738                                                      mask,
    739                                                      manufacturerCode,
    740                                                      dataType,
    741                                                      data);
   \      0x116   0x9602             STR      R6,[SP, #+8]
   \      0x118   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \      0x11C   0x9400             STR      R4,[SP, #+0]
   \      0x11E   0x4643             MOV      R3,R8
   \      0x120   0x9001             STR      R0,[SP, #+4]
   \      0x122   0x4652             MOV      R2,R10
   \      0x124   0x4649             MOV      R1,R9
   \      0x126   0x4628             MOV      R0,R5
   \      0x128   0x....'....        BL       emberAfReportingAttributeChangeCallback
    742          
    743              // Post write attribute callback for all attributes changes, regardless
    744              // of cluster.
    745              emberAfPostAttributeChangeCallback(endpoint,
    746                                                 cluster,
    747                                                 attributeID,
    748                                                 mask,
    749                                                 manufacturerCode,
    750                                                 dataType,
    751                                                 emberAfAttributeSize(metadata),
    752                                                 data);
   \      0x12C   0x....'....        BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_4: (+1)
   \      0x130   0x....'....        BL       emberAfPostAttributeChangeCallback
    753          
    754              // Post-write attribute callback specific
    755              // to the cluster that the attribute lives in.
    756              emAfClusterAttributeChangedCallback(endpoint,
    757                                                  cluster,
    758                                                  attributeID,
    759                                                  mask,
    760                                                  manufacturerCode);
   \      0x134   0x9400             STR      R4,[SP, #+0]
   \      0x136   0x4643             MOV      R3,R8
   \      0x138   0x4652             MOV      R2,R10
   \      0x13A   0x4649             MOV      R1,R9
   \      0x13C   0x4628             MOV      R0,R5
   \      0x13E   0x....'....        BL       emAfClusterAttributeChangedCallback
    761            } else {
    762              // bug: 11618, we are not handling properly external attributes
    763              // in this case... We need to do something. We don't really
    764              // know if it will succeed.
    765              emberAfAttributesPrintln("WRITE: no write, just a test");
    766              emberAfAttributesFlush();
    767            }
    768          
    769            return EMBER_ZCL_STATUS_SUCCESS;
   \                     ??emAfWriteAttribute_6: (+1)
   \      0x142   0x2000             MOVS     R0,#+0
   \                     ??emAfWriteAttribute_1: (+1)
   \      0x144   0xB009             ADD      SP,SP,#+36
   \      0x146   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    770          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \        0x0   0x9603             STR      R6,[SP, #+12]
   \        0x2   0x9804             LDR      R0,[SP, #+16]
   \        0x4   0x4643             MOV      R3,R8
   \        0x6   0x4652             MOV      R2,R10
   \        0x8   0x78C1             LDRB     R1,[R0, #+3]
   \        0xA   0xF89D 0x0050      LDRB     R0,[SP, #+80]
   \        0xE   0x9102             STR      R1,[SP, #+8]
   \       0x10   0x9400             STR      R4,[SP, #+0]
   \       0x12   0x9001             STR      R0,[SP, #+4]
   \       0x14   0x4649             MOV      R1,R9
   \       0x16   0x4628             MOV      R0,R5
   \       0x18   0x4770             BX       LR
    771          
    772          // If dataPtr is NULL, no data is copied to the caller.
    773          // readLength should be 0 in that case.
    774          

   \                                 In section .text, align 2, keep-with-next
    775          EmberAfStatus emAfReadAttribute(uint8_t endpoint,
    776                                          EmberAfClusterId cluster,
    777                                          EmberAfAttributeId attributeID,
    778                                          uint8_t mask,
    779                                          uint16_t manufacturerCode,
    780                                          uint8_t *dataPtr,
    781                                          uint16_t readLength,
    782                                          EmberAfAttributeType *dataType)
    783          {
   \                     emAfReadAttribute: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0x461C             MOV      R4,R3
   \        0x6   0x9E0A             LDR      R6,[SP, #+40]
   \        0x8   0x9D0B             LDR      R5,[SP, #+44]
   \        0xA   0x9B0C             LDR      R3,[SP, #+48]
    784            EmberAfAttributeMetadata *metadata = NULL;
   \        0xC   0x2700             MOVS     R7,#+0
   \        0xE   0x9701             STR      R7,[SP, #+4]
    785            EmberAfAttributeSearchRecord record;
    786            EmberAfStatus status;
    787            record.endpoint = endpoint;
   \       0x10   0xF88D 0x0008      STRB     R0,[SP, #+8]
    788            record.clusterId = cluster;
   \       0x14   0xF8AD 0x100A      STRH     R1,[SP, #+10]
    789            record.clusterMask = mask;
   \       0x18   0xF88D 0x400C      STRB     R4,[SP, #+12]
    790            record.attributeId = attributeID;
   \       0x1C   0xF8AD 0x200E      STRH     R2,[SP, #+14]
    791            record.manufacturerCode = manufacturerCode;
   \       0x20   0xF8AD 0x6010      STRH     R6,[SP, #+16]
    792            status = emAfReadOrWriteAttribute(&record,
    793                                              &metadata,
    794                                              dataPtr,
    795                                              readLength,
    796                                              false); // write?
   \       0x24   0x9700             STR      R7,[SP, #+0]
   \       0x26   0x462A             MOV      R2,R5
   \       0x28   0xA901             ADD      R1,SP,#+4
   \       0x2A   0xA802             ADD      R0,SP,#+8
   \       0x2C   0x....'....        BL       emAfReadOrWriteAttribute
    797          
    798            if (status == EMBER_ZCL_STATUS_SUCCESS) {
   \       0x30   0x0001             MOVS     R1,R0
   \       0x32   0xD104             BNE.N    ??emAfReadAttribute_0
   \       0x34   0x990D             LDR      R1,[SP, #+52]
    799              // It worked!  If the user asked for the type, set it before returning.
    800              if (dataType != NULL) {
   \       0x36   0xB111             CBZ.N    R1,??emAfReadAttribute_0
    801                (*dataType) = metadata->attributeType;
   \       0x38   0x9A01             LDR      R2,[SP, #+4]
   \       0x3A   0x7893             LDRB     R3,[R2, #+2]
   \       0x3C   0x700B             STRB     R3,[R1, #+0]
    802              }
    803            } else { // failed, print debug info
    804              if (status == EMBER_ZCL_STATUS_INSUFFICIENT_SPACE) {
    805                emberAfAttributesPrintln("READ: attribute size too large for caller");
    806                emberAfAttributesFlush();
    807              }
    808            }
    809          
    810            return status;
   \                     ??emAfReadAttribute_0: (+1)
   \       0x3E   0xB005             ADD      SP,SP,#+20
   \       0x40   0xBDF0             POP      {R4-R7,PC}       ;; return
    811          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     emAfEndpoints

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x....'....        DC32     appResponseLength

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x....'....        DC32     appResponseData

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   emAfReadAttribute
        40   -> emAfReadOrWriteAttribute
      72   emAfWriteAttribute
        72   -> emAfClusterAttributeChangedCallback
        72   -> emAfClusterPreAttributeChangedCallback
        72   -> emAfReadOrWriteAttribute
        72   -> emAfSaveAttributeToToken
        72   -> emberAfCompareValues
        72   -> emberAfIsTypeSigned
        72   -> emberAfPostAttributeChangeCallback
        72   -> emberAfPreAttributeChangeCallback
        72   -> emberAfReportingAttributeChangeCallback
     104   emberAfAppendAttributeReportFields
       104   -> emberAfGetDataSize
       104   -> emberAfIsThisDataTypeAStringType
       104   -> emberAfReadAttribute
       104   -> emberAfStringLength
       104   -> halCommonMemMove
     120   emberAfPrintAttributeTable
       120   -> emAfGetManufacturerCodeForAttribute
       120   -> emAfReadAttribute
       120   -> emberAfEndpointCount
       120   -> emberAfIsLongStringAttributeType
       120   -> emberAfIsStringAttributeType
       120   -> emberAfLongStringLength
       120   -> emberAfStringLength
       120   -> halInternalResetWatchDog
      32   emberAfReadAttribute
        32   -> emAfReadAttribute
      32   emberAfReadClientAttribute
        32   -> emAfReadAttribute
      32   emberAfReadManufacturerSpecificClientAttribute
        32   -> emAfReadAttribute
      32   emberAfReadManufacturerSpecificServerAttribute
        32   -> emAfReadAttribute
      56   emberAfReadSequentialAttributesAddToResponse
        56   -> emAfMatchAttribute
        56   -> emAfMatchCluster
        56   -> emberAfFindClusterWithMfgCode
        56   -> emberAfPutInt16uInResp
        56   -> emberAfPutInt8uInResp
      32   emberAfReadServerAttribute
        32   -> emAfReadAttribute
     112   emberAfRetrieveAttributeAndCraftResponse
       112   -> emAfReadAttribute
       112   -> emberAfGetDataSize
       112   -> emberAfLongStringLength
       112   -> emberAfPutInt16uInResp
       112   -> emberAfPutInt8uInResp
       112   -> emberAfStringLength
       112   -> halCommonMemMove
      40   emberAfVerifyAttributeWrite
        40   -> emAfWriteAttribute
      40   emberAfWriteAttribute
        40   -> emAfWriteAttribute
      56   emberAfWriteAttributeExternal
        56   -> emAfWriteAttribute
        56   -> emberAfAllowNetworkWriteAttributeCallback
      40   emberAfWriteClientAttribute
        40   -> emAfWriteAttribute
      40   emberAfWriteManufacturerSpecificClientAttribute
        40   -> emAfWriteAttribute
      40   emberAfWriteManufacturerSpecificServerAttribute
        40   -> emAfWriteAttribute
      40   emberAfWriteServerAttribute
        40   -> emAfWriteAttribute


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       8  ?Subroutine0
       8  ?Subroutine1
       8  ?Subroutine2
       8  ?Subroutine3
      20  ?Subroutine4
      26  ?Subroutine5
      16  ?Subroutine6
      18  ?Subroutine7
      14  ?Subroutine8
      66  emAfReadAttribute
     330  emAfWriteAttribute
     128  emberAfAppendAttributeReportFields
     188  emberAfPrintAttributeTable
      20  emberAfReadAttribute
      10  emberAfReadClientAttribute
      10  emberAfReadManufacturerSpecificClientAttribute
       8  emberAfReadManufacturerSpecificServerAttribute
     222  emberAfReadSequentialAttributesAddToResponse
      12  emberAfReadServerAttribute
     158  emberAfRetrieveAttributeAndCraftResponse
      26  emberAfVerifyAttributeWrite
      24  emberAfWriteAttribute
      82  emberAfWriteAttributeExternal
      12  emberAfWriteClientAttribute
      10  emberAfWriteManufacturerSpecificClientAttribute
      12  emberAfWriteManufacturerSpecificServerAttribute
      10  emberAfWriteServerAttribute

 
 1 466 bytes in section .text
 
 1 466 bytes of CODE memory

Errors: none
Warnings: none
